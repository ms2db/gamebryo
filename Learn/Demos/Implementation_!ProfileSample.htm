<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ProfileSample Implementation</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>ProfileSample Implementation</h1>

<p>ProfileSample loads a scene and camera from a NIF file. It
overrides <span class="NDLSystemFont">Initialize</span> in order
to add the <a href=
"../../Reference/NiMetricsOutput/NiXMLMetricsOutput.htm"><span class="NDLSystemFont">
NiXMLMetricsOutput</span></a> and the <a href=
"../../Reference/NiMetricsOutput/NiVisualTrackerOutput.htm"><span class="NDLSystemFont">
NiVisualTrackerOutput</span></a> metrics output modules. This is
done in the <span class=
"NDLSystemFont">CreateOutputModules</span> function. This
function sets up the <span class=
"NDLSystemFont">NiVisualTracker</span> to display a few metrics.
It will always show the frames per second, the number of updated
particles on screen, and the custom "random number" metric that
is described below. Additionally, it will display one or more
platform-specific metrics. This function demonstrates how one
might quickly add metrics to the visual tracker. Although this
application does not take this approach, some applications may
wish to override the <span class=
"NDLSystemFont">NiApplication::CreateVisualTrackers</span>
function altogether.</p>

<p>The <span class="NDLSystemFont">UpdateFrame</span> function
has been overridden to both do an <span class=
"NDLSystemFont">UpdateSelected</span> on the scene as well as to
add a custom metric. This sample defines
"ProfileSample.CustomMetric" as the custom metric name and each
frame the ProfileSample records this metric with the value of a
random float between 0 and 100. This metric can be seen both on
the <span class="NDLSystemFont">NiVisualTracker</span> with the
short name "Random" as well as with its full name in the
<span class="NDLSystemFont">NiXMLMetricsOutput</span> XML output
file. That demonstrates how to easily add metrics at application
time that can be immediately be displayed on a graph or in an XML
file. See also the <span class="NDLSystemFont">NiMetrics</span>
<a href=
"../../Programmer/NiMetrics/Instrumenting.htm">instrumentation
documentation</a> for more details about how to instrument your
application.</p>

<p>On PS3, the <span class=
"NDLSystemFont">NiXMLMetricsOutput</span> XML output file is
output to the "/app_home" folder on the host.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

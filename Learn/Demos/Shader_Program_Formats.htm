<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Shader Program Formats</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Shader Program Formats</h1>

<p>In order to be useful across current and future platforms, the
<span class="NDLSystemFont">ShaderSample</span> demo contains a
header file that indicates which shader program formats each
platform is capable of using. In this manner, the same source
code can compile the application for all the platforms, even when
some platforms are incapable of using the shader formats of
another platform.</p>

<p>The header file in question, <span class=
"NDLSystemFont">ShaderFormatCompatibility.h</span>, exists at the
root level of the sample code. It can define up to four different
options, depending on the platform:</p>

<!--(Table)=========================================================-->
<table>
    <thead>
        <tr>
            <th>Macro</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>_NI_ASM_SHADER_PROGRAM_FORMAT</td>

            <td>The platform is capable of using shader programs
            written in assembly language. Defined for DX9.</td>
        </tr>

        <tr>
            <td>_NI_CG_SHADER_PROGRAM_FORMAT</td>

            <td>The platform is capable of using shader programs
            written in nVidia's Cg. Defined for DX9 in CG-enabled
            builds.</td>
        </tr>

        <tr>
            <td>_NI_HLSL_SHADER_PROGRAM_FORMAT</td>

            <td>The platform is capable of using shader programs
            written in Microsoft's HLSL. Defined for DX9, D3D10,
            and D3D11.</td>
        </tr>

        <tr>
            <td>_NI_FX_SHADER_FORMAT</td>

            <td>The platform is capable of using shaders created
            from FX files. Defined for DX9.</td>
        </tr>
    </tbody>
</table>

<p>Shaders written in nVidia's Cg shader language require the
installation of a specific version the Cg Toolkit, as described
<a href="../../Programmer/Build/build_prereqs_pc.htm">here</a>.
By default, <span class=
"NDLSystemFont">ShaderProgramCompatibility.h</span> explicitly
disables the <span class=
"NDLSystemFont">_NI_CG_SHADER_PROGRAM_FORMAT</span>
macro, even on platforms that support the Cg shader language, so
that the program will still compile and run without having
installed the Cg Toolkit. To enable Cg support for this
application, the line that undefines <span class=
"NDLSystemFont">_NI_CG_SHADER_PROGRAM_FORMAT</span>
must be commented out. More information about Gamebryo's Cg
support can be found in the documentation of <span class=
"NDLSystemFont"><a href=
"../../Programmer/NiShader/NiCgShaderLib.htm">NiCgShaderLib</a></span>.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

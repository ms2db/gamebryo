<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ShaderSample Overview</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>ShaderSample Overview</h1>

<p>The <span class="NDLSystemFont">ShaderSample</span> 
 sample illustrates how to use the Gamebryo shader system in a wide variety 
 of situations. While the shader effects themselves are interesting, the 
 main purpose of this sample is not to exhibit the effects themselves, 
 but to demonstrate how the effects can be achieved using Gamebryo. Most 
 of the effects in the sample were actually developed outside of Emergent 
 Game Technologies, and are simply used for illustrative purposes here. 
 For discussion of general shader techniques and effects, 
 there are a wide variety of resources available on the Internet.</p>

<p>Gamebryo can support nearly any shader technique imaginable. 
 Among the techniques this sample demonstrates are:</p>

<ul>
	
 <li>Assembly shaders in 
 an NSF file (<a HREF="DolphinTweenEffect.htm"><span class="NDLSystemFont">DolphinTweenEffect</span></a>)</li>
	
	<li>Compiled shaders in 
 an NSF file (<a href="DolphinTweenEffect.htm"><span class="NDLSystemFont">DolphinTweenEffect</span></a>)</li>
	
	<li>HLSL shaders in an 
 NSF file (<a HREF="GlassEffect.htm"><span class="NDLSystemFont">GlassEffect</span></a>)</li>
	
	<li>Cg shaders in an NSF 
 file (<a HREF="GlowEffect.htm"><span class="NDLSystemFont">GlowEffect</span></a>)</li>
	
	<li>HLSL shaders in an 
 FX file (<a HREF="PerPixelLightingEffect.htm"><span class="NDLSystemFont">PerPixelLightingEffect</span></a>)</li>
	
	<li>Programmatic shaders 
 in a DLL (<a HREF="LibraryEffect.htm"><span class="NDLSystemFont">LibraryEffect</span></a>)</li>
	
	<li>Render-to-texture using 
 shaders (<a href="GlowEffect.htm"><span class="NDLSystemFont">GlowEffect</span></a>)</li>
	
	<li>Use of NiAccumulators 
 to change shaders (<a href="GlowEffect.htm"><span class="NDLSystemFont">GlowEffect</span></a>)</li>
	
	<li>Multiple vertex streams 
 (<a href="DolphinTweenEffect.htm"><span class="NDLSystemFont">DolphinTweenEffect</span></a>)</li>
	
	<li>Use of&nbsp;<a HREF="../../Programmer/NiShader/SemanticAdapterTable.htm">semantic 
 adapter tables</a> and additional <a HREF="../../Reference/NiMesh/NiDataStream.htm">NiDataStream</a> 
 objects for shader-specific additional vertex data (<a href="DolphinTweenEffect.htm"><span 
 class="NDLSystemFont">DolphinTweenEffect</span></a>)</li>
	
	<li>Automatic shader constants 
 from scene-graph projected texture effects and lights per-frame (<a href="PerPixelLightingEffect.htm"><span 
 class="NDLSystemFont">PerPixelLightingEffect</span></a>)</li>
	
	<li>Per-frame updating 
 of global and per-object shader constants from application code (<a href="DolphinTweenEffect.htm"><span 
 class="NDLSystemFont">DolphinTweenEffect</span></a>)</li>

    <li>Compute shaders in 
 an NSF file (<a HREF="ComputeEffect.htm"><span class="NDLSystemFont">ComputeEffect</span></a>)</li>

   <li>Hull and domain shaders in 
 an NSF file (<a HREF="TessellationEffect.htm"><span class="NDLSystemFont">TessellationEffect</span></a>)</li>

</ul>

<p>Refer to <a href="ShaderSample_Platform_Considerations.htm">Platform 
 Considerations</a> for details on platform-specific issues. </p>

<p>The <span class="NDLSystemFont">ShaderSample</span> 
 sample was designed in a completely modular way, so that new sample effects 
 could be added to the sample with no impact on the main application structure 
 or on other effects. This will allow Emergent to provide new and different 
 effects over time.</p>

<p>The <span class="NDLSystemFont">ShaderSample</span> 
 sample is actually made up of two projects: the <span class="NDLSystemFont">ShaderSample</span> 
 application and the <span class="NDLSystemFont">ShaderLibrary</span> 
 library contained in the <span class="NDLSystemFont">ShaderLibrary</span> 
 directory under the <span class="NDLSystemFont">ShaderSample</span> 
 directory. The <span class="NDLSystemFont">ShaderLibrary</span> 
 library contains all of the renderer-specific derived <span class="NDLSystemFont"><a 
 HREF="../../Reference/NiMain/Nihader.htm">NiShader</a></span> 
 classes that are used in the <a href="LibraryEffect.htm"><span 
 class="NDLSystemFont">LibraryEffect</span></a> effect, and has all the code 
 needed to be able to use the shader library from within the Gamebryo art 
 tools.</p>

<p>All the shaders in this sample have been applied to 
 the geometry in the art package, including the objects with programmatic 
 shaders in their shader library. Max files with the shaders attached have 
 been supplied so artists can explore the use of the tweakable parameters.</p>


<div class="NDLFigureContainer">
    <img src="./images/ShaderSample.jpg" width="515" height="400"
/>
    <!-- <p class="NDLFigureCaption">{Figure caption}</p> -->
</div>


<!--kadov_tag{{<placeholder id="footer">}}-->
</body>

</html>

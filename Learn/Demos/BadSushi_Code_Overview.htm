<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>BadSushi Code Overview</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>BadSushi Code Overview</h1>

<p>The following are the principal classes that are utilized in
the <span class="NDLSystemFont">BadSushi</span>
demo:</p>

<ul>
  <li><span class="NDLSystemFont">BadSushi</span>&mdash;main
  application class. It loads the background scene, sets up a
  caustic effect, sets up for picking, and manages the "gunsight"
  and the specifics of the UI. In each frame, it handles input
  related to the camera, updates the <span class=
  "NDLSystemFont">PerformanceOptimizing</span> class, updates the
  caustic effect, and performs picking (for activating the startled
  fish behavior).</li>
  
  <li><span class=
  "NDLSystemFont">DemoModel</span>&mdash;simple container class for
  loaded models, though there is only one such model for the
  <span class="NDLSystemFont">BadSushi</span> demo. This class
  holds a pointer to the loaded actor manager as well as statistics
  such as number of triangles.</li>
  
  <li><span class=
  "NDLSystemFont">KnotPlacementPolicy</span>&mdash;a sub-class of
  <span class="NDLSystemFont">PlacementPolicy</span> that is used
  to clone the fish character as needed. This class is also used to
  manage the placement and orientation of the cloned fish. The
  class attempts to fit the fish along the "(p,q)-torus knot"
  curve. This type of curve is a closed, non-intersecting curve on
  the surface of a torus that winds p times around one cycle of the
  torus and q times around the other.</li>
  
  <li><span class=
  "NDLSystemFont">PerformanceOptimizing</span>&mdash;a class that
  loads the KFM file for the fish model, storing it in a
  <span class="NDLSystemFont">DemoModel</span> object, and updating
  the statistics that the screen console displays. This class also
  handles all of the rendering and the batched parallel update of
  the on-screen models.</li>
</ul>

<h2>Custom Materials</h2>

<p>For <span class="NDLSystemFont"><a href=
"../../Programmer/NiMaterial/NiStandardMaterial.htm">NiStandardMaterial</a></span>, projected lights (and projected shadows) perform a multiply operation with the base texture, so projected lights will not make a scene brighter than the base map. Projected lights work that way for legacy reasons.</p>

<p>To make them behave differently, you can either create a custom shader or create a new material that derives from <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiStandardMaterial.htm">NiStandardMaterial</a></span>
that changes the order of the texture pipeline so that light maps are additive. In support of this demo, the latter choice has been adopted. Specifically, an <span class="NDLSystemFont"><a href=
"../../Art/Other/AdditiveLightMapsMaterial.htm">AdditiveLightMapsMaterial</a></span> custom material has been added to the <span class=
"NDLSystemFont"><a href=
"../../Reference/NiCommonMaterialLibrary/NiCommonMaterialLib_Files.htm">
NiCommonMaterialLib</a></span>, and it has been applied to the
fish in the <span class="NDLSystemFont">BadSushi</span> demo.</p>

<p>The additive light maps material enables projected light maps to be added in after the base map has been applied. The result is that projected lights lighten rather than darken the base map. Other than this difference, the texturing pipeline remains the same as that of <span class=
"NDLSystemFont"><a href=
"../../Programmer/NiMaterial/NiStandardMaterial.htm">NiStandardMaterial</a></span>. (See the <a href=
"../../Programmer/NiMaterial/Gamebryo_Standard_Material.htm">texture
pipeline chart</a> for more details.)</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
<li><a href="BadSushi_Overview.htm">BadSushi Overview</a></li>
<li><a href="BadSushi_Functional_Overview.htm">BadSushi Functional Overview</a></li>
<li><a href="BadSushi___Strategies_for_Performance.htm">BadSushi Strategies for Performance</a></li>
</ul>


<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

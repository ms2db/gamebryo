<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>VertexLightingPipeline Source Code</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>VertexLightingPipeline Source Code</h1>

<h2>CreateScene</h2>

<p><span class="NDLSystemFont">CreateScene</span> loads a number
of NIF files which contain the room geometry. After reading in
these objects, specific portions of the scene graph must be saved
for future interaction: the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiVertexColorProperty.htm">NiVertexColorProperty</a></span>
objects and <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiMaterialProperty.htm">NiMaterialProperty</a></span>
objects are saved for the animated piece of cloth. Initial values
are set for these properties. A little work is then done to place
the camera and light into their correct places in the scene
graph. Finally, <span class="NDLSystemFont">CreateLights</span>
is called.</p>

<h2>CreateLights</h2>

<p><span class="NDLSystemFont">CreateLights</span> creates four
different lights and attaches them to the parent node of the
visible flashlight in the scene graph, making it so that as the
flashlight is moved and turned, the lights will perform the same
actions. Having a common parent node for the four lights creates
a convenient interface for manipulating and updating the lights,
instead of having to treat them individually.</p>

<h2>CreateUIElements</h2>

<p>This function exists in <span class=
"NDLSystemFont">NiSample</span> and is re-implemented by all
children wishing to have any UI elements. In this sample a number
of toggle buttons and sliders are created so the user can
experiment with different settings.</p>

<h2>ChangeCameraMode</h2>

<p>This function simply toggles between the three camera modes:
moving the camera and light in tandem, moving only the camera and
moving only the light.</p>

<h2>ChangeCurrentLight</h2>

<p>This function turns on each light one at a time, in a round-robin fashion.  This step is
 accomplished by calling SetSwitch() with only one of the four lights set to true.  Note, however,
 that SetSwitch() is not recommended for use at run-time, for reasons detailed in the reference
 documentation for
 <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiDynamicEffect.htm">NiDynamicEffect</a></span>.
 </p>

<h2>ChangeVertexMode</h2>

<p>This function toggles between the three vertex property source
modes. See the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiVertexColorProperty.htm">NiVertexColorProperty</a></span>
reference documentation for further discussion.</p>

<h2>ChangeLightingMode</h2>

<p>This function toggles between the two vertex property response
to light modes. See the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiVertexColorProperty.htm">NiVertexColorProperty</a></span>
reference documentation for further discussion.</p>

<h2>Slider Callback Functions</h2>

<p class="NDLRefMemberFunction">SpotLightSize</p>

<p class="NDLRefMemberFunction">LightAmbientChange</p>

<p class="NDLRefMemberFunction">LightDiffuseChange</p>

<p class="NDLRefMemberFunction">LightSpecularChange</p>

<p class="NDLRefMemberFunction">SheetAmbientChange</p>

<p class="NDLRefMemberFunction">SheetDiffuseChange</p>

<p class="NDLRefMemberFunction">SheetSpecularChange</p>

<p class="NDLRefMemberFunction">SheetShininessChange</p>

<p class="NDLRefMemberFunction">SheetEmissiveChange</p>

<p>Each of the above functions is called by their respective
sliders with updated values, depending on user input. These
functions generally just set the appropriate material, vertex or
light property.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

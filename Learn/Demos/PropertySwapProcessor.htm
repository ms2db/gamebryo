<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>PropertySwapProcessor</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">PropertySwapProcessor</p>

<p class="NDLRefParentage">: public <a href=
"../../Reference/NiMain/NiRenderListProcessor.htm">NiRenderListProcessor</a></p>

<p class="NDLRefHeaderFile">&lt;PropertySwapProcessor.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This class is a render list processor that swaps out the
property state for each object rendered with a specified set of
properties, restoring the original state for each object after
rendering it.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">PropertySwapProcessor(<a href=
"../../Reference/NiMain/NiProperty.htm">NiPropertyList</a>*
pkPropertyList)</p>

<p class="NDLRefMemberDescription">The sole constructor for this
class takes a pointer to a list of properties with which to
render objects. This pointer may be null, in which case rendering
of all geometry objects will be deferred to the render click,
which will render the objects with their original properties.</p>

<p class="NDLRefHead1">Overridden Virtual Functions</p>

<p class="NDLRefMemberFunction">virtual void
PreRenderProcessList(const <a href=
"../../Reference/NiMain/NiVisibleArray.htm">NiVisibleArray</a>*
pkInput, <a href=
"../../Reference/NiMain/NiVisibleArray.htm">NiVisibleArray</a>&amp;
kOutput, void* pvExtraData)</p>

<p class="NDLRefMemberDescription">Overridden from <span class=
"NDLSystemFont"><a href=
"../../Reference/NiMain/NiRenderListProcessor.htm">NiRenderListProcessor</a></span>.
This function iterates through the geometry objects in the
<span class="NDLSystemFont">pkInput</span> array, calling
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiPropertyState.htm">NiPropertyState</a>::SwapProperties</span>
with the stored list of properties on the property state for each
object prior to rendering it. <span class=
"NDLSystemFont">SwapProperties</span> is called again to swap the
properties back to the original set after rendering. If the
property list pointer is null, no rendering occurs in this
function, and all geometry objects in the <span class=
"NDLSystemFont">pkInput</span> array are propagated to the
<span class="NDLSystemFont">kOutput</span> array for deferred
rendering by the render click.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">void SetPropertyList(<a href=
"../../Reference/NiMain/NiProperty.htm">NiPropertyList</a>*
pkPropertyList)</p>

<p class="NDLRefMemberFunction"><a href=
"../../Reference/NiMain/NiProperty.htm">NiPropertyList</a>*
GetPropertyList() const</p>

<p class="NDLRefMemberDescription">These functions set and get
the pointer to the list of properties to use when rendering.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>CharacterPerformance Demo Code Overview</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>CharacterPerformance Demo Code Overview</h1>

<p>The following are the principal classes that are utilized in
the <span class="NDLSystemFont">CharacterPerformance</span>
demo:</p>

<ul>
    <li><span class=
    "NDLSystemFont">CharacterPerformanceDemo</span>&mdash;The
    main application class. This class loads all of the shaders
    (see below) as well as a default set of models, storing them
    into <span class="NDLSystemFont">DemoModel</span> objects.
    For each frame, it handles input related to the camera and
    updates the <span class=
    "NDLSystemFont">PerformanceOptimizing</span> class.</li>

    <li><span class="NDLSystemFont">DemoModel</span>&mdash; A
    simple container class for loaded models. This class holds a
    pointer to the loaded actor manager as well as statistics
    such as number of triangles, bones, vertices, and
    animations.</li>

    <li><span class=
    "NDLSystemFont">PerformanceOptimizing</span>&mdash;The class
    that performs most of the work in the demo. This class was
    originally created to demonstrate how different factors
    affect performance. For this demo, these factors include:
    number of lights, number of triangles, number of vertices,
    number of bones per object, number of partitions per bone,
    rendering the background, update versus update selected, and
    software vs. hardware skinning. The main purpose of this
    class is scene management. It has functionality for adding
    and removing both models and lights, placing and resizing the
    models as necessary to try to fit them all on screen. It
    updates the statistics that the screen console displays. It
    also handles all of the rendering and the parallel update
    (see below) of the models that are on screen.</li>
</ul>

<h2>Parallel Update</h2>

<p><span class="NDLSystemFont">CharacterPerformanceDemo</span>
utilizes <span class="NDLSystemFont">NiLoopedThread</span> to
update the scene in parallel with different threads. An
<span class="NDLSystemFont">NiLoopedThread</span> is a thread
that can be re-used each frame without being re-created (unlike
<span class="NDLSystemFont"><a href=
"../../Reference/NiSystem/NiThread.htm">NiThread</a></span>).
During an <span class="NDLSystemFont">Update()</span> call, the
scene is partitioned equally among the desired number of threads,
the threads are started, and then the function will block until
all of the threads have completed their update. For more
information about <span class=
"NDLSystemFont">NiLoopedThread</span> and parallelism, see
<a href=
"../../Reference/NiSystem/Parallelism_With_NiLoopedThread.htm">Parallelism
With NiLoopedThread</a>.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
<li><a href="CharacterPerformanceDemo_overview.htm">CharacterPerformance Demo Overview</a></li>
<li><a href="CharacterPerformanceDemo_functional_overview.htm">CharacterPerformance Functional Overview</a></li>
<li><a href="CharacterPerformanceDemo_characters.htm">CharacterPerformance Demo Characters</a></li>
</ul>


<!--kadov_tag{{<placeholder id="footer">}}-->
</body>

</html>

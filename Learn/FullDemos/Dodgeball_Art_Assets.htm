<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Dodgeball Art Assets</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Dodgeball Art Assets</h1>

<p>The source data files for the assets used in <span class=
"NDLSystemFont">Dodgeball</span> can be found in the <span class=
"NDLSystemFont">Art_Files</span> subfolder of the <span class=
"NDLSystemFont">Dodgeball</span> sample. 3ds max was used to set
up the character, props, and scene for <span class=
"NDLSystemFont">Dodgeball</span>. Textures for all art files are
in the same directory as the MAX files (<span class=
"NDLSystemFont">Art_Files</span>). In the export script, textures
are tagged as internal and become part of the NIF files used by
the application.</p>

<p>The main datasets are:</p>

<h2>The character file: Slim.max</h2>

<p>This file contains a biped with the basic animation sequences
set up and defined with the <a href=
"../../Art/Max/Introduction_!Animation_Manager.htm">Gamebryo
Animation Manager Utility</a>. While most other character
examples for Gamebryo are animated in place (and this is
suggested practice for most applications), this character uses
accumulation set up by the artist in the animation sequences.
Thus, while running, the character translates forward in 3ds max
instead of running "in place".</p>

<p>This character is a good example of how to use accumulation
with Gamebryo. If you open the Animation Manager in 3ds max and
scroll down you will notice a tab called "Sequence Accumulation".
Here you can find the specific accumulation settings for each
animation. Slim's "run" animation, for example, has him set up to
not accumulate rotations (as he is running straight forward), and
he only accumulates translations on the y-axis (his axis of
forward momentum). However, the "runleft" sequence has him
accumulate rotation around the z-axis (as he is turning) and he
accumulates translation on both the y-axis and the x-axis. So he
accumulates not only forward but side to side as well. If these
sequences are viewed in Max, the character will pop back to the
starting point for each animation. When they are exported and
viewed in the application or the Gamebryo Animation Tool,
however, the character will no longer pop back but continue to
accumulate as the sequences loop.</p>

<p>Slim is set up to use PhysX. Slim's bones (in this case his
biped) are set to have PhysX properties though the PhysX
Utilities rollout. Each bone is set to have a mass from 0.9 to
0.1. Each bone is also set to be "dynamic" and is pointed to a
proxy for the physical representation of that bone. The proxies
match the bone hierarchy in number of objects and general size,
but the proxies are not hierarchical. In addition, extreme leaf
bones, such as fingers, are left out of the physical equation
entirely and have no proxies for shape. Pivots of the proxies had
to be aligned with the adjacent bones while slim was in his bind
pose (frame 0), and the proxies had to occupy the same general
length and width of the bones. Proxy objects are set as
"non-physical". Constraints are set up with the PhysX joint tool
to provide angles in which bones are allowed to rotate. More help
on setting up a rag-doll with PhysX can be found in the PhysX Max
plug-in help documentation.</p>

<h2>The scene file: Playground.max</h2>

<p>This MAX file represents the playground area. The boundary for
Slim is represented by a box that is called "node_playarea". The
box shape is hidden. A few PhysX shapes, such as the fence
proxies, are also culled from view, as they are slightly wider
then their visual representation. Miscellaneous objects, such as
the ground, cannon posts, etc., are all grouped together as
"Static_Geo" and marked as such (static) under the PhysX
rollout. Physical properties are set on these objects via the
PhysX Utilities rollout panel.</p>

<p>Two directional lights are used for the scene. One light,
which includes just the area around the immediate playground that
Slim is in, casts a dynamic shadow. A second light, with the same
position, direction, color, etc., has static shadows and is used
to cast shadows on the rest of the scene. It is flagged as
"Static" under the "Gamebryo Shadow Prams" rollout on the lights
modifier panel. Include and exclude lists are used to set which
objects are using dynamic shadows and which are using static
shadows.</p>

<h2>The prop file: Ball.max</h2>

<p>This file is rather self-explanatory. It represents the ball
object that is instanced many times in the scene while the
application is running. PhysX proxy geometry is set for this
object and also exists in this file.</p>

<h2>The prop file: Canon.max</h2>

<p>This file represents the two cannons found in the application.
PhysX proxies (hidden) are attached to the moving pieces of the
cannon meshes. A particle system is included for smoke when the
cannons fire, and the directional light provides a projected
shadow (texture) for the swing-arm when the cannon body pivots up
and down. The cannons are not set up as actors because they only
have one "sequence" that runs from frame 1 to 20 and thus are
exported as a NIF file with a single, embedded animation.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>MetalWars Technology Highlights</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Metal Wars Sample Highlights</h1>

<h2>General Data</h2>

<ul>
	
	<li>The Metal Wars scene 
 has more than 200K polygons with nearly every triangle rendered via custom 
 shaders in the Gamebryo shader pipeline. </li>
	
	<li>The killbot model has 
 40K polygons. It is fully shader driven, both for skin deformation and 
 shading.</li>
	
	<li>A large number of full 
 screen rendering passes are active at all times to achieve the visual 
 effects in the demo. For example, the HDR effects alone require 12 unique 
 render pass operations with all output directed to floating point destination 
 buffers. </li>
</ul>

<h2>Technology Highlights</h2>

<ul>
	
	<li>The sample relies on 
 Gamebryo 2's fully integrated pixel and vertex shader support from art 
 tools to the run-time engine: All shaders in the demo are powered by the 
 engine's integrated support for Microsoft's .FX HLSL. The artists generated 
 the shader driven assets directly in 3ds max and defined lighting and 
 texturing effects in that tool. Gamebryo 2 automatically hooks raw asset 
 lighting and shader controls together in the engine and gives instant 
 preview functionality in the art tools. </li>
	
	<li>High Dynamic Range 
 (HDR) floating point textures and render targets allow for per-pixel HDR 
 lighting, light blooms, light adaptation, tone-mapping, screen blurs and 
 other effects. The sample uses a uniform per-pixel lighting system for 
 all objects in the scene via diffuse and specular HDR cube maps. </li>
	
	<li>The use of per-pixel 
 normal mapping on every surface in the demo gives highly detailed surfaces 
 without overly dense geometry.</li>
	
	<li>Multiple render target 
 (MRT) technology allows for simultaneous output of multiple data from 
 a single pixel shader pass to enable a variety of post-processing shader 
 effects. The demo makes use of MRTs and image post-processing pixel shaders 
 for nightvision, heat shimmer, edge detection, infrared and fish-eye magnification 
 rendering effects. </li>
	
	<li>Layered and weighted 
 blending animation playback support is also used. The killbot character 
 uses layered animation blending for control of his firing actions and 
 to manage where he aims in the scene. All animation playback and blending 
 is managed directly through the Gamebryo animation tool to provide WYSIWYG 
 control over what ends up in the sample.</li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>MangledMetal services overview</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>MangledMetal services overview</h1>

<p>From a high level perspective, MangledMetal can be viewed as a collection of interacting game
services. Each of these services encapsulates a related set of game concepts in a modular fashion
that can be managed by the Foundation ServiceManager.</p>

<p>MangledMetal provides the following game services:</p>

<table>
    <thead>
        <tr>
            <th>MangledMetal service</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>MangledMetal</td>

            <td>Main game service. Bootstraps the other game services.</td>
        </tr>

        <tr>
            <td>MmCameraService</td>

            <td>Manages gameplay camera built-ins.</td>
        </tr>

        <tr>
            <td>MmCharacterService</td>

            <td>Manages player and AI character built-ins.</td>
        </tr>

        <tr>
            <td>MmControlService</td>

            <td>Maps CoreServices InputService messages to registered control delegates.</td>
        </tr>

        <tr>
            <td>MmHUDService</td>

            <td>Responsible for rendering the gameplay HUD elements.</td>
        </tr>

        <tr>
            <td>MmWalkableService</td>

            <td>Helps entities conform to walkable and non-walkable surfaces.</td>
        </tr>

        <tr>
            <td>MmWorldService</td>

            <td>Responsible for game world state transitions and provides some world-related
            utility functions.</td>
        </tr>

        <tr>
            <td>MmOcclusionService</td>

            <td>Responsible for showing and hiding environmental entities as the player moves
            around the world.</td>
        </tr>
    </tbody>
</table>

<p>In general, a set of related game logic is a good candidate for a service when it meets both of
the following criteria:</p>

<ul>
    <li>Requires regular game cycle ticking</li>

    <li>Needs to be initialized and/or shutdown in a specific order with respect to other
    services</li>
</ul>

<p>All of the MangledMetal game services meet these criteria, except MmControlService and
MmWalkableService, which do not require game cycle ticking. These two services are examples of sets
of related game logic that benefit from service encapsulation due to their dependencies on the
initialization of other services.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="mm_camera_service.htm">MangledMetal Camera Service</a></li>

    <li><a href="mm_character_service.htm">MangledMetal Character Service</a></li>

    <li><a href="mm_hud_service.htm">MangledMetal HUD Service</a></li>

    <li><a href="mm_walkable_service.htm">MangledMetal Walkable Service</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

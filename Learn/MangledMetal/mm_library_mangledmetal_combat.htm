<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>MangledMetal Combat and Movement</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type=
"text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>MangledMetal Combat and Movement</h1>

<p>The MangledMetal library uses Lua scripts to implement a simple combat AI
and a simple combat system, using the following models:</p>

<table>
    <thead>
        <tr>
            <th>Model Name</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><a href=
            "MangledMetal__AdvancedMeleeAttacker.htm">AdvancedMeleeAttacker</a></td>

            <td>Provides heavy attack and combo melee attack.</td>
        </tr>

        <tr>
            <td><a href="MangledMetal__Enemy.htm">Enemy</a></td>

            <td>An enemy actor.</td>
        </tr>

        <tr>
            <td><a href=
            "MangledMetal__MeleeAttacker.htm">MeleeAttacker</a></td>

            <td>An actor capable of attacking another actor.</td>
        </tr>

        <tr>
            <td><a href="MangledMetal__MMActor.htm">MMActor</a></td>

            <td>A mobile entity.</td>
        </tr>

        <tr>
            <td><a href="MangledMetal__MMFactions.htm">MMFactions</a></td>

            <td>Model representing the various factions to which an entity
            belongs. Factions are single byte values, and the string represents
            all the factions of which the entity is a member. Entities who have
            at least one faction in their "HateFactions" list that is in an
            entity's faction list will attack that entity.</td>
        </tr>

        <tr>
            <td><a href="MangledMetal__Player.htm">Player</a></td>

            <td>The player character entity.</td>
        </tr>

        <tr>
            <td><a href="MangledMetal__Victim.htm">Victim</a></td>

            <td>An entity that can be attacked, take damage, and die.</td>
        </tr>
    </tbody>
</table>

<p>When an entity mixes in the <a href=
"MangledMetal__MeleeAttacker.htm">MeleeAttacker</a> or <a href=
"MangledMetal__AdvancedMeleeAttacker.htm">AdvancedMeleeAttacker</a> model it
gets the 'MeleeAttack' behavior. This behavior is either invoked by an AI
behavior or by getting called directly from the MangledMetal application in the
case of player input. This behavior searches for any dynamic entities within an
arc in front of the subject entity and invokes the 'OnAttacked' behavior for
each one passing it the damage amount and hit location.</p>

<p>When an entity mixes in the <a href="MangledMetal__Victim.htm">Victim</a>
model, it has a basic implementation of the 'OnAttacked' behavior that tracks
how much damage was taken, and kills the entity if they have run out of health
as the result of an attack.</p>

<p>The player and enemy mix in both an attack model and the victim model so
that they can both attack and be attacked, but by mixing in only one or the
other you could produce something that can only take damage without attacking
(such as the Soul Cage) or something that can attack but is invincible (such as
a trap).</p>

<p>When an entity mixes in the <a href="MangledMetal__MMActor.htm">MMActor</a>
model, a built-in model called 'MMCharacter' is automatically associated with
that entity. This built-in model is implemented in the MangledMetal application
code and implements movement update for the entity. Some of its
responsibilities include managing acceleration and deceleration, turning speed,
and blending the movement animation sequences to match the character's speed.
This built-in model is updated every tick of the application where it sets the
entities new position and rotation values.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="mm_library_mangledmetal_ai.htm">MangledMetal AI</a></li>

    <li><a href="MangledMetal__ProjectIntro.htm">MangledMetal Library
    Details</a></li>

    <li><a href="mm_library_mangledmetal_spawns.htm">MangledMetal Spawn
    Points</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

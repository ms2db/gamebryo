<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Gamebryo LightSpeed Architecture Design Principles</title>

<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->

<!--(Begin Links)===================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
        WriteNavLink(2);
</script>

<h1>Gamebryo LightSpeed Architecture Design Principles</h1>

<p>Gamebryo LightSpeed was created using a set of design
principles that focus on meeting fundamental, observed, and
practical concerns of the game development industry. These
principles are:</p>

<ul>
    <li>Build working prototypes quickly</li>

    <li>Reduce content development effort and cost</li>

    <li>Provide a genre-neutral game framework</li>

    <li>Support cross-platform development</li>
</ul>

<h2>Build working prototypes quickly</h2>

<p>Game studios secure funding with working prototypes.
LightSpeed enables users to build working prototypes quickly and
efficiently. Using LightSpeed, a studio can get its working
prototype in front of decision makers earlier, while using fewer
resources to develop the prototype. Some of the LightSpeed
features that support this principle are:</p>

<ul>
    <li><em>An extensible Game Framework</em>: You can quickly
    develop a working prototype using LightSpeed components and
    game modules.</li>

    <li><em>Samples and tools</em>: See your own game content
    running the very first day using LightSpeed's samples and
    tools. Artists and designers can start their work right
    away.</li>

    <li><em>Lua runtime</em>: The Game Framework includes a fully
    integrated Lua runtime environment with a debugger. Scripted
    behaviors can be created and updated quickly without
    recompiling or restarting the application.</li>

    <li><em>Middleware integration</em>: LightSpeed is integrated
    with other major middleware packages.</li>
</ul>

<p>In addition to the samples that ship with LightSpeed, you can
download additional libraries, tools, and game samples from Emergent's
<a href="../All/kickstart_project.htm">Kickstart Project</a>.</p>

<h2>Reduce content development effort and cost</h2>

<p>Creating a game is expensive, and this expense is increasing.
Game development is increasingly more complex. LightSpeed
provides a stable set of libraries that form the foundation of a
working game, thus reducing ramp up time in preproduction. It
also provides tools and library support for rapidly creating
content and updating it in real-time, thus reducing production
effort. Some of the LightSpeed features that support this
principle are:</p>

<ul>
    <li><em>Extensive libraries</em>: LightSpeed includes a full
    set of libraries that are suitable for a production game.
    Studios will save money and start creating content earlier
    compared to developing their own engine, game framework, and
    tools. The LightSpeed libraries are stable, cross-platform,
    and extensively documented.</li>

    <li><em>Rapid iteration and prototyping</em>: LightSpeed
    tools and libraries support the rapid iteration and
    prototyping of content. Content developers can see their
    content on-target in real time. This results in a reduction
    in overall content creation time. Because content is
    scrutinized on a more regular basis, higher quality assets
    are produced.</li>

    <li><em>High quality tools</em>: LightSpeed further reduces
    the content development effort by providing great tools from
    day one. Out of the box, content developers are using
    efficient tools that are suitable for creating a working
    game.</li>
</ul>

<h2>Provide a genre-neutral game framework</h2>

<p>Each studio and title has different, specialized needs. These
needs change over the life of a project. LightSpeed provides
tools and libraries that are suitable for a wide variety of
genres and can adapt as your game design evolves. Some of the
LightSpeed features that support this principle are:</p>

<ul>
    <li><em>Generic, genre-neutral, extensible framework</em>:
    LightSpeed is a highly flexible system that is suitable for a
    wide variety of genres. Designers can change directions
    without having to change technologies. With LightSpeed,
    there's no need to spend time and effort retrofitting a
    genre-specific engine to your specific project. If you do
    need to adopt preexisting modules, they can be quickly
    integrated into or replace components of the LightSpeed
    framework.</li>

    <li><em>Entity modeling and scripted behaviors</em>: The
    Emergent Game Framework supports data-driven game content.
    Rather than hard coding this information in your application,
    Entity models and scripted behaviors are easily updated, all
    without having to recompile or even restart the
    application.</li>

    <li><em>Modular libraries</em>: LightSpeed provides &agrave;
    la carte functionality. A studio can extend or replace any
    piece of the LightSpeed technology as necessary without
    sacrificing other functionality in the product.</li>
</ul>

<h2>Support cross-platform development</h2>

<p>In the competitive environment of game development, quickly
developing and simultaneously launching a title on multiple
platforms is critical. LightSpeed supports this principle by:</p>

<ul>
    <li>Running on all current shader-capable platforms: Windows,
    Xbox360, and PS3.</li>

    <li>Abstracting away platform differences to reduce the
    development effort of multi-platform titles.</li>

    <li>Taking advantage of platform-specific parallelism and
    hardware performance opportunities by providing an
    easy-to-use and consistent programming interface.</li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

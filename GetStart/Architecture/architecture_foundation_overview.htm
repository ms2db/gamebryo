<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Foundation Overview</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Foundation Overview</h1>

<p>Foundation is the lowest level subsystem in Gamebryo
LightSpeed. All other subsystems depend on Foundation.</p>

<div class="FigureContainer">
    <img src="images/architecture_diagram_foundation.png" width=
    "459" height="348" alt=
    "architecture_diagram_foundation (19K)">

    <p class="FigureCaption">Gamebryo LightSpeed Foundation
    subsystem</p>
</div>

<p>This subsystem contains classes and methods that are generally
useful for virtually any type of application, from games to
tools. Foundation provides various platform-neutral abstractions
to platform-specific functionality. File access, memory
management, logging, locating assets, and configuration are just
a few of the functional areas abstracted at the Foundation level.
By using the data types and helper classes provided by
Foundation, you ensure compatibility with all major
platforms.</p>

<p>Key cross-platform Foundation features and classes
include:</p>

<ul>
    <li>Platform neutral basic data types and collections</li>

    <li>File Access</li>

    <li>Memory Management</li>

    <li>Logging and Asserts</li>

    <li>Threading / Thread Local Storage, Critical Sections /
    Semaphores</li>

    <li>Service Manager / System Services</li>

    <li>Message Service</li>

    <li>Network Service and platform specific Network Libraries
    (NetLibs)</li>

    <li>PhysX utility library integration</li>

    <li>Location independent asset location and generic asset
    loading</li>
</ul>

<h2>System Services and the Service Manager</h2>

<p>One of the most important pieces of Foundation is the Service
Manager. The Service Manager forms the heart of your application.
It is responsible for managing one or more system services,
feeding these services appropriate life-cycle events and
providing them processing time on a per-frame basis. The Service
Manager acts as the main event loop for your application, or it can
be integrated to an existing main loop.</p>

<p>System services implement all of the specific functionality
that your application needs. Each system service is designed to
have a unique, independent purpose. The services are loosely
coupled. Interactions between services are handled using
asynchronous event messages. This modular design allows for the
addition and removal of services as needed. The Service Manager and System Services are used extensively throughout LightSpeed.</p>

<h2>Message System</h2>

<p>Another major piece of Foundation is the Message System. The
Message System is a system service and a collection of message
classes that are used to send and receive messages using a
publish-subscribe approach. Publishers indicate the types of
messages that the service will send. Subscribers indicate the
types of messages they consume. By using messages in this
fashion, you can write very flexible system services that are
only loosely coupled. This makes it easy to extend or replace
specific services to meet your needs without also refactoring
related services.</p>

<h2>Network System</h2>

<p>The Foundation also contains the Network Service, including
platform-specific network libraries to take advantage of specific
platform functionality. The specific protocols that are supported vary
based on what each platform offers. New protocols can be added
using custom NetLib implementations. All platforms offer at least
a reliable protocol comparable to TCP, unreliable protocols
comparable to UDP, and reliable UDP. In addition, console
platforms support basic matchmaking functionality.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="architecture_overview.htm">Gamebryo LightSpeed
    overview</a></li>

    <li><a href="architecture_core_runtime_overview.htm">Core
    Runtime overview</a></li>

    <li><a href="architecture_framework_overview.htm">Game
    Framework overview</a></li>

    <li><a href="architecture_online_overview.htm">Online
    overview</a></li>

    <li><a href="architecture_sys_services_about.htm">About
    System Services</a></li>

    <li><a href="architecture_msg_system_about.htm">About the
    Message System</a></li>

    <li><a href="architecture_entities_about.htm">About
    entities</a></li>

    <li><a href="architecture_scheduler_about.htm">About the
    Scheduler</a></li>

    <li><a href=
    "architecture_asset_runtime_service_about.htm">About the
    Asset Runtime Service</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Game Framework Overview</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Game Framework Overview</h1>

<p>The Emergent Game Framework is the Gamebryo LightSpeed
subsystem that provides the basis for simulation and game play
behavior. This includes a <a href=
"../../Programmer/Entities/entity_intro.htm">data driven entity
system</a> and many related services.</p>

<div class="FigureContainer">
    <img src="images/architecture_diagram_framework.png" width=
    "459" height="348" alt=
    "architecture_diagram_framework (20K)">

    <p class="FigureCaption">Gamebryo LightSpeed Game Framework
    subsystem</p>
</div>

<p>Key Game Framework features include:</p>

<ul>
    <li>Data-driven Entity System</li>

    <li>Lua Script Engine</li>

    <li>World and Entity Loaders</li>

    <li>Rapid Iteration Services</li>
</ul>

<p>Game Framework is built on top of the Foundation subsystem. It
builds on the system service functionality in Foundation to
provide many &agrave; la carte services to implement various
generic game functions, including <a href=
"../../Programmer/Game_Initialization/game_init_intro.htm">Game
world initialization</a>.</p>

<p>In addition to simulation, the Game Framework also contains
functionality to support rapid iteration between Toolbench and
various runtime data formats.</p>

<p>Interactions with the Core Runtime are provided using Game
Modules and Entity Models in the <a href="../../Reference/QuickRef_Models/StandardModelLibrary__ProjectIntro.htm">Standard Model Library</a>.</p>

<h2>Data-driven Entity System</h2>

<p>The heart of the Game Framework is the data driven Entity
system. Entities contain both <a href=
"../../Programmer/Entity_Properties/entity_property_intro.htm">Property</a>
data and <a href=
"../../Programmer/Behaviors/behavior_intro.htm">Behavior</a>
methods that are described by classes of <a href=
"../../Programmer/Models/entity_models_intro.htm">Entity
Models</a>. These models are defined using the <a href=
"../../Tools/EntityModelingTool/emt_intro.htm">Entity Modeling
Tool</a>. Models can mix in other models to inherit behaviors and
properties from other models. Child models can override parent
model initial property values and behaviors to further specialize
the parent model. This allows you to create a hierarchy of models
that represent the entities in your application.</p>

<p>The runtime simulation is managed by a <a href=
"../../Programmer/Scheduler/scheduler_intro.htm">Scheduler</a>.
The Scheduler is a system service that maintains the list of
available scripting runtimes and handles incoming event messages
requesting behavior invocation. It works closely with the
<a href="../../Reference/QuickRef_Services/svc_qckref_entity_mgr.htm">
Entity Manager</a> to invoke behaviors on entities.</p>

<p>Entities are created at runtime and managed by the Entity
Manager. The Scheduler triggers behaviors on them in response to
various events, allowing Entities to interact with one another.
These interactions are asynchronous, allowing for a loose
coupling between Entities.</p>

<p>There is an extensive set of <a href=
"../../Programmer/Builtins/builtin_intro.htm">built-in
methods</a> that can be accessed from scripted or C++ behaviors
to allow Entities to interact with various services.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="architecture_overview.htm">Gamebryo LightSpeed
    overview</a></li>

    <li><a href="architecture_foundation_overview.htm">Foundation
    overview</a></li>

    <li><a href="architecture_core_runtime_overview.htm">Core
    Runtime overview</a></li>

    <li><a href="architecture_online_overview.htm">Online
    overview</a></li>

    <li><a href="architecture_sys_services_about.htm">About
    System Services</a></li>

    <li><a href="architecture_msg_system_about.htm">About the
    Message System</a></li>

    <li><a href="architecture_entities_about.htm">About
    entities</a></li>

    <li><a href="architecture_scheduler_about.htm">About the
    Scheduler</a></li>

    <li><a href=
    "architecture_asset_runtime_service_about.htm">About the
    Asset Runtime Service</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

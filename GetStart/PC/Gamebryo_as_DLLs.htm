<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Gamebryo as DLLs</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Build" content="PC" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Gamebryo as DLLs</h1>

<p>Gamebryo project files are able to build dynamic link 
 libraries in addition to static libraries. The project configurations 
 for the dynamic link library builds are named indicated by including &quot;DLL&quot; 
 in the name of the configuration. Each library project includes a header 
 file <span class="NDLSystemFont">Ni&lt;Libname&gt;LibType.h</span> 
 or <span class="NDLSystemFont">&lt;LibName&gt;LibType.h</span>
 that defines a macro <span class="NDLSystemFont">Ni&lt;LIBNAME&gt;_ENTRY</span> 
 or <span class="NDLSystemFont">EE_&lt;LIBNAME&gt;_ENTRY</span> that is used for import or 
 export labeling of Gamebryo identifiers. The 
 static library project files cause the macro to expand to nothing. However, 
 the dynamic link library project files define a preprocessor symbol, 
 <span class="NDLSystemFont">Ni&lt;LIBNAME&gt;_EXPORT</span> or
 <span class="NDLSystemFont">EE&lt;LIBNAME&gt;_EXPORT</span>
 that 
 forces the macro to expand to an export label. Any other project that 
 uses one of the Gamebryo dynamic link libraries must define the preprocessor 
 symbol <span class="NDLSystemFont">Ni&lt;LIBNAME&gt;_IMPORT</span> or
 <span class="NDLSystemFont">EE&lt;LIBNAME&gt;_IMPORT</span>
 for each such library. For example, the DLL configurations of <span class="NDLSystemFont">NiAnimation.vcproj</span> 
 defines the preprocessor symbols
 <span class="NDLSystemFont">NIANIMATION_EXPORT</span>, 
 <span class="NDLSystemFont">NIMAIN_IMPORT</span>,
 <span class="NDLSystemFont">NIMESH_IMPORT</span>
 <span class="NDLSystemFont">NIFLOODGATE_IMPORT</span>, 
 <span class="NDLSystemFont">NISYSTEM_IMPORT</span> and
 <span class="NDLSystemFont">EE_EFD_IMPORT</span>.</p>

  <table class="NDLNoteContainer" width="100%">
      <tr align="left">
          <td class="NDLNoteContainerTD"><p class="NDLHeadingNoteContainer">Note</p>
              <div class="NDLNote">When your game or product ships, we request that you <em>not</em> use the names <span class="NDLSystemFont">NiMain32VC80S.dll</span>, 
 <span class="NDLSystemFont">NiAnimation32VC90S.dll</span>, and so on. If a customer purchases two or more products built on top of Gamebryo, 
 there is the usual problem of version mismatch. Rather than requiring 
 the customer to process a dialog that asks whether to keep an old dll 
 or overwrite with a new one, it is better just to install your Gamebryo 
 dlls with unique names. This approach is particularly important if the 
 two products purchased by the customer are based on two different versions 
 of Gamebryo that do not have the same API interface.
              </div>
          </td>
      </tr>
  </table>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

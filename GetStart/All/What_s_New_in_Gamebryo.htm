<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>What's New in Gamebryo LightSpeed</title>

<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Fresnel" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->

<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>What's New in Gamebryo LightSpeed 3.2</h1>

<p>Gamebryo LightSpeed 3.2 contains and builds upon
Gamebryo LightSpeed 3.1 functionality, providing many new features.</p>

<H4>Foundation and Game Framework Improvements</h4>
<p>Various improvements were made to the Foundation and Game Framework libraries
 to make working with these libraries easier.</p>
<ul>

<li>
<b>Introduction of efd::ParameterList</b>&mdash;
The efd::DataStream in previous LightSpeed releases had several major flaws that
made it difficult to use and error prone. This class has been replaced by the more
robust <a href="../../Reference/efd/efd__ParameterList.htm">efd::ParameterList</a> class. ParameterLists support all 
the functionality of DataStreams with the addition
of type safety and buffer overrun / underrun protection. ParameterLists add support
for named parameters and dynamic growth at runtime.  This useful feature allows you to
add additional parameters to the list as needed. For example, if you're implementing
an 'Extends' style behavior, each call in the chain can add or access parameters
as needed. By using named parameters, you no longer need to know about all parameters passed 
to all behaviors in the call chain.
</li>

<b>Removal of the DataStream Class from Lua</b>&mdash;
The DataStream module in Lua was completely replaced by ParameterList.  See the
<a href="../../Convert/Previous/DataStream_Deprecation.htm">deprecation of DataStream</a> for details.</p>

<li>
<b>Explicit SystemService Dependencies</b>&mdash;
Support has been added to specify dependencies between System Services. This ensures dependant
services are available at runtime. See 
<a href="../../Programmer/SystemServices/system_service_features.htm">System Service Features</a>
for more details.
</li>

<li>
<b>Introduction of Frame Events</b>&mdash;
The efd::MessageService is a powerful way to route messages in an application. However, non-immediate 
messages are only delivered once per tick. There are situations where a system service must take action
multiple times during a tick. To support this, LightSpeed 3.2 introduces frame events. A frame event is
a light weight message generated by a system service during its OnTick behavior. Other services can 
listen for frame events and will receive them immediately.  See <a href="../../Reference/efd/efd__IFrameEvent.htm">
efd::IFrameEvent</a> for more details.
</li>

<li>
<b>Expanded Block support</b>&mdash;
Many additional features are now supported when loading Block files, including block instancing,
cross-block entity linking and greater control over block loading. For example, you specify whether entities
in the block should automatically enter the world and become visible as soon as they load or if
they are created out-of-world and are explicitly added at runtime. For complete details see the
new block documentation pages located under <a href="../../Programmer/Blocks/block_intro.htm">Block
Files: Introduction</a>.
</li>

<li>
<b>Performance and Usability Improvements</b>&mdash;
Numerous bugs have been fixed and code restructured to improve the performance of the entity system.
Several commonly used entity models are now built-in, reducing the lag in applying property changes.
Additional features include the ability to have one entity rigidly follow another, the ability to
remove an entity from the world without deleting it, and re-add it later, and the ability to obtain
the position of an animated character in the entity position property.
</li>

</ul>

<h4>Toolbench Overhaul</h4>

<p>
Toolbench has received a facelift, and in the process, a lot of performance and usability
improvements! Entity and entity model editors have been reworked to increase functional space,
improve filtering, and reduce the need for scrolling. Additional examples:
</p>

<ul>
<li>
There is now a Find in Files feature, especially useful for searching behavior scripts.
</li>
<li>
Block layers can now be explicitly loaded or unloaded to help manage resources when editing in
World Builder.
</li>
<li>
Asset files in the asset web can now be dragged and dropped from Explorer directly into the
World Builder viewport to create entities.
</li>
<li>
The Script Debugger has new utility windows for tracking entity state.
</li>
</ul>

<h4>Simulation Debugger</h4>

<p>
Toolbench hosts a new tool for debugging entities at runtime - the Simulation Debugger.
This tool visualizes the state of entities in a connected game, both providing a high level overview
of game state and allowing modification of specific entity properties. Sessions can be recorded and
played back for further analysis. See the Simulation Debugger
<a href="../../Tools/SimDebugger/sim_debugger_intro.htm">user documentation</a> and
<a href="../../Programmer/Toolbench/tb_extending_sim_debugger_intro.htm">programming guide</a> for
more information.
</p>

<h4>Terrain and Environments</h4>

<p>
The <a href="../../Programmer/NiTerrain/Introduction_to_NiTerrain_Library.htm">terrain system</a>
has been further developed, resulting in improved performance and extensibility.
There is now multi-sector terrain with streaming support and greater texturing flexibility. In
addition, an <a href="../../Programmer/NiEnvironment/NiEnvironment_Introduction.htm">
environment system</a> allows the creation of detailed sky animations with time of day
tracking. All these features are exposed to designers in the upgraded World Builder toolset.
</p>

<h4>Improved Lua Support</h4>
<p>The Lua scripting system was updated to provide better type safety, add additional bindings for
efd data types, and make writing and debugging Lua scripts more productive.

<ul>

<li>
<b>Additional Lua efd Data Type Bindings</b>&mdash;
Previous LightSpeed releases bound certain data types to Lua tables instead of first class
objects. New bindings now exist to support standard Entity property types, including efd::Point3.
See <a href="../../Programmer/Scripting/lua_scripting_overview.htm">Lua Scripting Overview</a> for
details.
</li>

<li>
<b>Direct Binding of Entity Properties in Lua</b>&mdash;
Entities are now bound directly in Lua. The previous 'selfID' parameter passed to behaviors is now
a proxy for a C++ Entity object. You can now access entity properties directly from these Entity proxies
without having to use the BehaviorAPI. See the <a href="../../Convert/Previous/Converting_to_Gamebryo_3_2_Overview.htm#LuaChanges">
Lua Changes</a> section of the "Converting to Gamebryo 3.2 Overview" guide for more details.
</li>

<li>
<b>Improved Lua Debugger Type Support</b>&mdash;
With the addition of direct bindings for various efd and egf data types in Lua, the Toolbench
Lua Debugger was improved to provide support for viewing these types. Entity proxy objects and ParameterLists
are now fully visible in the watch and entity windows. In previous LightSpeed releases these were
opaque values that were not viewable in the debugger. In addition, APIs were added to allow you to visualize custom 
Lua types in Toolbench.  See
<a href="../../Reference/egfLua/egf__LuaBehaviorDebugger.htm">efd::LuaBehaviorDebugger::RegisterUserDataInterpreter</a>
for more details.
</li>

</ul>

<h4>3.1.1 Features</h4>

<p>LightSpeed 3.2 also includes the features of the 3.1.1 release, notably
<a href="../../Tools/WorldBuilder/wb_entity_whiteboxing.htm">Whiteboxing</a> and
<a href="../../Tools/WorldBuilder/wb_entity_export_to_DCC.htm">FBX export</a>.
</p>

<br/><br/>

<h1>What's New in Gamebryo LightSpeed 3.1</h1>

<p>Gamebryo LightSpeed 3.1 contains and builds upon Gamebryo LightSpeed 3.0 functionality, providing
several new features.</p>

<h4>Online</h4>

<p>Gamebryo LightSpeed now includes an Online subsystem that includes networking libraries for PC,
PS3, and Xbox 360. With the addition of this subsystem, LightSpeed supports rapid iteration and
prototyping for multi-platform, multiplayer online games. LightSpeed's entity replication
capabilities enable automatic propagation of an entity's state to remote processes. Matchmaking is
supported on all console platforms at the network library (NetLib) level. Two new online samples are
included: <a href="../../Tutorials/Peer_Game/sso_peer_game_intro.htm">PeerGame</a> and <a href=
"../../Learn/SSO/sso_matchmaking_sample_intro.htm">MatchMakingSample</a>. For more information about
Online, see <a href="../../GetStart/SSO/sso_overview.htm">Online Overview</a>.</p>

<h4>Revision Control Integration</h4>

<p>Toolbench now supports integration with Perforce and Subversion. This integration greatly
simplifies workflows for teams that create and manage game assets in Toolbench and that also use
revision control tools. For more information, see <a href="../../Tools/Toolbench/tb_scm_intro.htm">
Revision Control Integration</a>.</p>

<h4>Background loading to support streaming worlds</h4>

<p>Asset loading services provide a central runtime entry point for loading assets from disk,
including non-blocking background loading. This enables games to meet the console manufacturer's
technical requirements for a shipping game, while also simplifying loading for applications. For
more information about the asset loading services, see <a href=
"../../Programmer/AssetRuntimeService/asset_load_svcs_overview.htm">Asset Loading Services Overview
</a>.</p>

<h4>Max 2010 and Softimage 7.5</h4>

<p>Gamebryo LightSpeed now supports 3ds Max 2010 and SoftImage 7.5. (LightSpeed no longer supports
3ds Max 9.0.) For more detailed information about the DCC tool versions that LightSpeed supports,
refer to the <a href="../../Art/Introduction_to_Artist_s_Guides.htm">Artist section</a> of the
product documentation.</p>

<h4>Toolbench usability improvements</h4>

<ul>

<li><b>EMT Project Explorer view</b>&mdash;A new <a href=
"../../Tools/EntityModelingTool/emt_ref_project_explorer.htm">EMT Project Explorer</a> provides for
easier management of large EMT projects. This new view replaces the previous workflow via the Game
Solution view. Models, presets, and diagrams can be organized into folders using multi-select. There
is also a search engine for finding models and presets by partial name, mixin model, property, and
behavior. Project contents can be viewed in details or thumbnails mode.</li>

<li><b>World Builder Palette View</b>&mdash;A new <a href=
"../../Tools/WorldBuilder/wb_ref_palette_view.htm">Palette View</a> replaces the Palette View in the
previous version of Gamebryo LightSpeed. This new view improves usability for larger sets of models
and presets. In Browse mode, items are displayed in the same folder hierarchy specified in the EMT
Project Explorer. In Search mode, items can be quickly queried. Folder contents or search results
can be displayed in details or thumbnails mode.</li>

<li><b>Asset ID case-insensitivity</b>&mdash;The Asset Controller now generates logical asset IDs in
a case-insensitive manner. This makes it easier for teams to collaborate on assets without running
into errors due to file naming inconsistencies. When you open a game solution file that was created
in the previous version of LightSpeed, a migration step will walk you through the asset ID migration
process. Or, you can run a tool to migrate assets manually. For more information about this tool,
see <a href="../../Tools/Toolbench/tb_convertllidrefs.htm">ConvertLLIDRefs Tool</a>.</li>

</ul>

<h4>Other enhancements</h4>

<ul>

<li><b>TCR/TRC Compliance</b>&mdash;Improvements have been made to ensure certification of
LightSpeed-based games on all platforms. Improvements include the following: asynchronous content
loading in the Game Framework; encrypted script files in shipping versions of PS3 games; removed PS3
libcgc linking requirement. For information about preparing to ship your title on Win32 or any of
the supported consoles, see the section on <a href="../../Programmer/Ship/ship_intro.htm">Shipping
Your Game</a>.</li>

<li><b>Rapid Iteration of Textures</b>&mdash;A service has been added to enable rapid iteration of
external textures. If a texture in the asset web is modified and the reload service is initialized,
then this service will search through all NiSourceTexture objects for ones with a matching filename.
Any matching textures will be reloaded from disk. The currently supported formats include: .BMP,
.DDS, .SGI, and .TGA.</li>

<li><b>Improved Game Framework Lighting</b>&mdash;Many improvement have been made to how lighting is
handled in Game Framework. Artists now have better control over how many lights can affect an
object, which lights affect what objects, and which lights should be recomputed at runtime. For more
information about the LightService, see <a href=
"../../Programmer/CoreRuntimeServices/core_services_ecr_LightService.htm">LightService Overview</a>.
</li>
</ul>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="rapid_iteration_overview.htm">Rapid Iteration Overview</a></li>
    <li><a href="Documentation_Overview.htm">Documentation Overview</a></li>
    <li><a href="../../RelNotes/Release_Notes_Introduction.htm">Release Notes</a></li>
    <li><a href="kickstart_project.htm">Emergent Labs - Kickstart Project</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

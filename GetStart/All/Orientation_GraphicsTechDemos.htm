<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Graphics Tech Demos Directory Orientation</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Graphics Tech Demos Directory Orientation</h1>

<h2>GraphicsTechDemos Directory</h2>

<p>The following demos are useful examples of aspects of Gamebryo
programming and are located in the <span class=
"NDLSystemFont"><em>%EMERGENT_PATH%</em>\Samples\GraphicsTechDemos</span> directory. PhysX
demos only run if the PhysX runtime has been installed, and can
only be built when the PhysX development SDK has been
installed.</p>

<h3>Character Animation Demos</h3>
<!--(Table)=========================================================-->

<table>
    <thead>
        <tr>
            <th>Demo Name</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><a href=
            "../../Learn/Demos/BadSushi_Overview.htm">BadSushi</a></td>

            <td>Demonstrates Gamebryo character animation and
            morphing performance, with an emphasis on
            <span class="NDLSystemFont"><a href=
            "../../Programmer/NiFloodgate/Introduction_to_NiFloodgate.htm">
            NiFloodgate</a></span> capabilities. Each character
            has its own node in the scene graph, its own
            morphing, and a separate draw call.</td>
        </tr>

        <tr>
            <td><span><a href=
            "../../Learn/Demos/Sample_Overview.htm">CharacterAnimationDemo</a></span></td>

            <td>A simple application providing an example of how
            to set up and use the NiActorManager to control an
            animated character. This sample implements character
            animations, animation event callbacks, and BoneLOD.
            It also includes a sample 3ds max file that is
            correctly set up for character animation and BoneLOD
            export.</td>
        </tr>

        <tr>
            <td><span><a href=
            "../../Learn/Demos/Sample_Overview.htm">CharacterPerformanceDemo</a></span></td>

            <td>Demonstrates Gamebryo character animation and
            skinning performance. Load any .KFM file into the
            demo or just have a look at the automatically-loaded
            characters.</td>
        </tr>
    </tbody>
</table>

<h3>Shader Demos</h3>
<!--(Table)=========================================================-->

<table>
    <thead>
        <tr>
            <th>Demo Name</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><a href=
            "../../Learn/Demos/Overview_!ShaderSample.htm">ShaderSample</a></td>

            <td>Demonstrates extensive use of the shader
            system.</td>
        </tr>

        <tr>
            <td><a href=
            "../../Learn/Demos/Introduction_to_the_ShadowMap_Demo.htm">
            ShadowMap</a></td>

            <td>Demonstrates a high-quality shadow-casting effect
            using pixel and vertex shaders, floating point
            textures, and floating point render targets.</td>
        </tr>
    </tbody>
</table>

<h3>Texturing Effects Demos</h3>
<!--(Table)=========================================================-->

<table>
    <thead>
        <tr>
            <th>Demo Name</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><span><a href=
            "../../Learn/Demos/Overview_!CubeMap.htm">CubeMap</a></span></td>

            <td>Illustrates Cubic Environment Mapping.</td>
        </tr>

        <tr>
            <td><span><a href=
            "../../Learn/Demos/Introduction_!DynamicTexture.htm">DynamicTexture</a></span></td>

            <td>An example of how to modify texture pixels on the
            fly to create the effect of dynamic clouds (uses a
            simple version of Perlin noise)</td>
        </tr>

        <tr>
            <td><span><a href=
            "../../Learn/Demos/SoftParticles_Demo_Overview.htm">SoftParticles</a></span></td>

            <td>Demonstrates a graphical effect using the
            NiParticle system which solves the problem of hard
            edges created when billboard particles intersect
            other geometry. Also demonstrates how to extend the
            Gamebryo Standard Material to create custom
            shaders.</td>
        </tr>

        <tr>
            <td><span><a href=
            "../../Learn/Demos/StandardMaterial_Demo_Overview.htm">
            StandardMaterial</a></span></td>

            <td>Demonstrates the Gamebryo Standard Material on
            Sam the Schiznoid Snail</td>
        </tr>

        <tr>
            <td><span><a href=
            "../../Learn/Demos/Introduction_!StencilShadow.htm">StencilShadow</a></span></td>

            <td>Shows how to create realistic shadows using
            stencil buffer effects</td>
        </tr>

        <tr>
            <td><span><a href=
            "../../Learn/Demos/Introduction_to_the_VideoTexture_Demo.htm">
            VideoTexture</a></span></td>

            <td>Shows how to use Gamebryo dynamic textures with a
            video decompression library in order to display a
            "video texture" on any 3D or 2D surface within a
            scene.</td>
        </tr>
    </tbody>
</table>

<h3>Lighting Effects Demos</h3>
<!--(Table)=========================================================-->

<table>
    <thead>
        <tr>
            <th>Demo Name</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><span><a href=
            "../../Learn/Demos/Overview_!VertexLightingPipeline.htm">
            VertexLightingPipeline</a></span></td>

            <td>Illustrates the lighting classes and the dynamic
            vertex lighting pipeline of Gamebryo in a basic
            application.</td>
        </tr>
    </tbody>
</table>

<h3>Collision Samples</h3>
<!--(Table)=========================================================-->

<table>
    <thead>
        <tr>
            <th>Demo Name</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><a href=
            "../../Learn/Demos/CollisionTestDynamic_Demo_intro.htm">
            CollisionTestDynamic</a></td>

            <td>Illustrates dynamic collision detection for a
            group of moving rigid objects in a closed room</td>
        </tr>

        <tr>
            <td><span><a href=
            "../../Learn/Demos/Purpose_!CollisionTestStatic.htm">CollisionTestStatic</a></span></td>

            <td>Illustrates static collision detection for
            geometry objects using ABVs.</td>
        </tr>
    </tbody>
</table>

<h3>Basic Concepts Demos</h3>
<!--(Table)=========================================================-->

<table>
    <thead>
        <tr>
            <th>Demo Name</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><span><a href=
            "../../Learn/Demos/BackgroundLoad_intro.htm">BackgroundLoad</a></span></td>

            <td>Background loading allows an application to load
            a NIF file in a low-priority thread that does not
            steal cycles from the thread that launched the
            background load.</td>
        </tr>

        <tr>
            <td><a href=
            "../../Learn/Demos/InputDemo_Overview.htm">InputDemo</a></td>

            <td>Demonstrates the capabilities of the <span class=
            "NDLSystemFont"><a href=
            "../../Reference/NiInput/Introduction_To_NiInput.htm">
            NiInput</a></span> library.</td>
        </tr>

        <tr>
            <td><a href=
            "../../Learn/Demos/LogoApplication_intro.htm">LogoApplication</a></td>

            <td>Demonstrates how to display the Gamebryo splash
            screen during startup.</td>
        </tr>

        <tr>
            <td><a href=
            "../../Learn/Demos/Introduction_to_the_MeshCreation_Demo.htm">
            MeshCreation</a></td>

            <td>Demonstrates how to programatically create a
            scene with geometry and a particle system.</td>
        </tr>

        <tr>
            <td><a href=
            "../../Learn/Demos/Introduction_to_the_MeshInstancing_Demo.htm">
            MeshInstancing</a></td>

            <td>Demonstrates how to use hardware instancing in
            Gamebryo.</td>
        </tr>

        <tr>
            <td><a href=
            "../../Learn/Demos/Picking_Demo_Overview.htm">Picking</a></td>

            <td>Select a 3D object from a screen coordinate using
            the mouse or gamepad.</td>
        </tr>

        <tr>
            <td><span><a href=
            "../../Learn/Demos/Overview_!ProfileSample.htm">ProfileSample</a></span></td>

            <td>Demonstrates how to gather performance data from
            a Gamebryo application using the NiProfile class and
            the NiStopWatch class.</td>
        </tr>

        <tr>
            <td><span><a href=
            "../../Learn/Demos/Overview_!SimpleApp.htm">SimpleApp</a></span></td>

            <td>Minimal platform-dependent app, which does not
            use <span class="NDLSystemFont"><a href=
            "../../Reference/NiApplication/NiApplication.htm">NiApplication</a></span>.</td>
        </tr>

        <tr>
            <td><span><a href=
            "../../Learn/Demos/Introduction_to_the_UnicodeCharacterSets_Demo.htm">
            UnicodeCharacterSets</a></span></td>

            <td>Demonstrates how to display text strings using
            fonts with 2-byte Unicode characters through the
            Gamebryo NiFont library.</td>
        </tr>
    </tbody>
</table>

<h3>PhysX Demos</h3>
<!--(Table)=========================================================-->

<table>
    <thead>
        <tr>
            <th>Demo Name</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><span><a href=
            "../../Learn/Demos/PhysX_Fluids_Demo_Overview.htm">PhysXFluids</a></span></td>

            <td>Demonstrates PhysX fluid simulation technology
            rendered using Gamebryo.</td>
        </tr>

        <tr>
            <td><span><a href=
            "../../Learn/Demos/PhysX_Particles_Demo_Overview.htm">
            PhysXParticles</a></span></td>

            <td>An application that allows for the comparison
            between PhysX-based particles and standard Gamebryo
            particles.</td>
        </tr>

        <tr>
            <td><span><a href=
            "../../Learn/Demos/PhysX_Particles_In_Code_Demo_Overview.htm">
            PhysXParticlesInCode</a></span></td>

            <td>Demonstrates the creation of a PhysX-based
            particle system in software.</td>
        </tr>

        <tr>
            <td><span><a href=
            "../../Learn/Demos/PhysX_Timing_Demo_Overview.htm">PhysXTiming</a></span></td>

            <td>Demonstrates the range of loop structures
            available for updating PhysX content in
            Gamebryo.</td>
        </tr>
    </tbody>
</table>

<h3>DX9 Demos</h3>
<!--(Table)=========================================================-->

<table>
    <thead>
        <tr>
            <th>Demo Name</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><a href=
            "../../Learn/Demos/Introduction_to_the_DX9MSAATextures_Demo.htm">
            DX9MSAATextures</a></td>

            <td>Demonstrates how to render to textures with
            multisampled antialiasing (MSAA) enabled in Gamebryo
            using the <a href=
            "../../Reference/NiDX9Renderer/Introduction_to_the_DX9Renderer.htm">
            NiDX9Renderer</a>.</td>
        </tr>
    </tbody>
</table>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

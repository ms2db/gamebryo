<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Foundation PhysX Layer</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Build" content="PhysX" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Foundation PhysX Layer</h1>

<p>In Gamebryo LightSpeed 3.0, some classes and methods that were previously within the NiPhysX
library have been moved to a new library called Foundation PhysX (namespace efdPhysX). The classes
that were moved are bridged. This means that very few code changes are required to convert to
LightSpeed. However you will need to make sure that project file settings are modified to link
against the efdPhysX library.</p>

<p>The existing NiPhysX classes make use of the Foundation PhysX classes to provide pre-LightSpeed
functionality. However, they may be slower due to additional function call overhead.</p>

<h2>Classes Moved from NiPhysX to Foundation PhysX</h2>

<table>
    <thead>
        <tr>
            <th>NiPhysX Class Name</th>

            <th>Foundation Header</th>

            <th>Notes</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>NiPhysXManager</td>

            <td><a href=
            "../../Reference/efdPhysX/efdPhysX__PhysXSDKManager.htm">&lt;efdPhysX/PhysXSDKManager.h&gt;</a></td>

            <td>Initialization and shutdown of the PhysX SDK have been moved to the new class,
            along with the management of shared collision meshes and locking. The management of a
            platform-specific directory for collision mesh loading has been moved into the <a href=
            "../../Reference/NiPhysX/NiPhysXMeshDesc.htm"><span class=
            "NDLSystemFont">NiPhysXMeshDesc</span></a> class. The latter has also been modified to
            use the new SDK manager for caching meshes.</td>
        </tr>

        <tr>
            <td>NiPhysXAllocator</td>

            <td><a href=
            "../../Reference/efdPhysX/efdPhysX__PhysXAllocator.htm">&lt;efdPhysX/PhysXAllocator.h&gt;</a></td>

            <td>The <span class="NDLSystemFont">PhysXAllocator</span> class implements all of the
            required PhysX memory management functions using Foundation classes.</td>
        </tr>

        <tr>
            <td>NiPhysXUserOutput</td>

            <td><a href=
            "../../Reference/efdPhysX/efdPhysX__PhysXUserOutput.htm">&lt;efdPhysX/PhysXUserOutput.h&gt;</a></td>

            <td>The <span class="NDLSystemFont">PhysXUserOutput</span> class implements all of the
            required PhysX output functions using Foundation logging classes.</td>
        </tr>

        <tr>
            <td>NiPhysXTypes</td>

            <td><a href=
            "../../Reference/efdPhysX/efdPhysX__PhysXTypes.htm">&lt;efdPhysX/PhysXTypes.h&gt;</a></td>

            <td>The <span class="NDLSystemFont">PhysXUserTypes</span> class implements conversions
            from PhysX data types to Foundation data types, such as <span class=
            "NDLSystemFont">efd::Point3</span> to <span class="NDLSystemFont">NxVec3</span>. These
            functions may be used with CoreRuntime classes, such as <span class=
            "NDLSystemFont">NiPoint3</span> because the latter are subclasses of Foundation
            types.</td>
        </tr>
    </tbody>
</table>

<h2>Additional Changes</h2>

<p>The handling of collision mesh loading and caching has changed internally, affecting the
following classes:</p>

<ul>
    <li><a href="../../Reference/NiPhysX/NiPhysXMeshDesc.htm"><span class=
    "NDLSystemFont">NiPhysXMeshDesc</span></a></li>

    <li><a href="../../Reference/NiPhysX/NiPhysXClothMesh.htm"><span class=
    "NDLSystemFont">NiPhysXClothMesh</span></a></li>

    <li><a href="../../Reference/NiPhysX/NiPhysXConvexMesh.htm"><span class=
    "NDLSystemFont">NiPhysXConvexMesh</span></a></li>

    <li><a href="../../Reference/NiPhysX/NiPhysXTriangleMesh.htm"><span class=
    "NDLSystemFont">NiPhysXTriangleMesh</span></a></li>
</ul>

<p>If you previously modified the handling of meshes in these classes, you might need to integrate
your modifications into the new system.</p>

<p>All code that previously made use of one of the moved classes above has been modified to use the
new functionality in Foundation PhysX. The classes that had their functionality moved to Foundation
PhysX may be removed from the engine entirely in a future release. The class documentation
indicates such classes as deprecated.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

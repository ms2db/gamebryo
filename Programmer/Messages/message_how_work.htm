<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>How messages work</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>How messages work</h1>

<p>Messages are delivered by <span class="NDLSystemFont">efd::MessageService</span>. 
    Macros are used to statically map a class type and member function pair to the 
    class id of the message type expected by that function. The macro creates a 
    static instance of a message handler (derived from <span class="NDLSystemFont">
    efd::BaseMessageHandler</span>). At run time the application subscribes a 
    message target (any object derived from <span class="NDLSystemFont">efd::IBase</span>) 
    to a category, and any messages sent on that category are delivered to the 
    target. Each message will cause the target's registered member function to be 
    invoked that matches the type of the arriving message.</p>
    <p>For efficiency, <span class="NDLSystemFont">efd::MessageService </span>builds a 
        data structure that maps a message class id to a message target class id and 
        pointer to member function. When an instance of a message target subscribes to a 
        category, MessageService records that the target is interested in the Category 
        subscribed to. When MessageService attempts to deliver a message, it determines 
        if the message class id of the message that is being delivered matches any of 
        the registered class id/function pointer pairs that are statically registered. 
        It then checks if any target has subscribed to the Category the message is being 
        sent on. If there is no handler or no target object is subscribed to the 
        Category that the message is sent on, the following occurs:</p>

<ul>
  <li>the message is not delivered</li>
  <li>the SmartPointer is released</li>
  <li>an error/warning is logged</li>
</ul>

<p>Messages can be sent through MessageService with Send, SendLocal, SendImmediate, 
    or SendLocalDelayed. Messages can be received from a remote process through
    <span class="NDLSystemFont">efd::NetService</span>.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="../../Reference/QuickRef_Services/svc_qckref_msg_svc.htm">MessageService Quick Reference</a></li>
		
    <li><a href="message_overview.htm">Messages overview</a></li>

    <li><a href="message_features.htm">Message features</a></li>

    <li><a href="message_limitations.htm">Message limitations</a></li>

    <li><a href="message_how_relates_efr.htm">How messages relate
    to the Emergent Game Framework</a></li>

    <li><a href="message_reqs.htm">Requirements for working with
    messages</a></li>

    <li><a href="message_best_practice.htm">Best practices for
    working with messages</a></li>

    <li><a href="message_using.htm">Using messages</a></li>

	<li><a href="../../Reference/efd/efd__MessageService.htm">efd::MessageService</a></li>
	<li><a href="../../Reference/efd/efd__BaseMessageHandler.htm">efd::BaseMessageHandler</a></li>
	<li><a href="../../Reference/efd/efd__IBase.htm">efd::IBase</a></li>
	<li><a href="../../Reference/efd/efd__Category.htm">efd::Category</a></li>
	<li><a href="../../Reference/efdNetwork/efd__NetService.htm">efd::NetService</a></li>

</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

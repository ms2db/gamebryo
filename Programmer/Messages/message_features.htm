<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Message features</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Message features</h1>

<p>The following are features of messages provided by the Emergent Game Framework:</p>

<ul>
<li>An <span class="NDLSystemFont">efd::IMessage</span> is created, addressed, sent, delivered and handled as an object.</li>
<li>In general, the application does not need to be aware of whether the 
    <span class="NDLSystemFont">efd::IMessage </span>was sent remotely or locally.</li>
<li><span class="NDLSystemFont">efd::IMessage </span>objects are sent and handled thread-safely; all 
    <span class="NDLSystemFont">efd::IMessage </span>objects are handled on the main application thread.</li>
<li><span class="NDLSystemFont">efd::IMessage </span>and handlers are managed type-safely using run time type checking and a unique Class ID per 
    <span class="NDLSystemFont">efd::IMessage </span>derived class.</li>
<li>Messages are addressed, routed, and handled using a numeric 
    <span class="NDLSystemFont">efd::Category </span>that groups them by like purpose.</li>
<li>The message system is a publish/subscribe system that supports a multiple sender/multiple receiver paradigm.</li>
<li> Messages are not broadcast, but are routed only to subscribers.</li>
<li>An <span class="NDLSystemFont">efd::IMessage </span>handler can be any function in an 
    <span class="NDLSystemFont">efd::IBase </span>derived class.</li>
    <li>The MessageService automatically routes remote messages to the NetService based 
        on Category subscription.</li>
</ul>

<p class="NDLHeadingRelatedTopic">Related topics</p>
<UL>
<li><a href="message_overview.htm">Messages overview</a></li>
<li><a href="message_how_work.htm">How messages work</a></li>
<li><a href="message_limitations.htm">Message limitations</a></li>
<li><a href="message_how_relates_efr.htm">How messages relate to the Emergent Game Framework</a></li>
<li><a href="message_reqs.htm">Requirements for working with messages</a></li>
<li><a href="message_best_practice.htm">Best practices for working with messages</a></li>
<li><a href="message_using.htm">Using messages</a></li>
</UL>


<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

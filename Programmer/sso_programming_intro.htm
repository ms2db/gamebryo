<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Online Programming: Introduction</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="FSO" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(1);</script>

<h1>Online Programming: Introduction</h1>

<p>Applications that are based on the Emergent Game Framework can be moved online with only minor changes. This is true because Gamebryo LightSpeed's Online subsystem uses the same publish-subscribe messaging model that is provided by the Foundation subsystem. The Online subsystem contains a number of network libraries (NetLibs) that provide support for native platform networking. By using the Online subsystem and making simple policy changes for managing message publishers and subscribers, you can move existing stand-alone games to multiplayer online games. For more information about converting a stand-alone game to a peer-to-peer multiplayer game, see the <a href=
"../Tutorials/Peer_Game/sso_peer_game_intro.htm">Peer Game Tutorial</a>. </p>

<p>LightSpeed's entity replication capabilities enable you to ensure that all processes have up-to-date local caches of relevant entities. Among other things, this allows many existing scripts to be reused without any changes. Replication policies can be adjusted to optimize data transmission. These policies can also control which Entities and Properties are considered of interest.</p>

<p>As is the case with single-player games, you can rapidly iterate on games that incorporate the Online subsystem. For more information about rapidly iterating on multiplayer games, see the <a href="../Tutorials/Multiplayer_Rapid/sso_multiplayer_rapid_intro.htm">Multiplayer Rapid Iteration tutorial</a>.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="Networking/sso_networking_intro.htm">Networking</a></li>

    <li><a href="Entity_Replication/sso_replication_intro.htm">Entity
    Replication</a></li>

    <li><a href="../Learn/SSO/sso_tech_samples_intro.htm">Online Tech
    Samples</a></li>
    
    <li><a href="Messages/message_intro.htm">Messages</a></li>

</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

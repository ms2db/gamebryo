<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>About game time</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>About game time</h1>

<p>There are two sources of time available in the Emergent Game
Framework. One is the real time clock and the other is the game
time clock. Game time is the time used by all simulation
logic.</p>

<h2>Similarities</h2>

<p>Both of these clocks are updated once per tick of the
ServiceManager and then return the same time value for the
duration of the tick. They use high precision hardware to provide
the most accurate time measurement available with the goal of
providing millisecond level accuracy over up to ten year periods
of time. Toward this goal, time is represented as a 64-bit
floating point number. For both clocks, time is guaranteed never
to move backward.</p>

<h2>Differences</h2>

<p>The game time clock adds functionality beyond what the real
time clock provides. Whereas real time always marches on, game
time can be paused and resumed. Because scheduler activity is
based on game time, pausing the game time clock pauses all
scheduler and behavior activity. This pausing ability is used
automatically during rapid iteration, but you can also use this
ability to pause the simulation while displaying menus or for
other reasons.</p>

<p>In addition to pausing, game time supports two modes of
advancement: a fixed delta mode and a scaled real time mode. The
default advancement mode is scaled real time. In this mode, the
real time clock is used to determine how much the game time clock
should advance on each tick. An optional scale factor can be
applied to speed up or slow down the passage of game time
relative to real time. Alternatively, a fixed delta mode can be
used. In this mode, game time will advance by a specified amount
on each update regardless of how much real time has passed.</p>

<h2>When to use</h2>

<p>Game time is used for all simulation related code. All timing
related to the Scheduler queue, behaviors, and events uses the
game time clock. In addition, simulation related code such as
physics must use game time. Systems such as animation should use
game time for any animations that affect simulation state, such
as animation based movement, but might choose to also use real
time for decorative animations that cannot affect the simulation
state. Similar reasoning can be applied to systems like particle
effects. So long as your particle effects do not affect
simulation state (in other words, are purely decorative), you
could choose to base them on real time. Of course if you want
these systems to pause when the scheduler pauses, then you must
use the game time clock.</p>

<p>Everything that is not simulation related will use the real
time clock. Most importantly, this includes the message service.
It is important to remember that message delivery, including
sending messages delayed into the future, will use the real time
clock.</p>

<p>In summary, you should use the game time clock for anything
related to simulation and game state. You should use the real
time clock mainly for decorative things or things that must
continue to advance while the game is paused. When in doubt, it
is generally safer to use game time.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
  <li><a href="scheduler_overview.htm">Scheduler Overview</a></li>
  <li><a href="scheduler_how_work.htm">How the Scheduler Works</a></li>
  <li><a href="scheduler_using.htm">Using the Scheduler</a></li>
  <li><a href="scheduler_tuning.htm">Tuning the Scheduler Performance</a></li>
  <li><a href="scheduler_debugging.htm">Debugging the Scheduler</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Building Gamebryo LightSpeed: Overview</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->

<!--(Begin Links)===================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Building Gamebryo LightSpeed: Overview</h1>

<p>All of the prerequisites that are required to build your game with the
Gamebryo LightSpeed SDK are prebuilt into the product install. However, you might want or need to rebuild LightSpeed at some point. For example, you might need to enable or disable options in the main code base. Or, you might need to apply patches or custom modifications.</p>

<p>If you are building LightSpeed from scratch, you need to perform the build in a specific order. You will need to build the Foundation
subsystem first, the CoreRuntime second, and then the
GameFramework. Each subsystem contains multiple
solutions and projects, and must be built in the following
order:</p>

  <table class="NDLNoteContainer" width="100%">
      <tr align="left">
          <td class="NDLNoteContainerTD"><p class="NDLHeadingNoteContainer">Note</p>
              <div class="NDLNote">The PhysX solutions only need to be built if you plan to use PhysX in your application.
              </div>
          </td>
      </tr>
  </table>


<table>
    <thead>
        <tr>
            <th>Solution File</th>

            <th>Location</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>Foundation.sln</td>

            <td>Build\Foundation</td>
        </tr>

        <tr>
            <td>FoundationPhysX.sln</td>

            <td>Build\Foundation</td>
        </tr>

        <tr>
            <td>CoreRuntime solutions (there are four to seven
            solutions, depending upon the platform)</td>

            <td>Build\CoreRuntime</td>
        </tr>

        <tr>
            <td>GameFramework.sln</td>

            <td>Build\GameFramework</td>
        </tr>

        <tr>
            <td>GameFrameworkPhysX.sln</td>

            <td>Build\GameFramework</td>
        </tr>

        <tr>
            <td>CoreServices.sln</td>

            <td>Build\GameFramework</td>
        </tr>

        <tr>
            <td>CoreServicePhysX.sln</td>

            <td>Build\GameFramework</td>
        </tr>
    </tbody>
</table>


<p>For the PS3 platform, makefiles are only supplied for the CoreRuntime projects. Visual Studio solutions are provided for the Foundation and GameFramework projects.</p>

<h2>LightSpeed Build Configurations</h2>

<p>LightSpeed has many build configurations on various platforms.
The LightSpeed SDK should be prebuilt with the standard
installation, but if you do choose to rebuild them, remember to
build them on the platform, configuration, and Visual C++ version
that matches your game application configuration.</p>

<p>Every platform supports basic Debug, Release, and Shipping
configurations. Debug mode has memory debugging turned on,
logging enabled by default, and other debugging assistance built
in. It is built with few if any compiler optimizations. Release
mode has compiler optimizations turned on and memory debugging
turned off; logging is compiled in but disabled by default.
Shipping mode strips all nonessential code, including logging,
and enables maximum compiler optimization.</p>

<p>The Windows platform contains additional build configurations
for DebugDLL, ReleaseDLL, and ShippingDLL modes. These builds use
DLL (Dynamic Load Library) versions of the various LightSpeed
libraries wherever possible. See the Microsoft documentation for
more information on Dynamic Link Libraries.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
  <li><a href="../../GetStart/PC/Introduction.htm">Building Gamebryo LightSpeed for Win32</a></li>
  <li><a href="../../ee_goto.htm#GetStart/PS3/Introduction_to_Gamebryo_for_PS3.htm">Building Gamebryo LightSpeed for PS3</a></li>
  <li><a href="../../ee_goto.htm#GetStart/Xbox/Introduction_to_Gamebryo_for_Xenon.htm">Building Gamebryo LightSpeed for Xbox 360</a></li>
  <li><a href="../Toolbench/tb_build.htm">Building Toolbench</a></li>
  <li><a href="../../Art/Other/Updating_Artist_Tools.htm">Updating Artist Tools</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

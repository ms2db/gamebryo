<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Particle System Overview</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type=
"text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Particle System Overview</h1>

<p>Particle systems in Gamebryo have been designed to be fully featured,
compatible with all rendering methods, optimized for multiple cores (or SPUs),
and extensible. They internally use <a href=
"../NiFloodgate/Introduction_to_NiFloodgate.htm">Floodgate</a> kernels to
execute their particle simulation and generation tasks, allowing those tasks to
be broken down and scheduled across all idle CPU cores or SPUs. The generated
particles are just like any other mesh in Gamebryo and can be rendered using
the standard material pipeline or custom shaders. The generation of renderable
particles from particle data is separate from the simulation of that data, so
different algorithms can be swapped in that generate particles in a different
way. Also, custom particle forces and colliders can be added either by
modifying existing Floodgate kernels or by supplying new ones.</p>

<p>All particle system classes begin with the prefix <span class=
"NDLSystemFont">NiPS</span>. The main class representing a particle system in
Gamebryo is <span class="NDLSystemFont"><a href=
"../../Reference/NiParticle/NiPSParticleSystem.htm">NiPSParticleSystem</a></span>.
This class holds arrays of all the per-particle data that needs to be used in
the simulation. It is derived from <span class="NDLSystemFont"><a href=
"../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span> and has at least two
<a href="../NiMesh/Introduction_to_Mesh_Modifiers.htm">mesh modifiers</a>
attached to it. The first is <span class="NDLSystemFont"><a href=
"../../Reference/NiParticle/NiPSSimulator.htm">NiPSSimulator</a></span>, which
is responsible for simulating the particle system, updating its particle data
arrays. This includes applying forces to the particles and simulating
collisions with particle colliders. The second mesh modifier is a particle
generator that builds renderable particle geometry based on the particle data.
The default generator supplied with Gamebryo is <span class=
"NDLSystemFont"><a href=
"../../Reference/NiParticle/NiPSFacingQuadGenerator.htm">NiPSFacingQuadGenerator</a></span>,
which generates a rotated, textured, camera-facing quad for each particle.</p>

<p>The particle system object can also have time controllers attached to it
that control various aspects of itself or its simulation. Time controllers that
affect particle forces or emitters are attached to the <span class=
"NDLSystemFont">NiPSParticleSystem</span> object and are derived from
<span class="NDLSystemFont"><a href=
"../../Reference/NiParticle/NiPSForceCtlr.htm">NiPSForceCtlr</a></span> or
<span class="NDLSystemFont"><a href=
"../../Reference/NiParticle/NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span>.
Particle emission is animated by <span class="NDLSystemFont"><a href=
"../../Reference/NiParticle/NiPSEmitParticlesCtlr.htm">NiPSEmitParticlesCtlr</a></span>.</p>

<p>The following sections provide more information about the various aspects of
Gamebryo particle systems:</p>

<ul>
    <li><a href="Particle_System_Main_Object.htm">Main Object</a></li>

    <li><a href="Particle_System_Simulator.htm">Simulator</a>
        <ul>
            <li><a href="Particle_System_Simulator_Steps.htm">Simulator
            Steps</a></li>

            <li><a href="Particle_System_Forces.htm">Forces</a></li>

            <li><a href="Particle_System_Colliders.htm">Colliders</a></li>
        </ul>
    </li>

    <li><a href="Particle_System_Emitters_and_Spawners.htm">Emitters and
    Spawners</a></li>

    <li><a href="Particle_System_Generators.htm">Generators</a></li>

    <li><a href="Particle_System_Controllers.htm">Controllers</a></li>

    <li><a href="Particle_System_Bounding_Volumes.htm">Bounding
    Volumes</a></li>

    <li><a href="Particle_System_Programmatic_Creation.htm">Programmatic
    Creation</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

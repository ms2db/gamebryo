<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html><head>

<title>Introduction to NiParticle</title>

<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Introduction to NiParticle</h1>

<p>Gamebryo ships with a powerful, flexible, and extensible
particle system. Artists can design and create particle effects
in <a href="../../Art/Max/Particles.htm">3ds max</a>
and <a href="../../Art/Maya/Particle_introduction.htm">Maya</a>
and export those particle systems to NIF files, which will
animate when their scene graph is updated. Particle effects can
also be associated with animation sequences so that they can be
synchronized and automatically activated with character
animations. Particles can consist of screen-facing textured quads
or of arbitrary scene graph elements, such as geometry. Also,
various forces and colliders can be employed to modify the
behavior of particles once they are emitted. Programmatic
creation and control of particle systems is also possible. The
library responsible for particle systems is <span class=
"NDLSystemFont">NiParticle</span>. For a description of the
<a href="../../Art/Max/Particles.htm">3ds max</a> and
<a href="../../Art/Maya/Particle_introduction.htm">Maya</a>
particle system capabilities that Gamebryo supports, click the
respective links to be taken to appropriate sections in the
artist's guides.</p>

<p>The <span class="NDLSystemFont">NiParticle</span> library was
completely revamped in Gamebryo 2.5 to take advantage of <a href=
"../NiMesh/Introduction_to_Mesh_Modifiers.htm">mesh modifiers</a>
and <a href=
"../NiFloodgate/Introduction_to_NiFloodgate.htm">Floodgate</a>.
With Floodgate, particle simulation and generation tasks are
decomposed and run simultaneously across all available cores (or
SPUs). All particle system classes from versions prior to
Gamebryo 2.5 have been deprecated and are only used when
streaming old NIF files. They will be dropped in future Gamebryo
versions. See the <a href=
"../../Convert/Previous/NiParticle_Conversion.htm">conversion
guide</a> for more information on how to convert your application
from using the 2.3 particle system to using the 2.5 particle
system.</p>

<p>See the <a href="Particle_System_Overview.htm">overview</a>
section for high-level discussion of the particle system design.
More detailed information about various aspects of the particle
system can be found in the <a href=
"../../Reference/NiParticle/Introduction_to_NiParticle_Class_Reference.htm">
class reference</a> for <span class=
"NDLSystemFont">NiParticle</span>, which details the supported
member functions and variables of all the <span class=
"NDLSystemFont">NiParticle</span> classes.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Frame Rendering System Customization Opportunities</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Frame Rendering System Customization Opportunities</h1>

<p>There are several ways in which an application can customize 
 the behavior of the frame rendering system, ranging from callback functions 
 to custom derived classes. Several of these options are discussed here.</p>

<h2>Callback Functions</h2>

<p><span class="NDLSystemFont"><a href="../../Reference/NiMain/NiRenderFrame.htm">NiRenderFrame</a></span>, 
 <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiRenderStep.htm">NiRenderStep</a></span>, 
 and <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiRenderClick.htm">NiRenderClick</a></span> 
 all provide pre- and post-processing callbacks that are invoked at the 
 very beginning and end of their rendering functions. Function pointers 
 and custom data can be provided for these callbacks. Returning false from 
 a pre-processing callback will abort any further execution on that object. 
 Callback functions are useful for inserting custom code each frame between 
 rendering operations. They can also be used to dynamically skip execution 
 of render steps or render clicks based on application-specific information.</p>

<h2>Render Click Validators</h2>

<p>Every render click can be assigned an <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiRenderClickValidator.htm">NiRenderClickValidator</a></span> 
 object that is used to determine whether or not to execute that render 
 click. Applications can either use one of the validators that ships with 
 the frame rendering system or derive their own class from <span class="NDLSystemFont">NiRenderClickValidator</span> 
 and use custom criteria to enable and disable render clicks.</p>

<h2>Render List Processors</h2>

<p>An <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiRenderListProcessor.htm">NiRenderListProcessor</a></span> 
 object can be assigned to each <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiViewRenderClick.htm">NiViewRenderClick</a></span> 
 object. This processor is passed the array of geometry objects that is 
 returned by the render view and is expected to pass back an array of geometry 
 objects that must still be rendered. The processor is free to render all 
 or none of the geometry objects during execution. This can provide a way 
 to perform custom sorting or rendering of <span class="NDLSystemFont"><a href="../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span> 
 objects within the system. Several stock processors are provided, but 
 applications can derive their own classes from <span class="NDLSystemFont">NiRenderListProcessor</span> 
 to perform application-specific rendering behavior.</p>

<h2>Custom Render Views</h2>

<p>If an application has the need to render a custom type 
 of <span class="NDLSystemFont"><a href="../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span> 
 object or has custom culling needs (beyond what is available with <span 
 class="NDLSystemFont"><a href="../../Reference/NiMain/NiCullingProcess.htm">NiCullingProcess</a></span>), 
 it can derive a class from <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiRenderView.htm">NiRenderView</a></span> 
 and implement that behavior. Render views only deal with <span class="NDLSystemFont">NiMesh</span>-based 
 objects, though.</p>

<h2>Custom Render Clicks</h2>

<p>To accommodate non-<span class="NDLSystemFont"><a href="../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span> 
 objects with custom rendering needs, a class can be derived from <span 
 class="NDLSystemFont"><a href="../../Reference/NiMain/NiRenderClick.htm">NiRenderClick</a></span> 
 that performs custom rendering for a single pass (to a single render target 
 group). There are several examples of this type of customization that 
 ship with Gamebryo.</p>

<h2>Custom Render Steps</h2>

<p>If the rendering needs for a particular effect do not 
 map well to using render clicks, a class can be derived from <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiRenderStep.htm">NiRenderStep</a></span> 
 that performs completely custom rendering operations but still remains 
 portable to other frame rendering system applications.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->
</body>

</html>

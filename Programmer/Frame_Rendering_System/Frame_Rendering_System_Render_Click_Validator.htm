<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Frame Rendering System Render Click Validator</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Frame Rendering System Render Click Validator</h1>

<p>A <em>render click validator</em> 
 determines whether or not a particular render click should be executed 
 for the current frame. Its operation is stateless, so multiple render 
 clicks can use the same validator, if desired. The validator is passed 
 a pointer to the render click that it needs to validate.</p>

<p>Validators can use a variety of criteria to determine 
 whether or not to disable a particular render click. For example, a render 
 click that generates a rendered texture that will be applied to geometry 
 in a future rendering pass can be disabled if the geometry that will display 
 the rendered texture will be culled or otherwise not drawn. Validators 
 are, by nature, application-specific and provide a mechanism by which 
 applications can optimize rendering behavior based on higher-level knowledge.</p>

<h2>NiRenderClickValidator</h2>

<p>The <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiRenderClickValidator.htm">NiRenderClickValidator</a></span> 
 class is an abstract base class for all render clicks. Each render click 
 holds a pointer to an <span class="NDLSystemFont">NiRenderClickValidator</span> 
 object, upon which it calls the pure virtual <span class="NDLSystemFont">ValidateClick</span> 
 function to determine whether or not it should be executed.</p>

<p>An application can provide a validator for any of the 
 render clicks that it creates. Validators usually take advantage of higher-level 
 knowledge about the scene and the rendering process to determine which 
 render clicks can be disabled for any given frame. Since <span class="NDLSystemFont">NiRenderClickValidator</span> 
 is an abstract class, an application creates an instance of one of its 
 derived classes and attaches it to a render click when building the render 
 frame during initialization.</p>

<h2>Examples of Render Click Validators</h2>

<p>Examples of some render click validators that ship with 
 Gamebryo are listed below:</p>

<ul>
	
	<li><span class="NDLSystemFont"><a href="../../Reference/NiMain/NiCulledObjectValidator.htm">NiCulledObjectValidator</a></span>: 
 performs a camera view frustum cull to determine the visibility of an 
 object or scene graph, returning a user-defined value in the case that 
 all geometry objects in that scene graph are not visible.</li>
	
	<li><span class="NDLSystemFont"><a href="../../Reference/NiMain/NiCompositeValidator.htm">NiCompositeValidator</a></span>: 
 holds a list of sub-validators that subclasses can operate on.</li>
	
	<li><span class="NDLSystemFont"><a href="../../Reference/NiMain/NiLogicalANDCompositeValidator.htm">NiLogicalANDCompositeValidator</a></span>: 
 a composite validator that returns true only if all of its sub-validators 
 return true.</li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->
</body>

</html>

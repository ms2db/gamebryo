<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>RenderStates</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>RenderStates</h1>

<p>Within the scope of an implementation, a render state 
 section can be optionally declared. At this level, the render state group 
 defines the states that will be applied at the start of the implementation. 
 These states can be considered global to the shader. The states will be 
 contained in an <span style="NDLSystemFont">NiD3DRenderStateGroup</span> 
 instance held by the shader upon loading.</p>

<p>There should be no more than one render state section 
 in an implementation, although this section does not conflict with any 
 declared in the individual passes. A render state section looks like this:</p>
 
<pre>
RenderStates
{
	[Render state entry]
	...
}
</pre>


<p>Render state entries take one of the two following formats:</p>

<p><span class="NDLSystemFont">RenderState = Value</span></p>

<p><span class="NDLSystemFont">RenderState = Value Save</span></p>

<p>The Save keyword at the end of the state entry immediately above tells the system to "save" the current render state before setting the value to the one 
 given. When the class that uses the render state group has completed its actions, this state will be restored. Note that "Save" is not respected in the D3D10 renderer because of how render states are managed.</p>

<p><span class="NDLSystemFont">RenderState</span> is a case-insensitive string that is used to declare the render state that you want to set. For D3D render states, you can determine the appropriate string to use by taking the D3D render state enumeration for the desired state and removing the <span class="NDLSystemFont">D3DRS_</span> from it. For example, <span class="NDLSystemFont">D3DRS_ZFUNC</span> would be identified with just <span class="NDLSystemFont">ZFUNC</span>. For most OpenGL render states, there is a direct D3D equivalent that you can use. When you set certain render states on GL-based renderers, you must also set other render states. For example, if <span class="NDLSystemFont">SRCBLEND</span> is set, <span class="NDLSystemFont">DESTBLEND</span> must also be set, and vice versa. In D3D it is valid to set only one of these, but on GL, both must be set together because they are part of one GL render state.</p>

<p>The following GL render states do not have D3D equivalents. You can use them on PS3.
 
<ul>
<li>BLENDCOLORA</li>
<li>BLENDCOLORB</li>
<li>BLENDCOLORG</li>
<li>BLENDCOLORR</li>
<li>BLENDEQUATIONSEPARATERGB</li>
<li>COLORLOGICOPENABLE</li>
<li>COLORMASKA</li>
<li>COLORMASKB</li>
<li>COLORMASKG</li>
<li>COLORMASKR</li>
<li>CULLFACE</li>
<li>CULLFACEENABLE</li>
<li>DEPTHRANGEFAR</li>
<li>DEPTHRANGENEAR</li>
<li>DSTBLENDSEPARATERGB</li>
<li>FRONTFACE</li>
<li>LINEWIDTH</li>
<li>MULTISAMPLEENABLE</li>
<li>POINTSMOOTHENABLE</li>
<li>POINTSPRITECOORDREPLACE</li>
<li>POLYGONMODEFACE</li>
<li>POLYGONOFFSETFACTOR</li>
<li>POLYGONOFFSETFILLENABLE</li>
<li>POLYGONOFFSETUNITS</li>
<li>SAMPLEALPHATOCOVERAGEENABLE</li>
<li>SAMPLEALPHATOONEENABLE</li>
<li>SAMPLECOVERAGEENABLE</li>
<li>SCISSORHEIGHT</li>
<li>SCISSORWIDTH</li>
<li>SCISSORX</li>
<li>SCISSORY</li>
<li>SRCBLENDSEPARATERGB</li>
<li>VERTEXPROGRAMPOINTSIZEENABLE</li>
</ul>

<p>In D3D10 and D3D11, individual render states cannot be set through the API. It is still possible to use the render state settings in an NSF file, though. For many render states that are supported by NSF files, an equivalent setting in a D3D10/D3D11 render state object can be set. For example, setting <span class="NDLSystemFont">ZENABLE</span> in an NSF file will set the <span class="NDLSystemFont">DepthEnable</span> field of a <span class="NDLSystemFont">D3D10_DEPTH_STENCIL_DESC</span> or <span class="NDLSystemFont">D3D11_DEPTH_STENCIL_DESC</span> structure. The following additional states refer only to D3D10/D3D11:</p>

<ul>
<li>ALPHABLENDENABLE1</li>
<li>ALPHABLENDENABLE2</li>
<li>ALPHABLENDENABLE3</li>
<li>ALPHABLENDENABLE4</li>
<li>ALPHABLENDENABLE5</li>
<li>ALPHABLENDENABLE6</li>
<li>ALPHABLENDENABLE7</li>
<li>COLORWRITEENABLE4</li>
<li>COLORWRITEENABLE5</li>
<li>COLORWRITEENABLE6</li>
<li>COLORWRITEENABLE7</li>
<li>DEPTHBIASCLAMP</li>
<li>FRONTCCW</li>

<li>INDEPENDENTBLENDENABLE (D3D11 only) </li>
<li>SRCBLEND1 (D3D11 only) </li>
<li>SRCBLEND2 (D3D11 only) </li>
<li>SRCBLEND3 (D3D11 only) </li>
<li>SRCBLEND4 (D3D11 only) </li>
<li>SRCBLEND5 (D3D11 only) </li>
<li>SRCBLEND6 (D3D11 only) </li>
<li>SRCBLEND7 (D3D11 only) </li>
<li>DESTBLEND1 (D3D11 only) </li>
<li>DESTBLEND2 (D3D11 only) </li>
<li>DESTBLEND3 (D3D11 only) </li>
<li>DESTBLEND4 (D3D11 only) </li>
<li>DESTBLEND5 (D3D11 only) </li>
<li>DESTBLEND6 (D3D11 only) </li>
<li>DESTBLEND7 (D3D11 only) </li>
<li>BLENDOP1 (D3D11 only) </li>
<li>BLENDOP2 (D3D11 only) </li>
<li>BLENDOP3 (D3D11 only) </li>
<li>BLENDOP4 (D3D11 only) </li>
<li>BLENDOP5 (D3D11 only) </li>
<li>BLENDOP6 (D3D11 only) </li>
<li>BLENDOP7 (D3D11 only) </li>
<li>SRCBLENDALPHA1 (D3D11 only) </li>
<li>SRCBLENDALPHA2 (D3D11 only) </li>
<li>SRCBLENDALPHA3 (D3D11 only) </li>
<li>SRCBLENDALPHA4 (D3D11 only) </li>
<li>SRCBLENDALPHA5 (D3D11 only) </li>
<li>SRCBLENDALPHA6 (D3D11 only) </li>
<li>SRCBLENDALPHA7 (D3D11 only) </li>
<li>DESTBLENDALPHA1 (D3D11 only) </li>
<li>DESTBLENDALPHA2 (D3D11 only) </li>
<li>DESTBLENDALPHA3 (D3D11 only) </li>
<li>DESTBLENDALPHA4 (D3D11 only) </li>
<li>DESTBLENDALPHA5 (D3D11 only) </li>
<li>DESTBLENDALPHA6 (D3D11 only) </li>
<li>DESTBLENDALPHA7 (D3D11 only) </li>
<li>BLENDOPALPHA1 (D3D11 only) </li>
<li>BLENDOPALPHA2 (D3D11 only) </li>
<li>BLENDOPALPHA3 (D3D11 only) </li>
<li>BLENDOPALPHA4 (D3D11 only) </li>
<li>BLENDOPALPHA5 (D3D11 only) </li>
<li>BLENDOPALPHA6 (D3D11 only) </li>
<li>BLENDOPALPHA7 (D3D11 only) </li>

</ul>

<p><span class="NDLSystemFont">Value</span> is the value that you want to assign to the render state. This value can actually be one of several types, depending on the state you are setting:</p> 

<ul>
<li>If the state expects a Boolean argument, such as <span class="NDLSystemFont">D3DRS_ALPHABLENDENABLE</span>, then you would simply put "true" or "false" as the value, without the quotes.</li>
<li>If the state expects a <span class="NDLSystemFont">DWORD</span> argument, such as <span class="NDLSystemFont">D3DRS_ALPHAREF</span>, you can type it as either an integer or a hexadecimal value (must follow the form 0x########).</li>
<li>If the state expects a float argument, such as <span class="NDLSystemFont">D3DRS_FOGSTART</span>, you would then put the actual float data, such as 0.5. Do not include a trailing "f" character after the float and make sure the floating point values include a decimal but do not start with the decimal.</li>
</ul>

<p>Finally, if the state expects a value of an enumerated type, you would use one of the following mappings:</p>

<p>For the <span class="NDLSystemFont">D3DRS_ZFUNC</span>, <span class="NDLSystemFont">D3DRS_ALPHAFUNC</span>, <span class="NDLSystemFont">D3DRS_STENCILFUNC</span>, and <span class="NDLSystemFont">D3DRS_CCW_STENCILFUNC</span> states:</p>

<table>
	<thead>
  	<tr>
			<th>Compare Function String</th>
			<th>D3D Mapping</th>
		</tr>
	</thead>
	<tbody>
		<tr>
    	<td>NEVER</td>
			<td>D3DCMP_NEVER</td>
		</tr>
    <tr>
			<td>LESS</td>
			<td>D3DCMP_LESS</td>
		</tr>
		<tr>
			<td>EQUAL</td>
			<td>D3DCMP_EQUAL</td>
		</tr>
		<tr>
    	<td>LESSEQUAL</td>
    	<td>D3DCMP_LESSEQUAL</td>
		</tr>
    <tr>
			<td>GREATER</td>
			<td>D3DCMP_GREATER</td>
		</tr>
		<tr>
			<td>NOTEQUAL</td>
			<td>D3DCMP_NOTEQUAL</td>
		</tr>
    <tr>
			<td>GREATEREQUAL</td>
			<td>D3DCMP_GREATEREQUAL</td>
		</tr>
		<tr>
			<td>ALWAYS</td>
			<td>D3DCMP_ALWAYS</td>
		</tr>
	</tbody>	
</table>

<p>For the <span class="NDLSystemFont">D3DRS_SRCBLEND</span>, <span class="NDLSystemFont">D3DRS_DESTBLEND</span>, <span class="NDLSystemFont">D3DRS_SRCBLENDALPHA</span>, and <span class="NDLSystemFont">D3DRS_DESTBLENDALPHA</span> states, as well as the <span class="NDLSystemFont">SRCBLENDSEPARATERGB</span> and<span class="NDLSystemFont">DSTBLENDSEPARATERGB</span> GL states:</p>

<table>
	<thead>
  	<tr>
			<th>Blend String</th>
			<th>D3D Mapping</th>
		</tr>
	</thead>
	<tbody>
		<tr>
    	<td>ZERO</td>
			<td>D3DBLEND_ZERO</td>
		</tr>
    <tr>
			<td>ONE</td>
			<td>D3DBLEND_ONE</td>
		</tr>
		<tr>
			<td>SRCCOLOR</td>
			<td>D3DBLEND_SRCCOLOR</td>
		</tr>
		<tr>
    	<td>INVSRCCOLOR</td>
			<td>D3DBLEND_INVSRCCOLOR</td>
		</tr>
    <tr>
			<td>SRCALPHA</td>
			<td>D3DBLEND_SRCALPHA</td>
		</tr>
		<tr>
			<td>INVSRCALPHA</td>
			<td>D3DBLEND_INVSRCALPHA</td>
		</tr>
    <tr>
			<td>DESTALPHA</td>
			<td>D3DBLEND_DESTALPHA</td>
		</tr>
		<tr>
			<td>INVDESTALPHA</td>
			<td>D3DBLEND_INVDESTALPHA</td>
		</tr>
		<tr>
    	<td>DESTCOLOR</td>
			<td>D3DBLEND_DESTCOLOR</td>
		</tr>
    <tr>
			<td>INVDESTCOLOR</td>
			<td>D3DBLEND_INVDESTCOLOR</td>
		</tr>
		<tr>
			<td>SRCALPHASAT</td>
			<td>D3DBLEND_SRCALPHASAT</td>
		</tr>
		<tr>
    	<td>BOTHSRCALPHA</td>
			<td>D3DBLEND_BOTHSRCALPHA (DX9 Only)</td>
		</tr>
    <tr>
			<td>BOTHINVSRCALPHA</td>
			<td>D3DBLEND_BOTHINVSRCALPHA (DX9 Only)</td>
		</tr>
		<tr>
			<td>CONSTANTCOLOR<br>BLENDFACTOR</td>
			<td>D3DBLEND_BLENDFACTOR </td>
		</tr>
    <tr>
			<td>CONSTANTCOLOR<br>INVBLENDFACTOR</td>
			<td>D3DBLEND_INVBLENDFACTOR</td>
		</tr>
		<tr>
			<td>CONSTANTALPHA</td>
			<td>D3DBLEND_CONSTANTALPHA</td>
		</tr>
		<tr>
    	<td>INVCONSTANTALPHA</td>
			<td>D3DBLEND_INVCONSTANTALPHA</td>
		</tr>
    <tr>
			<td>SRC1_COLOR</td>
			<td>D3D10_SRC1_COLOR (D3D10 only) / D3D11_SRC1_COLOR (D3D11 only)</td>
		</tr>
		<tr>
			<td>INV_SRC1_COLOR</td>
			<td>D3D10_INV_SRC1_COLOR (D3D10 only) / D3D11_INV_SRC1_COLOR (D3D11 only)</td>
		</tr>
		<tr>
    	<td>SRC1_ALPHA</td>
			<td>D3D10_SRC1_ALPHA (D3D10 only) / D3D11_SRC1_ALPHA (D3D11 only)</td>
		</tr>
    <tr>
			<td>INV_SRC1_ALPHA</td>
			<td>D3D10_INV_SRC1_ALPHA (D3D10 only) / D3D11_INV_SRC1_ALPHA (D3D11 only)</td>
		</tr>
	</tbody>	
</table>

<p>For the <span class="NDLSystemFont">D3DRS_SHADEMODE</span> state (DX9 only):</p>

<table>
	<thead>
  	<tr>
			<th>Shade Mode String</th>
			<th>D3D Mapping</th>
		</tr>
	</thead>
	<tbody>
		<tr>
    	<td>FLAT</td>
			<td>D3DSHADE_FLAT</td>
		</tr>
    <tr>
			<td>GOURAUD</td>
			<td>D3DSHADE_GOURAUD</td>
		</tr>
		<tr>
			<td>PHONG</td>
			<td>D3DSHADE_PHONG</td>
		</tr>
	</tbody>	
</table>

<p>For the <span class="NDLSystemFont">D3DRS_STENCILZFAIL</span>, <span class="NDLSystemFont">D3DRS_STENCILPASS</span>, <span class="NDLSystemFont">D3DRS_STENCILFAIL</span>, <span class="NDLSystemFont">D3DRS_CCW_STENCILFAIL</span>, <span class="NDLSystemFont">D3DRS_CCW_STENCILZFAIL</span>, and <span class="NDLSystemFont">D3DRS_CCW_STENCILPASS</span> states:</p>

<table>
	<thead>
  	<tr>
			<th>Blend String</th>
			<th>D3D Mapping</th>
		</tr>
	</thead>
	<tbody>
		<tr>
    	<td>KEEP</td>
    	<td>D3DSTENCILOP_KEEP</td>
		</tr>
    <tr>
			<td>ZERO</td>
			<td>D3DSTENCILOP_ZERO</td>
		</tr>
		<tr>
			<td>REPLACE</td>
			<td>D3DSTENCILOP_REPLACE</td>
		</tr>
		<tr>
    	<td>INCRSAT</td>
    	<td>D3DSTENCILOP_INCRSAT</td>
		</tr>
    <tr>
			<td>DECRSAT</td>
			<td>D3DSTENCILOP_DECRSAT</td>
		</tr>
		<tr>
			<td>INVERT</td>
			<td>D3DSTENCILOP_INVERT</td>
		</tr>
    <tr>
			<td>INCR</td>
			<td>D3DSTENCILOP_INCR</td>
		</tr>
		<tr>
			<td>DECR</td>
			<td>D3DSTENCILOP_DECR</td>
		</tr>
	</tbody>	
</table>

<p>For the <span class="NDLSystemFont">D3DRS_BLENDOP</span> and <span class="NDLSystemFont">D3DRS_BLENDOPALPHA</span> states, as well as the <span class="NDLSystemFont">BLENDEQUATIONSEPARATERGB</span> GL state:</p>

<table>
	<thead>
  	<tr>
			<th>Blend Operation String</th>
			<th>D3D Mapping</th>
		</tr>
	</thead>
	<tbody>
		<tr>
    	<td>D3DBLENDOP_ADD</td>
    	<td>ADD</td>
		</tr>
    <tr>
			<td>SUBTRACT</td>
			<td>D3DBLENDOP_SUBTRACT</td>
		</tr>
		<tr>
			<td>REVSUBTRACT</td>
			<td>D3DBLENDOP_REVSUBTRACT</td>
		</tr>
		<tr>
    	<td>MIN</td>
    	<td>D3DBLENDOP_MIN</td>
		</tr>
    <tr>
			<td>MAX</td>
			<td>D3DBLENDOP_MAX</td>
		</tr>
	</tbody>	
</table>

<p>For the <span class="NDLSystemFont">D3DRS_FOGTABLEMODE</span> and <span class="NDLSystemFont">D3DRS_FOGVERTEXMODE</span> states (DX9 only):</p>

<table>
	<thead>
  	<tr>
			<th>FogMode String</th>
			<th>D3D Mapping</th>
		</tr>
	</thead>
	<tbody>
		<tr>
    	<td>D3DFOG_NONE</td>
    	<td>NONE</td>
		</tr>
    <tr>
			<td>EXP</td>
			<td>D3DFOG_EXP</td>
		</tr>
		<tr>
			<td>EXP2</td>
			<td>D3DFOG_EXP2</td>
		</tr>
		<tr>
    	<td>LINEAR</td>
    	<td>D3DFOG_LINEAR</td>
		</tr>
	</tbody>	
</table>

<p>For the <span class="NDLSystemFont">D3DRS_WRAP#</span> states:</p>

<table>
	<thead>
  	<tr>
			<th>Wrap String</th>
			<th>D3D Mapping</th>
		</tr>
	</thead>
	<tbody>
		<tr>
    	<td>DISABLED</td>
			<td>D3DWRAP_DISABLED</td>
		</tr>
    <tr>
			<td>U</td>
			<td>D3DWRAP_U</td>
		</tr>
		<tr>
			<td>V</td>
			<td>D3DWRAP_V</td>
		</tr>
		<tr>
    	<td>W</td>
			<td>D3DWRAP_W</td>
		</tr>
    <tr>
			<td>UV</td>
			<td>D3DWRAP_U | D3DWRAP_V </td>
		</tr>
		<tr>
			<td>UW</td>
			<td>D3DWRAP_U | D3DWRAP_W</td>
		</tr>
    <tr>
			<td>VW</td>
			<td>D3DWRAP_V | D3DWRAP_W</td>
		</tr>
		<tr>
			<td>UVW</td>
			<td>D3DWRAP_U | D3DWRAP_V | D3DWRAP_W</td>
		</tr>
	</tbody>	
</table>

<p>For the <span class="NDLSystemFont">D3DRS_AMBIENTMATERIALSOURCE</span>, <span class="NDLSystemFont">D3DRS_DIFFUSEMATERIALSOURCE</span>, <span class="NDLSystemFont">D3DRS_SPECULARMATERIALSOURCE</span>, and <span class="">D3DRS_EMISSIVEMATERIALSOURCE</span>, states (DX9 only):</p>

<table>
	<thead>
  	<tr>
			<th>Material Source String</th>
			<th>D3D Mapping</th>
		</tr>
	</thead>
	<tbody>
		<tr>
    	<td>MATERIAL</td>
    	<td>D3DMSC_MATERIAL</td>
		</tr>
    <tr>
			<td>COLOR</td>
			<td>D3DMSC_COLOR</td>
		</tr>
		<tr>
			<td>COLOR2</td>
			<td>D3DMSC_COLOR2</td>
		</tr>
	</tbody>	
</table>

<p>For the <span class="NDLSystemFont">D3DRS_PATCHEDGESTYLE</span> state:</p>

<table>
	<thead>
  	<tr>
			<th>Patch Edge Style String</th>
			<th>D3D Mapping</th>
		</tr>
	</thead>
	<tbody>
		<tr>
    	<td>DISCRETE</td>
    	<td>D3DPATCHEDGE_DISCRETE</td>
		</tr>
    <tr>
			<td>CONTINUOUS</td>
			<td>D3DPATCHEDGE_CONTINUOUS</td>
		</tr>
	</tbody>	
</table>

<p>For the <span class="NDLSystemFont">D3DRS_VERTEXBLEND</span> state (DX9 only):</p>

<table>
	<thead>
  	<tr>
			<th>Vertex Blend String</th>
			<th>D3D Mapping</th>
		</tr>
	</thead>
	<tbody>
		<tr>
    	<td>DISABLE</td>
    	<td>D3DVBF_DISABLE</td>
		</tr>
    <tr>
			<td>1WEIGHTS</td>
			<td>D3DVBF_1WEIGHTS</td>
		</tr>
		<tr>
			<td>2WEIGHTS</td>
			<td>D3DVBF_2WEIGHTS</td>
		</tr>
		<tr>
    	<td>3WEIGHTS</td>
    	<td>D3DVBF_3WEIGHTS</td>
		</tr>
    <tr>
			<td>TWEENING</td>
			<td>D3DVBF_TWEENING</td>
		</tr>
		<tr>
			<td>0WEIGHTS</td>
			<td>D3DVBF_0WEIGHTS</td>
		</tr>
	</tbody>	
</table>

<p>For the <span class="NDLSystemFont">D3DRS_FILLMODE</span> state:</p>

<table>
	<thead>
  	<tr>
			<th>Fill Mode String</th>
			<th>D3D Mapping</th>
		</tr>
	</thead>
	<tbody>
		<tr>
    	<td>POINT</td>
    	<td>D3DFILL_POINT</td>
		</tr>
    <tr>
			<td>WIREFRAME</td>
			<td>D3DFILL_WIREFRAME</td>
		</tr>
		<tr>
			<td>SOLID</td>
			<td>D3DFILL_SOLID</td>
		</tr>
	</tbody>	
</table>

<p>For the <span class="NDLSystemFont">D3DRS_ZENABLE</span> state:</p>

<table>
	<thead>
  	<tr>
			<th>Z Enable String</th>
			<th>D3D Mapping</th>
		</tr>
	</thead>
	<tbody>
		<tr>
    	<td>ZB_FALSE</td>
    	<td>D3DZB_ZB_FALSE</td>
		</tr>
    <tr>
			<td>ZB_TRUE</td>
			<td>D3DZB_ZB_TRUE</td>
		</tr>
		<tr>
			<td>ZB_USEW</td>
			<td>D3DZB_ZB_USEW</td>
		</tr>
	</tbody>	
</table>

<p>For the <span class="NDLSystemFont">D3DRS_CULLMODE</span> and the GL <span class="NDLSystemFont">FRONTFACE</span> states:</p>

<table>
	<thead>
  	<tr>
			<th>Cull Mode String</th>
			<th>D3D Mapping</th>
		</tr>
	</thead>
	<tbody>
		<tr>
    	<td>NONE</td>
    	<td>D3DCULL_NONE</td>
		</tr>
    <tr>
			<td>CW</td>
			<td>D3DCULL_CW</td>
		</tr>
		<tr>
			<td>CCW</td>
			<td>D3DCULL_CCW</td>
		</tr>
	</tbody>	
</table>

<p>For the <span class="NDLSystemFont">D3DRS_DEBUGMONITORTOKEN</span> state (DX9 Only):</p>

<table>
	<thead>
  	<tr>
			<th>Debug Monitor Token String</th>
			<th>D3D Mapping</th>
		</tr>
	</thead>
	<tbody>
		<tr>
    	<td>ENABLE</td>
			<td>D3DDMT_ENABLE</td>
		</tr>
    <tr>
			<td>DISABLE</td>
			<td>D3DDMT_DISABLE</td>
		</tr>
	</tbody>	
</table>

<p>For the <span class="NDLSystemFont">D3DRS_POSITIONDEGREE</span> and the GL <span class="NDLSystemFont">D3DRS_NORMALDEGREE</span> states:</p>

<table>
	<thead>
  	<tr>
			<th>Degree String</th>
			<th>D3D Mapping</th>
		</tr>
	</thead>
	<tbody>
		<tr>
    	<td>LINEAR</td>
    	<td>D3DDEGREE_LINEAR</td>
		</tr>
    <tr>
			<td>QUADRATIC</td>
			<td>D3DDEGREE_QUADRATIC</td>
		</tr>
		<tr>
			<td>CUBIC</td>
			<td>D3DDEGREE_CUBIC</td>
		</tr>
	</tbody>	
</table>

<p>For the <span class="NDLSystemFont">D3DRS_TESSELLATIONMODE</span> state (DX9 Only):</p>

<table>
	<thead>
  	<tr>
			<th>Tessellation Mode String</th>
			<th>D3D Mapping</th>
		</tr>
	</thead>
	<tbody>
		<tr>
    	<td>DISCRETE</td>
    	<td>D3DTM_DISCRETE</td>
		</tr>
    <tr>
			<td>CONTINUOUS</td>
			<td>D3DTM_CONTINUOUS</td>
		</tr>
    <tr>
			<td>PEREDGE</td>
			<td>D3DTM_PEREDGE</td>
		</tr>
	</tbody>	
</table>

<p>For the GL <span class="NDLSystemFont">CULLFACE</span> and <span class="NDLSystemFont">POLYGONMODEFACE</span> states:</p>

<table>
	<thead>
  	<tr>
			<th>FACE String</th>
			<th>D3D Mapping</th>
		</tr>
	</thead>
	<tbody>
		<tr>
    	<td>FRONT</td>
			<td>GL_FRONT</td>
		</tr>
    <tr>
			<td>BACK</td>
			<td>GL_BACK</td>
		</tr>
		<tr>
			<td>FRONT_AND_BACK</td>
			<td>GL_FRONT_AND_BACK</td>
		</tr>
	</tbody>	
</table>

<h2>RenderState Example</h2>

<p>The following NSF snippet defines a render state collection for an implementation, setting lighting to false, turning off alpha blending, and setting the Z-buffer mode to both test and write the depth buffer:</p>

<pre>
RenderStates

{

    Lighting         = false

    AlphaBlendEnable = false

    ZEnable          = ZB_True

    ZWriteEnable     = true

}
</pre>


<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
<li><a href="../../Reference/NiD3D10Renderer/Render_State_Management_in_the_NiD3D10Renderer.htm">Render State Management in the NiD3D10Renderer</a></li>
<li><a href="../../Reference/NiD3D10Renderer/Introduction_to_the_D3D10Renderer.htm">Introduction to the NiD3D10Renderer</a></li>
<li><a href="../../Reference/ecrD3D11Renderer/Render_State_Management_in_the_D3D11Renderer.htm">Render State Management in the ecr::D3D11Renderer</a></li>
<li><a href="../../Reference/ecrD3D11Renderer/Introduction_to_the_D3D11Renderer.htm">Introduction to the ecr::D3D11Renderer</a></li>
</ul>


<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

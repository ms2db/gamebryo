<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Stream Output Buffers</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Stream Output Buffers</h1>

<p>If a shader will make use of stream output, it must 
 declare the buffers beforehand. Each buffer will have a name and a description 
 of the buffer. The name is used to hook up the correct data stream on 
 the mesh with the stream output from the shader, and must be unique per 
 shader.</p>

<p>The stream output buffer is specified like this:</p>

<pre>
StreamOutBuffer MyBuffer1
{
    MaxVertexCount = &lt;VertCount&gt;
    OutputPrimType = &lt;PrimType&gt;
    VertexFormat
    {
        [Stream out buffer entry]
        ...
  }
}
</pre>

<p>Where:</p>

<ul>
	
	<li><span class="NDLSystemFont">&lt;VertCount&gt;</span> 
 is the maximum vertex count for the buffer.</li>
	
	<li><span class="NDLSystemFont">&lt;PrimType&gt;</span> 
 is the primitive type that may be used to render the buffer at some point: 
 either <span class="NDLSystemFont">"point"</span>, <span class="NDLSystemFont">"line"</span>, 
 or <span class="NDLSystemFont">"triangle"</span>.</li>
</ul>

<p>Each stream out buffer entry must be in the following 
 format:</p>


 

<p><span class="NDLSystemFont">&lt;ComponentType&gt; &lt;ComponentCount&gt; "Semantic" : &lt;SemanticIndex&gt; ;</span></p>

<p>Where:</p>

<ul>
	
	<li><span class="NDLSystemFont">&lt;ComponentCount&gt;</span> 
 is the type: either <span class="NDLSystemFont">"float"</span>, 
 <span class="NDLSystemFont">"int"</span>, or <span class="NDLSystemFont">"uint"</span>.</li>
	
	<li><span class="NDLSystemFont">&lt;ComponentCount&gt;</span> 
 is an integer representing the number of components in the parameter (e.g. 
 3 for a float3 parameter).</li>
	
	<li><span class="NDLSystemFont">"Semantic"</span> 
 is a string naming the <span class="NDLSystemFont"><a href="../../Reference/NiMesh/NiDataStreamElement.htm">NiDataStreamElement</a></span> 
 data (e.g. "FURLENGTH").</li>
	
	<li><span class="NDLSystemFont">&lt;SemanticIndex&gt;</span> 
 is an integer representing the index of the <span class="NDLSystemFont"><a 
 href="../../Reference/NiMesh/NiDataStreamElement.htm">NiDataStreamElement</a></span> 
 data (e.g. 0 for FURLENGTH0).</li>
	
	<li>:, @, and ; are the 
 actual literals <b>:</b>
, <b>@</b>
, 
 and <b>;</b>
</li>
</ul>

<h2>Stream Out Buffer Example</h2>

<p>The following NSF snippet defines a semantic adapter 
 table for an implementation:</p>

<pre>
StreamOutBuffer MyBuffer1
{
    MaxVertexCount = 4096   
    OutputPrimType = point
    VertexFormat
    {
        float 4 "SV_POSITION" : 0 ;  
        float 3 "TEXCOORD"    : 0 ;
        float 2 "TEXCOORD"    : 1 ;
        uint  4 "COLOR"       : 0 ;
    }
}
</pre>
 
<p>This table describes MyBuffer1, which will be rendered 
 as individual points and which will have no more than 4096 vertices. Each 
 vertex contains:</p>

<ul>
	
	<li>One float4 entry with 
 the semantic SV_POSITION.</li>
	
	<li>One float3 entry with 
 the semantic TEXCOORD0.</li>
	
	<li>One float2 entry with 
 the semantic TEXCOORD0.</li>
	
	<li>One uint4 entry with 
 the semantic COLOR0.</li>
</ul>

<p>The <a href="../../Learn/Demos/DolphinTweenEffect.htm">ShaderSample</a> 
 demo also demonstrates the use of stream-out buffers using a NSF in its 
 StreamOutTestEffect effect.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

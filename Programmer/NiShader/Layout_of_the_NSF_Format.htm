<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Layout of the NSF Format</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Layout of the NSF Format</h1>

<p>The following is the general layout required for NSF 
 files. Each section will be detailed in the sections that follow.</p>

<p>Each shader must be assigned a name in the NSF file. 
 That name is used to identify that shader at runtime, so it should be 
 unique from all the other shaders than an application may use. The name 
 also serves as the name of the NSB file that will be generated from the 
 NSF Parser library.</p>

<p>Many sections are optional, so a complete NSF file will 
 not necessarily include all the components listed here.</p>

<p>Unless otherwise indicated in the section description, 
 each section should only be included one time in its scope. The parser 
 will not generate an error when it encounters a section multiple times 
 in the same scope, but this behavior could lead to behavioral problems, 
 and it may not be supported in future versions of the engine.</p>
 
<pre>
// COMMENTS: Keep in mind, when the NSF file is parsed, NameOfShader is the name
// of the NSB file written out: ie, NameOfShader.NSB.
NSFShader NameOfShader
{
    // Optional description string which is displayed in the art tools
    "This is an optional description string.\nIt will be displayed to the
    artists."
 
    // OPTIONAL block(s) of user-defined data. These allow developers
    // to extend the NSF format without messing with the lex/grammar
    // files.
    UserDefinedData NameOfUDDBlock
    {
        ... Data entries
    }
    UserDefinedData NameOfUDDBlock2
    {
        ... Data entries
    }
 
    // Optional Objects section - can only have one
    Objects
    {
        // Object definitions
        // Refer to the section on objects.
    }
 
    // Global attribute list can only have one
    Global_Attributes
    {
        // These are global attributes the shader utilizes
        // Refer to the section on attributes.
    }
 
    // Per-object attribute list can only have one
    Attributes
    {
        // These are per-object attributes the shader utilizes
        // Refer to the section on attributes.
    }
 
    // Stream-output buffers
    // There can be multiple buffers defined in a single shader, and
    // they can be used simultaneously or in consecutive rendering passes.
    // First buffer
    StreamOutBuffer NameOfBuffer0
    {
    }
    ...
    // nth buffer
    StreamOutBuffer NameOfBufferN
    {
    }
 
    // Implementations come next
    // There can be multiple implementations defined in a single shader.
    // This allows for fallback methods to be implemented for older hardware.
    // First implementation
    Implementation NameOfImplementation0
    {
    }
    ...
    // nth implementation
    Implementation NameOfImplementationN
    {
    }
}
</pre> 
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiBinaryShaderLib</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>NiBinaryShaderLib</h1>

<p>The <span class="NDLSystemFont">NiBinaryShaderLib</span> implements 
 a shader library collection that will expose any valid NSB files loaded
 by the <span class="NDLSystemFont">NSBShaderLib</span> to the application and/or tool 
 chain via the shader factory interface. An application should refer to this 
    library as &quot;NiBinaryShaderLib&quot; when calling 
    <span class="NDLSystemFont">NiShaderFactory::LoadAndRegisterShaderLibrary</span>.</p>

<p>One of the library's essential components is the <span 
 class="NDLSystemFont"><a href="../../Reference/NiBinaryShaderLib/NiBinaryShader.htm">NiBinaryShader</a></span> class. 
 This class derives from <span class="NDLSystemFont"><a HREF="../../Reference/NiDX9Renderer/NiD3DShader.htm">NiD3DShader</a></span>, 
 and provides a completely data-driven system for utilizing shaders in 
 your application. The shader constants to be used with the shader 
 can come from one of several sources. They can be variables described 
 per object or on a global scale, or they can be constant. They can even come 
 from a set of pre-defined Gamebryo values that represent useful rendering 
 data. More detail on these shader constant types can be found in the <span 
 class="NDLSystemFont"><a HREF="../../Reference/NiMain/NiShaderConstantMapEntry.htm">NiShaderConstantMapEntry</a></span> reference.</p>

 

<p>The library consists primarily of a single interface 
 function that will search for all NSB files in a given directory (optionally 
 recursing any sub-folders found), and register those NSB files with the shader 
 library. When the factory requests a given shader from the library, it 
 will check the list of loaded shaders, and generate and return an
 <a href="../../Reference/NiBinaryShaderLib/NiBinaryShader.htm"><span class="NDLSystemFont">NiBinaryShader</span></a>
 instance for it, or an
 <a href="../../Reference/NiD3D10BinaryShaderLib/NiD3D10BinaryShader.htm"><span class="NDLSystemFont">NiD3D10BinaryShader</span></a>
 instance in the case of a D3D10 application.</p>

<p>The library will preload all NSB files that it finds in a specified
 directory (but not its subdirectories, by default).</p>
 
 <h3>D3D10</h3>

<p>D3D10 applications should use the <span 
 class="NDLSystemFont"><a HREF="../../Reference/NiD3D10BinaryShaderLib/Introduction.htm">NiD3D10BinaryShaderLib</a></span> library, 
 the equivalent to <span class="NDLSystemFont">NiBinaryShaderLib</span> for D3D10. An application should refer to this 
    library as &quot;NiD3D10BinaryShaderLib&quot; when calling 
    <span class="NDLSystemFont">NiShaderFactory::LoadAndRegisterShaderLibrary</span>.</p>

<p>The <span 
 class="NDLSystemFont"><a HREF="../../Reference/NiD3D10BinaryShaderLib/Introduction.htm">NiD3D10BinaryShaderLib</a></span> library's essential component is the <span 
 class="NDLSystemFont"><a href="../../Reference/NiD3D10BinaryShaderLib/NiD3D10BinaryShader.htm">NiD3D10BinaryShader</a></span> class. This class derives from <span class="NDLSystemFont"><a HREF="../../Reference/NiD3D10Renderer/NiD3D10Shader.htm">NiD3D10Shader</a></span>, and provides a completely data-driven system for utilizing shaders in your D3D10 application.</p>

<p>As a convenience, the <span 
 class="NDLSystemFont"><a href="../../Reference/NiD3D10BinaryShaderLib/Introduction.htm">NiD3D10BinaryShaderLib</a></span> library sets flags to allow shader programs to compile even if the NSF file specifies that they should be compiled using a shader models earlier than 4.0.</p>

 <h3>D3D11</h3>

<p>D3D11 applications should use the <span 
 class="NDLSystemFont"><a HREF="../../Reference/ecrD3D11BinaryShaderLib/Introduction_to_ecrD3D11BinaryShaderLib_Class_Reference.htm">ecrD3D11BinaryShaderLib</a></span> library, 
 the equivalent to <span class="NDLSystemFont">NiBinaryShaderLib</span> for D3D11. An application should refer to this 
    library as &quot;ecrD3D11BinaryShaderLib&quot; when calling 
    <span class="NDLSystemFont">NiShaderFactory::LoadAndRegisterShaderLibrary</span>.</p>

<p>The <span 
 class="NDLSystemFont"><a HREF="../../Reference/ecrD3D11BinaryShaderLib/Introduction_to_ecrD3D11BinaryShaderLib_Class_Reference.htm">ecr::D3D11BinaryShaderLib</a></span> library's essential component is the <span 
 class="NDLSystemFont"><a href="../../Reference/ecrD3D11BinaryShaderLib/ecr__D3D11BinaryShader.htm">ecr::D3D11BinaryShader</a></span> class. This class derives from <span class="NDLSystemFont"><a HREF="../../Reference/ecrD3D11Renderer/ecr__D3D11Shader.htm">ecr::D3D11Shader</a></span>, and provides a completely data-driven system for utilizing shaders in your D3D10 application.</p>

<h3>PS3</h3>

<p>PS3 applications should use the <span class="NDLSystemFont"><a href="../../ee_goto.htm#Reference/NiPS3BinaryShaderLib/Introduction_to_NiPS3BinaryShaderLib.htm">
NiPS3BinaryShaderLib</a></span> the equivalent to <span class="NDLSystemFont">NiBinaryShaderLib</span> for PS3.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

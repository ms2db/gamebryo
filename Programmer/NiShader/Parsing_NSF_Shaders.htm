<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Parsing NSF Shaders</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Parsing NSF Shaders</h1>

<p>NSF files cannot be used directly as shaders at runtime. 
 They must be parsed into NSB files that represent the binary version of 
 the shader. It is up to the application designer when this is done. For 
 development purposes, it is very convenient to parse the NSF files at 
 runtime to include any changes made in those NSF files. In this way, developers 
 can dynamically test the effects of changes in render state or constant 
 setup.</p>

<p>For released projects, it is recommended that the NSF 
 files be parsed in advance into NSB files. This operation can be performed 
 offline with the <a href="../../Tools/NSFParserUtility/NSFParserUtility_Intro.htm">NSFParserUtility</a> 
 found in <em>%EMERGENT_PATH%</em>\Source\Tools\DeveloperTools\NSFParserUtility. Preprocessing of NSF files 
 is recommended for two reasons. First, there is a runtime expense associated 
 with parsing the files. While small, it is a good practice to try and 
 perform as much preprocessing as possible. Second, and more importantly, 
 users could modify NSF files that were not preprocessed and change the 
 behavior of the application. Such changes could result in undesirable 
 behavior or performance problems at runtime that may reflect poorly on 
 an application.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Terrain Assets</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Fresnel" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

  <h1>
    Terrain Assets
  </h1>
  <p>
    The following subsections describe the assets that are related to the Terrain library
    within the asset web.
  </p>
  <h2>
    Terrain Asset
  </h2>
  <p>
    Terrain assets are tagged with the 'gamebryo-terrain' tag by the asset tagger utility
    and have the extension '.terrain'. Whilst within these asset files the basic configuration
    information of a terrain asset are maintained, another important property of the
    terrain asset is its location on disk. The directory of the terrain asset is determined
    to be the 'Terrain archive path' for use in the underlying NiTerrain library. This
    directory is then used to locate associated sector assets for the terrain without
    them being referenced directly through their AssetIDs.
  </p>
  <p>
    For information on the data contained within the terrain asset file, please consult
    the <span class="NDLSystemFont">
    <a href="../../Reference/NiTerrain/Introduction_to_NiTerrain_Class_Reference.htm">NiTerrain</a></span> library documentation's section on 
    <a href="../NiTerrain/NiTerrain_Storage.htm">storage</a>.
  </p>
  <h2>
    Terrain Sector Assets
  </h2>
  <p>
    Terrain sector assets are tagged with the 'gamebryo-terrain-sector' tag by the asset
    tagger utility and have the extension '.dof'. Generally these assets are not directly
    referenced by other assets, instead their filenames are generated and loaded through
    the overarching terrain asset that exists within the same directory.
  </p>
  <p>
    For information on the data contained within the terrain sector asset file, please
    consult the <span class="NDLSystemFont">
    <a href="../../Reference/NiTerrain/NiTerrain.htm">NiTerrain</a></span> library documentation's section on 
    <a href="../NiTerrain/NiTerrain_Storage.htm">storage</a>.
  </p>
  <h2>
    Material Packages
  </h2>
  <p>
    Terrain material packages are tagged with the 'gamebryo-terrain-materialpkg' tag
    by the asset tagger utility and have the extension '.tmpkg'. These files are generated
    by the ToolTerrainService when a request to save the contents of a particular material
    package is made.
  </p>
  <p>
    These files are an XML format that describes a list of materials, and their associated
    configuration including the set of AssetIDs to textures that make up the material's
    renderable surface definition.
  </p>
  <p>
  	A second material package file with the tag 'gamebryo-terrain-materialpkg-binary' and extension '.tmpkgb'
  	are used to store compiled versions of the textures required by the renderer when drawing terrain. Whilst
  	these files are optional, load times and memory usage are reduced when these files are made available to 
  	an application at runtime, as such, when these files are present, the original texture files are not
  	required at runtime.
  </p>
  <h2>
    Material Textures
  </h2>
  <p>
    Material textures may be any standard texture asset supported by Gamebryo. When
    loading a terrain material package, these texture assets are resolved for use by
    the terrain object that references them. Please make sure that the relevant texture
    assets are included in the asset web in release builds of an application.
  </p>
  <h2>
    Asset Tagger Configurations
  </h2>
  <p>
    The terrain engine adds support for a number of different types of assets, as such,
    in order for these assets to be successfully recognised within the asset web, the
    asset web configuration must be configured property to allow the use of terrain
    assets within your application.
  </p>
  <p>
    Whilst most of the configuration settings below are automatically applied to new
    game solutions and when migrating old asset webs to new versions, the explicit configuration
    requirements of the terrain engine are listed here for reference.
  </p>
  <h3>
    MimeTagger.ini
  </h3>
  <p>
    Within the MimeTagger.ini configuration file of the asset-web-config directory,
    the following lines are expected:
  </p>
  <p>
    Within the [MimeTagger] section:
  </p>
  <pre>
terrain=application/gamebryo-terrain
dof=application/gamebryo-terrain-sector
tmpkg=application/gamebryo-terrain-materialpkg
tmpkgb=application/gamebryo-terrain-materialpkg-binary
</pre>
  <p>
    Within the [MimeTagger.RunTime] section:
  </p>
  <pre>
=gamebryo-terrain
=gamebryo-terrain-sector
=gamebryo-terrain-materialpkg
=gamebryo-terrain-materialpkg-binary
</pre>
  <h3>
    LogicalIdTagger.ini
  </h3>
  <p>
    Within the LogicalIdTagger.ini configuration file of the asset-web-config directory,
    the following lines are expected:
  </p>
  <p>
    Within the [LogicalIdTagger.Assets] section:
  </p>
  <pre>
=gamebryo-terrain
=gamebryo-terrain-sector
=gamebryo-terrain-materialpkg
=image
</pre>

</body>
</html>

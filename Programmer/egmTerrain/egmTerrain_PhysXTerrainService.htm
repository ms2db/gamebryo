<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>PhysXTerrainService</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Fresnel" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

  <h1>
    PhysXTerrainService</h1>
  <p>
    The PhysXTerrainService allows the Game Framework to use the 
    <span class="NDLSystemFont">
    <a href="../../Reference/NiTerrainPhysX/Introduction_to_NiTerrainPhysX_Class_Reference.htm">NiTerrainPhysX</a></span> library
    through the implementation of two distinct classes:
  </p>
  <ul>
    <li>PhysXTerrainService </li>
    <ul>
      <li>Manages all the terrains that require physX data. It derives from the 
        <span class="NDLSystemFont">
        <a href="../../Reference/egmTerrain/egmTerrain__TerrainService.htm">egmTerrain::TerrainService</a></span> and defines a custom data policy for each PhysXTerrain added to 
        a scene. </li>
    </ul>
    <li>PhysXTerrainDataPolicy </li>
    <ul>
      <li>A custom data policy deriving from the default <span class="NDLSystemFont">NiTerrainPhysXDataPolicy</span> that ensurs
        a physx scene has been assigned to the associated terrain. </li>
    </ul>
  </ul>
  <p>
    In order to use PhysXTerrain in a Game Framework application, the PhysXTerrainService
    must be added:
  </p>
  <h3>
    Dependencies
  </h3>
  <p>
    The use of PhysXTerrainService requires the following prerequisites to be met:
  </p>
  <ul>
    <li>All prerequisites specified by the TerrainService. </li>
    <li><span class="NDLSystemFont">ecrPhysX::PropService</span> must be available via the service manager. </li>
    <li><span class="NDLSystemFont">egfPhysX::SceneService</span> must be available via the service manager. </li>
  </ul>
  <h2>
    The PhysX Terrain Custom Data Policy
  </h2>
  <p>
    Every custom data policy created is associated with the corresponding PhysX scene
    name. This allows created actors associated with a specific scene to be removed
    when the scene is removed.<br>
  </p>
  <p>
    Moreover this is also used to process pending loading and creation of data during
    the service tick.
  </p>
  <p>
    This custom data policy is created when initializing a PhysXTerrain model. It is
    initialized using the terrain's associated PhysX scene name and a pointer to the
    <span class="NDLSystemFont">ecrPhysX::PropService</span>. When attempting to process any data, the policy will first
    ensure the associated PhysXScene is loaded.
  </p>
  <p>
    For further information on this policy, refer to the 
    <span class="NDLSystemFont">
    <a href="../../Reference/egmPhysXTerrain/egmPhysXTerrain__PhysXTerrainDataPolicy.htm">PhysXTerrainDataPolicy</a></span> class
    reference as well as the <span class="NDLSystemFont">
    <a href="../../Reference/NiTerrainPhysX/NiTerrainPhysXDataPolicy.htm">NiTerrainPhysXDataPolicy</a></span> documentation.
  </p>
</body>
</html>

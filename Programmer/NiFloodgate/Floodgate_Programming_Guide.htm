<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Floodgate Programming Guide</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Floodgate Programming Guide</h1>

<p>The following sections provide the reader with a step-by-step 
 guide for implementing, compiling, executing, and monitoring a basic Workflow 
 consisting of two Tasks, along with the necessary Kernels to implement 
 those Tasks. This guide assumes that the reader has proficiency setting 
 up a basic Gamebryo application derived from <a href="../../Reference/NiApplication/NiApplication.htm"><span 
 class="NDLSystemFont">NiApplication</span></a>. For more information on 
 this, please see the <a href="../../Learn/Tutorials/Overview_of_Tutorials.htm">Gamebryo 
 Tutorials</a> section.</p>

<p>The first task, Task 1, will have two streams of integers 
 for input, and one stream of integers for output. The Kernel for this 
 task will take a single number from each of the input streams, add them 
 together, and place the result in the output stream.</p>

<p>The second task, Task 2, will have one stream of integers 
 for input, one fixed input, and one stream of integers for output. The 
 Kernel for this task will take a single number from the input stream and 
 scale it by the fixed value. The result of this operation is then placed 
 in the output stream. For this task we will use the output stream of the 
 first task. This will cause Task 2 to be dependent on Task 1.</p>

<ol style="list-style: decimal;"
	type=1>
	
	<li><a href="Floodgate_Setup_and_Initialization.htm">Setup 
 and Initialization</a></li>
	
	<li><a href="Floodgate_Specifying_Streams.htm">Specifying 
 Streams</a></li>
	
	<li><a href="Floodgate_Specifying_Fixed_Inputs.htm">Specifying 
 Fixed Inputs</a></li>
	
	<li><a href="Floodgate_Workflow_Creation.htm">Workflow 
 Creation</a></li>
	
	<li><a href="Floodgate_Programming_Kernels.htm">Programming 
 Kernels</a></li>
	
	<li><a href="Floodgate_Specifying_Tasks.htm">Specifying 
 Tasks</a></li>
	
	<li><a href="Floodgate_Workflow_Submission.htm">Workflow 
 Submission</a></li>
	
	<li><a href="Floodgate_Workflow_Completion_Monitoring.htm">Workflow 
 Completion Monitoring</a></li>
</ol>

<p>An overview is also provided for <a href="Floodgate_Using_the_NiSPWorkflowManager_Class.htm">using 
 the NiSPWorkflowManager class</a>, used to batch tasks in a single workflow.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

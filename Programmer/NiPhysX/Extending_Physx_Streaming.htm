<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Extending PhysX Streaming</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Build" content="PhysX" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Extending PhysX Streaming</h1>

<p>Streaming, cloning and snapshots of PhysX content all 
 use the same descriptor classes. To extend the functionality of Gamebryo-PhysX 
 streaming, an application should subclass from the most appropriate existing 
 class. For example, applications may wish to stream or clone the <span 
 class="NDLSystemFont">userData</span> from PhysX objects or features not 
 supported by the Gamebryo art tools. </p>

<p>The descriptor classes, all named <span class="NDLSystemFont">NiPhysX&lt;Object&gt;Desc</span> 
 (e.g. <span class="NDLSystemFont">NiPhysXSceneDesc</span>, not a templated 
 class) implement a common set of functionality, although the way they 
 do so varies. All these classes implement the standard Gamebryo streaming 
 and cloning functions. Other common functionality is: </p>

<ul>
	
	<li><b>Access 
 functions</b> to enable applications to set the contents of the descriptor. 
 </li>
	
	<li>If you use the <span 
 class="NDLSystemFont"><a href="../../Reference/NiPhysXTools/NiPhysXSnapshotExtractor.htm">NiPhysXSnapshotExtractor</a></span> 
 library, you might wish to add functionality to capture the extended state 
 from a PhysX scene. </li>
	
	<li>An <b>Instantiate PhysX</b> 
 function to create the PhysX content from the descriptor. For example, 
 <span class="NDLSystemFont"><a href="../../Reference/NiPhysX/NiPhysXActorDesc.htm">NiPhysXActorDesc</a></span> 
 has the <span class="NDLSystemFont">CreateActor</span> function. This functionality 
 should be invoked during a call to <span class="NDLSystemFont"><a href="../../Reference/NiPhysX/NiPhysXProp.htm">NiPhysXProp::CreateInScene</a></span> 
 function. </li>
</ul>

<p>In addition to creating new descriptor classes, the 
 existing classes will need to be extended or modified to call your new 
 functions. </p>

<p>Streaming, cloning and snapshots use the same classes, 
 so extending for one purpose can extend for another. However, if you only 
 want to extend some functionality then other functions need not be implemented. 
 For example, to extend streaming, then there is no requirement to implement 
 the cloning functions (<span class="NDLSystemFont">ProcessClone</span> etc.). 
 </p>

<p>You may also wish to implement save/restore functionality 
 accessed via <span class="NDLSystemFont"><a href="../../Reference/NiPhysX/NiPhysXScene.htm#class_ni_phys_x_scene_1e882a90495e64245712acdbbae117938">NiPhysXScene::AddSnapshotState</a></span> 
 etc. Look at <span class="NDLSystemFont"><a href="../../Reference/NiPhysX/NiPhysXActorDesc.htm">NiPhysXActorDesc</a></span> 
 for an example. </p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

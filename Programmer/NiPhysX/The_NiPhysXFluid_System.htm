<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>The NiPhysXFluid System</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Build" content="PhysX" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type=
"text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>The NiPhysXFluid System</h1>

<p>The NiPhysXFluid library is designed to take the particle data from a PhysX
fluid simulation and make it available for Gamebryo's particle system. The best
way to view the library is as a special set of particle system classes designed
to perform a few fundamental operations:</p>

<ul>
    <li>The Gamebryo scene graph object representing a fluid particle system is
    of type either <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXFluid/NiPhysXPSFluidSystem.htm">NiPhysXPSFluidSystem</a></span>
    or <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXFluid/NiPhysXPSMeshFluidSystem.htm">NiPhysXPSMeshFluidSystem</a></span>,
    for sprite and mesh based particles respectively. These classes own the
    <span class="NDLSystemFont">NxParticleData</span> objects and other buffers
    with fluid information. Their functionality is in many ways identical to a
    <span class="NDLSystemFont"><a href=
    "../../Reference/NiParticle/NiPSParticleSystem.htm">NiPSParticleSystem</a></span>
    or <span class="NDLSystemFont"><a href=
    "../../Reference/NiParticle/NiPSMeshParticleSystem.htm">NiPSMeshParticleSystem</a></span>,
    with changes to the simulation steps used to update the particles
    (naturally, these use the PhysX fluid data), modified synchronization
    points to work in a multi-thread physics environment, and flags to enable
    optimizations. Most importantly, almost any rendering controller for a
    Gamebryo particle system can be applied to a fluid system.</li>

    <li>The <a href=
    "../../Reference/NiPhysXFluid/NiPhysXFluidSimulatorStep.htm"><span class=
    "NDLSystemFont">NiPhysXFluidSimulatorStep</span></a> class, derived from
    <a href="../../Reference/NiParticle/NiPSSimulatorStep.htm"><span class=
    "NDLSystemFont">NiPSSimulatorStep</span></a>, is responsible for updating
    the Gamebryo particles from the fluid data. This simulation step must be
    present on every <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXFluid/NiPhysXPSFluidSystem.htm">NiPhysXPSFluidSystem</a></span>
    or <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXFluid/NiPhysXPSMeshFluidSystem.htm">NiPhysXPSMeshFluidSystem</a></span>
    object, but it is created when the particle system is created so
    applications do not need to create one themselves. Fluid particle systems
    also use an <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXParticle/NiPhysXPSSimulator.htm">NiPhysXPSSimulator</a></span>
    object rather than an <span class="NDLSystemFont"><a href=
    "../../Reference/NiParticle/NiPSSimulator.htm">NiPSSimulator</a></span> so
    that synchronization points are correctly set. Again, this is automatically
    managed by particle system creation functions.</li>

    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXFluid/NiPhysXFluidDest.htm">NiPhysXFluidDest</a></span>
    is created automatically by the <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXFluid/NiPhysXPSFluidSystem.htm">NiPhysXPSFluidSystem</a></span>
    or <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXFluid/NiPhysXPSMeshFluidSystem.htm">NiPhysXPSMeshFluidSystem</a></span>
    object. It ties the PhysX simulation into the particle system, and is
    responsible for particle emission and some coordinate system set-up. The
    <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXFluid/NiPhysXPSFluidEmitter.htm">NiPhysXPSFluidEmitter</a></span>
    class is provided to perform particle emission. Standard particle emitters
    must not be used with <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXFluid/NiPhysXPSFluidSystem.htm">NiPhysXPSFluidSystem</a></span>
    or <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXFluid/NiPhysXPSMeshFluidSystem.htm">NiPhysXPSMeshFluidSystem</a></span>
    objects.</li>

    <li>The following classes provide streaming, cloning and utility functions
    for managing fluid scenes:
        <ul>
            <li><a href=
            "../../Reference/NiPhysXFluid/NiPhysXFluidDesc.htm"><span class=
            "NDLSystemFont">NiPhysXFluidDesc</span></a> objects store the
            information necessary to create a <span class=
            "NDLSystemFont">NxFluid</span> object.</li>

            <li><a href=
            "../../Reference/NiPhysXFluid/NiPhysXFluidEmitterDesc.htm"><span class="NDLSystemFont">
            NiPhysXFluidEmitterDesc</span></a> objects store the information
            necessary to create a <span class=
            "NDLSystemFont">NxFluidEmitter</span> object.</li>

            <li><a href=
            "../../Reference/NiPhysXFluid/NiPhysXFluidPropDesc.htm"><span class="NDLSystemFont">
            NiPhysXFluidPropDesc</span></a> are derived from <a href=
            "../../Reference/NiPhysX/NiPhysXPropDesc.htm"><span class=
            "NDLSystemFont">NiPhysXPropDesc</span></a> and store objects of the
            above classes to describe the fluids in a prop.</li>
        </ul>
    </li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Introduction to PhysX Streaming, Cloning, and Snapshots</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Build" content="PhysX" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Introduction to PhysX Streaming, Cloning, and Snapshots</h1>

<p>Gamebryo-PhysX provides mechanisms for streaming, cloning 
 and state capture/restore for PhysX content. A common set of descriptor 
 classes provide most of this functionality. They are, in part, wrappers 
 for PhysX descriptor classes (e.g. <span class="NDLSystemFont">NiPhysXActorDesc</span> 
 objects wrap a <span class="NDLSystemFont">NxActorDesc</span> object). However, 
 they are more complete than PhysX descriptors and they provide significantly 
 enhanced functionality. </p>

<p>The following topics are discussed: </p>

<ul>
	
	<li><a href="Snapshots_and_State_Restoration.htm">Snapshots 
 and State Restoration</a> discusses the functions that support capture 
 of PhysX content for later restoration, such as if you want to reset a 
 PhysX effect to its initial conditions. </li>
	
	<li><a href="Cloning_PhysX_Content.htm">Cloning</a> 
 of PhysX content. </li>
	
	<li><a href="Loading_a_PhysX_Scene.htm">Loading 
 PhysX content</a> and preparing it for use in Gamebryo. </li>
	
	<li><a href="Saving_a_PhysX_Scene.htm">Saving 
 PhysX content</a>. </li>
	
	<li>Special considerations 
 in streaming <a href="Streaming_PhysX_Meshes_and_Materials.htm">collision 
 meshes and materials</a>. </li>
	
	<li><a href="Extending_PhysX_Streaming.htm">Extending</a> 
 the descriptor classes to support custom application content. </li>
</ul>

<p>Applications can, if desired, choose to ignore this 
 functionality and provide their own. For instance, you may wish to stream 
 PhysX content using a different format. Gamebryo-PhysX does not prevent 
 this, but we suggest that you use the Gamebryo-PhysX classes as a guide 
 to the operations that must be performed to set-up a PhysX scene after 
 loading it into Gamebryo. An alternative for custom functionality is to 
 extend the existing Gamebryo-PhysX descriptors. </p>



<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

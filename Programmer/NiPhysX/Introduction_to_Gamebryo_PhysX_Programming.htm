<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Introduction to Gamebryo-PhysX Programming</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Build" content="PhysX" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Introduction to Gamebryo-PhysX Programming </h1>

<p>The Gamebryo-PhysX Core Runtime programming interface consists of 
 a set of libraries that enable the rapid integration of the NVIDIA PhysX&trade; 
 real-time physical simulation package with Emergent's Gamebryo game engine. 
 It supports PC, PS3 and Xbox 360. It provides the following, and more: 
 </p>

<ul>
	
	<li>A runtime system to 
 manage PhysX simulations inside Gamebryo. </li>
	
	<li>Runtime classes for 
 managing the transfer of simulation-related data between Gamebryo and 
 PhysX. </li>
	
	<li>A programmable art 
 tool pipeline for integrating Gamebryo scenes and PhysX simulations. </li>
	
	<li>Support for PhysX simulations 
 of rigid bodies, fluids and particle systems, with hardware simulation 
 when available. </li>
</ul>

<p>Full access to the PhysX SDK is provided within Gamebryo, 
 allowing applications to tailor simulations to their specific needs. At 
 the same time, in the interests of efficiency, not all aspects of a PhysX 
 simulation are communicated to Gamebryo. C++ class inheritance can be 
 used to provide customized integration objects as required by an application. 
 </p>

<p>This section covers programming topics of general interest 
 to those programming with Gamebryo's Core Runtime: </p>

<ul>
	
	<li><a href="Initializing_the_PhysX_SDK.htm">Initializing 
 the PhysX SDK</a> </li>
	
	<li><a href="PhysX_Debug_Rendering.htm">PhysX 
 Debug Rendering in Gamebryo</a> </li>
	
	<li><a href="PhysX_Utility_Classes.htm">Gamebryo-PhysX 
 Utilities</a> </li>
	
	<li><a href="PhysX_Hardware_and_Gamebryo.htm">PhysX 
 Hardware and Gamebryo</a> </li>
</ul>



<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

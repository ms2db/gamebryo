<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Overview of Gamebryo-PhysX Cloth</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Build" content="PhysX" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Overview of Gamebryo-PhysX Cloth</h1>

<p>Three classes make up the run-time systems for PhysX 
 cloth in Gamebryo:</p>

<ul>
	
	<li><a href="../../Reference/NiPhysX/NiPhysXClothDesc.htm"><span 
 class="NDLSystemFont">NiPhysXClothDesc</span></a>: Objects of this class 
 contain all the information necessary to specify a PhysX cloth object, 
 its attachments, and its relationship to the Gamebryo scene graph.</li>
	
	<li><span class="NDLSystemFont"><a 
 href="../../Reference/NiPhysX/NiPhysXClothModifier.htm">NiPhysXClothModifier</a></span>: 
 Objects of this class hold a pointer to a PhysX cloth actor and are attached 
 as mesh modifiers to a Gamebryo mesh. It manages the transfer of state 
 from the PhysX cloth object into the Gamebryo geometry ready for rendering. 
 It automatically manages the various data buffers and the update of any 
 rendering-related information, particularly texture coordinate frames.</li>
	
	<li><span class="NDLSystemFont"><a 
 href="../../Reference/NiPhysX/NiPhysXMeshDesc.htm">NiPhysXMeshDesc</a></span>: 
 Each of these objects hold a single PhysX mesh, which may be cloth, and are used to 
 support mesh sharing. In PhysX, a shared cloth mesh only causes the initial 
 mesh used to create the pieces of cloth to be shared, but each piece of 
 cloth keeps its own dynamic mesh data.</li>
</ul>

<p>When the Gamebryo export pipeline from Max or Maya is 
 used, essentially all the basic cloth handling is automatically done when 
 the NIF file is loaded and the <span class="NDLSystemFont"><a href="../../Reference/NiPhysX/NiPhysXProp.htm">NiPhysXProp</a></span> 
 object containing cloth is attached to a <span class="NDLSystemFont"><a 
 href="../../Reference/NiPhysX/NiPhysXScene.htm">NiPhysXScene</a></span> 
 object. You may need to iterate over the cloth objects in the <span class="NDLSystemFont"><a 
 href="../../Reference/NiPhysX/NiPhysXPropDesc.htm">NiPhysXPropDesc</a></span> 
 in order to modify parameters, but Max and Maya do a good job of exposing 
 most functionality.</p>

<p>The most common modifications to the streamed cloth 
 are:</p>

<ul>
	
	<li>Attachment handling, 
 because neither Max nor Maya provide the full range of possible attachments. 
 The documentation for the <a href="../../Reference/NiPhysX/NiPhysXClothDesc.htm"><span 
 class="NDLSystemFont">NiPhysXClothDesc</span></a> class includes details 
 on adding additional attachments.</li>
	
	<li>Set normal updating, 
 which may have been overlooked by the art team. See the documentation 
 for <span class="NDLSystemFont"><a href="../../Reference/NiPhysX/NiPhysXClothModifier.htm#class_ni_phys_x_cloth_modifier_11e9ccd393448b719202699f18822c5ff">NiPhysXClothModifier</a></span>.</li>
	
	<li>Set the mesh growth 
 factor, because this is not accessible in the art tools. See the documentation 
 for <span class="NDLSystemFont"><a href="../../Reference/NiPhysX/NiPhysXClothModifier.htm#class_ni_phys_x_cloth_modifier_11e9ccd393448b719202699f18822c5ff">NiPhysXClothModifier</a></span>.</li>
	
	<li>Set the treatment of 
 sleeping cloth transformations. See the documentation for <span class="NDLSystemFont"><a 
 href="../../Reference/NiPhysX/NiPhysXClothModifier.htm#class_ni_phys_x_cloth_modifier_139ab9877c5c5c137f771347bd7701f3e">NiPhysXClothModifier</a></span>.</li>
</ul>

<p>It is also important to note that cloth that was cooked 
 for hardware will always be simulated on hardware, which may lead to the 
 creation of a separate hardware compartment in an otherwise software scene. 
 This will fail if PhysX hardware is not present, so it is wise to always 
 check the return status of the <span class="NDLSystemFont"><a href="../../Reference/NiPhysX/NiPhysXScene.htm#class_ni_phys_x_scene_1f62ac8d9884c4cc3976ddf08532332e2">NiPhysXScene::AddProp</a></span> 
 function.</p>

<p>Read the <a href="Creating_Cloth_in_Software.htm">next 
 page</a> if you expect to create cloth in your application, rather than 
 streaming in a NIF file.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>PhysX Sources</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Build" content="PhysX" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>PhysX Sources</h1>

<p>A <em>source</em> in 
 Gamebryo-PhysX is an object, in the C++ sense, that transfers state <em>from</em> 
 a Gamebryo scene graph element <em>to</em> 
 a PhysX actor. There is only one type of source currently supported:</p>

<ul>
	
	<li>The <span class="NDLSystemFont"><a 
 href="../../Reference/NiPhysX/NiPhysXRigidBodySrc.htm">NiPhysXRigidBodySrc</a></span> 
 class is a virtual base class used for PhysX rigid body actors controlled 
 by animated Gamebryo <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiAVObject.htm">NiAVObject</a></span>-derived 
 objects (scene graph nodes). The <span class="NDLSystemFont"><a href="../../Reference/NiPhysX/NiPhysXDynamicSrc.htm">NiPhysXDynamicSrc</a></span> 
 class sends the output from a Gamebryo scene graph node to a PhysX rigid 
 body actor, whether that actor is dynamic or kinematic.</li>
</ul>

<p>For example, an animated platform would have a <span 
 class="NDLSystemFont">NiPhysXDynamicSrc</span> object taking the Gamebryo 
 node's state and transferring it to a kinematic actor representing the 
 platform in PhysX. <span class="NDLSystemFont">NiPhysXDynamicSrc</span> 
 objects are also extensively used to drive rag-dolls when they are in 
 an animated, non-physical state.</p>

<p>The sources are typically updated (transfer their state) 
 before each simulation step, as discussed in the guide to <a href="Gamebryo_PhysX_Props_and_Scenes.htm">Gamebryo-PhysX 
 Scenes</a>. However, applications have direct control and may choose to 
 update at different times. As part of the state transfer, sources automatically 
 transform coordinates. In the process of transferring state, sources might 
 also buffer data for interpolation or perform any other kind of data manipulation.</p>

<p>As a programmer you might need to create a rigid-body 
 source when PhysX content is created in code and must be connected to 
 a Gamebryo node.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

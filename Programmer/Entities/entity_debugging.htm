<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Debugging entities</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Debugging entities</h1>

<p>There are a few tools and methods that you can use to debug entities:</p>
<ul>
    <li>You can use the <a href="../../Tools/SimDebugger/sim_debugger_intro.htm">Simulation
        Debugger</a> in Toolbench to visualize the state of the entity system and modify entity properties.</li>
    <li>You can use the <a href="../../Tools/ScriptDebugger/efr_script_debugger_intro.htm">Lua
        Script Debugger</a> that plugs into Toolbench to debug Lua behaviors.</li>
    <li>You can debug C/C++ behaviors using Visual Studio.</li>
    <li>Consider putting breakpoints in the OnCreate and OnDestroy lifecycle events for 
        a suspect Entity to make sure it is being correctly created.</li>
    <li>Many Entity actions are logged. You can look for warnings and errors in the log 
        file. Prefer logging with LogError in script as opposed to printing to standard 
        output.</li>
    <li>Consider doing a <span class="NDLGUILabel">Game &gt; Reset</span> in Toolbench to 
        reset all Entities and start fresh. Some bugs may be due to Entities getting out 
        of sync with one another during rapid iteration.</li>
</ul>

<p>
    For general information about Gamebryo LightSpeed's logging, assert, and debugging
    features, see <a href="../Logging/logging_intro.htm">Working with logging, asserts, and
    debuggers</a>. Important log modules to pay attention to when debugging entities
    include:</p>
<ul>
    <li><b>Entity</b> - logging related to entity creation, deletion, and property access.</li>
    <li><b>Scheduler</b> - logging related to scheduling and running behaviors.</li>
    <li><b>Lua</b> - logging from Lua behaviors defaults to this log module.</li>
</ul>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
<li><a href="entity_creating.htm">Creating entities</a></li>
<li><a href="entity_destroying.htm">Destroying entities</a></li>
<li><a href="entity_rapid.htm">Rapidly iterating on Entities</a></li>
<li><a href="../Behaviors/behavior_debug_lua.htm">Debugging Lua behaviors in real-time</a></li>
<li><a href="../Entity_Properties/entity_property_debugging.htm">Debugging entity properties</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->
</body>

</html>

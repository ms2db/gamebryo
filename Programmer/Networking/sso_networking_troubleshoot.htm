<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Troubleshooting Networking</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="FSO" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Troubleshooting Networking</h1>

<p>Refer to <a href="../Messages/message_troubleshoot.htm">Troubleshooting messages</a> for general
information about troubleshooting issues that relate to receiving messages. That topic also
includes some troubleshooting tips for debugging issues that relate to exchanging remote messages
as well.</p>

<p>Emergent recommends the following additional troubleshooting methods:</p>

<ul>
    <li><b>Message tracing</b>&mdash;If a message you are expecting to be delivered does not
    arrive, enable logging for the <span class="NDLSystemFont">kMessageTrace</span> and
    <span class="NDLSystemFont">kNetMessage</span> modules. If you are already logging them, you
    might need to turn up the log level; <span class=
    "NDLSystemFont">kLogMask_UptoLvl1|kLogMask_UptoErr3</span> should be sufficient to catch most
    relevant log entries. For more information about LightSpeed's logging capabilities, see
    <a href="../Logging/logging_intro.htm">Logging, Asserts, and Debuggers</a>.</li>

    <li><b>Unique message IDs</b>&mdash;Every message has a unique identifier (hex value). You can
    trace messages by searching the log file for that hex value. To retrieve the unique identifier
    for a specific message, you can call <span class=
    "NDLSystemFont">efd::IMessage::GetUniqueIdentifier</span>.</li>

    <li><b>Debug flags</b>&mdash;For more detailed debugging, call <span class=
    "NDLSystemFont">SetDebugFlags</span> on the message that you want to trace before it is sent.
    Set the flag <span class="NDLSystemFont">IMessage::mdf_TraceOnly</span> to create additional
    trace log entries. Other debug flags will cause the message to trigger a <span class=
    "NDLSystemFont">DebugBreak</span> at various points along its progress.</li>
</ul>

<p>If you are experiencing network connection failures, Emergent recommends the following
troubleshooting methods:</p>

<ul>
    <li><b>Network error messages</b>&mdash;The core networking code generates a message on the
    category <span class="NDLSystemFont">kCAT_NetErrorMessage</span> in response to errors that it
    detects. To receive this message, subscribe to the category, and implement a handler that
    catches a <a href="../../Reference/efdNetwork/efd__NetErrorMessage.htm">NetErrorMessage</a>.
    For more information about how to do this, see <a href=
    "../Messages/message_custom_creating.htm">Creating custom message types</a>.</li>

    <li><b>Host/port connections</b>&mdash;Check config files to ensure that listeners and
    initiators are using the same connection info (host/port). Use <span class=
    "NDLSystemFont">netstat</span> on the listening host to confirm that the process is, in fact,
    listening on the expected port.</li>

    <li><b>Hostname resolution</b>&mdash;If you are identifying a listening host by its hostname,
    use the <span class="NDLSystemFont">nslookup</span> command ("host" on Linux) <span class=
    "NDLEmphasis">from the initiating host</span> to ensure that the name resolves correctly.
    Alternately, try connecting by IP.</li>

    <li><b>traceroute</b>&mdash;Use <span class="NDLSystemFont">traceroute</span> to validate that
    messages can route from the initiating process to the listening host.</li>

    <li><b>Application-level problems</b>&mdash;Use another networking tool (such as <a href=
    "http://netcat.sourceforge.net" target="_blank">GNU netcat</a>) to create a network connection
    between the two machines on the specified port. If this works, and your app doesn't, you have
    some kind of application-level problem (for example, there might be a <a href=
    "sso_networking_quality_of_service.htm">Quality of Service</a> mismatch.</li>
</ul>
<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="../Messages/message_troubleshoot.htm">Troubleshooting messages</a></li>

    <li><a href="sso_networking_overview.htm">Networking Overview</a></li>

    <li><a href="sso_networking_prereqs.htm">Networking Prerequisites</a></li>

    <li><a href="sso_networking_requirements.htm">Networking Requirements</a></li>

    <li><a href="sso_networking_config.htm">Networking Configuration</a></li>

    <li><a href="sso_networking_how_work.htm">How Networking Works</a></li>

    <li><a href="sso_networking_limitations.htm">Networking Limitations</a></li>

    <li><a href="sso_networking_best_practice.htm">Best Practices for Working with
    Networking</a></li>

    <li><a href="sso_networking_handle_categories.htm">Understanding How Networking Handles
    Categories</a></li>

    <li><a href="sso_networking_make_netlib.htm">Creating a NetLib</a></li>

    <li><a href="sso_networking_quality_of_service.htm">Quality of Service</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

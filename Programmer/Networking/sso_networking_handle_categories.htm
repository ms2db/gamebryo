<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Understanding How Networking Handles Categories</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="FSO" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Understanding How Networking Handles Categories</h1>

<p>Gamebryo LightSpeed's network system is an extension of the messaging system that allows
messages to be sent to remote processes on the same or other machines. Interest in a Category is
expressed through the message system; the network system takes care of communicating that interest
to remote processes.</p>

<p>The <a href="../../Reference/QuickRef_Services/svc_qckref_msg_svc.htm">Message Service</a>
(MessageService) relies on the <a href=
"../../Reference/QuickRef_Services/svc_qckref_net_svc.htm">Networking Service</a> (NetService) for
passing messages to remote processes and also for receiving messages from remote processes.
Normally, a process will express interest in a Category by calling the <span class=
"NDLSystemFont">efd::MessageService::Subscribe</span> API, which internally calls <span class=
"NDLSystemFont">efd::NetService::Subscribe</span> if Message Service is aware of a NetService. The
NetService communicates interest in the specified Category to the <a href=
"../../Reference/QuickRef_Services/svc_qckref_channel_manager_svc.htm">Channel Manager Service</a>
and from then, until <span class="NDLSystemFont">efd::MessageService::Unsubscribe</span> is called,
any process that is connected to the same Channel Manager Service will deliver messages to the
subscribed process. The Channel Manager Service maintains the Category subscription information and
performs message routing between remote processes.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="sso_networking_overview.htm">Networking Overview</a></li>

    <li><a href="sso_networking_overview.htm">Networking Prerequisites</a></li>

    <li><a href="sso_networking_requirements.htm">Networking Requirements</a></li>

    <li><a href="sso_networking_config.htm">Networking Configuration</a></li>

    <li><a href="sso_networking_how_work.htm">How Networking Works</a></li>

    <li><a href="sso_networking_limitations.htm">Networking Limitations</a></li>

    <li><a href="sso_networking_best_practice.htm">Best Practices for Working with
    Networking</a></li>

    <li><a href="sso_networking_make_netlib.htm">Creating a NetLib</a></li>

    <li><a href="sso_networking_quality_of_service.htm">Quality of Service</a></li>

    <li><a href="sso_networking_troubleshoot.htm">Troubleshooting Networking</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

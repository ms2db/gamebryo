<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Configuring the Asset Runtime Service</title>

<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Configuring the Asset Runtime Service</h1>

<p>There are several methods available for configuring the
different components of the Asset Runtime Service.</p>

<h2>Configuring your Game</h2>

<p>The critical configuration setting that your application will
require is the path to the Asset Web Root directory that contains all of the game assets. Typically, you create this directory of assets ahead of time, specifying it when you create your game solution file in Toolbench. The Asset Web Root path that is used for your project in Toolbench will typically be the same path that you configure the Asset Locator Service to use in your game. In
your application's main configuration file (normally named
<span class="NDLSystemFont">Config.ini</span>) you would specify this variable as follows:</p>

<pre>
[AssetWeb]
Path = ../../path/to/assets
</pre>

<p>The example above specifies a relative path (relative to the
current working directory, which is also the directory from which
the configuration file it typically loaded). However, it is also
perfectly acceptable to use an absolute path for this
configuration variable.</p>

<h2>Configuring the Asset Controller</h2>

<p>The Asset Controller does not require you
to configure the <span class="NDLSystemFont">AssetWeb.Path</span> value through the Configuration Manager. Instead, the Asset Controller is set to
the correct path by Toolbench whenever you open a solution file.
Because of this, it is important to remember that if you are going
to run your game using the Asset Controller ("rapid iteration
mode"), you must first open the solution file for your game in
Toolbench. Note that this mechanism depends on the enforced
policy of running only one Toolbench instance per
workstation.</p>

<p>The rest of the configuration for the Asset Controller is
related to your tagging policy settings. There are additional
<span class="NDLSystemFont">*.ini</span> configuration files
stored in the directory <span class=
"NDLSystemFont"><em>&lt;Asset Web Root Directory&gt;</em>/asset-web-config/</span>.
These configuration files, one per tagging extension, specify
exactly how the Asset Controller will tag your assets as they are
discovered. For a more detailed discussion of tagging policy and
capabilities, see <a href="asset_runtime_using.htm">Asset Tagging System Overview</a>.</p>

<h2>Configuring Your Game Application for Rapid Iteration</h2>

<p>To use the rapid iteration features, you will also
need to ensure that your game is set up to communicate with the
Asset Controller and Toolbench. This normally does not require
any configuration to be performed because each time that you update an asset-web by launching Toolbench and opening your solution file, the asset-web is imprinted with an "Author Id" that is specific to each user and PC. Then, when you start the game, the game uses this Author Id to locate the Asset
Controller instance that you are running somewhere on your LAN.
The game then connects to that machine and you can perform rapid
iteration workflows.</p>

<p>The above automatic connection feature will work in most
cases. However, it cannot work if the PC/console
that is running the game is on a separate subnet from the
PC that is running Toolbench and Asset Controller. If this is the
case, then you must manually configure the connection settings in
the game's configuration file. You can do this via command-line arguments or a config file as shown below. Also, to override the automatic connection feature, you must tell the game to use the Channel Manager
settings in the configuration file. This is done by setting the
<span class="NDLSystemFont">AssetWeb.UseDefaultChannelMgr</span>
parameter to 'true'.</p>

<pre>
[AssetWeb]
UseDefaultChannelMgr=true

[ChannelManager#]
Port=13215
Hostname=10.10.1.150
</pre>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="asset_runtime_organize_assets.htm">Organizing Your Assets</a></li>

    <li><a href="asset_runtime_platform_support.htm">Supporting Multiple Platforms</a></li>

    <li><a href=
    "asset_runtime_customize_asset_tagging_system.htm">Customizing
    the asset tagging system</a></li>

    <li><a href="asset_runtime_deploying_assets.htm">Deploying Assets</a></li>

    <li><a href="asset_runtime_l10n_support.htm">Supporting Localization</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>
</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Quaternion</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">Quaternion Module</p>
<p class="NDLRefHead1">Description</p>
<p>The Quaternion module contains functions to create, access, and manipulate instances of
the efd::Quaternion class in Lua.</p>

<p>All functions are in the Quaternion module namespace in Lua.</p>

<p>Quaternion values passed from C++ to Lua are always converted into a Lua Quaternion userdata object.
The functions described below represent the functions available to these objects.</p>

<p>Quaternion values passed from Lua to C++ can either be a Quaternion value constructed using 
Quaternion.Quaternion(w,x,y,z) or a Lua table containing 4 numbers representing w, x, y, and z.</p>

<p class="NDLRefHead1">Library Constants</p>

<a name="Point3_ZERO"</a>
<p class="NDLRefMemberFunction">None</p>

<p class="NDLRefHead1">Module Attributes</p>

<a name="Quaternion.w"</a>
<p class="NDLRefMemberFunction">Quaternion.w</p>
<p class="NDLRefMemberDescription">The w value.</p>

<a name="Quaternion.x"</a>
<p class="NDLRefMemberFunction">Quaternion.x</p>
<p class="NDLRefMemberDescription">The x value.</p>

<a name="Quaternion.y"</a>
<p class="NDLRefMemberFunction">Quaternion.y</p>
<p class="NDLRefMemberDescription">The y value.</p>

<a name="Quaternion.z"</a>
<p class="NDLRefMemberFunction">Quaternion.z</p>
<p class="NDLRefMemberDescription">The z value.</p>

<p class="NDLRefHead1">Module Functions</p>

<a name="Quaternion()"></a>
<p class="NDLRefMemberFunction">userdata Quaternion()</p>
<p class="NDLRefMemberDescription">Create a new Quaternion object, initialized to (0, 0, 0, 0)</p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td width="20%"><span class="NDLSystemFont">Quaternion</span></td>
    <td>A userdata object wrapping an efd::Quaternion.
        <p><b>Example:</b>
    <pre>
    q1 = Quaternion.Quaternion()
</td></tr>
  </tbody>
</table>
</div>

<a name="Quaternion(w, x, y, z)"></a>
<p class="NDLRefMemberFunction">userdata Quaternion(w, x, y, z)</p>
<p class="NDLRefMemberDescription">Create a new Quaternion object, initialized to (w, x, y, z)</p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td width="20%"><span class="NDLSystemFont">Quaternion</span></td>
    <td>A userdata object wrapping an efd::Quaternion.
        <p><b>Example:</b>
    <pre>
    q1 = Quaternion.Quaternion(1, 2, 3, 4)
</td></tr>
  </tbody>
</table>
</div>

<a name="Quaternion(angle, axis)"></a>
<p class="NDLRefMemberFunction">userdata Quaternion(number angle, Point3 axis)</p>
<p class="NDLRefMemberDescription">Constructs a unit quaternion that corresponds to the rotation about the
        specified axis. This rotation is counter clockwise about the axis when
        looking towards the origin.</p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td width="20%"><span class="NDLSystemFont">Quaternion</span></td>
    <td>A userdata object wrapping an efd::Quaternion.
        <p><b>Example:</b>
    <pre>
    q1 = Quaternion.Quaternion(1.5, Point3.Point3(1, 2, 3))
</td></tr>
  </tbody>
</table>
</div>

<a name="Quaternion SetW"></a>
<p class="NDLRefMemberFunction">nil SetW(number)</p>
<p class="NDLRefMemberDescription">Set the W component of this quaternion</p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td width="20%"><span class="NDLSystemFont">nil</span></td>
    <td>Updates the W component of this quaternion.
        <p><b>Example:</b>
    <pre>
    q1 = Quaternion.Quaternion(1, 2, 3, 4)
    q1:SetW(0.5)
    </pre>
</td></tr>
  </tbody>
</table>
</div>


<a name="Quaternion SetX"></a>
<p class="NDLRefMemberFunction">nil SetX(number)</p>
<p class="NDLRefMemberDescription">Set the X component of this quaternion</p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td width="20%"><span class="NDLSystemFont">nil</span></td>
    <td>Updates the X component of this quaternion.
        <p><b>Example:</b>
    <pre>
    q1 = Quaternion.Quaternion(1, 2, 3, 4)
    q1:SetX(0.5)
    </pre>
</td></tr>
  </tbody>
</table>
</div>

<a name="Quaternion SetY"></a>
<p class="NDLRefMemberFunction">nil SetY(number)</p>
<p class="NDLRefMemberDescription">Set the Y component of this quaternion</p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td width="20%"><span class="NDLSystemFont">nil</span></td>
    <td>Updates the Y component of this quaternion.
        <p><b>Example:</b>
    <pre>
    q1 = Quaternion.Quaternion(1, 2, 3, 4)
    q1:SetY(0.5)
    </pre>
</td></tr>
  </tbody>
</table>
</div>

<a name="Quaternion SetZ"></a>
<p class="NDLRefMemberFunction">nil SetZ(number)</p>
<p class="NDLRefMemberDescription">Set the Z component of this quaternion</p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td width="20%"><span class="NDLSystemFont">nil</span></td>
    <td>Updates the Z component of this quaternion.
        <p><b>Example:</b>
    <pre>
    q1 = Quaternion.Quaternion(1, 2, 3, 4)
    q1:SetZ(0.5)
    </pre>
</td></tr>
  </tbody>
</table>
</div>

<a name="Quaternion GetW"></a>
<p class="NDLRefMemberFunction">number GetW()</p>
<p class="NDLRefMemberDescription">Get the W component of this quaternion</p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td width="20%"><span class="NDLSystemFont">number</span></td>
    <td>Get the W component of this quaternion.
        <p><b>Example:</b>
    <pre>
    q1 = Quaternion.Quaternion(1, 2, 3, 4)
    local w = q1:GetW()
    </pre>
</td></tr>
  </tbody>
</table>
</div>


<a name="Quaternion GetX"></a>
<p class="NDLRefMemberFunction">number GetX()</p>
<p class="NDLRefMemberDescription">Get the X component of this quaternion</p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td width="20%"><span class="NDLSystemFont">number</span></td>
    <td>Get the X component of this quaternion.
        <p><b>Example:</b>
    <pre>
    q1 = Quaternion.Quaternion(1, 2, 3, 4)
    local x = q1:GetX()
    </pre>
</td></tr>
  </tbody>
</table>
</div>


<a name="Quaternion GetY"></a>
<p class="NDLRefMemberFunction">number GetY()</p>
<p class="NDLRefMemberDescription">Get the Y component of this quaternion</p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td width="20%"><span class="NDLSystemFont">number</span></td>
    <td>Get the Y component of this quaternion.
        <p><b>Example:</b>
    <pre>
    q1 = Quaternion.Quaternion(1, 2, 3, 4)
    local y = q1:GetY()
    </pre>
</td></tr>
  </tbody>
</table>
</div>


<a name="Quaternion GetZ"></a>
<p class="NDLRefMemberFunction">number GetZ()</p>
<p class="NDLRefMemberDescription">Get the Z component of this quaternion</p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td width="20%"><span class="NDLSystemFont">number</span></td>
    <td>Get the Z component of this quaternion.
        <p><b>Example:</b>
    <pre>
    q1 = Quaternion.Quaternion(1, 2, 3, 4)
    local z = q1:GetZ()
    </pre>
</td></tr>
  </tbody>
</table>
</div>

<a name="Quaternion Clone"></a>
<p class="NDLRefMemberFunction">userdata Clone()</p>
<p class="NDLRefMemberDescription">Get a deep copy of this Quaternion object.</p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td width="20%"><span class="NDLSystemFont">Quaternion</span></td>
    <td>Deep copy of this quaternion.
        <p><b>Example:</b>
    <pre>
    q1 = Quaternion.Quaternion(1, 2, 3, 4)
    local clone = q1:Clone()
    </pre>
</td></tr>
  </tbody>
</table>
</div>

<a name="Quaternion =="></a>
<p class="NDLRefMemberFunction">boolean ==</p>
<p class="NDLRefMemberDescription">Determine of two quaternion objects are equal.</p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td width="20%"><span class="NDLSystemFont">boolean</span></td>
    <td>True if the two objects are equal, false otherwise.
        <p><b>Example:</b>
    <pre>
    q1 = Quaternion.Quaternion(1, 2, 3, 4)
    q2 = q1:Clone()
    local q3 = Quaternion.Quaternion(4, 5, 6, 7)
    b1 = (q1 == q2) -- true
    b2 = (q1 ~= q3) -- true
    </pre>
</td></tr>
  </tbody>
</table>
</div>

<a name="Quaternion *"><a>
<p class="NDLRefMemberFunction">userdata *</p>
<p class="NDLRefMemberDescription">Multiply two quaternion values.</p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td width="20%"><span class="NDLSystemFont">Quaternion</span></td>
    <td>Result of quaternion multiply.
        <p><b>Example:</b>
    <pre>
    q1 = Quaternion.Quaternion(1, 2, 3, 4)
    q2 = Quaternion.Quaternion(4, 5, 6, 7)
    q3 = q1 * q2
    </pre>
</td></tr>
  </tbody>
</table>
</div>

<a name="Quaternion FormAngleAxisX"><a>
<p class="NDLRefMemberFunction">nil FromAngleAxisX(number angle)<br/>
nil FromAngleAxisY(number angle)<br/>
nil FromAngleAxisZ(number angle)<br/>
nil FromAngleAxisX(number xAngle, number yAngle, number zAngle)</p>
<p class="NDLRefMemberDescription">Fast path version of converting an angle/axis rotation to a quaternion.</p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td width="20%"><span class="NDLSystemFont">nil</span></td>
    <td>Update this quaternion to the angle/axis rotation around the specified axis.
        <p><b>Example:</b>
    <pre>
    q1 = Quaternion.Quaternion()
    q1:FromAngleAxisY(1.5)
    </pre>
</td></tr>
  </tbody>
</table>
</div>

<a name="Quaternion ToRotation"><a>
<p class="NDLRefMemberFunction">userdata ToRotation(Matrix3 tmp)</p>
<p class="NDLRefMemberDescription">Converts this quaternion into a 3x3 rotation matrix.</p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td width="20%"><span class="NDLSystemFont">Matrix3</span></td>
    <td>Converted quaternion into a 3x3 rotation matrix.
        <p><b>Example:</b>
    <pre>
    q1 = Quaternion.Quaternion(1, 2, 3, 4)
    m1 = Matrix3.Matrix3()
    m1 = q1:ToRotation(m1)
    </pre>
</td></tr>
  </tbody>
</table>
</div>

<a name="Quaternion Slerp"><a>
<p class="NDLRefMemberFunction">userdata Quaterion_Slerp(number t, Quaternion p, Quaternion q)</p>
<p class="NDLRefMemberDescription">This function computes the spherical linear interpolate of the
        specified quaternions. Param t must be in the interval [0, 1]. p and q must be
        of unit length. This function assumps the dot product of p and q are non-negative.</p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td width="20%"><span class="NDLSystemFont">Quaternion</span></td>
    <td>Result of the spherical linear interpolation.
        <p><b>Example:</b>
    <pre>
    p = Quaternion.Quaternion(.1, .2, .3, .4)
    q = Quaternion.Quaternion(.5, .6, .7, .8)
    t = 0.05
    qr = Quaternion.Quaternion_Slerp(t, p, q)
    </pre>
</td></tr>
  </tbody>
</table>
</div>

<a name="Quaternion Dot"><a>
<p class="NDLRefMemberFunction">userdata Quaternion_Dot(Quaternion p, Quaternion q)</p>
<p class="NDLRefMemberDescription">Computes the dot product of the two input quaternions by treating them
        as 4-tuples.</p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td width="20%"><span class="NDLSystemFont">Quaternion</span></td>
    <td>Result of the dot product.
        <p><b>Example:</b>
    <pre>
    p = Quaternion.Quaternion(.1, .2, .3, .4)
    q = Quaternion.Quaternion(.5, .6, .7, .8)
    qr = Quaternion.Quaternion_Dot(p, q)
    </pre>
</td></tr>
  </tbody>
</table>
</div>


<p class="NDLHeadingRelatedTopic">
    Related topics</p>
</div>

<ul>
    <li><a href="../../Reference/efd/efd__Quaternion.htm">efd::Quaternion</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

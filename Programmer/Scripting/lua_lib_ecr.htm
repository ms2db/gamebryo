<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ecr</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">ecr</p>
<p class="NDLRefHead1">Description</p>
<p>This built-in API library contains methods for
interacting with classes in the ecr
library.  This includes services like the <span
    class="NDLSystemFont">SceneGraphService</span> and the <span
    class="NDLSystemFont">PickService</span>.</p>

<p>Note: This API description uses the term <span
    class="NDLSystemFont">point3</span> to describe some Lua parameters and
return types.  This type is really a Lua table of numbers.  Please see the
documentation about <a
    href="../Entity_Properties/entity_property_using.htm">using entity
    properties</a> for more details.

<p class="NDLRefHead1">Library Functions</p>


<!-- Autogenerated HTML! Please don't edit this directly. -->
<!-- See: //depot/sandboxes/nwalker/luadoc/luadocify.pl -->
<a name="AttachSceneGraph"></a>
<p class="NDLRefMemberFunction">boolean AttachSceneGraph(<br/>number entityID,<br/>string attachmentKey,<br/>string assetURN)</p>
<p class="NDLRefMemberDescription">A script may call this method to attach a scene graph to an entity at a particular location. </p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Parameter</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">entityID</span></td><td>The entity to attach to.</td></tr>
    <tr><td><span class="NDLSystemFont">attachmentKey</span></td><td>The attachmentKey must be one of the keys on the AttachedObjects map property of the entity.</td></tr>
    <tr><td><span class="NDLSystemFont">assetURN</span></td><td>The urn for the asset to attach at the location determined by the attachmentKey.</td></tr>
  </tbody>
</table>
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">boolean</span></td><td>False is returned if the entity is not found, the key is invalid, or the URN is invalid. The attachment is not guaranteed to occur even when true is returned, because errors from loading the asset may be delayed.</td></tr>
  </tbody>
</table>
</div>

<!-- Autogenerated HTML! Please don't edit this directly. -->
<!-- See: //depot/sandboxes/nwalker/luadoc/luadocify.pl -->
<a name="DetachSceneGraph"></a>
<p class="NDLRefMemberFunction">boolean DetachSceneGraph(<br/>number entityID,<br/>string attachmentKey)</p>
<p class="NDLRefMemberDescription">A script may call this method to detach a scene graph from an entity at a particular location. </p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Parameter</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">entityID</span></td><td>The entity to attach to.</td></tr>
    <tr><td><span class="NDLSystemFont">attachmentKey</span></td><td>The attachmentKey must be one of the keys on the AttachedObjects map property of the entity.</td></tr>
  </tbody>
</table>
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">boolean</span></td><td>False if the entity is not found, the key is invalid, or there is no attached asset at that location.</td></tr>
  </tbody>
</table>
</div>

<!-- Autogenerated HTML! Please don't edit this directly. -->
<!-- See: //depot/sandboxes/nwalker/luadoc/luadocify.pl -->
<a name="GetAttachedSceneGraph"></a>
<p class="NDLRefMemberFunction">string GetAttachedSceneGraph(<br/>number entityID,<br/>string attachmentKey)</p>
<p class="NDLRefMemberDescription">A script may call this method to query the URN of the scene graph attached to an entity at a particular location. </p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Parameter</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">entityID</span></td><td>The entity to query.</td></tr>
    <tr><td><span class="NDLSystemFont">attachmentKey</span></td><td>The attachmentKey must be one of the keys on the AttachedObjects map property of the entity.</td></tr>
  </tbody>
</table>
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">string</span></td><td>The URN of the attached scene graph.  The empty string is returned on error or if nothing is attached.</td></tr>
  </tbody>
</table>
</div>

<!-- Autogenerated HTML! Please don't edit this directly. -->
<!-- See: //depot/sandboxes/nwalker/luadoc/luadocify.pl -->
<a name="SetAttachmentOffset"></a>
<p class="NDLRefMemberFunction">boolean SetAttachmentOffset(<br/>number entityID,<br/>string attachmentKey,<br/>point3 offset)</p>
<p class="NDLRefMemberDescription">A script may call this method to modify the translation offset applied to an attached asset. </p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Parameter</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">entityID</span></td><td>The entity with this attachment.</td></tr>
    <tr><td><span class="NDLSystemFont">attachmentKey</span></td><td>The attachmentKey must be one of the keys on the AttachedObjects map property of the entity.</td></tr>
    <tr><td><span class="NDLSystemFont">offset</span></td><td>The new translation offset.</td></tr>
  </tbody>
</table>
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">boolean</span></td><td>True on success.  False if the entity is not found or the key is invalid.</td></tr>
  </tbody>
</table>
</div>

<!-- Autogenerated HTML! Please don't edit this directly. -->
<!-- See: //depot/sandboxes/nwalker/luadoc/luadocify.pl -->
<a name="SetAttachmentRotation"></a>
<p class="NDLRefMemberFunction">boolean SetAttachmentRotation(<br/>number entityID,<br/>string attachmentKey,<br/>point3 rotation)</p>
<p class="NDLRefMemberDescription">A script may call this method to modify the rotation applied to an attached asset. </p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Parameter</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">entityID</span></td><td>The entity with this attachment.</td></tr>
    <tr><td><span class="NDLSystemFont">attachmentKey</span></td><td>The attachmentKey must be one of the keys on the AttachedObjects map property of the entity.</td></tr>
    <tr><td><span class="NDLSystemFont">rotation</span></td><td>The new rotation (given in Euler angles.)</td></tr>
  </tbody>
</table>
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">boolean</span></td><td>True on success.  False if the entity is not found or the key is invalid.</td></tr>
  </tbody>
</table>
</div>

<!-- Autogenerated HTML! Please don't edit this directly. -->
<!-- See: //depot/sandboxes/nwalker/luadoc/luadocify.pl -->
<a name="SetAttachmentScale"></a>
<p class="NDLRefMemberFunction">boolean SetAttachmentScale(<br/>number entityID,<br/>string attachmentKey,<br/>number scale)</p>
<p class="NDLRefMemberDescription">A script may call this method to modify the scale applied to an attached asset. </p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Parameter</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">entityID</span></td><td>The entity with this attachment.</td></tr>
    <tr><td><span class="NDLSystemFont">attachmentKey</span></td><td>The attachmentKey must be one of the keys on the AttachedObjects map property of the entity.</td></tr>
    <tr><td><span class="NDLSystemFont">scale</span></td><td>The new scale for this attachment.</td></tr>
  </tbody>
</table>
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">boolean</span></td><td>True on success.  False if the entity is not found or the key is invalid.</td></tr>
  </tbody>
</table>
</div>

<!-- Autogenerated HTML! Please don't edit this directly. -->
<!-- See: //depot/sandboxes/nwalker/luadoc/luadocify.pl -->
<a name="GetAttachmentOffset"></a>
<p class="NDLRefMemberFunction">boolean, point3 GetAttachmentOffset(<br/>number i_entityID,<br/>string i_attachmentKey,<br/>point3 o_offset)</p>
<p class="NDLRefMemberDescription">A script may call this method to obtain the translation offset applied to an attached asset. </p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Parameter</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">i_entityID</span></td><td>The entity with this attachment.</td></tr>
    <tr><td><span class="NDLSystemFont">i_attachmentKey</span></td><td>The attachmentKey must be one of the keys on the AttachedObjects map property of the entity.</td></tr>
    <tr><td><span class="NDLSystemFont">o_offset (Optional)</span></td><td>The queried translation offset.</td></tr>
  </tbody>
</table>
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">boolean</span></td><td>True on success.  False if the entity is not found or the key is invalid.</td></tr>
    <tr><td><span class="NDLSystemFont">point3</span></td><td>The queried translation offset.</td></tr>
  </tbody>
</table>
</div>

<!-- Autogenerated HTML! Please don't edit this directly. -->
<!-- See: //depot/sandboxes/nwalker/luadoc/luadocify.pl -->
<a name="GetAttachmentRotation"></a>
<p class="NDLRefMemberFunction">boolean, point3 GetAttachmentRotation(<br/>number i_entityID,<br/>string i_attachmentKey,<br/>point3 o_rotation)</p>
<p class="NDLRefMemberDescription">A script may call this method to obtain the rotation applied to an attached asset. </p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Parameter</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">i_entityID</span></td><td>The entity with this attachment.</td></tr>
    <tr><td><span class="NDLSystemFont">i_attachmentKey</span></td><td>The attachmentKey must be one of the keys on the AttachedObjects map property of the entity.</td></tr>
    <tr><td><span class="NDLSystemFont">o_rotation (Optional)</span></td><td>The queried translation offset (in Euler angles.)</td></tr>
  </tbody>
</table>
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">boolean</span></td><td>True on success.  False if the entity is not found or the key is invalid.</td></tr>
    <tr><td><span class="NDLSystemFont">point3</span></td><td>The queried translation offset (in Euler angles.)</td></tr>
  </tbody>
</table>
</div>

<!-- Autogenerated HTML! Please don't edit this directly. -->
<!-- See: //depot/sandboxes/nwalker/luadoc/luadocify.pl -->
<a name="GetAttachmentScale"></a>
<p class="NDLRefMemberFunction">boolean, number GetAttachmentScale(<br/>number i_entityID,<br/>string i_attachmentKey,<br/>number o_scale)</p>
<p class="NDLRefMemberDescription">A script may call this method to obtain the scale applied to an attached asset. </p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Parameter</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">i_entityID</span></td><td>The entity with this attachment.</td></tr>
    <tr><td><span class="NDLSystemFont">i_attachmentKey</span></td><td>The attachmentKey must be one of the keys on the AttachedObjects map property of the entity.</td></tr>
    <tr><td><span class="NDLSystemFont">o_scale (Optional)</span></td><td>The queried scale.</td></tr>
  </tbody>
</table>
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">boolean</span></td><td>True on success.  False if the entity is not found or the key is invalid.</td></tr>
    <tr><td><span class="NDLSystemFont">number</span></td><td>The queried scale.</td></tr>
  </tbody>
</table>
</div>

<!-- Autogenerated HTML! Please don't edit this directly. -->
<!-- See: //depot/sandboxes/nwalker/luadoc/luadocify.pl -->
<a name="GetSceneGraphNodeTransform"></a>
<p class="NDLRefMemberFunction">boolean, point3, point3, number GetSceneGraphNodeTransform(<br/>number entityID,<br/>string i_nodeName,<br/>point3 o_position,<br/>point3 o_rotation,<br/>number o_scale)</p>
<p class="NDLRefMemberDescription">A script may call this method to obtain the world transformation of a node within the primary scene graph associated with the given entity. </p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Parameter</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">entityID</span></td><td>The entity with this attachment.</td></tr>
    <tr><td><span class="NDLSystemFont">i_nodeName</span></td><td>The node to query.</td></tr>
    <tr><td><span class="NDLSystemFont">o_position (Optional)</span></td><td>The queried translation of this node.</td></tr>
    <tr><td><span class="NDLSystemFont">o_rotation (Optional)</span></td><td>The queried rotation (in Euler angles) of this node.</td></tr>
    <tr><td><span class="NDLSystemFont">o_scale (Optional)</span></td><td>The queried scale of this node.</td></tr>
  </tbody>
</table>
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">boolean</span></td><td>True on success.  False if the entity is not found, the entity does not have a scene graph, or the named node is not found.</td></tr>
    <tr><td><span class="NDLSystemFont">point3</span></td><td>The queried translation of this node.</td></tr>
    <tr><td><span class="NDLSystemFont">point3</span></td><td>The queried rotation (in Euler angles) of this node.</td></tr>
    <tr><td><span class="NDLSystemFont">number</span></td><td>The queried scale of this node.</td></tr>
  </tbody>
</table>
</div>

<!-- Autogenerated HTML! Please don't edit this directly. -->
<!-- See: //depot/sandboxes/nwalker/luadoc/luadocify.pl -->
<a name="ClosestObjectOnRay"></a>
<p class="NDLRefMemberFunction">boolean, number, number ClosestObjectOnRay(<br/>point3 i_origin,<br/>point3 i_direction,<br/>number o_entityID,<br/>number o_distance)</p>
<p class="NDLRefMemberDescription">A script may call this method to find the closest object along a ray, and its distance from the ray origin. </p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Parameter</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">i_origin</span></td><td>The origin of the ray.</td></tr>
    <tr><td><span class="NDLSystemFont">i_direction</span></td><td>The direction of the ray. This need not be a unit vector, but must be non-zero.</td></tr>
    <tr><td><span class="NDLSystemFont">o_entityID (Optional)</span></td><td>Upon return, the closest entity along the ray. The return value will be the invalid entity ID if the ray does not hit any entity's scene graph.</td></tr>
    <tr><td><span class="NDLSystemFont">o_distance (Optional)</span></td><td>Upon return, the distance from the ray origin to the entity. This distance is in units of the ray's length. The intersection point of the ray and the entity can be found by computing origin + direction * distance.</td></tr>
  </tbody>
</table>
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">boolean</span></td><td>True if any entity is found along the ray.</td></tr>
    <tr><td><span class="NDLSystemFont">number</span></td><td>Upon return, the closest entity along the ray. The return value will be the invalid entity ID if the ray does not hit any entity's scene graph.</td></tr>
    <tr><td><span class="NDLSystemFont">number</span></td><td>Upon return, the distance from the ray origin to the entity. This distance is in units of the ray's length. The intersection point of the ray and the entity can be found by computing origin + direction * distance.</td></tr>
  </tbody>
</table>
</div>

<!-- Autogenerated HTML! Please don't edit this directly. -->
<!-- See: //depot/sandboxes/nwalker/luadoc/luadocify.pl -->
<a name="DistanceToEntityAlongRay"></a>
<p class="NDLRefMemberFunction">boolean, number DistanceToEntityAlongRay(<br/>point3 i_origin,<br/>point3 i_direction,<br/>number i_entityID,<br/>number o_distance)</p>
<p class="NDLRefMemberDescription">A script may call this method to find the distance to a particular entity along a ray. </p>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead><tr><th>Parameter</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">i_origin</span></td><td>The origin of the ray.</td></tr>
    <tr><td><span class="NDLSystemFont">i_direction</span></td><td>The direction of the ray. This need not be a unit vector, but must be non-zero.</td></tr>
    <tr><td><span class="NDLSystemFont">i_entityID</span></td><td>The Entity to look for along the ray.</td></tr>
    <tr><td><span class="NDLSystemFont">o_distance (Optional)</span></td><td>Upon return, the distance from the ray origin to the closest point on the entity. This distance is in units of the ray's length. The intersection point of the ray and the entity can be found by computing origin + direction * distance.</td></tr>
  </tbody>
</table>
<table>
  <thead><tr><th>Return Value</th><th>Description</th></tr></thead>
  <tbody>
    <tr><td><span class="NDLSystemFont">boolean</span></td><td>True if any entity is found along the ray.</td></tr>
    <tr><td><span class="NDLSystemFont">number</span></td><td>Upon return, the distance from the ray origin to the closest point on the entity. This distance is in units of the ray's length. The intersection point of the ray and the entity can be found by computing origin + direction * distance.</td></tr>
  </tbody>
</table>
</div>


<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

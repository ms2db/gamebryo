<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Materials From Art</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Materials From Art</h1>

<a name=ResolvingMaterialsAtRuntime></a><h2>Resolving Materials 
 At Runtime</h2>

<p>When an art asset references a material at load time, 
 it is resolved by first checking the material cache (using <span class="NDLSystemFont">NiMaterial::GetMaterial</span>). 
 If the material does not yet exist, the material libraries are queried 
 (using <span class="NDLSystemFont">NiMaterialLibrary::CreateMaterial</span>). 
 Should the material fail to be found, the default material of the renderer 
 will be used to render the object.</p>

<a name=AddingCustomParametersToArt></a><h2>Adding Custom 
 Parameters To Art</h2>

<p>The simplest case of exposing materials is in <a href="../NiShader/Exposing_your_ShaderLibrary_to_the_tool_chain.htm">exposing 
 your ShaderLibrary to the tool-chain</a>, which details how to expose 
 <span class="NDLSystemFont">NiSingleShaderMaterials</span> to the art pipeline. 
 More complicated materials are exposed through the use of <a href="NiMaterialLibrary.htm"><span 
 class="NDLSystemFont">NiMaterialLibrary</span></a> objects. Material libraries 
 expose the custom parameters of their respective materials through the 
 material description interfaces (<span class="NDLSystemFont">GetFirstMaterialDesc</span> 
 and <span class="NDLSystemFont">GetNextMaterialDesc</span>). Each <span 
 class="NDLSystemFont">NiShaderDesc</span> contains a set of <span class="NDLSystemFont">NiShaderAttributeDesc</span>, 
 which are exposed through the <span class="NDLSystemFont">GetFirstAttribute</span> 
 and <span class="NDLSystemFont">GetNextAttribute</span> methods. These attribute 
 descriptions are parsed by the art tools to provide the appropriate user-interface 
 for tweaking these parameters.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

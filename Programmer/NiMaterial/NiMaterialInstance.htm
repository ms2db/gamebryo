<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiMaterialInstance</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>NiMaterialInstance</h1>

<p>This class allows a material to be attached to a piece 
 of geometry. It manages how and when the material is queried to generate 
 a new <span class="NDLSystemFont">NiShader</span> for rendering the object. 
 This is accomplished by storing the last known good shader for a given 
 material. This shader is checked against the material when one of the 
 following conditions is true:</p>

<ul>
	
	<li>The material instance 
 has been marked as dirty using the method <span class="NDLSystemFont">SetMaterialNeedsUpdate</span>. 
 This is set automatically whenever a geometry object has <span class="NDLSystemFont">UpdateProperties</span> 
 or <span class="NDLSystemFont">UpdateEffects</span> called on it. </li>
	
	<li>A shader has been generated, 
 but it is necessary to check the previously generated shader every frame. 
 This is set using the <span class="NDLSystemFont">SetDefaultMaterialNeedsUpdateFlag</span>. 
 This method essentially tells the material instance that it should always 
 consider itself dirty. This can be set for a variety of reasons. For instance, 
 the property state and effect state may be manually overridden, necessitating 
 a new shader. A material may require the value of extra data, which could 
 change per-frame. Note that this flag is set to false by default.</li>
</ul>

<p>If any of the above are true, the material's <span class="NDLSystemFont">IsShaderCurrent</span> 
 method is called. In some cases this method can be quite expensive particularly 
 on consoles, so make sure to take advantage of the dirty flags appropriately 
 in an application. If the material determines that a new shader must be 
 generated, <span class="NDLSystemFont">GetCurrentShader</span> is called. 
 Note that if a NULL shader is cached in the material instance, the material 
 will not be automatically asked for the shader each frame.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

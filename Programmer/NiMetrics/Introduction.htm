<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Introduction to NiMetrics</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Introduction to NiMetrics</h1>

<p>Real-time 3D developers always strive to get the best 
 possible performance from their application.&nbsp; There are many general 
 tools available for finding the bottlenecks in an application, or in a 
 particular section of code.&nbsp; The Gamebryo team has used Intel VTune, 
 AMD CodeAnalyst, Microsoft PIX, SCE GPAD, and SN Tuner to optimize the Gamebryo 
 engine.&nbsp; These tools can be valuable in analyzing an application's 
 performance bottlenecks.&nbsp; However, they are general tools, with no 
 specific knowledge about a Gamebryo application and its datasets. <span 
 class="NDLSystemFont">NiMetrics</span>, on the other hand, provides useful 
 performance data points from a Gamebryo perspective that may aid a developer 
 in spotting performance issues both in an individual run of an application 
 and over time. Thus, <span class="NDLSystemFont">NiMetrics</span> is not 
 an alternative to a more traditional profiling tool, but rather is a complement 
 that can provide higher level timings and information.</p>

<p>By default, metrics are turned off.  The <span class="NDLSystemFont">NIMETRICS</span> 
 preprocessor define is set to be 0 if metrics are disabled and 1 if metrics 
 are enabled.</p>

<p>Gamebryo itself comes by default with instrumentation 
 for the metrics system in the core engine. To see a list of the instrumentations 
 that are common among all platforms, see the <a href="Gamebryo_Metrics.htm">Gamebryo 
 metrics</a> documentation.</p>

<p>The <span class="NDLSystemFont">NiMetrics</span> system 
 is designed for flexibility and for developers to easily insert their 
 own instrumentation that works with the <span class="NDLSystemFont">NiMetrics</span> 
 system to measure custom data. For more information, see the <a href="Instrumenting.htm">instrumenting</a> 
 documentation for <span class="NDLSystemFont">NiMetrics</span>. </p>

<p>At the application level, developers can make the choice 
 about what to do with all of the instrumented metrics. To choose to output 
 them to a file, to an <span class="NDLSystemFont">NiVisualTracker</span>, 
 or to a web page, the application must add an <span class="NDLSystemFont"><a 
 href="../../Reference/NiMain/NiMetricsOutputModule.htm">NiMetricsOutputModule</a></span> 
 to the <span class="NDLSystemFont">NiMetrics</span> system. For more information, 
 see the <a href="Output_Modules.htm">output modules</a> documentation.</p>

<p>A working example of the metrics system integrated with 
 a demo can be seen in the <a href="../../Learn/Demos/Overview_!ProfileSample.htm">ProfileSample</a> 
 demo and its associated documentation.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

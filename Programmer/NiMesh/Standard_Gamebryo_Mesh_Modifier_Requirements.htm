<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Standard Gamebryo Mesh Modifier Requirements</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Standard Gamebryo Mesh Modifier Requirements</h1>

<p>This page specifies the <a href="../../Reference/NiMesh/NiMeshRequirements.htm">NiMeshRequirements</a> 
 for the mesh modifiers that ship with Gamebryo. Objects with these modifiers 
 attached must have Mesh Profiles compatible with these requirements, or 
 export of the mesh will fail.</p>

<p>The particle system mesh modifiers are not listed because 
 streams for particle systems are created automatically and are not streamed 
 from the art tools.</p>

<h2><a href="../../Reference/NiMesh/NiInstancingMeshModifier.htm">NiInstancingMeshModifier</a></h2>

<p>Used for objects that are instanced.</p>

<p>When per-instance culling is enabled, the transforms 
 are processed for visibility and copied from the input transforms to the 
 output transforms, and the requirements are:</p>

<!--(Table)=========================================================-->
<table>
    <thead>
<tr>
<th>
Semantic</th>
<th>
Index</th>
<th>
Behavior</th>
<th>
ID</th>
<th>
Usage</th>
<th>
Access</th>
<th>
Format</th>
<th>
Notes</th>
</tr>
</thead>
<tbody>

<tr>
<td>
TRANSFORMS</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">FLOATER</span></td>
<td>
0</td>
<td>
<span class="NDLSystemFont">USER</span></td>
<td>
<span class="NDLSystemFont">CPU_READ | CPU_WRITE_MUTABLE</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_4</span></td>
<td>
The first row of a 3x4 matrix</td></tr>

<tr>
<td>
TRANSFORMS</td>
<td>
1</td>
<td>
<span class="NDLSystemFont">FLOATER</span></td>
<td>
0</td>
<td>
<span class="NDLSystemFont">USER</span></td>
<td>
<span class="NDLSystemFont">CPU_READ | CPU_WRITE_MUTABLE</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_4</span></td>
<td>
The second row of a 3x4 matrix</td></tr>

<tr>
<td>
TRANSFORMS</td>
<td>
2</td>
<td>
<span class="NDLSystemFont">FLOATER</span></td>
<td>
0</td>
<td>
<span class="NDLSystemFont">USER</span></td>
<td>
<span class="NDLSystemFont">CPU_READ | CPU_WRITE_MUTABLE</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_4</span></td>
<td>
The third row of a 3x4 matrix</td></tr>

<tr>
<td>
INSTANCETRANSFORMS</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">FLOATER</span></td>
<td>
0</td>
<td>
<span class="NDLSystemFont">USER</span></td>
<td>
<span class="NDLSystemFont">GPU_READ | CPU_WRITE_VOLATILE</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_4</span></td>
<td>
The first row of a 3x4 matrix</td></tr>

<tr>
<td>
INSTANCETRANSFORMS</td>
<td>
1</td>
<td>
<span class="NDLSystemFont">FLOATER</span></td>
<td>
0</td>
<td>
<span class="NDLSystemFont">USER</span></td>
<td>
<span class="NDLSystemFont">GPU_READ | CPU_WRITE_VOLATILE</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_4</span></td>
<td>
The second row of a 3x4 matrix</td></tr>

<tr>
<td>
INSTANCETRANSFORMS</td>
<td>
2</td>
<td>
<span class="NDLSystemFont">FLOATER</span></td>
<td>
0</td>
<td>
<span class="NDLSystemFont">USER</span></td>
<td>
<span class="NDLSystemFont">GPU_READ | CPU_WRITE_VOLATILE</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_4</span></td>
<td>
The third row of a 3x4 matrix</td></tr>
</tbody>
</table>



<p>Otherwise, the transforms are specified and used directly, 
 and the requirements are:</p>

<!--(Table)=========================================================-->
<table>
    <thead>

<tr>
<th>
Semantic</th>
<th>
Index</th>
<th>
Behavior</th>
<th>
ID</th>
<th>
Usage</th>
<th>
Access</th>
<th>
Format</th>
<th>
Notes</th>
</tr>
</thead>
<tbody>

<tr>
<td>
INSTANCETRANSFORMS</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">FLOATER</span></td>
<td>
0</td>
<td>
<span class="NDLSystemFont">USER</span></td>
<td>
<span class="NDLSystemFont">GPU_READ | CPU_WRITE_MUTABLE</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_4</span></td>
<td>
The first row of a 3x4 matrix</td></tr>

<tr>
<td>
INSTANCETRANSFORMS</td>
<td>
1</td>
<td>
<span class="NDLSystemFont">FLOATER</span></td>
<td>
0</td>
<td>
<span class="NDLSystemFont">USER</span></td>
<td>
<span class="NDLSystemFont">GPU_READ | CPU_WRITE_MUTABLE</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_4</span></td>
<td>
The second row of a 3x4 matrix</td></tr>

<tr>
<td>
INSTANCETRANSFORMS</td>
<td>
2</td>
<td>
<span class="NDLSystemFont">FLOATER</span></td>
<td>
0</td>
<td>
<span class="NDLSystemFont">USER</span></td>
<td>
<span class="NDLSystemFont">GPU_READ | CPU_WRITE_MUTABLE</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_4</span></td>
<td>
The third row of a 3x4 matrix</td></tr>
</tbody>
</table>



<h2><a href="../../Reference/NiMesh/NiMorphMeshModifier.htm">NiMorphMeshModifier</a></h2>

<p>Used for any object that is morphed (blend shapes in 
 Maya). The requirements depend on whether or not skinning is also done 
 on the mesh, and whether or not normals are updated. There are two sets 
 of requirements that might be satisfied: one if vertex sharing information 
 is present for normal updating, one if not.</p>

<p>Each morphed element adds a requirement for the output 
 stream and a requirement for each target stream that contribute to the 
 morph. If the position or normal is a morphed element, then that affects 
 the requirements for those streams. When morph mesh modifiers are changed 
 or attached <span class="NDLSystemFont">CalculateMorphBound </span>should 
 be called before the next <span class="NDLSystemFont">Update</span> call.</p>

<!--(Table)=========================================================-->
<table>
    <thead>

<tr>
<th>
Semantic</th>
<th>
Index</th>
<th>
Behavior</th>
<th>
ID</th>
<th>
Usage</th>
<th>
Access</th>
<th>
Format</th>
<th>
Notes</th>
</tr>
</thead>
<tbody>

<tr>
<td>
MORPHWEIGHTS</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">STRICT</span></td>
<td>
1</td>
<td>
<span class="NDLSystemFont">USER</span></td>
<td>
<span class="NDLSystemFont">CPU_READ | CPU_WRITE_MUTABLE</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_1</span></td>
<td>
All sets</td></tr>

<tr>
<td>
INDEX</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">CAN_SPLIT</span></td>
<td>
2</td>
<td>
<span class="NDLSystemFont">VERTEX_INDEX</span></td>
<td><span class="NDLSystemFont">CPU_READ</span></td>
<td>
<span class="NDLSystemFont">UNKNOWN</span></td>
<td>
Only if updating normals, all sets</td></tr>

<tr>
<td>
POSITION or POSITION_BP (if skinning)</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">STRICT</span> if morphing 
 positions, otherwise<span class="NDLSystemFont"> CAN_SPLIT</span></td>
<td>
3</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">CPU_READ | CPU_WRITE_MUTABLE 
 | CPU_WRITE_VOLATILE </span>(one of mutable or volatile only if morphing 
 positions)</td>
<td>
<span class="NDLSystemFont">FLOAT32_3 </span>if morphing 
 positions, otherwise<span class="NDLSystemFont"> UNKNOWN</span></td>
<td>
Only if updating normals or positions are a morph target, 
 all sets</td></tr>

<tr>
<td>
NORMAL or NORMAL_BP (if skinning)</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">STRICT</span> if morphing 
 normals, otherwise<span class="NDLSystemFont"> CAN_SPLIT</span></td>
<td>
4</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">CPU_READ | CPU_WRITE_MUTABLE 
 | CPU_WRITE_VOLATILE </span>(volatile instead of mutable only if morphing 
 normals)</td>
<td>
<span class="NDLSystemFont">FLOAT32_3 </span>if morphing 
 normals, otherwise<span class="NDLSystemFont"> UNKNOWN</span></td>
<td>
Only if updating normals or normals are a morph target, 
 all sets</td></tr>

<tr>
<td>
NORMALSHAREINDEX</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">CAN_SPLIT</span></td>
<td>
5</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">CPU_READ</span></td>
<td>
<span class="NDLSystemFont">UINT32_1</span></td>
<td>
Only if updating normals, Set 2</td></tr>

<tr>
<td>
NORMALSHAREGROUP</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">CAN_SPLIT</span></td>
<td>
6</td>
<td>
<span class="NDLSystemFont">USER</span></td>
<td>
<span class="NDLSystemFont">CPU_READ</span></td>
<td>
<span class="NDLSystemFont">UINT32_1</span></td>
<td>
Only if updating normals, Set 2</td></tr>

<tr>
<td>
Morphed semantic (not position or normal)</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">STRICT</span> </td>
<td>
...</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">CPU_WRITE_MUTABLE | CPU_WRITE_VOLATILE 
 </span>(volatile instead of mutable only if software skinning)</td>
<td>
<span class="NDLSystemFont">FLOAT32_3</span></td>
<td>
All sets</td></tr>

<tr>
<td>
Morphed semantic targets</td>
<td>
0 .. N</td>
<td>
<span class="NDLSystemFont">STRICT</span> </td>
<td>...</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">CPU_READ</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_3</span></td>
<td>
All sets</td></tr>
</tbody>
</table>



<h2><a href="../../Reference/NiMesh/NiSkinningMeshModifier.htm">NiSkinningMeshModifier</a></h2>

<p>Used for any skinned object. There are three sets of 
 requirements that a skinned mesh might satisfy, depending on whether just 
 positions are skinned (X), normals are skinned in addition to vertices 
 (XN), and whether tangents and binormals are also skinned (XNBT). Only 
 one set need be satisfied.</p>

<p>The requirements for a software skinned object are:</p>

<!--(Table)=========================================================-->
<table>
    <thead>

<tr>
<th>
Semantic</th>
<th>
Index</th>
<th>
Behavior</th>
<th>
ID</th>
<th>
Usage</th>
<th>
Access</th>
<th>
Format</th>
<th>
Notes</th>
</tr>
</thead>
<tbody>

<tr>
<td>
POSITION</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">STRICT</span></td>
<td>
1</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">G</span><span class="NDLSystemFont">PU_READ 
 | CPU_WRITE_MUTABLE</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_3 or FLOAT16_3 or 
 FLOAT16_4</span></td>
<td>
All sets</td></tr>

<tr>
<td>
POSITION_BP</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">STRICT</span></td>
<td>
2</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">CPU_READ | CPU_WRITE_STATIC</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_3 or FLOAT16_3 or 
 FLOAT16_4</span></td>
<td>
All sets</td></tr>

<tr>
<td>
NORMAL</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">STRICT</span></td>
<td>
3</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">GPU_READ | CPU_WRITE_MUTABLE</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_3 or FLOAT16_3 or 
 FLOAT16_4</span></td>
<td>
Sets XN and XNBT</td></tr>

<tr>
<td>
NORMAL_BP</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">STRICT</span></td>
<td>
4</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">CPU_READ | CPU_WRITE_STATIC</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_3 or FLOAT16_3 or 
 FLOAT16_4</span></td>
<td>
Sets XN and XNBT</td></tr>

<tr>
<td>
TANGENT</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">STRICT</span></td>
<td>
6</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">GPU_READ | CPU_WRITE_MUTABLE</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_3 or FLOAT16_3 or 
 FLOAT16_4</span></td>
<td>
Set XNBT</td></tr>

<tr>
<td>
TANGENT_BP</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">STRICT</span></td>
<td>
8</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">CPU_READ | CPU_WRITE_STATIC</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_3 or FLOAT16_3 or 
 FLOAT16_4</span></td>
<td>
Set XNBT</td></tr>

<tr>
<td>
BINORMAL</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">STRICT</span></td>
<td>
5</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">GPU_READ | CPU_WRITE_MUTABLE</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_3 or FLOAT16_3 or 
 FLOAT16_4</span></td>
<td>
Set XNBT</td></tr>

<tr>
<td>
BINORMAL_BP</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">STRICT</span></td>
<td>
7</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">CPU_READ | CPU_WRITE_STATIC</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_3 or FLOAT16_3 or 
 FLOAT16_4</span></td>
<td>
Set XNBT</td></tr>

<tr>
<td>
BLENDWEIGHT</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">STRICT</span></td>
<td>
9</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">CPU_READ | CPU_WRITE_STATIC</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_3 or FLOAT32_4 or 
 FLOAT16_3 or FLOAT16_4</span></td>
<td>
All sets</td></tr>

<tr>
<td>
BLENDINDICES</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">STRICT</span></td>
<td>
10</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">CPU_READ | CPU_WRITE_STATIC</span></td>
<td>
<span class="NDLSystemFont">UINT8_4 or FLOAT16_3 or FLOAT16_4</span></td>
<td>
All sets</td></tr>
</tbody>
</table>



<p>The requirements for a hardware skinned object are:</p>

<!--(Table)=========================================================-->
<table>
    <thead>

<tr>
<th>
Semantic</th>
<th>
Index</th>
<th>
Behavior</th>
<th>
ID</th>
<th>
Usage</th>
<th>
Access</th>
<th>
Format</th>
<th>
Notes</th>
</tr>
</thead>
<tbody>

<tr>
<td>
POSITION_BP</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">FLOATER</span></td>
<td>
0</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">G</span><span class="NDLSystemFont">PU_READ 
 | CPU_WRITE_STATIC</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_3 or FLOAT16_3 or 
 FLOAT16_4</span></td>
<td>
All sets</td></tr>

<tr>
<td>
NORMAL_BP</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">FLOATER</span></td>
<td>
0</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">G</span><span class="NDLSystemFont">PU_READ 
 | CPU_WRITE_STATIC</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_3 or FLOAT16_3 or 
 FLOAT16_4</span></td>
<td>
Sets XN and XNBT</td></tr>

<tr>
<td>
TANGENT_BP</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">FLOATER</span></td>
<td>
0</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">G</span><span class="NDLSystemFont">PU_READ 
 | CPU_WRITE_STATIC</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_3 or FLOAT16_3 or 
 FLOAT16_4</span></td>
<td>
Set XNBT</td></tr>

<tr>
<td>
BINORMAL_BP</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">FLOATER</span></td>
<td>
0</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">G</span><span class="NDLSystemFont">PU_READ 
 | CPU_WRITE_STATIC</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_3 or FLOAT16_3 or 
 FLOAT16_4</span></td>
<td>
Set XNBT</td></tr>

<tr>
<td>
BLENDWEIGHT</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">FLOATER</span></td>
<td>
0</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">G</span><span class="NDLSystemFont">PU_READ 
 | CPU_WRITE_STATIC</span></td>
<td>
<span class="NDLSystemFont">FLOAT32_3 or FLOAT32_4 or 
 FLOAT16_3 or FLOAT16_4</span></td>
<td>
All sets</td></tr>

<tr>
<td>
BLENDINDICES</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">FLOATER</span></td>
<td>
0</td>
<td>
<span class="NDLSystemFont">VERTEX</span></td>
<td>
<span class="NDLSystemFont">GPU_READ | CPU_WRITE_STATIC</span></td>
<td>
<span class="NDLSystemFont">UINT8_4 or NORMUINT8_4_BGRA 
 or INT16_4</span></td>
<td>
All sets</td></tr>

<tr>
<td>
BONE_PALETTE</td>
<td>
0</td>
<td>
<span class="NDLSystemFont">FLOATER</span></td>
<td>
0</td>
<td>
<span class="NDLSystemFont">USER</span></td>
<td>
<span class="NDLSystemFont">CPU_READ | CPU_WRITE_STATIC</span></td>
<td>
<span class="NDLSystemFont">UINT16_1</span></td>
<td>
All sets</td></tr>
</tbody>
</table>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Cloning a Skinned Object</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Cloning a Skinned Object</h1>

<p>When a skinned object is cloned, the bones are usually cloned
as well so that each instance of the skinned object can animate
independently. The separation of data between <span class=
"NDLSystemFont"><a href=
"../../Reference/NiMesh/NiSkinningMeshModifier.htm">NiSkinningMeshModifier</a></span>
and the various <span class="NDLSystemFont"><a href=
"../../Reference/NiMesh/NiDataStream.htm">NiDataStreams</a></span>
needed for skinning allows for maximum data sharing among
multiple independently-animating instances of a skinned object.
The default cloning implementation will have each instance of the
skinned object with its own <span class="NDLSystemFont"><a href=
"../../Reference/NiMesh/NiSkinningMeshModifier.htm">NiSkinningMeshModifier</a></span>
with pointers to its unique bones, but all the objects refer to
the same <span class="NDLSystemFont">BLENDWEIGHT</span>,
<span class="NDLSystemFont">BLENDINDICES</span>, <span class=
"NDLSystemFont">POSITION_BP</span>, <span class=
"NDLSystemFont">NORMAL_BP</span>, and <span class=
"NDLSystemFont">INDEX</span> data stream objects, as these are
generally given the <span class=
"NDLSystemFont">ACCESS_CPU_WRITE_STATIC</span> and <span class=
"NDLSystemFont">ACCESS_CPU_READ</span> flags.</p>

<p>The creation of a cloned skinned object's new <span class=
"NDLSystemFont"><a href=
"../../Reference/NiMesh/NiSkinningMeshModifier.htm">NiSkinningMeshModifier</a></span>
object with references to newly cloned bones is handled
internally by the Gamebryo cloning system, which is accessed by
calling <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiObject.htm#Cloning">NiObject::Clone</a></span>.
If a call to <span class="NDLSystemFont">Clone</span> is made at
a level in the scene graph that causes a skinned object to be
cloned without any of its bones being cloned, the skinned
characters will animate in lock-step with each other since they
are influenced by the same bones. If this is not desired
behavior, applications should ensure a call to <span class=
"NDLSystemFont">Clone</span> is made at a level in the scene
graph that is high enough to duplicate both bones and skin,
thereby allowing the bones, and therefore the skin, to be
animated independently.</p>

<table class="NDLNoteContainer" width="100%">
    <tr align="left">
        <td class="NDLNoteContainerTD">
            <p class="NDLHeadingNoteContainer">Note</p>

            <div class="NDLNote">
                A clone of a skinned object must be updated
                before rendering. This populates the output data
                streams of the clone.
            </div>
        </td>
    </tr>
</table>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

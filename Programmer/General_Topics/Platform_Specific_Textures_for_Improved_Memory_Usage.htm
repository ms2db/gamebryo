<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Platform-Specific Textures for Improved Memory Usage</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Platform-Specific Textures for Improved Memory Usage</h1>

<p>Platform-specific texture capabilities enable
 platform-specific source texture renderer data to be loaded directly into a
 renderer-specific resource at application load time, with two very beneficial
 results:</p>

<ul>
  <li>Improvements in "high water
   mark" behavior for texture memory at load time.  In other words, temporary
   memory allocations for texture format conversion will not be required if a
   platform-specific export option is requested in the art pipeline.</li>

  <li>Load time performance
   improvements, since there are no texture format conversions (including texture tiling in the case of Xbox360)
   at load time.</li>
</ul>
	
<p>These capabilities operate on the principle of streaming
 persistent versions of source texture renderer data to support
 platform-specific texture format conversions for "internal textures" (those
 included in a scene's NIF file) at export time.</p>

<p>Assuming that the specific platform can support the pixel
 format in question at application load time, the renderer will load the
 persistent source texture renderer data directly into a renderer-specific
 resource, bypassing the application-level NiPixelData object and all
 NiImageConverter-based texture conversion at load time entirely.</p>

<p>Use of platform-specific textures can reduce the "high
 water mark" for each texture by up to 50%, which is an important
 consideration, given that the majority of data by volume will likely be
 texture data.  These savings are especially important on consoles.</p>

<p>A caveat to this approach is that the texture is configured
 specifically for a target platform (or graphics card), and may not be
 loadable for use with alternative platforms or graphics cards, or with tools
 on the PC. If a texture is configured specifically for one target platform or
 graphics card, but an attempt is made to load it on a platform or graphics
 card that can't support it,
 <a href="../../Programmer/Texturing/Failures.htm">"error" replacement textures</a>
 are used to indicate load-time errors.</p>

<p>[Note that each time a platform SDK (e.g., Xbox360 XDK or
 Playstation3 SDK) changes, there is at least a possibility that the new SDK
 will cause textures to be formatted differently on that platform.  It is not
 likely to happen frequently, but the possibility exists.  In such a case, it
 may be desirable to re-export Nifs containing platform-specific textures
 using exporters built with that platform's most recent SDK version.]</p>

<p>See the reference information on
 <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiPersistentSrcTextureRendererData.htm">NiPersistentSrcTextureRendererData</a></span>
 for more details.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>General Gamebryo Programming Topics: Introduction</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>General Gamebryo Programming Topics: Introduction</h1>

<p>This section serves as a general introduction to Gamebryo programming: 
 its standards, objects, systems, and methodologies. It is designed 
 to give the newcomer to Gamebryo a high-level overview of each part of 
 the main Gamebryo libraries, as well as the conceptual models used in 
 the representation of specific objects. This section discusses how Gamebryo 
 represents a game world, how to load and save scenes, how to render these 
 scenes efficiently, and how to use other game-related features of the 
 engine.</p>
 
<p>Sections include:</p>

<ul>

	<li><a href="Programming_Basics.htm">Programming Basics</a>: describes Gamebryo's programming 
 standards, object systems, and basic programming concepts such as run-time type information  
 and memory management.</li>
	
	<li><a href="Scene_Graph_Basics.htm">Programming for a Scene Graph</a>: describes 
 Gamebryo's basic scene representation architecture and objects, such as 
 geometry objects and grouping nodes. </li>
	
	<li><a href="Rendering_a_Frame.htm">Programming 
 for Scene Rendering</a>: describes how Gamebryo represents rendering 
 hardware devices, and how surface appearance is specified per object.</li>
	
	<li><a href="Introduction_!Programming_Special_Effects.htm">
 Programming Special Effects</a>: describes 
 numerous built-in special-effects systems in Gamebryo, including dynamic 
 per-vertex lighting, projected textures, environment mapping, and shaders.</li>
	
	<li><a href="Creating_Content_in_the_Application_Itself.htm">Programming 
 for Content Import and Export</a>: describes how applications can 
 load artist-generated scene and animation content, as well as how applications 
 that wish to do so can export modified content directly.</li>
	
	<li><a href="Introduction_!Programming_Optional_Features.htm">Programming Optional 
 Features</a>: describes optional game-related features, such as 
 collision detection, 3D sound, and cell-portal scene culling.</li>
	
	<li><a href="Overview_!Programming_for_High_Performance.htm">Programming for 
 High Performance</a>: describes Gamebryo features and systems that 
 are designed to enable developers to use their application-specific knowledge 
 to achieve high-performance rendering.</li>
	
	<li><a href="Overview_of_Programming_for_Memory.htm">Programming 
 for Memory Usage</a>: describes how to work with Gamebryo's memory management 
 and tracking systems.</li>
	
	<li><a href="Software_Skinning.htm">Programming 
 Skinned Objects</a>: describes how Gamebryo handles skinning, with or 
 without hardware acceleration.</li>
	
	<li><a href="Overview_!Programming_with_Threads.htm">Programming 
 with Threads</a>: provides information on using Gamebryo in multi-threaded 
 applications.</li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

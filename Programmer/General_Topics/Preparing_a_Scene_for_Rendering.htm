<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Preparing a Scene for Rendering</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Preparing a Scene for Rendering</h1>

<p>Scene graphs contain three major hierarchically-inherited 
 sets of objects: transforms, rendering states (in the form of sets of 
 properties), and dynamic effect states (sets of lights and projected textures).&nbsp; 
 These values can be defined anywhere in the hierarchy, and they must be 
 composed down the hierarchy into the leaves prior to rendering those leaf 
 renderable objects.&nbsp; Thus, there are three major steps that must 
 be taken within the scene graph itself after related changes are made 
 to the scene, but before the next frame can be culled or rendered:&nbsp;1) 
 Update; 2) Update Properties; and 3) Update Effects. These steps update 
 items that do not and should not simply be updated every frame upon the 
 root of the scene - applications can generally be much smarter about updating 
 these items when and where the changes occur.&nbsp; These items and the 
 systems used to keep them up-to-date are:</p>

<ul>
	
	<li>The model-to-world 
 transforms of the objects must be up-to-date.&nbsp; This is accomplished 
 via the <span class="NDLSystemFont">NiAVObject::Update</span> and <span 
 class="NDLSystemFont">UpdateSelected</span> systems as described in the 
 sections <a href="Updating_the_Scene_Graph_Geometry.htm">Updating 
 the Scene Graph Geometry</a> and <a href="Making_Geometric_Update_Faster.htm">Making 
 Geometric Update Faster</a>.</li>
	
	<li>The renderable objects 
 must include a valid set of rendering state, which is built from the (possibly 
 hierarchical) set of rendering properties.&nbsp; This is generally accomplished 
 via the <span class="NDLSystemFont">NiAVObject::UpdateProperties</span> 
 function, which is described in the section <a href="Working_with_Properties.htm">Working 
 with Properties</a>. </li>
	
	<li>The renderable objects 
 must include a valid set of dynamic effect state (describing the lights 
 and projected texturing effects incident upon the object).&nbsp; This 
 is generally accomplished via the <span class="NDLSystemFont">NiAVObject::UpdateEffects</span> 
 system, which is described in the section <a href="Introduction_to_Dynamic_Effects.htm">Introduction 
 to Dynamic Effects</a>. </li>
</ul>

<p>Once all of these items are satisfied, then the renderable 
 object is ready to be culled and rendered. </p>


<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Threading and Renderers</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Threading and Renderers</h1>

<a name=Restricted_Thread_Behavior></a><h2>Restricted Thread 
 Behavior</h2>

<p>Many <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiRenderer.htm">NiRenderer</a></span> 
 functions operate under restricted thread behavior, which means they can 
 only be legally called by specific threads. The identity of that thread 
 will vary according to the platform. In some renderers, these functions 
 will need to be called only from the thread that created the renderer, 
 while in other renderers, the functions can only be called by a thread 
 that has "ownership" of the renderer, where ownership can be 
 transferred from one thread to another. The <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiRenderer.htm">NiRenderer</a></span> 
 class reference indicates which functions operate under restricted thread 
 behavior.</p>

<p>It is possible to gate <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiRenderer.htm">NiRenderer</a></span> 
 access using the functions <span class="NDLSystemFont">NiRenderer::LockRenderer</span> 
 and <span class="NDLSystemFont">UnlockRenderer</span> so that only one thread 
 at a time is calling the <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiRenderer.htm">NiRenderer</a></span> 
 functions. This does not nullify the need to respect the restricted thread 
 behavior of functions, however.</p>

<p>The behavior of each <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiRenderer.htm">NiRenderer</a></span> 
 function with respect to threads is described in its reference documentation. 
 In addition, any renderer-specific behavior or considerations are discussed 
 in greater detail in that renderer's documentation.</p>

<h2>Resource Creation</h2>

<p>During loading, <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiSourceTexture.htm">NiSourceTexture</a></span> 
 and <span class="NDLSystemFont"><a href="../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span> 
 objects can require the renderer to create resources, potentially from 
 a background thread. Each renderer has ensured that the functions required 
 for this process are thread safe.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

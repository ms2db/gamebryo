<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Static Gamebryo Objects and Object Lifetime</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Static Gamebryo Objects and Object Lifetime</h1>

<p>Gamebryo is designed to avoid pre-main allocations and
post-main de-allocations of heap-based objects. This approach
has several key benefits, one of which is the ability to track
post-application leaks.</p>

<p>Gamebryo initializes and allocates application-lifetime
objects via the function <span class=
"NDLSystemFont">NiInit()</span> and the related class
<span class="NDLSystemFont"><a href=
"../../Reference/NiSystem/NiStaticDataManager.htm">NiStaticDataManager</a></span>. 
Shutdown and release of all Gamebryo resources is accomplished
via <span class="NDLSystemFont">NiShutdown()</span>. The following are some key points:</p>

<ul>
    <li>Applications must ensure that <span class=
    "NDLSystemFont">NiInit()</span> is called prior to any
    Gamebryo-related operations.</li>

    <li>Applications must call <span class=
    "NDLSystemFont">NiShutdown()</span> prior to exiting main,
    but after deleting all application-created Gamebryo
    objects.</li>
</ul>

<p>As a result, applications should not create statically
allocated Gamebryo objects. Also, statically allocated smart pointers should <em>not</em> be left pointing to Gamebryo objects post-main.</p>

<table class="NDLNoteContainer" width="100%">
    <tr align="left">
        <td class="NDLNoteContainerTD">
            <p class="NDLHeadingNoteContainer">Note</p>

            <div class="NDLNote">
                The static data manager for each Gamebryo library
                is activated when the top-level header file for
                that library is included. For example, the static
                data manager for the <span class=
                "NDLSystemFont">NiAnimation</span> library will
                not be initialized unless <span class=
                "NDLSystemFont">NiAnimation.h</span> is included
                by an application. Including this top-level
                library header is also necessary for streaming
                NIF files. See <a href=
                "../Object_Systems/Static_Data_Management_Internals.htm">
                Static Data Manager Internals</a> for
                detailed information.
            </div>
        </td>
    </tr>
</table>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

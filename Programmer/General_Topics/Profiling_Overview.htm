<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Profiling Overview</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Introduction to Performance Profiling</h1>

<p>Modern games are very large applications with a variety 
 of performance considerations. When a game is running slowly, it is no 
 longer a simple case of checking one or two things to determine what is 
 slowing a game down. Modern games run on multiple general-purpose and 
 specific-purpose processors each of which has distinct computational, 
 cache, and bus interaction behaviors. Determining precisely which of these 
 areas, or worse what combination of these areas, is slowing down your 
 application can be a significant undertaking. The following section discusses 
 approaches for profiling and analyzing applications to determine what 
 is causing visual slowdown in an application.</p>

<p>This section of the documentation is broken up into 
 several important subsections. The first sections outline how to get good 
 measurements of performance so you can determine where in your application 
 the bottlenecks are occurring. The next sections discuss ways to optimize 
 your application based off which section the bottleneck is detected in. 
 The final section discusses approaches to get additional information if 
 all else fails. It includes a discussion of sampling profilers, unmasking 
 exceptions, and other low level approaches.</p>

<p>The important thing to remember is that performance 
 is never a cut and dry issue. At some point, you will have to make tradeoffs 
 or place limits on the art and level design of your game. For this reason, 
 it is good to make sure an occasional performance profile is done throughout 
 development rather than just at the end. Nothing is worse than going to 
 your producer near your ship date to tell him that you have to delay a 
 game to take some time to reduce the vertex count on every model in the 
 game because you're tied up in the vertex engine of your GPU.</p>



<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

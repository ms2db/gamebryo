<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Transformations and Coordinate Systems</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Transformations and Coordinate Systems</h1>

<p>Each <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiAVObject.htm">NiAVObject</a></span> 
 has its own set of modeling space to world space transforms, and all direct 
 children of a <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiAVObject.htm">NiAVObject</a></span> 
 are defined in their parent's coordinate system.&nbsp; This organization 
 forms a hierarchy of coordinate systems, useful for articulated bodies 
 and a wealth of other types of object representations.</p>

<p>More specifically, the transformation from the model 
 space of a given <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiAVObject.htm">NiAVObject</a></span> 
 O with parent P to world space is given by:</p>

<p>O<sub>M&rarr;W</sub> 
 = P<sub>M&rarr;W</sub> 
 [ O<sub>T</sub> O<sub>R</sub> O<sub>S</sub> ]</p>

<p>where:</p>

<!--(Table)=========================================================-->
<table>
    <thead>
        <tr>
            <th>
                Variable
            </th>
            <th>
                Meaning
            </th>
        </tr>
    </thead>
    <tbody>

<tr>
<td>
P<sub>M&rarr;W</sub></td>
<td>

	is the parent object's model to world space 
 transform</td></tr>

<tr>
<td>
O<sub>T</sub></td>
<td>

	is O's translation matrix (which is a pure 
 translation matrix)</td></tr>

<tr>
<td>
O<sub>R</sub>&nbsp;</td>
<td>

	is O's rotation matrix (which is a pure rotation 
 matrix - i.e. orthonormal)</td></tr>

<tr>
<td>
O<sub>S</sub></td>
<td>

	is O's scaling matrix (which is a pure <em>uniform</em> 
 scaling matrix)</td></tr>
</tbody>
</table>


<p>Note that each of the three transformation components 
 is not stored as a separate matrix, but rather is stored using as little 
 information as possible.&nbsp; Specifically, a 3 by 3 matrix for rotation, 
 a vector for translation, and a scalar for scale are used.</p>

<p>This set of transforms defines three distinct coordinate 
 systems for each object:&nbsp; a Model coordinate system, which is defined 
 by the set of all transforms from the root of the scene graph to the object; 
 a Local coordinate system, which is equivalent to the object's parent's 
 Model coordinate system (i.e. it is the object's Model coordinate system 
 without the object's own transforms); and the World coordinate system, 
 which is the same for all objects in a given scene graph.</p>

<p>So, points transform in the following way:</p>

<p>v<sub>L</sub> = [ O<sub>T</sub> O<sub>R</sub> O<sub>S</sub> 
 ] v<sub>M</sub></p>

<p>v<sub>W</sub> = P<sub>M&rarr;W</sub> 
 v<sub>L</sub></p>

<p>where:</p>



<!--(Table)=========================================================-->
<table>
    <thead>
        <tr>
            <th>
                Variable
            </th>
            <th>
                Meaning
            </th>
        </tr>
    </thead>
    <tbody>

<tr>
<td>

	v<sub>M</sub></td>
<td>

	is the point in the given object's Model 
 coordinate system</td></tr>

<tr>
<td>

	v<sub>L</sub></td>
<td>

	is the point in the given object's Local 
 coordinate system</td></tr>

<tr>
<td>

	v<sub>W</sub></td>
<td>

	is the point in the world coordinate system</td></tr>
</tbody>
</table>

<div class="FigureContainer">
    <img src="./images/image002_01.jpg" width="447" height="278" />
    <p class="FigureCaption">Scene Graph Hierarchy and Hierarchical Coordinate Systems</p>
</div>

<p>In order to render an object in world space, it is necessary 
 to transform into additional coordinate systems. For more information 
 on this, including the camera's coordinate system, please see <a href="Viewing_Meshes.htm">Viewing 
 Meshes</a>.</p>
 
<h2>Conventions</h2>

<ul>
	
	<li>Gamebryo uses a right-handed 
 coordinate system.</li>
	
	<li>No axis is required 
 to be up, although <a href="../../Reference/NiMain/NiCamera.htm">NiCamera</a> 
 defaults to Y as up.</li>
	
	<li><a href="../../Reference/NiMain/NiMatrix3.htm">NiMatrix3</a> 
 rotations are <b>clockwise</b> about an axis, when looking down the axis 
 toward the origin. Also translation vectors are column vectors.</li>
	
	<li><a href="../../Reference/NiMain/NiQuaternion.htm">NiQuaternion</a> 
 rotations are <b>counter-clockwise</b> about an axis, when looking down 
 the axis toward the origin.</li>
</ul> 

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

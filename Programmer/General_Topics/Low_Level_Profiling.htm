<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Low Level Profiling</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Low Level Profiling</h1>

<p>Sometimes it is very difficult to get performance data 
 on your application from code timings, and other times you need more invasive 
 data collection. At these times, it can be very useful to use lower level 
 profiling tools that measure clock cycles, function calls, etc. This section 
 outlines the use of some sampling profiliers of various types for various 
 platforms. It also discusses the use of performance counters on the CPU 
 or GPU to take very specific measurements of various processor events. 
 </p>

<p><b>N.B.</b>
 All of 
 the tools described herein are very complicated, and this guide barely 
 scratches the surface of what they can do. Make sure you refer to the 
 documentation for each tool to insure that you are using it correctly.</p>

<h2>Sampling Profilers</h2>

<p>Sampling profilers come in several types. These profilers 
 measure the program counter or other processor specific counters of an 
 application and compare the information with debug information of a program 
 to determine what the processor is executing at each sample. Sampling 
 profilers generally only sample the main CPU of a system. Sampling profilers 
 are good for measuring programs that do not vary much over time as they 
 need to collect several frames of data. Some sampling profilers for various 
 platforms are discussed below.</p>

<h3>Intel VTune Performance Profiler</h3>

<p>Under Win32 builds of Gamebryo, all build configurations 
 produce debugging data, which is necessary for profiling tools such as 
 VTune. Building the Shipping configuration will produce the most highly 
 optimized code, along with the needed debugging data. VTune supports a 
 variety of sampling options as well as hierarchical call graph information. 
 Because it uses specific hardware counters available only on Intel chipsets, 
 you must have an Intel processor installed for VTune to work.</p>

<h3>AMD CodeAnalyst</h3>

<p>CodeAnalyst is a free tool available from AMD for use 
 on AMD Athlon processors. Use the Shipping configuration to build release 
 libraries with debug information for use with CodeAnalyst. Because it 
 uses specific hardware counters available only on AMD chipsets, you must 
 have an AMD processor installed for CodeAnalyst to work.</p>

<h2>Using System Counters</h2>

<p>It is also possible to use various system counters to 
 record clock cycle level information. This is especially true on consoles 
 where there is only one type of hardware making it easy to define interfaces. 
 This document only discusses system counters that are available using 
 Gamebryo interfaces or developer tools. Check the documentation for your 
 platform to see if additional performance counters are available to you.</p>

<h3>PIX for Windows
 and Xenon</h3>

<p>Starting with DirectX 9.0c on PC and always on applicable 
 consoles, Microsoft provides the PIX tool for performance profiling. PIX 
 is very useful for tracking data within the DirectX API or the GPU. PIX 
 is a very full featured tool. Please refer to the documentation on PIX 
 to determine what information you can track with it. Some of the most 
 useful data to track on PC is calls to <span class="NDLSystemFont">DrawIndexedPrimitive</span> 
 and resource allocation for vertex buffers or textures. PIX for Windows 
 also has access to several system level counters for tracking processor 
 usage, disk access, and other macro level performance counters.</p>



<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

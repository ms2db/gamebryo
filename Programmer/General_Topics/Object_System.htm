<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Object System</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Object System</h1>

<p>The base class <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiObject.htm">NiObject</a></span> 
 supports various object-oriented systems. <a href="../Object_Systems/Run_Time_Type_Information.htm">Run-time 
 type information</a> (or RTTI) is supported for single inheritance.&nbsp; 
 This mechanism enables applications to determine the exact (or parent) 
 type of object that is referenced by a given pointer.&nbsp; The system 
 may also be used to determine if the object referenced by a pointer is 
 of a given type or any subclass of that type.&nbsp; Finally, type-safe 
 casts down the class hierarchy may be made.</p>

<p>Reference counting for shared objects is supported by 
 <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiRefObject.htm">NiRefObject</a></span>, 
 and made simpler to use through the use of <em><a href="../Object_Systems/Reference_Counting_and_Smart_Pointers.htm">smart 
 pointers</a></em>.&nbsp; Each <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiRefObject.htm">NiRefObject</a></span> 
 maintains a count of the number of pointers to it, as well as automatic 
 destruction when the last reference to an object is released. The templated 
 type <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiPointer.htm">NiPointer</a></span> 
 allows for automatic management of reference counts to shared objects 
 with familiar C/C++ pointer semantics.</p>

<p><a href="../Object_Systems/Streaming.htm">Streaming</a> 
 is supported for both file I/O and memory buffers.&nbsp; File streams 
 support long-term persistence of data with standard load and save operations.&nbsp; 
 Memory streams support incremental loading of files and transfer of content 
 across networks.</p>

<p>Applications may have specific data that is associated 
 with an object.&nbsp; Support for attaching <a href="../Object_Systems/Extra_Data.htm">extra 
 data</a> is provided by the <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiObject.htm">NiObject</a></span> 
 subclass, <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiObjectNET.htm">NiObjectNET</a></span>.&nbsp; 
 The extra data system itself supports run-time type information and streaming.&nbsp; 
 <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiObjectNET.htm">NiObjectNET</a></span> 
 also adds support for <span class="NDLSystemFont"><a href="../Object_Systems/Time_Controllers.htm">NiTimeControllers</a></span> 
 (a form of animation <span style="color: windowtext; text-underline: none;">behavior</span> 
 described below) and name strings.</p>

<p>Run-time type information, smart pointers, streaming, 
 and extra data support are described in detail in the <a href="../Object_Systems/Introduction_to_Object_Systems.htm">Object 
 System documentation</a>.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

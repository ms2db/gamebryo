<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Threading and Textures</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Threading and Textures</h1>

<p>Textures can automatically be shared between foreground 
 and background threads by using an <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiTexturePalette.htm">NiTexturePalette</a></span> 
 object. Operations performed by Gamebryo such as rendering, loading, converting, 
 or sharing textures are thread safe. For example, the rendering process 
 monitors a critical section to make sure that the rendering process does 
 not try to create renderer data for a shared texture at the same time 
 that <span class="NDLSystemFont">NiSourceTexture::PostLinkObject</span> 
 does. If your application manipulates textures across multiple threads, 
 you must insure that shared textures are not modified in one thread while 
 rendering with those textures occurs in another thread.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

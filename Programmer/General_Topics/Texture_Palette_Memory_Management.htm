<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Texture Palette Memory Management</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Texture Palette Memory Management</h1>

<p>Texture palettes allow textures to be shared across NIF files. For details about how this works, see the <a href="../Object_Systems/Streaming.htm">streaming</a> documentation. Texture palettes are contained within <a href="../../Reference/NiMain/NiStream.htm">NiStream</a> objects. Texture palettes cache textures by holding references (smart pointers) to the texture data.</p>

<p>The default implementation for texture palettes, 
<a href="../../Reference/NiMain/NiDefaultTexturePalette.htm">NiDefaultTexturePalette</a>, 
contains no logic for releasing its references to textures that are no longer required. Thus, texture palettes can accumulate references to a significant amount of memory over time. There are two ways to free these references and allow the texture memory to be reclaimed:</p>

<ul>
  <li>Delete the NiStream instance that contains the texture palette</li>
  <li>Assign a new texture palette to the NiStream instance</li>
</ul>

<p>A new texture palette can be assigned to an NiStream instance as follows:</p>

<p><span class="NDLSystemFont">stream.SetTexturePalette(NiNew NiDefaultTexturePalette);</span></p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

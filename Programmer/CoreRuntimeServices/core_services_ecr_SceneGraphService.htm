<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Scene Graph Service Overview</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Scene Graph Service Overview</h1>

<p>The <a href=
"../../Reference/QuickRef_Services/svc_qckref_scene_graph_svc.htm">
<span class="NDLSystemFont">ecr::SceneGraphService</span>
class</a> interfaces the Game Framework to the <a href=
"../General_Topics/Scene_Graph_Basics.htm">Core Runtime scene
graph</a>.</p>

<p>Scene graphs are usually created when an entity is discovered
that has the NifAsset property. Other services can also add scene
graphs to the scene graph service. These external scene graphs
can optionally be associated with entities. See the <a href=
"../../Reference/ecr/ecr__SceneGraphService.htm#entity_scene_graph_functions">
reference documentation</a> for more details.</p>

<p><span class="NDLSystemFont">AnimationService</span>,
<span class="NDLSystemFont">ProxyService</span>, and <span class=
"NDLSystemFont">PropertyVisualizationService</span> are all
examples of external services that interact with the <span class=
"NDLSystemFont">SceneGraphService</span> in this way. These
services can use the <span class=
"NDLSystemFont">OnSceneGraphAdded</span>, <span class=
"NDLSystemFont">OnSceneGraphRemoved</span>, and <span class=
"NDLSystemFont">OnSceneGraphsUpdated</span> messages sent out by
the <span class="NDLSystemFont">SceneGraphService</span> to be
notified of changes to scene graphs.</p>

<p>Games that know that certain scene graphs are going to be
created repeatedly can use <span class=
"NDLSystemFont">SceneGraphService</span>'s caching functions.
Assets that are cached will always be loaded and ready to be
inserted into the game, even if no current entities are using
those assets. If those assets were not cached, then there may be
a delay as the asset is loaded from disk.</p>

<p>The <span class="NDLSystemFont">SceneGraphService</span> class
provides access to an <a href=
"../../Reference/NiFloodgate/NiSPWorkflowManager.htm"><span class="NDLSystemFont">
NiSPWorkflowManager</span></a> object that is used to manage
<a href=
"../../Programmer/NiFloodgate/Floodgate_Programming_Guide.htm">Floodgate</a>
task submission across multiple services. Application-specific
services should also use this workflow manager when one is
required.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

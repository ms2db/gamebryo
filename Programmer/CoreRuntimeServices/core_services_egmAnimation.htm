<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>The egmAnimation Library</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>The egmAnimation Library</h1>

<p>The <a href=
"../../Reference/QuickRef_Services/svc_qckref_animation_svc.htm"><span class="NDLSystemFont">
egmAnimation::AnimationService</span> class</a> interfaces the
Game Framework to the <a href=
"../../Reference/NiAnimation/Introduction_to_Animation.htm">Core
Runtime animation system</a>. The <span class=
"NDLSystemFont">AnimationService</span> is the only service that
this library provides.</p>

<h3>Creating and Manipulating Actors</h3>

<p>Entities that have the KfmAsset property are automatically
discovered by the <span class=
"NDLSystemFont">AnimationService</span> and are updated and
rendered. There is no way to directly add actors to the
<span class="NDLSystemFont">AnimationService</span> without
creating an entity.</p>

<p>The underlying actors in the core runtime animation system can
be accessed via either C++ or through Lua built-ins. Most of the
functionality from <span class=
"NDLSystemFont">NiActorManager</span> is exposed in both of these
places. This allows both other services and script code to change
the current animation, activate or deactivate sequences, and
listen for text key callbacks. In addition, text key callbacks
can be tied to behaviors so that the callback can be handled in
script code.</p>

<h3>Caching</h3>

<p>Games that know ahead of time that certain animation assets
may be spawned repeatedly can use <span class=
"NDLSystemFont">AnimationService</span>'s caching functions.
Assets that are cached will always be loaded and ready to be
inserted into the game, even if no current entities are using
those assets. If those assets were not cached, then there may be
a delay as the asset is loaded from disk.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

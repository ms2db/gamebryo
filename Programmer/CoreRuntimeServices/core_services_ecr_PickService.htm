<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Pick Service Overview</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Pick Service Overview</h1>

<p>The <a href=
"../../Reference/QuickRef_Services/svc_qckref_pick_svc.htm"><span class="NDLSystemFont">
ecr::PickService</span> class</a> interfaces the Game Framework
to the <a href="../../Reference/NiCollision/NiPick.htm">picking
functionality</a> provided by the Core Runtime <a href=
"../../Reference/NiCollision/Introduction_to_Collision.htm">NiCollision</a>
library. Applications wishing to perform picking operations from
script or other services will typically register an instance of
the <span class="NDLSystemFont">ecr::PickService</span> class
with the <a href=
"../../Reference/efd/efd__ServiceManager.htm">ServiceManager</a>.</p>

<p>The Pick Service does not perform any work in its <span class=
"NDLSystemFont">OnTick</span> functions. It does not handle any
messages. All functionality is invoked through built-in scripting
behaviors or C++ functions.</p>

<h3>Built-in Functions for Scripting</h3>

<p>The Pick Service provides two bindings to script: <span class=
"NDLSystemFont">ecr.ClosestObjectOnRay</span> and <span class=
"NDLSystemFont">ecr.DistanceToEntityAlongRay</span>. These are
found in the <a href=
"../../Reference/Namespaces/bapiCoreRuntime.htm"><span class=
"NDLSystemFont">bapiCoreRuntime</span></a> namespace. To access
them in a behavior script, place the following in a Config file
for the application:</p>
<pre>
    [ScriptEngine.Lua]
    LoadBuiltin#=ecrLua!luaopen_ecr
</pre>

<h3>Built-in Functions for C++ Access</h3>

<p>The <a href=
"../../Reference/ecr/ecr__PickService.htm"><span class=
"NDLSystemFont">ecr::PickService</span></a> class includes
functions for picking from a single entity's scene graph or all
of the entities known to the <a href=
"core_services_ecr_SceneGraphService.htm">SceneGraphService</a>.
The <a href=
"../../Reference/NiCollision/NiPick__PickObjectPolicy.htm">policy</a>
to be used for picking may be specified on a per-model basis.
This allows picking to be tailored for different types of
entities, with the types specified by the level designer.</p>

<p>Arguments to the <span class=
"NDLSystemFont">ecr::PickService</span> class constructor
determine the default policy for picking operations.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

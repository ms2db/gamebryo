<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Render Service Overview</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Render Service Overview</h1>

<p>The <a href=
"../../Reference/QuickRef_Services/svc_qckref_render_svc.htm"><span class="NDLSystemFont">
ecr::RenderService</span> class</a> interfaces the Game Framework
to the <a href="../General_Topics/Rendering_a_Frame.htm">Core
Runtime rendering system</a>, including the appropriate
platform-specific <a href=
"../../Reference/NiMain/NiRenderer.htm"><span class=
"NDLSystemFont">NiRenderer</span></a>-derived object. Several
additional classes work with the render service to provide
surfaces to render to and other support. Applications wishing to
render objects to a window will typically register an instance of
the <span class="NDLSystemFont">ecr::RenderService</span> class
with the <a href=
"../../Reference/efd/efd__ServiceManager.htm">ServiceManager</a>.</p>

<p>Games using the render service will also need to create their
own render context and surface for the <span class=
"NDLSystemFont">RenderService</span> to use. Render surfaces are
the primary point of entry into the core runtime <a href=
"../Frame_Rendering_System/Introduction_to_the_Frame_Rendering_System.htm">
frame rendering system</a>. This can be used to construct a
custom rendering pipeline. Here is some example code to do
this:</p>
<pre>
RenderService* pRenderService;

RenderContext* pRenderContext = EE_NEW RenderContext(pRenderService);
pRenderService-&gt;AddRenderContext(pRenderContext);
RenderSurfacePtr spSurface = pRenderService-&gt;CreateRenderSurface(NULL);
pRenderContext-&gt;AddRenderSurface(spSurface);
pRenderService-&gt;SetActiveRenderSurface(spSurface);
</pre>

<a name="Linking" id="Linking"></a><h2>Library dependencies</h2>

<p>The render service makes use of some additional libraries to perform
renderer creation on Win32, and applications that use the service must link in these
libraries. The base library that applications must link in is <a href=
"../../Reference/NiSettingsDialog/NiSettingsDialog_Introduction.htm"><span class=
"NDLSystemFont">NiSettingsDialog</span></a>. This library is necessary even if the
dialog itself will not be displayed. If the dialog will be used, then the associated 
resource file <span class="NDLSystemFont">NiSettingsDialogResource.rc</span> 
must also be linked in to the application.</p>

<p>In addition to <span class="NDLSystemFont">NiSettingsDialog</span>, applications
must also link in a renderer setup library (and include the respective library header file) for each renderer 
that the application will support. It is possible to link in multiple libraries, 
if the application wants to support multiple rendering APIs in the same build. The available libraries are:

<table>
    <thead>
        <tr>
            <th>Library</th>
            <th>Header</th>
            <th>Renderer</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td><span class="NDLSystemFont"><a href = "../../Reference/NiDX9RendererSetup/NiDX9RendererSetup_Introduction.htm">NiDX9RendererSetup</a></span></td>
            <td>NiDX9RendererSetup.h</td>
            <td><span class="NDLSystemFont"><a href = "../../Reference/NiDX9Renderer/Introduction_to_the_DX9Renderer.htm">NiDX9Renderer</a></span></td>
        </tr>
        <tr>
            <td><span class="NDLSystemFont"><a href = "../../Reference/NiD3D10RendererSetup/NiD3D10RendererSetup_Introduction.htm">NiD3D10RendererSetup</a></span></td>
            <td>NiD3D10RendererSetup.h</td>
            <td><span class="NDLSystemFont"><a href = "../../Reference/NiD3D10Renderer/Introduction_to_the_D3D10Renderer.htm">NiD3D10Renderer</a></span></td>
        </tr>
        <tr>
            <td><span class="NDLSystemFont"><a href="../../Reference/ecrD3D11RendererSetup/Introduction_to_ecrD3D11RendererSetup_Class_Reference.htm">ecrD3D11RendererSetup</a></span></td>
            <td>ecrD3D11RendererSetup/D3D11RendererSetup.h</td>
            <td><span class="NDLSystemFont"><a href="../../Reference/ecrD3D11Renderer/Introduction_to_the_D3D11Renderer.htm">ecrD3D11Renderer</a></span></td>
        </tr>    </tbody>
</table> 

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

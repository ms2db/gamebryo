<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>The egmToolServices Library</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>The egmToolServices Library</h1>

<p>Most classes in this library implement Toolbench or World
Builder functionality and are not designed for use in shipping
games.</p>

<h2>Environment Service</h2>
  <p>
   <a href="../egmToolServices/egmTerrain_ToolEnvironmentService.htm">
   <span class="NDLSystemFont">egmToolServices::ToolEnvironmentService</span></a>
    provides the necessary functionality to customize Time Of Day editable objects within
    Toolbench.
  </p>
  
<h2>GizmoService</h2>

<p><a href=
"../../Reference/QuickRef_Services/svc_qckref_gizmo_svc.htm"><span class="NDLSystemFont">
egmToolServices::GizmoService</span></a> manages interaction
between the World Builder interface and its <em>gizmos</em>,
interface controls for manipulating entities in the world.</p>

<p>Gizmos implement <a href=
"../../Reference/egmToolServices/egmToolServices__IGizmo.htm"><span class="NDLSystemFont">
egmToolServices::IGizmo</span></a> and typically derive from the
<a href=
"../../Reference/egmToolServices/egmToolServices__BaseGizmo.htm"><span class="NDLSystemFont">
egmToolServices::BaseGizmo</span></a> class, though this is not
required. Minimally, each gizmo must respond to mouse input
events, hit testing, and scale itself to fit in the current
camera view. Some examples of gizmos are the <span class=
"NDLSystemFont">TranslationGizmo</span>, <span class=
"NDLSystemFont">CreationGizmo</span>, and <span class=
"NDLSystemFont">SelectionGizmo</span> classes.</p>

<h2>GridService</h2>

<p><a href=
"../../Reference/QuickRef_Services/svc_qckref_grid_svc.htm"><span class="NDLSystemFont">
egmToolServices::GridService</span></a> draws the grid lines in
World Builder's render view. It contains methods for controlling
the visibility, color, and spacing of the grid lines.</p>

<h2>InteractionService</h2>

<p><a href=
"../../Reference/QuickRef_Services/svc_qckref_interaction_svc.htm">
<span class=
"NDLSystemFont">egmToolServices::InteractionService</span></a>
dispatches user input events to its collection of <a href=
"../../Reference/egmToolServices/egmToolServices__IInteractableService.htm">
<span class="NDLSystemFont">IInteractableService</span></a>
objects in a consistent order. This is done to prevent these
services from competing for mouse input, as nondeterministic
behavior could otherwise ensue.</p>

<p>Currently there are only two <span class=
"NDLSystemFont">IInteractableService</span> implementations:
<span class="NDLSystemFont">egmToolServices::GizmoService</span>
and <span class=
"NDLSystemFont">egmToolServices::ToolCameraService</span>.
<span class="NDLSystemFont">GizmoService</span> has higher
priority, allowing it to perform hit testing between the mouse
cursor and the active gizmo before falling back to camera control
through <span class="NDLSystemFont">ToolCameraService</span>.</p>

<h2>SelectionService</h2>

<p><a href=
"../../Reference/QuickRef_Services/svc_qckref_selection_svc.htm"><span class="NDLSystemFont">
egmToolServices::SelectionService</span></a> handles entity
selection for Toolbench. <span class=
"NDLSystemFont">SelectionService</span> maintains a render view
which is responsible for highlighting selected entities and
providing visual feedback for box selections. The selection
service also maintains the definitive list of selected entities
and provides accessors for use by Toolbench and other
services.</p>

<h2>Terrain Service</h2>
  <p>
   <a href="../egmToolServices/egmTerrain_ToolTerrainService.htm">
   <span class="NDLSystemFont">egmToolServices::ToolTeraainService</span></a>
   provides functional support like editing and saving the terrain for tool applications such as 
   World Builder.
  </p>

<h2>ToolCameraService</h2>

<p><a href=
"../../Reference/QuickRef_Services/svc_qckref_tool_camera_svc.htm">
<span class=
"NDLSystemFont">egmToolServices::ToolCameraService</span></a>
implements the <a href=
"../../Tools/WorldBuilder/wb_world_camera_navigation.htm">World
Builder camera motion model</a>. User input events not consumed
by <span class="NDLSystemFont">GizmoService</span> are processed
by the tool camera service. The service maintains a list of
<span class="NDLSystemFont">egmToolServices::ICameraMode</span>
instances, routing user input events to the active <span class=
"NDLSystemFont">ICameraMode</span>. Currently there are three
implemented camera modes: <span class=
"NDLSystemFont">StandardCameraMode</span>, <span class=
"NDLSystemFont">PanCameraMode</span>, and <span class=
"NDLSystemFont">OrbitCameraMode</span>; all are accessible
through the Toolbench user interface.</p>

<h2>ToolSceneService</h2>

<p>The <a href=
"../../Reference/QuickRef_Services/svc_qckref_tool_scene_svc.htm">
<span class=
"NDLSystemFont">egmToolServices::ToolSceneGraphService</span></a>
class interfaces Game Framework-based tools to the <a href=
"../NiTerrain/Introduction_to_NiTerrain_Library.htm">Core Runtime
scene graph</a> via the <span class="NDLSystemFont"><a href=
"../../Reference/QuickRef_Services/svc_qckref_scene_graph_svc.htm">
ecr::SceneGraphService</a></span>. This service is responsible
for toggling scene animations and default lights when those
settings are changed in Toolbench.</p>

<h2>ToolSnapService</h2>

<p>The <a href=
"../../Reference/QuickRef_Services/svc_qckref_tool_snap_svc.htm"><span class="NDLSystemFont">
egmToolServices::ToolSnapService</span></a> class is responsible
for maintaining a list of snap points and snapping to those
points as requested. These snap points can be created in the art
package by artists and used to assist in positioning entities in
tools. It also maintains a "stickiness" radius used to determine
whether to snap two entities together.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Logging, asserts, and debuggers overview</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Logging, asserts, and debuggers overview</h1>

<p>Logging and assertion capabilities in Gamebryo LightSpeed provide
powerful tools that you can use to diagnose problems and verify
system operation. These capabilities go well beyond those found
in standard logging and assertion systems. They are designed
to be powerful enough to meet most of your needs out of the box.
They are also flexible and configurable. You can tailor logging
and assertion behaviors to suit your specific requirements. For
example, you can configure the logger to filter log messages
based on modules, which will have a drastic effect on the amount
of logging information in the log files. You can also configure the
logger to pipe specific types of information to multiple
files.</p>

<p>The assertions in LightSpeed are much more powerful than standard C/C++ assertions. There are multiple assertion macros provided to simplify
the task of writing assertions. See <a href="logging_how_work.htm">
How logging, asserts, and debuggers work</a> for details about the available macros and their functionality.</p>

<p>LightSpeed also ships with a <a href=
"../../Tools/ScriptDebugger/efr_script_debugger_intro.htm">Script
Debugger</a> in Toolbench. You can use this to debug scripted Lua
behaviors in real-time.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="logging_how_work.htm">How logging, asserts, and
    debuggers work</a></li>
    <li><a href="logging_best_practice.htm">Best practices for
    working with logging, asserts, and debuggers</a></li>
    <li><a href="logging_initialization.htm">Logging, asserts,
    and debuggers initialization</a></li>
    <li><a href="logging_tuning.htm">Tuning logging, asserts, and
    debugging performance</a></li>
    <li><a href="logging_consoles.htm">Console-specific issues
    for logging, asserts, and debugging</a></li>
</ul>
    <!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

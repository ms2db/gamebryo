<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Best practices for working with logging, asserts, and debuggers</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Best practices for working with logging, asserts, and debuggers</h1>

<ul>
<li>Start with the default logging levels and configure as needed based on the level of detail required.  
Full logging can generate very large log files.</li>
<li>Use the EE_LOG macro to generate log output.</li>
<li>Module IDs for logging can be found in various header files. (efdLogIDs.h, egfLogIDs.h)  A good default to use would be efd::kApp.</li>
<li>The EE_LOG macro allows for sprintf style string formatting.  Make use of this to provide as much detail as needed.</li>
<li>If your log statements do not appear in your log file, be sure that the log level parameter is correct for your EE_LOG statements and that the log
level is properly set in your config.ini file.</li>
<li>Logging to a file does not reliably occur in real-time.  If you are stopped on a break point and you view the log file, 
it may not contain the latest log statements yet, because the stream buffer hasn't dumped to the log file.  For real-time logging,
use the DebugOutDestination instead of the LogFileDestination.</li>
<li>Use EE_ASSERT macro for assertions.  See efd/Asserts.h for various forms and macro definitions.</li>
<li>See <a href="../../Tools/Toolbench/tb_intro.htm">Toolbench</a> for more information on using the LUA script debugger
to debug behaviors.</li>
</ul>




<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
<li><a href="logging_overview.htm">Logging, asserts, and debuggers overview</a></li>
<li><a href="logging_how_work.htm">How logging, asserts, and debuggers work</a></li>
    <li><a href="logging_initialization.htm">Logging, asserts, and debuggers initialization</a></li>
    <li><a href="logging_tuning.htm">Tuning logging, asserts, and debugging performance</a></li>
    <li><a href="logging_consoles.htm">Console-specific issues for logging, asserts, and debugging</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>How system services relate to the Emergent Game Framework</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>How system services relate to the Emergent Game Framework</h1>

<p>The Service Manager is the core of the Emergent Game Framework. It is responsible for running the
application's main loop, and it feeds computational cycles to each system service instance in turn.
In a game client, the framework ticks once per render frame. All services are ticked each cycle, but
not all services will want to do significant work per tick. For example, the Scheduler may be paused
and may not need to run, or insufficient time has elapsed since the last simulation computation.
Similarly, if the network service has no messages to send or receive, it will do nothing in its
tick.</p>

<p>A system service can be any encapsulated module that needs to share compute cycles with other
modules. Or, it can be an encapsulated module that needs to be looked up commonly as a singleton.
Each service is registered with the Service Manager, which provides the lookup and ticking
capability. The Service Manager initializes, ticks, and ultimately destroys each system service.</p>

<p>The Scheduler, Message Service, Configuration Manager, and many other areas of the framework are
all implemented as system services. Some system services will be required by almost all games;
others are completely optional.</p>

<p>Certain services, such as the message service, are centralized services that are useful across
the application. Many other system services, or groups of services, can be considered self-contained
units. This loose coupling between different services provides flexibility in how you design and
implement your game. For example, you can create optional services that can help you while you
develop, rapidly iterate, debug, deploy, or execute your game.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>
<ul>
    <li><a href="system_service_overview.htm">System services overview</a></li>
    <li><a href="system_service_features.htm">System service features</a></li>
    <li><a href="system_service_how_work.htm">How system services work</a></li>
    <li><a href="system_service_priority_and_dependency.htm">Understanding System Service Priorities
        and Dependencies</a></li>
    <li><a href="system_service_limitations.htm">System service limitations</a></li>
    <li><a href="system_service_reqs.htm">Requirements for using system services</a></li>
    <li><a href="system_service_best_practice.htm">Best practices for working with system
        services</a></li>
    <li><a href="system_service_using.htm">Using system services</a></li>
    <li><a href="../../Reference/efd/efd__ServiceManager.htm">efd::ServiceManager</a></li>
    <li><a href="../../Reference/efd/efd__ISystemService.htm">efd::ISystemService</a></li>
    <li><a href="../../Reference/efd/efd__MessageService.htm">efd::MessageService</a></li>
    <li><a href="../../Reference/efd/efd__IConfigManager.htm">efd::IConfigManager</a></li>
    <li><a href="../../Reference/egf/egf__Scheduler.htm">egf::Scheduler</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>
</html>

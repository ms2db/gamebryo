<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Requirements for using system services</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Requirements for using system services</h1>

<p>Using system services requires a <span class="NDLEmphasis">service manager</span> and one or more
<span class="NDLEmphasis">services</span>.</p>

<p>The Service Manager is an instance of the <a href="../../Reference/efd/efd__ServiceManager.htm">
efd::ServiceManager</a> class. The application's startup code should create an instance of the 
Service Manager class and maintain a reference to the class for the life of the application (it is
recommended that smart pointer such as <span class="NDLSystemFont">efd::ServiceManagerPtr</span> be
used). Individual services retain a copy of the Service Manager pointer when they are registered.
Services use this pointer to access other running services. In multi-threaded applications there may
be a seperate Service Manager in each thread so it it important that the Service Manager pointer be
maintained to define the correct context for the service.</p>

<p>Services are classes that implement the <a href="../../Reference/efd/efd__ISystemService.htm">
efd::ISystemService</a> interface. The potential scope of a service's role is broad; services
encapsulate any kind of functionality within an application that requires CPU cycles.</p>

<table>
    <thead>
        <tr>
            <th>Name</th>
            <th>Library</th>
            <th>Header Files</th>
            <th>Description</th>
        </tr>
    </thead>
    <tbody>
    
        <tr>
            <td>Service Manager</td>
            <td>efd</td>
            <td><span class="NDLSystemFont">efd/ServiceManager.h</span></td>
            <td>A central cache of <span class="NDLSystemFont">ISystemService</span> pointers.
                <ul>
                    <li>Controls the lifespan of contained services</li>
                    <li>Calls <span class="NDLSystemFont">ISystemService</span> methods as needed</li>
                </ul>
            </td>
        </tr>
        
        <tr>
            <td>Services</td>
            <td>(Varies)</td>
            <td>Varies; service classes need to implement the <span class="NDLSystemFont">
                efd::ISystemService</span> interface, as described in <span class="NDLSystemFont">
                efd/ISystemService.h</span>.</td>
            <td>A service provides a related spectrum of functionality within the scope of the
                overall application. For example:
                <ul>
                    <li>MessageService</li>
                    <li>AssetManagerService</li>
                    <li>NetService</li>
                </ul>
                The Emergent Game framework provides these and other broadly useful services. If you
                require a special service to implement gameplay or title-specific technical
                innovation, you can create your own services.
            </td>
        </tr>
        
    </tbody>
</table> 

<p class="NDLHeadingRelatedTopic">Related topics</p>
<ul>
    <li><a href="system_service_overview.htm">System services overview</a></li>
    <li><a href="system_service_features.htm">System service features</a></li>
    <li><a href="system_service_how_work.htm">How system services work</a></li>
    <li><a href="system_service_priority_and_dependency.htm">Understanding System Service Priorities
        and Dependencies</a></li>
    <li><a href="system_service_limitations.htm">System service limitations</a></li>
    <li><a href="system_service_how_relates_efr.htm">How system services relate to the Emergent
        Game Framework</a></li>
    <li><a href="system_service_best_practice.htm">Best practices for working with system services
        </a></li>
    <li><a href="system_service_using.htm">Using system services</a></li>
    <li><a href="../../Reference/efd/efd__ServiceManager.htm">efd::ServiceManager</a></li>
    <li><a href="../../Reference/efd/efd__ISystemService.htm">efd::ISystemService</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>
</html>

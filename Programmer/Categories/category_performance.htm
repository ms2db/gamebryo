<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Category performance</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Category performance</h1>

<p>Choosing how many categories to use and what messages to send
on which Category is critical to the performance of the message
system.</p>

<p>Message routing by category is designed to be efficient.
Adding extra categories is far better for performance than
sending messages to consumers that don't need them. The worst
case for performance of the MessageSystem would be to send every
message on the same Category. This would cause every message to
attempt to deliver to every registered handler. In this
degenerate example, most registered handlers would fail the type
safety check and be skipped. However, many handlers could get
called and every one would have to implement logic to determine
if they were actually interested in the message that was being
sent. Decomposing the message streams sufficiently allows the
message system to use maps of categories to quickly narrow down
recipients to just the right set. The handlers can then avoid
extra checking, and no extraneous handlers will be invoked.</p>

<p>If you find yourself trying to determine if the message you've
received in your handler is actually intended for you, then you
should consider using additional categories. Ideally, every
handler would only ever receive messages targeted to it. This
might mean adding a response category to a request message so
that the service that is handling the request can target the
response back to the originator instead of sending the response
on a general channel that other requestors might be listening
to.</p>

<p>The application must develop its own policy of decomposing
messages and entity states into categories. It may be best to
start with something simple to get started quickly, instrument
its effectiveness, and iterate to a better decomposition.</p>

<p>The implementation of the category-based delivery system
forwards subscription and publication requests to a channel
manager service where producers and consumers are matched up.
Messages are then routed to consumers by keying off the category
in the message and looking up the set of registered consumers.
Categories exist across all processes that are interconnected
through a channel manager, so be aware that some messages may
unexpectedly route remotely if a process joins the system that is
interested in those messages.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="category_overview.htm">Categories
    overview</a></li>

    <li><a href="category_how_work.htm">How categories
    work</a></li><!-- <li><a href="category_how_relates_efr.htm">How categories relate to the Emergent Game Framework</a></li> -->

    <li><a href="category_best_practice.htm">Best practices for
    working with categories</a></li>

    <li><a href="category_examples.htm">Category
    examples</a></li>

    <li><a href="category_creating.htm">Creating
    categories</a></li>

    <li><a href="category_performance.htm">Category
    performance</a></li>

    <li><a href=
    "../../Reference/efd/efd__Category.htm">efd::Category</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->


</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>SettingContainer (Extension-Point)</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Fresnel" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>SettingContainer (Extension-Point)</h1>

<h3>Emergent.Toolbench.Settings.UI.SettingContainer</h3>

<p>The SettingContainer extension point provides plug-in authors with a way to create custom UI for
editing a group of settings in the settings UI. This custom UI replaces the standard property grid
page that is used for editing with the UI component that your SettingContainer returns.</p>
<pre>
&lt;extension point="Emergent.Toolbench.Settings.UI.SettingContainer"&gt;
  &lt;container id="Emergent.Toolbench.RevisionControl.UI.RevisionSettingContainer"
             name="Revision Control"
             path="Game Solution\Revision Control"
             class="Emergent.Toolbench.RevisionControl.UI.RevisionSettingContainer"/&gt;
&lt;/extension&gt;
</pre>

<h2>container</h2>

<table>
    <thead>
        <tr>
            <th>Attribute</th>

            <th>Type</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>id</td>

            <td>String</td>

            <td>The unique identifier for your setting container.</td>
        </tr>

        <tr>
            <td>name</td>

            <td>String</td>

            <td>A display name for the setting container.</td>
        </tr>

        <tr>
            <td>path</td>

            <td>String</td>

            <td>[<em>Optional</em>] The setting path that this UI will replace. This property is
            technically optional; it is primarily used for internal purposes because the default
            container does not need to specify a particular path.</td>
        </tr>

        <tr>
            <td>class</td>

            <td>String</td>

            <td>This is the class that will be created to factory the resulting UI component used
            in the setting dialog. This class must implement the
            Emergent.Toolbench.Settings.UI.ISettingContainer interface.</td>
        </tr>

        <tr>
            <td>default</td>

            <td>String</td>

            <td>[<em>Optional</em>] This flag indicates if this UI factory should be used by
            default. This flag exists for internal purposes so that we can have the property grid
            be the default UI that is used.</td>
        </tr>
    </tbody>
</table>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

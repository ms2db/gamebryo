<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ContentType (Extension-Point)</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
    WriteNavLink(2);
</script>

<h1>ContentType (Extension-Point)</h1>

<h3>Emergent.Toolbench.ContentService.ContentType</h3>

<p>To extend the types of content Toolbench can create and
manipulate plug-in authors will need to use this extension point
to define those content types.</p>

<pre>
&lt;extension point="Emergent.Toolbench.ContentService.ContentType"&gt;
  &lt;content-type id="Emergent.ImagePlugin.ImageDocument"
                semantic="document/image"
                category="Media.Image"
                filter-description="Image Files" /&gt;
&lt;/extension&gt;
</pre>

<h2>content-type</h2>

<table>
    <thead>
        <tr>
            <th>Attribute</th>

            <th>Type</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>id</td>

            <td>String</td>

            <td>The unique identifier for this content type.</td>
        </tr>

        <tr>
            <td>category</td>

            <td>String</td>

            <td>[optional] The content category to place the
            content under when displaying it to the user.</td>
        </tr>

        <tr>
            <td>semantic</td>

            <td>String</td>

            <td>[optional] The document type semantic or MIME
            type. An example would be document/text.</td>
        </tr>

        <tr>
            <td>filter-description</td>

            <td>String</td>

            <td>[optional] The filter description is the
            description of the content type and can be used for
            displaying what the content type is for.</td>
        </tr>

        <tr>
            <td>unique</td>

            <td>Boolean</td>

            <td>[optional] [default: false] The unique option
            ensures that only once instance of this content type
            may be open at a time. So for contents similar to a
            Solution in Visual Studios, where it makes sense to
            only have one instance open at a time you would use
            this flag.</td>
        </tr>

        <tr>
            <td>hidden</td>

            <td>Boolean</td>

            <td>[optional] [default: false] The hidden option
            ensures that the content is not visible to the user
            in any content creation or open dialogs. This is best
            used with privately opened content.</td>
        </tr>

        <tr>
            <td>requires-solution</td>

            <td>Boolean</td>

            <td>[optional] [default: false] The requires solution
            option will force this content type to be created
            inside a game solution, and will prevent the user
            from creating this type of content outside of
            one.</td>
        </tr>

        <tr>
            <td>file-association-allowed</td>

            <td>Boolean</td>

            <td>[optional] This option specifies if the content
            type can be file associated.</td>
        </tr>
    </tbody>
</table>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Understanding the Script Debugger Messaging Protocol</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Understanding the Script Debugger Messaging Protocol</h1>

<p>Messaging between the Toolbench-based scripting IDE and the
connected game instance is handled via Emergent NetService stream
messages. This is a cross-platform solution that is provided by
the Emergent Foundation. The request and response messages that
are sent between processes form a language-independent protocol
that can be leveraged when adding support for new script
languages to the Emergent Game Framework. It should not generally
be necessary to modify the Toolbench Script Debugger to send
these messages for different languages.</p>

<h2>Request messages</h2>

<p>Request messages that flow from Toolbench to the connected
Behavior Debugger module are encoded as follows:</p>

<pre>
BEGIN_SESSION

END_SESSION

GO

STEP_INTO

STEP_OVER

STEP_OUT

RUN_TO
    utf8string script filename
    UInt32 script line number

BREAK

SET_BREAKPOINTS
    UInt32 number of breakpoints
    for each breakpoint
        utf8string script filename
        UInt32 script line number
        utf8string breakpoint condition

SET_WATCHES
    UInt32 number of watches
    for each watch
        utf8string watch expression
		
SET_WATCH_ENTITY
    UInt64 Entity ID

EXECUTE
    utf8string statement to execute
    utf8string sender
</pre>

<h2>Response messages</h2>

<p>Response messages that flow from the Behavior Debugger module
of the game instance to the Toolbench Script Debugger are encoded
as follows:</p>

<pre>
CALL_STACK
    UInt32 stack depth
    for each call stack record
        utf8string functional context
        utf8string script filename
        UInt32 script line number

LOCALS
    UInt32 number of local variables
    for each local variable
        utf8string variable name
        utf8string variable type
        utf8string variable value

WATCHES
    UInt32 number of watched expressions
    for each watched expression
        utf8string expression result type
        utf8string expression result value

WATCH_ENTITY_PROPERTIES
    UInt64 entityID
    UInt32 number of properties
    for each property
        utf8string property name
        utf8string property type
        utf8string property value

AUTO_ENTITY_PROPERTIES
    UInt64 entityID
    UInt32 number of properties
    for each property
        utf8string property name
        utf8string property type
        utf8string property value

EXECUTE_SUCCESS

EXECUTE_FAILURE
    utf8string error text 
</pre>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="efr_behavior_debugger_game_debugger.htm">Game
    Framework Behavior Debugger</a></li>

    <li><a href="efr_behavior_debugger_lua_debugger.htm">Lua
    Behavior Debugger</a></li>

    <li><a href=
    "efr_behavior_debugger_script_debugger.htm">Toolbench Script
    Debugger</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

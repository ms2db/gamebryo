<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ContentFactory (Extension-Point)</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
    WriteNavLink(2);
</script>

<h1>ContentFactory (Extension-Point)</h1>

<h3>Emergent.Toolbench.ContentService.ContentFactory</h3>

<p>After creating a content type you will need to create a
content factory. The content factory exposes a way of generating
that content at runtime. That is, the factory takes care of
creating, opening and saving the content. Currently only document
content types are supported in the extension points, however that
will not be the case in the future and it will be possible to
specify content factories for non-file based content. The concept
is supported at a code level, just not at a UI or extension point
level.</p>

<pre>
&lt;extension point="Emergent.Toolbench.ContentService.ContentFactory"&gt;
  &lt;document-factory id="Emergent.ImagePlugin.ImageFactory"
                    name="Bitmap Image"
                    description="Windows Bitmap images."
                    content-type="Emergent.ImagePlugin.ImageDocument"
                    icon="Icons/image_content.png"
                    file-extension=".bmp|.jpg|.png"
                    class="Emergent.ImagePlugin.ImageFactory"&gt;
  &lt;/document-factory&gt;
&lt;/extension&gt;
</pre>

<h2>document-factory</h2>

<table>
    <thead>
        <tr>
            <th>Attribute</th>

            <th>Type</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>id</td>

            <td>String</td>

            <td>The unique identifier for this content
            factory.</td>
        </tr>

        <tr>
            <td>name</td>

            <td>String</td>

            <td>The display name of the factory.</td>
        </tr>

        <tr>
            <td>content-type</td>

            <td>String</td>

            <td>The content type unique identifier supported by
            this factory.</td>
        </tr>

        <tr>
            <td>description</td>

            <td>String</td>

            <td>[optional] The description for this factory would
            be used to explain what this content factory
            does.</td>
        </tr>

        <tr>
            <td>icon</td>

            <td>String</td>

            <td>[optional] The path to the icon associated with
            this factory. The path should be relative to the
            directory of your plug-in.</td>
        </tr>

        <tr>
            <td>abstract</td>

            <td>Boolean</td>

            <td>[optional] [default: false] If a factory is
            abstract then it is assumed to be non-functional.
            This primarily exists as a way of creating stubs or
            meta-data descriptors for matching content types with
            file extensions.</td>
        </tr>

        <tr>
            <td>file-extension</td>

            <td>String</td>

            <td>[optional] The file extensions associated with
            this content factory. The file extensions should
            appear as .ext1|.ext2|...</td>
        </tr>

        <tr>
            <td>class</td>

            <td>String</td>

            <td>[optional] The factory class used in creating the
            content type. The factory class must inherit from the
            Emergent.Toolbench.ContentService.AbstractDocumentFactory
            class.</td>
        </tr>

        <tr>
            <td>suggest-default-folder</td>

            <td>Boolean</td>

            <td>[optional] [default: false] If true, the New
            Content dialog box will automatically add a "Use
            Default Location" checkbox to this content type. When
            checked, the Folder textbox will be read-only,
            creating a subdirectory off the game solution with
            the same name as the new content.</td>
        </tr>
    </tbody>
</table>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

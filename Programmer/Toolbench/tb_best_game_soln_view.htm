<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Toolbench Plug-in Best Practice: Game Solution View</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Fresnel" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Toolbench Plug-in Best Practice: Game Solution View</h1>

<p>The Game Solution view is the portal to the sub-tools hosted in Toolbench. It lists the "top
level" content in the game solution and provides a way to create references between top level
content. It is also an appropriate place for content build or export activities that don't require
user interaction within a content type.</p>

<p>The Game Solution view is NOT a list of all content files in the asset web, nor is it the
preferred place for managing large sets of content. The simple tree control (without multi-select)
will not scale well to manipulating a lot of items. Specialized views should be created to deal
with the organization of different content types. For example, EMT Project Explorer is designed to
manage large sets of model, preset, and diagram files&mdash;all of which are contained within the
EMT project, a top level content type.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="tb_best_ui_design.htm">Toolbench Plug-in Best Practice: UI Design</a></li>

    <li><a href="tb_best_output_view.htm">Toolbench Plug-in Best Practice: Output View</a></li>

    <li><a href="tb_best_content_types.htm">Toolbench Plug-in Best Practice: Content Types</a></li>

    <li><a href="tb_best_naming_conventions.htm">Toolbench Plug-in Best Practice: Naming
    Conventions</a></li>

    <li><a href="tb_best_build_environment.htm">Toolbench Plug-in Best Practice: Build
    Environment</a></li>

    <li><a href="tb_best_native_code.htm">Toolbench Plug-in Best Practice: Native Code</a></li>

    <li><a href="tb_best_ui_technology.htm">Toolbench Plug-in Best Practice: UI Technology</a></li>

    <li><a href="tb_best_menus_and_toolbars.htm">Toolbench Plug-in Best Practice: Menus and
    Toolbars</a></li>

    <li><a href="tb_best_settings.htm">Toolbench Plug-in Best Practice: Settings</a></li>

    <li><a href="tb_best_studio_customization.htm">Toolbench Plug-in Best Practice: Studio
    Customization</a></li>

    <li><a href="tb_best_custom_data_types.htm">Toolbench Plug-in Best Practice: Custom Data
    Types</a></li>

    <li><a href="tb_best_protect_user_data.htm">Toolbench Plug-in Best Practice: Protecting User
    Data</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

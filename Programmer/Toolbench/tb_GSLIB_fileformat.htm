<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>GSLIB File Format</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Fresnel" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>GSLIB File Format</h1>

<h2>Purpose</h2>

<p>When the <a href="../../Tools/Toolbench/tb_game_soln_create_open.htm">Game Solution Wizard</a>
or <a href="../../Tools/Toolbench/tb_game_soln_content_import.htm">Integration Wizard</a> launch,
all directories are parsed from the <a href=
"efr_extpoint_gamesolution_importlocation.htm">Emergent.Toolbench.GameSolution.ImportLocation</a>
extension point for GSLIB files. If any files exist, the libraries defined within will be available
to the user to import into their asset web. Steps for importing a custom import library can be
found in <a href="tb_add_import_library.htm">Add custom import library</a>.</p>

<h2>Example GSLIB file</h2>
<pre>
&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;library version="1"
         id="TestModelLibrary"
         name="Test Model Library"
         provider="Test Provider"
         default="false"
         library-version="1"&gt;
  &lt;includes&gt;
    &lt;include path="TestModelLibrary\*.*" recursive="true" /&gt;
  &lt;/includes&gt;
  &lt;references&gt;
    &lt;reference path="TestModelLibrary\TestModelLibrary.emtproj" /&gt;
  &lt;/references&gt;
  &lt;asset-web-configs&gt;
     &lt;asset-web-config path="asset-web-config\TestConfig.ini" /&gt;
  &lt;/asset-web-configs&gt;
  &lt;dependencies&gt;
    &lt;dependency id="StandardModelLibrary" library-version="2" /&gt;
  &lt;/dependencies&gt;
&lt;/library&gt;
</pre>

<h2>Format Specification</h2>

<p>The GSLIB file format is a set of very simple XML tags. The following tables describe the tags
and their purpose:</p>

<h4>library</h4>

<p>The root tag of a GSLIB document is "library". This tag defines the import library contained
within the GSLIB file. Possible child tags are: "includes", "references", and "dependencies".</p>

<table>
    <thead>
        <tr>
            <th>Identifier</th>

            <th>Type</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>version</td>

            <td>Unsigned integer</td>

            <td>The version of the library tag being used. This should always be "1".</td>
        </tr>

        <tr>
            <td>id</td>

            <td>String</td>

            <td>The unique identifier for the library.</td>
        </tr>

        <tr>
            <td>name </td>

            <td>String</td>

            <td>The friendly name of the library to present in the UI.</td>
        </tr>

        <tr>
            <td>provider</td>

            <td>String</td>

            <td>The company or individual that provided the library to the end user.</td>
        </tr>

        <tr>
            <td>default</td>

            <td>Boolean</td>

            <td>Should this be automatically checked in the UI? For partner integrations, it is
            suggested that this value be false.</td>
        </tr>

        <tr>
            <td>library-version</td>

            <td>Unsigned integer</td>

            <td>The version number of the GSLIB library. This number is referenced by other GSLIB
            files to guarantee compatibility between different dependent GSLIB import
            libraries.</td>
        </tr>
    </tbody>
</table>

<h4>includes</h4>

<p>The "includes" tag can contain one or more directories that will be copied into the user's asset
web should they choose to import this library. These directories are specified with child "include"
tags. The attributes for an "include" tag are shown in the table below:</p>

<table>
    <thead>
        <tr>
            <th>Identifier</th>

            <th>Type</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>path</td>

            <td>String</td>

            <td>The relative path from the current GSLIB folder to the include folder that will be
            copied into the user's asset web. The wildcard pattern of "*" is supported to match
            filenames and extensions.</td>
        </tr>

        <tr>
            <td>recursive </td>

            <td>Boolean</td>

            <td>Should subfolders be considered when performing the file copy?</td>
        </tr>
    </tbody>
</table>

<h4>references</h4>

<p>When an import occurs, it is often useful to have the imported library brought in as a reference
to other projects or blocks. This tag allows the user to specify the files to reference. It can
contain one or more "reference" tags.</p>

<table>
    <thead>
        <tr>
            <th>Identifier</th>

            <th>Type</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>path</td>

            <td>String</td>

            <td>The path to the emtproj or other referenceable file. This should be a relative path
            from the current GSLIB path.</td>
        </tr>
    </tbody>
</table>

<h4>asset-web-configs</h4>

<p>It is often necessary for a library to install file types to the asset web. These types are used
for file selection in Toolbench as well as rapid iteration. For more information on how to create
these ini files, please see <a href="../AssetRuntimeService/asset_custom_metadata.htm">Adding
Custom MetaData</a>. It is possible to install multiple configuration files to the destination
asset web, using the "asset-web-config" tags:</p>

<table>
    <thead>
        <tr>
            <th>Identifier</th>

            <th>Type</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>path</td>

            <td>String</td>

            <td>The relative path from the GSLIB that points to the configuration file to import
            into the user's asset web.</td>
        </tr>
    </tbody>
</table>

<h4>dependencies</h4>

<p>Few libraries are completely standalone. Often an import library will need to reference other
import libraries to function correctly. The "dependencies" tag specified the external import
libraries required to properly function. It can contain one or more "dependency" tags, specified in
the table below:</p>

<table>
    <thead>
        <tr>
            <th>Identifier</th>

            <th>Type</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>id</td>

            <td>String</td>

            <td>The unique identifier to the import library dependency. This can be found in the
            "library/id" tag of the external library dependency.</td>
        </tr>

        <tr>
            <td>library-version</td>

            <td>Unsigned int</td>

            <td>The version of the external import library that this library is dependent upon.
            This can be found in the "library/library-version" tag of the external library
            dependency. This version number is rigidly enforced and if not found, the user will not
            see the import library.</td>
        </tr>
    </tbody>
</table>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

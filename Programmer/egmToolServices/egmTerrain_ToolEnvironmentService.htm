<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ToolEnvironmentService</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Fresnel" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

  <h1>
    ToolEnvironmentService
  </h1>
  <p>
    The <span class="NDLSystemFont">
    <a href="../../Reference/egmToolServices/egmToolServices__ToolEnvironmentService.htm">
    egmToolServices::ToolEnvironmentService</a></span> derives from the 
    <span class="NDLSystemFont">
    <a href="../../Reference/egmTerrain/egmTerrain__EnvironmentService.htm">
    egmTerrain::EnvironmentService</a></span>. It provides extra features to handle 
    Tool specific implementation. It is currently used by Toolbench to allow for the 
    creation and edition of keyframe animations for any TimeOfDayEditable models.   </p>
  <h2>
    Saving Time Of Day Animation
  </h2>
  <p>
    The main feature this service provides is the saving of the
    <span class="NDLSystemFont">.tod</span> file for a specific entity. In the 
    current implementation this function is directly called by the Toolbench plug-in. 
    An entity's keyframes are saved in a given file. Currently, the file data is 
    replaced preventing one file being used by multiple entities.
  </p>
  <h2>
    Tool Time Animation   </h2>
  <p>
    A new time of day specific message is used to define the time of day animation. 
    Within Toolbench, the Time Of Day time is independent from the Animation time. A 
    new message is therefore handled by the ToolEnvironmentService to control 
    whether the TimeOfDayObject should be animated or not as well as the speed at 
    which the animation should run. This being a tool time only feature, it will not 
    affect the runtime service.
  </p>
  <h2>
    Time Of Day Change Notification
  </h2>
  <p>
    Any changes applied to the TimeOfDay object causes events to be raised. Those 
    events are raised using callback functions that can be registered by the 
    application requiring the tracking of time of day changes. This is the case of 
    the TimeOfDayEditor within Toolbench.
  </p>
  <p>
    There are three types of callback raised:
  </p>
  <ul>
    <li>TThe TimeChanged event is triggered anytime the <span class="NDLSystemFont">
      <a href="../../Reference/NiEnvironment/NiTimeOfDay.htm">NiTimeOfDay</a></span> 
      object's current time is changed. </li>
    <ul>
      <li>It can be registered to by calling <pre>ToolEnvironmentService::RegisterTimeChangedCallback(TimeChangedCallback pfnCallback)</pre>
      </li>
      <li>TimeChangedCallback have to follow the prototype:
      <pre>typedef void (__stdcall *TimeChangedCallback)(float time);</pre>
      </li>
    </ul>
    <li>The KeyframeLoaded event is triggered anytime properties' keyframes are loaded 
      from a file. </li>
    <ul>
      <li>It can be registered to by calling
<pre>ToolEnvironmentService::RegisterKeyframeLoadedCallback(KeyframeLoadedCallback pfnCallback)</pre>
      </li>
      <li>KeyframeLoadedCallback have to follow the prototype:
        <pre>typedef void (__stdcall *KeyframeLoadedCallback)(efd::utf8string propertyName, 
        const efd::vector&lt;efd::utf8string&gt;&amp; times, 
        const efd::vector&lt;efd::utf8string&gt;&amp; values);</pre>
      </li>
    </ul>
    <li>TThe PropertyChanged event is triggered when properties are registered or 
      unregistered from the <span class="NDLSystemFont">
      <a href="../../Reference/NiEnvironment/NiTimeOfDay.htm">NiTimeOfDay</a></span> 
      object. </li>
    <ul>
      <li>It can be registered to by calling         <pre>ToolEnvironmentService::RegisterToDPropertiesChangedCallback(
        ToDPropertiesChangedCallback pfnCallback);</pre>
      </li>
      <li>ToDPropertiesChangedCallback have to follow the prototype
        <pre>typedef void (__stdcall *ToDPropertiesChangedCallback)(
         const efd::vector&lt;ToDProperty&gt;&amp; properties);</pre>
      </li>
    </ul>
  </ul>
  <p>
    Those callbacks are registered in Toolbench in order to update the display of 
    the TimeOfDayEditor. This ensures the properties, the keyframes and the time in 
    the TimeOfDayEditor are correctly displayed when they change.
  </p>
   Related Topics
   <ul>
   <li><a href="../../Tools/EnvironmentToD/etod_intro_to_UI.htm">TimeOfDayEditor</a> in Toolbench</li>
   </ul>
</body>
</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Shadow Techniques</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Shadow Techniques</h1>

<p>Shadow techniques are used to define the shader code 
 used to read from and write to a shadow map. Shadow techniques can be 
 defined per <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiShadowGenerator.htm">NiShadowGenerator</a></span>. 
 Gamebryo currently supports three shadow techniques. If the Gamebryo-provided 
 shadow techniques are not desirable, new shadow techniques can be created 
 by simply writing the shader fragment code and initializing a new shadow 
 technique inside of the shadow manager. The three shadow techniques provided 
 with Gamebryo are listed below:</p>

<ul>
	
	<li><span class="NDLSystemFont">NiStandardShadowTechnique</span>: 
 This technique uses the standard shadow mapping technique with a single 
 sample. There are no special rendering operations required by this technique which allow it to be completely defined by the <a href="../../Reference/NiMain/NiShadowTechnique.htm">NiShadowTechnique</a> class.</li>
	
	<li><span class="NDLSystemFont">NiPCFShadowTechnique</span>: 
 This technique uses smoothed 4x4 PCF (percentage closer filtering) when 
 used on SM 3.0 and above graphics cards and uses bilinear 2x2 PCF on SM 
 2.0 graphics cards. There are no special rendering operations required by this technique which allow it to be completely defined by the <a href="../../Reference/NiMain/NiShadowTechnique.htm">NiShadowTechnique</a> class.</li>
	
	<li><span class="NDLSystemFont"><a href="../../Reference/NiMain/NiVSMShadowTechnique.htm">NiVSMShadowTechnique</a></span>: 
 This technique uses variance shadow mapping. A custom NiShadowTechnique derived class, NiVSMShadowTechnique, is used to enable post-processing of shadow maps. The material 
 <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiVSMBlurMaterial.htm">NiVSMBlurMaterial</a></span> 
 is used to perform a post-process horizontal and vertical Gaussian blur on the 
 shadow maps.</li>
</ul>

<p>
 On Xbox 360 and PS3 the <span class="NDLSystemFont">NiStandardShadowTechnique</span> and <span class="NDLSystemFont">NiPCFShadowTechnique</span> teqchniques will make use of hardware accelerated shadowing. 
 This is done by only rendering the depth stencil buffer for a shadow map, allowing for double write speeds. The depth stencil buffer is then treated as a shadow map. This is important to keep in mind while
 altering the Z-Write property of a mesh. If a mesh does not write to the depth buffer, then it will not cast a shadow for while the NiStandardShadowTechnique on Xbox 360 or PS3.
</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

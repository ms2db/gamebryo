<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>An Example of Updating an NiRenderedTexture</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>An Example of Updating an NiRenderedTexture</h1>

<p>An example of rendering a frame with both a main scene 
 and an "offscreen" scene is as follows (the example is of a 
 security TV monitor in an office).</p>

<h2>During scene creation:</h2>

<ol>
	
	<li>Create the onscreen 
 scene graph <span class="NDLSystemFont">m_spRoomScene</span> 
 (the room with the monitor).</li>
	
	<li>Create the offscreen 
 scene graph <span class="NDLSystemFont">m_spVideoScene</span> 
 (seen on the monitor).</li>
	
	<li>Create the onscreen 
 camera <span class="NDLSystemFont">m_spRoomCam</span> 
 (which views the room that contains the TV monitor).</li>
	
	<li>Create the offscreen 
 camera <span class="NDLSystemFont">m_spVideoCam</span> 
 (which is the security camera).</li>
	
	<li>Create the renderer 
 <span class="NDLSystemFont">m_spRenderer.</span></li>
	
	<li>Create the <span class="NDLSystemFont">NiRenderedTexture</span> <span class="NDLSystemFont">m_spVideoTex</span>.</li>

	<li>Create an <span class="NDLSystemFont">NiRenderTargetGroup m_spVideoRTG</span> to use with <span class="NDLSystemFont">m_spVideoTex</span> using <span class="NDLSystemFont">NiRenderTargetGroup::Create</span>.</li>
	
	<li>Attach <span class="NDLSystemFont">m_spVideoTex</span> to the 
 desired TV monitor object.</li>
	
	<li>Set <span class="NDLSystemFont">m_spRoomCam</span> to use <span class="NDLSystemFont">m_spRoomScene</span> 
 as its scene and <span class="NDLSystemFont">m_spRenderer</span> 
 as its renderer.</li>
	
	<li>Set <span class="NDLSystemFont">m_spVideoCam</span> to use 
 <span class="NDLSystemFont">m_spVideoScene</span> 
 as its scene and <span class="NDLSystemFont">m_spRenderer</span> 
 as its renderer.</li>
</ol>

<h2>During Scene Rendering:</h2>

<ol>
	
	<li>Begin rendering to 
 the texture using <span class="NDLSystemFont"><br>
	m_spRenderer-&gt;BeginUsingRenderTargetGroup (m_spVideoRTG, NiRenderer::CLEAR_ALL)</span>.</li>
	
	<li>Cull and render using 
 the offscreen camera <span class="NDLSystemFont">m_spVideoCam</span>.</li>
	
	<li>Finish rendering to 
 the texture using <br>
	<span class="NDLSystemFont">m_spRenderer-&gt;EndUsingRenderTargetGroup()</span>.</li>
	
	<li>Begin rendering the 
 main scene to the default backbuffer using <span class="NDLSystemFont"><br>
	m_spRenderer->BeginUsingDefaultRenderTargetGroup(NiRenderer::CLEAR_ALL)</span>.</li>
	
	<li>Cull and render using 
 the onscreen camera <span class="NDLSystemFont">m_spRoomCam</span>.</li>
	
	<li>Finish rendering to 
 the backbuffer using <span class="NDLSystemFont"><br>
	m_spRenderer-&gt;EndUsingRenderTargetGroup()</span>.</li>
</ol>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Texture and Vertex Color Apply Modes</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Texture and Vertex Color Apply Modes</h1>

<p>The final step in texturing is to merge the selected texture color and the vertex colors, if any. The inputs to this process are the selected texture color and alpha for the pixel, the interpolated vertex color and vertex alpha, and the texture apply mode. Notice that we have not mentioned how the vertex colors are computed. This is entirely independent of texturing and is set using <span class="NDLSystemFont">NiVertexColorProperty</span>.</p>
 
<p>The texture apply modes, their actions, and usage are listed in the table below, where:</p>

<ul>
  <li>C<sub>R</sub> represents the final color</li>
  <li>A<sub>R</sub> represents the final alpha</li>
  <li>C<sub>T</sub> represents the texture color</li>
  <li>A<sub>T</sub> represents the texture alpha</li>
  <li>C<sub>V</sub> represents the vertex color</li>
  <li>A<sub>V</sub> represents the vertex alpha</li>
</ul>

 
<p>Unless otherwise stated, if a texture has no alpha channel, the alpha channel is assumed to be <span class="NDLSystemFont">1.0</span> (fully opaque):</p>

<table>
	<thead>
		<tr>
			<th>Apply Mode</th>
			<th>Resulting Color</th>
			<th>Alpha</th>
			<th>Common Application</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>APPLY_REPLACE</td>
			<td>C<sub>R</sub> = C<sub>T</sub></td>
			<td>A<sub>R</sub> = A<sub>T</sub></td>
			<td>Basic texturing without any projected or static vertex-based lighting</td>
		</tr>
		<tr>
			<td>APPLY_DECAL</td>
			<td>C<sub>R</sub> = C<sub>T</sub> * A<sub>T</sub> + C<sub>V</sub> * (1-A<sub>T</sub>)</td>
			<td>A<sub>R</sub> = A<sub>V</sub></td>
			<td>Decal or bullet-hole textures on a base untextured surface</td>
		</tr>
		<tr>
			<td>APPLY_MODULATE</td>
			<td>C<sub>R</sub> = C<sub>T</sub> * C<sub>V</sub></td>
			<td>A<sub>R</sub> = A<sub>T</sub> * A<sub>V</sub></td>
			<td>Texture and final vertex colors and alpha values are multiplied component-by-component.</td>
		</tr>
	</tbody>
</table>

<p>The texture apply mode is set using the <span class="NDLSystemFont">NiTexturingProperty::SetApplyMode</span> function. Because texture and vertex blending happens after all texturing, this value is not set independently for each <span class="NDLSystemFont">Map</span>. Instead, this value is set once for each <span class="NDLSystemFont">NiTexturingProperty</span> property as a whole.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

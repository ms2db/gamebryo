<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>
<title>Projection Texture Matrix Math Details</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Projection Texture Matrix Math Details</h1>

<p>For the interested user, the transforms described in the
previous section work as follows:</p>

<p>The <span class="NDLSystemFont">NiTextureEffect</span> defines
the following mapping, which maps points in the model space of
the <span class="NDLSystemFont">&gt;NiTextureEffect</span> to
texture coordinates:</p>

<p>U = M<sub>T</sub>V<sub>T</sub> + T<sub>T</sub></p>

<p>Where:</p>

<table>
    <thead>
        <tr>
            <th><b>Variable</b></th>

            <th><b>Description</b></th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>U</td>

            <td>This is the final texture coordinate.</td>
        </tr>

        <tr>
            <td>M<sub>T</sub></td>

            <td>Model-space texture-coordinate transform matrix
            supplied by the application.</td>
        </tr>

        <tr>
            <td>T</td>

            <td>Model-space texture-coordinate translation
            supplied by the application.</td>
        </tr>

        <tr>
            <td>V<sub>T</sub></td>

            <td>A point in the model-space of the <span class=
            "NDLSystemFont">NiTextureEffect</span> object</td>
        </tr>
    </tbody>
</table>

<p>We know that the <span class=
"NDLSystemFont">NiTextureEffect</span>, like any other
<span class="NDLSystemFont">NiAVObject</span>, has a
model-to-world transform, whose components we define as
S<sub>W</sub>, R<sub>W</sub> and T<sub>W</sub>. Thus, a
world-space point V<sub>W</sub> can be mapped from V<sub>T</sub>
as follows:</p>

<p>V<sub>W</sub> =
S<sub>W</sub>R<sub>W</sub>V<sub>T</sub> + T<sub>W</sub></p>

<p>And so we can invert this to give:</p>

<p>R<sup>T</sup><sub>W</sub>(V<sub>W</sub>
&ndash; T<sub>W</sub>)/S<sub>W</sub> = V<sub>T</sub></p>

<p>Substituting this into the previous equation, we can show how
to project a world-space vertex into a texture coordinate using
the <span class="NDLSystemFont">&gt;NiTextureEffect</span>:</p>

<p>U =
M<sub>T</sub>R<sup>T</sup><sub>W</sub>(V<sub>W</sub> &ndash;
T<sub>W</sub>)/S<sub>W</sub> + T<sub>T</sub></p>

<p>With a little rearrangement, we can now write a world-space
texture coordinate transform matrix and translation as follows.
This formula describes how the <span class=
"NDLSystemFont">NiTextureEffect</span> can be used to transform
world-space vertices into texture coordinates:</p>

<p>U = M<sub>WT</sub>V<sub>W</sub> +
T<sub>WT</sub></p>

<p>Where:</p>

<p>M<sub>WT</sub> =
(M<sub>T</sub>R<sup>T</sup><sub>W</sub>)/S<sub>W</sub></p>

<p>T<sub>WT</sub> = T<sub>T</sub> &ndash;
(M<sub>T</sub>R<sup>T</sup><sub>W</sub>T<sub>W</sub>)/S<sub>W</sub></p>

<p>A similar set of manipulations may be used inside of each
renderer to convert the world-space texture transforms into
transforms that may be used to transform vertices in the
model-space of each geometry object into texture coordinates.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

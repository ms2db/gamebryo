<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Using models to rapidly iterate</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Using models to rapidly iterate</h1>

<p>During rapid iteration you can make various changes to your models. Many of these changes can be
applied immediately in your application, updating existing entities appropriately.</p>

<h2>Adding new models</h2>

<p>During rapid iteration, any new models that are created in the Entity Modeling Tool (EMT) are
automatically made available to the running application. If you then add entities that are based on
your new models to the world, they are correctly instantiated in your application.</p>

<h2>Changes to existing models</h2>

<p>Any new properties that are added to existing models are automatically made available to the
running application. Any entities that are based on that model are updated to recognize the new
property.</p>

<p>When you change the default values for existing properties, the changes are reflected in the
running application, but only for those entities that are currently using the previous default
value. If an entity was updated to a value other than the default, the new default does not alter
this value.</p>

<p>Removing existing properties automatically updates in-application entities and removes those
properties from the runtime instances of the affected entities.</p>

<p>Adding, changing, or removing mix-in models results in the deletion of all entities using the
altered model. This ensures the application remains consistent after altering the mix-in model. You
can see the result of your changes in the game without restarting it by using the 'Reset Game'
command in EMT.</p>

<h2>Changes to built-in models</h2>

<p>When you rapidly iterate on a built-in model definition, this can apply property changes to the
model in unexpected ways. Built-in model implementations should be robust with regard to the order
in which data is changed. Rapid iteration could also result in a large number of property changes
to a large number of entities in a short period of time. If your built-in model performs expensive
work in response to property value changes, or if it expects properties to be changed in a certain
order, then you should consider using a companion system service to queue the update requests
rather than responding directly to each property change.</p>

<p>For more information about limitations associated with rapidly iterating on built-in models, see
<a href="builtin_model_modifying.htm">Modifying custom built-ins</a>.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="entity_models_overview.htm">Entity model overview</a></li>

    <li><a href="../../GetStart/All/rapid_iteration_overview.htm">Rapid Iteration overview</a></li>

    <li><a href="builtin_model_modifying.htm">Modifying built-in models</a></li>

    <li><a href="../../Tutorials/Rapid_Iteration/rapid_flat_model_change.htm">Rapidly iterating a
    model Tutorial</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiD3D10Renderer Library Release Notes</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>NiD3D10Renderer Library Release Notes</h1>

<p><a href=
"Release_Notes__NiD3D10Renderer_Library.htm#DirectX_SDK_Version">DirectX
SDK Version</a></p>

<p><a href=
"Release_Notes__NiD3D10Renderer_Library.htm#New_Classes_and_Changed_Interfaces">
New Classes and Changed Interfaces</a></p>

<p><a href="#Added_Features_and_Fixed_Bugs">Added Features, Changed Behavior, and Fixed Bugs</a></p>

<p><a href=
"Release_Notes__NiD3D10Renderer_Library.htm#Card_and_Driver_Specific_Issues">
Card and Driver Specific Issues</a></p>

<p><a href=
"Release_Notes__NiD3D10Renderer_Library.htm#Known_Issues_and_Limitations">
Known Issues and Limitations</a></p><a name="DirectX_SDK_Version"
id="DirectX_SDK_Version"></a>

<h2>DirectX SDK Version</h2>

<p>Gamebryo LightSpeed was built using the February 2010 DX SDK. Refer to
the <a href="../../GetStart/PC/DirectX_Support.htm">DirectX
Support</a> documentation.</p>

<a name="New_Classes_and_Changed_Interfaces" id="New_Classes_and_Changed_Interfaces"></a><h2>New Classes and Changed Interfaces</h2>

<h3>Gamebryo LightSpeed 3.2</h3>

<ul>
  <li>None in this release.</li>
</ul>

<h3>Gamebryo LightSpeed 3.1</h3>

<ul>
  <li>None in this release.</li>
</ul>

<h3>Gamebryo LightSpeed 3.0</h3>

<ul>
    <li> Fixed a bug in <span class="NDLSystemFont"><a href=
    "../../Reference/NiD3D10Renderer/NiD3D10ShaderConstantMap.htm">NiD3D10ShaderConstantMap</a></span>
        that prevented column-major matrix shader constants from being correctly transposed before being
        updated.</li>
    <li> <span class="NDLSystemFont"><a href=
    "../../Reference/NiD3D10Renderer/NiD3D10Include.htm">NiD3D10Include</a></span>
        class added to allow applications to specify search paths for files included 
        from shaders.</li>
    <li>Added the function NiD3D10Renderer::RecreateSwapChainRenderTargetGroup which takes an existing swap chain RenderTargetGroup 
    and recreates all the buffers to match the new size of the window, but does so without creating a new RenderTargetGroup so no 
    existing references to the render target group need to be updated.</li>
</ul>

<h3>Gamebryo 2.6.0</h3>

<ul>
    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiD3D10Renderer/NiD3D10DeviceState.htm">NiD3D10DeviceState</a></span>
    class now may be used to prevent redundant state settings.
    This is a change in behavior from previous releases.
    Applications that wish to set state on the device directly
    can inform Gamebryo that its shadowed state is no longer
    correct by calling <span class=
    "NDLSystemFont">NiD3D10Renderer::InvalidateDeviceState</span>.</li>
</ul>

<h3>Gamebryo 2.5.0</h3>

<ul>
    <li>The release version of the D3D10 and DXGI libraries are
    now always loaded, rather than attempting to load the
    D3D10d.dll or DXGId.dll libraries in debug builds. The debug
    runtimes are automatically loaded when selected by the
    DirectX Control Panel. As a result, the <span class=
    "NDLSystemFont">NiD3D10Renderer::SetForceNonDebugD3D10</span>
    and <span class=
    "NDLSystemFont">NiD3D10SystemDesc::SetForceNonDebugDXGI</span>
    functions are no longer necessary, and have been
    removed.</li>

    <li><span class=
    "NDLSystemFont">NiD3D10VertexDescription</span>, the
    derivation of <span class="NDLSystemFont"><a href=
    "../../Reference/NiMain/NiShaderDeclaration.htm">NiShaderDeclaration</a></span>
    specific to the <span class="NDLSystemFont"><a href=
    "../../Reference/NiD3D10Renderer/NiD3D10Renderer.htm">NiD3D10Renderer</a></span>,
    has been removed. <span class="NDLSystemFont"><a href=
    "../../Reference/NiMain/NiShaderDeclaration.htm">NiShaderDeclaration</a></span>
    can be used instead.</li>

    <li>The class responsible for packing data into D3D10 vertex
    buffers, <span class=
    "NDLSystemFont">NiD3D10GeometryPacker</span>, has been
    removed as part of the geometry system redesign.</li>

    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiD3D10Renderer/NiCubeMapDepthStencilBuffer.htm">
    NiCubeMapDepthStencilBuffer</a></span> class was created to
    allow applications to create depth/stencil buffers that are
    compatible with using cube maps as render targets.</li>
</ul>

<a name="Added_Features_and_Fixed_Bugs" id="Added_Features_and_Fixed_Bugs"></a><h2>Added Features, Changed Behavior, and Fixed Bugs</h2>

<h3>Gamebryo LightSpeed 3.2</h3>

<ul>
  <li>None in this release.</li>
</ul>

<h3>Gamebryo LightSpeed 3.1</h3>

<ul>
  <li>The D3D10 renderer has been deprecated. Refer to the discussion of the 
  <a href="../..//Convert/Previous/Converting_to_Gamebryo_3_1_Overview.htm#D3D10Deprecation">D3D10 renderer deprecation</a> for more information.</li>
  <li>The <span class="NDLSystemFont">PostRender</span> callback on
  <span class="NDLSystemFont"><a href="../../Reference/NiD3D10Renderer/NiD3D10Shader.htm">NiD3D10Shader</a></span>
  is now correctly called per pass, not per submesh.</li>
</ul>

<h3>Gamebryo LightSpeed 3.0</h3>

<ul>
    <li>Fixed bug storing sampler states in
        <span class="NDLSystemFont"><a href="../../Reference/NiD3D10Renderer/NiD3D10DeviceState.htm">
        NiD3D10DeviceState</a></span> object. This would occasionally cause the wrong 
        sampler to be used, often resulting in the incorrect mipmapping texture 
        addressing mode being used.</li>
    <li>When running on D3D10.1-capable hardware, the
        <span class="NDLSystemFont"><a href="../../Reference/NiD3D10Renderer/NiD3D10Renderer.htm">
        NiD3D10Renderer</a></span> will create a D3D10.1 device.</li>
</ul>

<h3>Gamebryo 2.6.0</h3>

<ul>
    <li>Numerous performance optimizations.</li>

    <li>Modified renderer to use D3D shader compiler included in
    the D3DX10 library, which is more optimized than the shader
    compiler that ships with the D3D10 library.</li>

    <li>Implemented geometry shaders.</li>

    <li>Implemented D3D10 stream-out functionality.</li>

    <li>Added support for anisotropic filtering. The number of
    taps may be specified on a per-map basis, and limited
    globally by a renderer maximum (<span class=
    "NDLSystemFont">NiRenderer::SetMaxAnisotropy</span>).</li>

    <li>Various D3D10-specific <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiMain/NiPixelFormat.htm">NiPixelFormat</a></span>
    objects defined in <span class=
    "NDLSystemFont">NiD3D10PixelFormat.cpp</span> were updated so
    that signed, normalized components were identified using
    <span class=
    "NDLSystemFont">OFFSET_U/OFFSET_V/LUMA/HEIGHT</span> rather
    than <span class="NDLSystemFont">RGBA</span>.</li>

    <li>Implemented all <span class=
    "NDLSystemFont">NiRenderer</span> functionality missing from
    previous releases.</li>

    <li>Fixed a bug where shader constant entries with the same
    name (such as when the same parameter from different objects
    get used in the same shader, like when using the DiffuseColor
    from various lights) were not getting packed in the constant
    buffer correctly.</li>
</ul>

<h3>Gamebryo 2.5.0</h3>

<ul>
    <li>Added compatibility with nVidia's NvPerfHUD tool.</li>

    <li><span class=
    "NDLSystemFont">NiD3D10Renderer::IsDepthBufferCompatible</span>
    was updated to require depth buffers to match the dimensions
    of the render targets exactly, as per the D3D10 limitation,
    rather than simply being at least as large as the render
    targets.</li>

    <li>Changed the default behavior of <span class=
    "NDLSystemFont">NiD3D10Renderer::CreationParameters</span>
    objects to have the <span class=
    "NDLSystemFont">D3D10_CREATE_DEVICE_SINGLETHREADED</span>
    flag specified.</li>

    <li>Fixed an extraneous <span class=
    "NDLSystemFont">NiDelete</span> when loading in a shader
    library that has already been loaded.</li>

    <li>Added a reference to the D3D10 resources provided to
    <span class=
    "NDLSystemFont">NiD3D10Renderer::CreateNiTextureFromD3D10Texture</span>.</li>
</ul>

<a name="Card_and_Driver_Specific_Issues" id="Card_and_Driver_Specific_Issues"></a><h2>Card and Driver Specific Issues</h2>

<h4>ATI Radeon HD 2900 XT</h4>

<p>Driver Tested: Catalyst 9.8</p>

<ul>
    <li>No known issues.</li>
</ul>

<h4>ATI Radeon HD 4870 X2</h4>

<p>Driver Tested: Catalyst 9.8</p>

<ul>
    <li>When using R16G16B16A16_FLOAT as a backbuffer format, the rendered image appears 
        partially washed out to gray. We are working with AMD to investigate this issue.</li>
</ul>

<h4>nVidia GeForce 8800 GTX</h4>

<p>Driver Tested: Forceware 182.50</p>

<ul>
    <li>No known issues.</li>
</ul>

<h4>nVidia GeForce 9800 GTX</h4>

<p>Driver Tested: Forceware 190.62</p>

<ul>
    <li>No known issues.</li>
</ul>

<h4>nVidia GeForce GTX 280</h4>

<p>Driver Tested: Forceware 190.62</p>

<ul>
    <li>No known issues.</li>
</ul>

<h4>nVidia GeForce GTX 295</h4>

<p>Driver Tested: Forceware 190.62</p>

<ul>
    <li>No known issues.</li>
</ul>

<a name="Known_Issues_and_Limitations" id="Known_Issues_and_Limitations"></a><h2>Known Issues and Limitations</h2>

<p>This section lists unexpected issues and limitations in the
D3D10 renderer. For a list of features and platform limitations,
see the <a href=
"../../Reference/NiD3D10Renderer/Features_and_Limitations_of_the_NiD3D10Renderer.htm">
Features and Limitations of the D3D10 Renderer</a>.</p>

<h3>General Notes</h3>

<h4>All Releases</h4>

<ul>
    <li>There is a signed/unsigned mismatch between the blend
    indices used on skinning geometry and the shaders that are
    used to render them. This will generate a D3D10 warning in
    <span class=
    "NDLSystemFont">ID3D10Device::CreateInputLayout</span> that
    can be safely ignored.</li>

    <li>Any <span class="NDLSystemFont"><a href=
    "../../Reference/NiMain/NiRect.htm">NiRect</a></span> passed
    into <span class="NDLSystemFont"><a href=
    "../../Reference/NiMain/NiRenderer.htm">NiRenderer</a>::ClearBuffer</span>
    function will be ignored, and the entire buffer will be
    cleared instead.</li>

    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiD3D10Renderer/Introduction_to_the_D3D10Renderer.htm">
    NiD3D10Renderer</a></span> does not record any metrics.</li>

    <li>Constant buffers applied to <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiD3D10Renderer/NiD3D10Shader.htm">NiD3D10Shader</a></span>
    objects will not be successfully applied; they should instead
    be applied to <span class="NDLSystemFont"><a href=
    "../../Reference/NiD3D10Renderer/NiD3D10Pass.htm">NiD3D10Pass</a></span>
    objects.</li>

    <li>Refer to <a href=
    "../../Reference/NiD3D10Renderer/D3D10_Feature_Support_in_the_NiD3D10Renderer.htm">
    D3D10 Feature Support in the NiD3D10Renderer</a> for
    discussion of the support of D3D10-specific features.</li>

    <li>D3D10 requires that the input parameters of pixel or
    geometry shaders exactly match the outputs of the previous
    shader stage, with the exception of system-generated values.
    This means that, for example, the input to pixel shaders must
    include an entry with the <span class=
    "NDLSystemFont">SV_POSITION</span> semantic, since such a
    parameter must be output from a vertex or geometry
    shader.</li>

    <li>D3D10 does not allow shader programs lower than shader
    model 4.0 to be compiled. To compile shader programs written
    to earlier models, pass in the <span class=
    "NDLSystemFont">D3D10_SHADER_ENABLE_BACKWARDS_COMPATIBILITY</span>
    flag and compile for shader model 4.0. The <span class=
    "NDLSystemFont">NiD3D10BinaryShaderLib</span> does this
    automatically when it encounters such shader programs.</li>

    <li>There have been isolated issues of difficulty presenting
    the scene when the <span class="NDLSystemFont"><a href=
    "../../Reference/NiD3D10Renderer/Introduction_to_the_D3D10Renderer.htm">
    NiD3D10Renderer</a></span> is created with the <span class=
    "NDLSystemFont">CREATE_DEVICE_SWITCH_TO_REF</span> flag.</li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

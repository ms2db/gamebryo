<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ToolLibs Libraries Release Notes</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Body)==========================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>ToolLibs Libraries Release Notes</h1>

<p><a href=
"Release_Notes__ToolLibs_Libraries.htm#Added_Features_and_Fixed_Bugs">
Added Features, Changed Behavior, and Fixed Bugs</a></p>

<p><a href=
"Release_Notes__ToolLibs_Libraries.htm#Known_Issues_and_Limitations">
Known Issues and Limitations</a></p>

<a name="Added_Features_and_Fixed_Bugs" id="Added_Features_and_Fixed_Bugs"></a><h2>Added Features, Changed Behavior, and Fixed Bugs</h2>

<h3>Gamebryo LightSpeed 3.1.1</h3>

<ul>
    <li>
    Fixed some issues with per-sequence and per-object-per-sequence animation compression that could cause it to not compress or even expand the size of data stored.
    </li>
</ul>

<h3>Gamebryo LightSpeed 3.1</h3>

<ul>
    <li>Fixed an issue in <a href="../../Reference/NiMeshTools/NiMeshTools.htm">NiMeshTools</a> 
    where degenerate geometry built into a DCC mesh caused invalid ordering in the mesh index
    and vertex data buffers.</li>

    <li>Fixed an issue in 
    <a href="../../Reference/NiPluginToolkit/Introduction_to_the_NiPluginToolkit_Library.htm">NiPluginToolkit</a>
    that was causing bad formatting of the DCC export log files.</li>
    <li>Fixed a bone LOD issue in the <span class="NDLSystemFont"><a href=
    "../../Reference/NiOptimization/NiOptimization_Overview.htm">NiOptimization</a></span>
     library. The issue was that, for bones whose LOD level was unspecified,&nbsp; 
        those bones would be erroroneously promoted to a higher LOD level than they 
        should have. The fix could potentially change bone LOD behavior when 
        re-exporting Maya assets. Because of differences in the way Max assets are 
        exported, it is less likely that any behavior changes will occur when 
        re-exporting those assets. </li>
</ul>

<h3>Gamebryo LightSpeed 3.0</h3>

<ul>
    <li>Removed some calls to <span class=
    "NDLSystemFont">NiVerifyStaticCast</span> for <span class=
    "NDLSystemFont">NiToolDataStream</span>. These removals make
    NiOptimization usuable with runtime data streams which now
    honor the flag, <span class=
    "NDLSystemFont">LOCK_TOOL_READ</span>. Note that locking
    runtime data streams with this flag may perform very slowly
    if data must be retrieved from the GPU.</li>
</ul>

<h3>Gamebryo 2.6</h3>

<ul>
    <li>Modified <span class="NDLSystemFont"><a href=
    "../../Reference/NiControllerExtractor/NiControllerExtractor.htm">
    NiControllerExtractor</a></span> such that it builds <a href=
    "../../Reference/NiAnimation/NiSequenceData.htm"><span class=
    "NDLSystemFont">NiSequenceData</span></a> objects instead of
    <a href=
    "../../Reference/NiAnimation/NiControllerSequence.htm"><span class="NDLSystemFont">
    NiControllerSequence</span></a> objects. Gamebryo 2.6
    utilizes two classes to represent animated sequences:
    <span class="NDLSystemFont">NiSequenceData</span> and
    <span class="NDLSystemFont">NiControllerSequence</span>.
    <span class="NDLSystemFont">NiSequenceData</span> objects
    contain the shareable, heavyweight data of exported animation
    sequences saved in KF files. <span class=
    "NDLSystemFont">NiControllerSequence</span> objects are
    temporary runtime entities created upon sequence activation.
    These lighter weight objects maintain instance-based state to
    play back the animated sequence on a particular actor. Older
    versions of Gamebryo utilized a single class, also named
    <span class="NDLSystemFont">NiControllerSequence</span>,
    which handled both the shareable data as well as the
    instance-based state. This improvement reduces the runtime
    memory footprint when sequences are shared by multiple
    characters. To enhance runtime performance the new sequence
    format relies upon <span class="NDLSystemFont"><a href=
    "../../Reference/NiAnimation/NiEvaluator.htm">NiEvaluator</a></span>
    objects as opposed to <span class="NDLSystemFont"><a href=
    "../../Reference/NiAnimation/NiInterpolator.htm">NiInterpolator</a></span>
    objects for sampling sequence animation data.</li>

    <li>Revised <span class="NDLSystemFont"><a href=
    "../../Reference/NiAnimationCompression/NiAnimationCompression.htm">
    NiAnimationCompression</a></span> to operate on <a href=
    "../../Reference/NiAnimation/NiSequenceData.htm"><span class=
    "NDLSystemFont">NiSequenceData</span></a> objects instead of
    <a href=
    "../../Reference/NiAnimation/NiControllerSequence.htm"><span class="NDLSystemFont">
    NiControllerSequence</span></a> objects. <span class=
    "NDLSystemFont">NiAnimationCompression</span> now supports
    the compression of sequence evaluators. Refer to the prior
    bullet item for more details regarding the change in the
    sequence format.</li>

    <li>Maintained the ability to compress <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiAnimation/NiInterpolator.htm">NiInterpolator</a></span>
    objects via <span class="NDLSystemFont"><a href=
    "../../Reference/NiAnimationCompression/NiAnimationCompression.htm">
    NiAnimationCompression</a></span>. Although <span class=
    "NDLSystemFont">NiAnimationCompression</span> is primarily
    intended for compressing evaluators in animation sequences it
    can be utilized to compress animation data in non-sequence
    based interpolators via the <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiAnimationCompression/NiAnimationCompression.htm#CompressInterpolator">
    CompressInterpolator</a></span> function.</li>

    <li>Modified <a href=
    "../../Reference/NiDevImageQuantizer/NiDevImageQuantizer.htm">
    NiDevImageQuantizer</a> to no longer be non-deterministic
    when quantizing palettized textures.</li>

    <li>Changed <span class="NDLSystemFont"><a href=
    "../../Reference/NiControllerExtractor/NiControllerExtractor.htm">
    NiControllerExtractor</a></span> such that it no longer
    consolidates <span class="NDLSystemFont"><a href=
    "../../Reference/NiAnimation/NiTransformController.htm">NiTransformController</a></span>
    objects into a single <span class="NDLSystemFont"><a href=
    "../../Reference/NiAnimation/NiMultiTargetTransformController.htm">
    NiMultiTargetTransformController</a></span>. Instead,
    <span class="NDLSystemFont">NiTransformController</span>
    objects are removed from the scene graph. These controllers
    are no longer required for sequence animation since the
    <span class="NDLSystemFont"><a href=
    "../../Reference/NiAnimation/NiMultiTargetPoseHandler.htm">NiMultiTargetPoseHandler</a></span>
    communicates directly with scene graph transform nodes.</li>

    <li>Modified how <span class="NDLSystemFont"><a href=
    "../../Reference/NiControllerExtractor/NiControllerExtractor.htm">
    NiControllerExtractor</a></span> handles the transform on the
    accumulation root. The <span class=
    "NDLSystemFont">BuildSequenceData</span> and <span class=
    "NDLSystemFont">BuildSequenceDatas</span> functions move the
    transform on the accumulation root to its non-accumulation
    child node such that the root's transform is always identity
    within the NIF file. This change in behavior makes the
    transforms stored in NIF files consistent with any exported
    sequences. By definition, the NIF file stores a constant
    scene graph (i.e. a pose rather than an animation). Since
    poses never use accumulation flags the accumulation root in
    the NIF file must have an identity transform.</li>

    <li>Removed from <span class="NDLSystemFont"><a href=
    "../../Reference/NiControllerExtractor/NiControllerExtractor.htm">
    NiControllerExtractor</a></span> the ability to collect
    controllers for later storage in KF files. This option had
    previously been provided to generate KF files that were
    compatible with NIF files exported from a version earlier
    than Gamebryo 1.2. Pre-1.2 NIF files did not contain any time
    controllers for their sequence objects; the KF files did
    instead. In contrast, Gamebryo 1.2 NIF files contain the time
    controllers and the KF files do not (they only contain
    interpolators). The KF files produced by the <a href=
    "../../Reference/Tool_Plug_ins/Controller_Extractor.htm">Controller
    Extractor</a> plug-in are compatible with NIF files from
    Gamebryo 1.2 and later.</li>
</ul>

<h3>Gamebryo 2.5</h3>

<ul>
    <li>Changed <span class="NDLSystemFont"><a href=
    "../../Reference/NiOptimization/NiOptimize.htm">NiOptimize</a>::RemoveSingleChildNodes</span>
    to skip over <span class="NDLSystemFont"><a href=
    "../../Reference/NiPortal/NiRoom.htm">NiPortal::NiRoom</a></span>
    objects. This fixed an issue where portal fixtures could be
    removed as a result of this optimization.</li>

    <li>Changed <a href=
    "../../Reference/NiControllerExtractor/NiControllerExtractor.htm">
    NiControllerExtractor::RemoveInterpolators</a> to recognize
    <a href=
    "../../Reference/NiParticle/NiPSResetOnLoopCtlr.htm">NiPSResetOnLoopCtlr</a>
    objects and (optionally) remove them from particle systems
    involved in sequences.</li>

    <li><span class="NDLSystemFont"><a href=
    "../../Reference/NiMeshProfileProcessor/Introduction_to_NiMeshProfileProcessor.htm">
    NiMeshProfileProcessor</a></span> has been updated to support
    the new <span class="NDLSystemFont">NiFloat16</span>
    class.</li>

    <li><span class="NDLSystemFont"><a href=
    "../../Reference/NiMeshProfileProcessor/Introduction_to_NiMeshProfileProcessor.htm">
    NiMeshProfileProcessor</a></span> and <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiMeshProfileXMLParser/Introduction_to_NiMeshProfileXMLParser.htm">
    NiMeshProfileXMLParser</a></span> have been added to support
    the <a href=
    "../../Art/Other/Introduction_to_Mesh_Profiles.htm">Mesh
    Profile System</a>.</li>

    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiNBTGenerator/Introduction_to_NiNBTGenerator.htm">
    NiNBTGenerator</a></span> has been added to store the logic
    for creating Binormal and Tangent data streams.</li>

    <li>Updated <span class="NDLSystemFont"><a href=
    "../../Reference/NiOptimization/NiOptimization_Overview.htm">NiOptimization</a></span>
    library to support <span class="NDLSystemFont"><a href=
    "../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span>.</li>

    <li><span class="NDLSystemFont">NiMeshTools</span> has been
    added to support common <span class="NDLSystemFont"><a href=
    "../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span> code
    used by other tool libraries and plug-ins.</li>

    <li>Updated <span class="NDLSystemFont"><a href=
    "../../Reference/NiStripify/Introduction.htm">NiStripify</a></span>
    library code to use nVidia algorithms exclusively.</li>

    <li>OpenFlight support has been deprecated and removed from
    Gamebryo because Gamebryo customers are no longer using
    it.</li>
</ul>

<h3>Gamebryo 2.3.0</h3>

<ul>
    <li>Changed <span class="NDLSystemFont"><a href=
    "../../Reference/NiOptimization/NiOptimize.htm">NiOptimize</a>::MergeSiblingTriShapes</span>
    to properly merge <span class="NDLSystemFont"><a href=
    "../../Reference/NiMain/NiTriShape.htm">NiTriShape</a></span>
    objects that have the same set of material pointers and the
    same set of extra data objects. Previously, the merge would
    fail if either <span class="NDLSystemFont">NiTriShape</span>
    object had any extra data or materials.</li>

    <li>Added the ability to exclude specified types of
    controllers from being added to sequences with the
    <span class="NDLSystemFont"><a href=
    "../../Reference/NiControllerExtractor/NiControllerExtractor.htm">
    NiControllerExtractor</a></span> class. Such specified
    controllers will not be added to the sequences nor have their
    interpolators stripped from them.</li>

    <li>Fixed a potential crash issue in <span class=
    "NDLSystemFont"><a href=
    "../../Reference/Tool_Plug_ins/Portal_Converter.htm">PortalConverterDLL</a></span>
    that could cause Maya and Max to crash. The issue was due to
    numerical round-off error in the portal conversion code and
    could result in malformed convex hulls for rooms. The
    malformed convex hull and numerical round-off problems could
    almost always be traced back to nearly collinear or nearly
    coplanar vertex points. The fix detects the issue, prevents
    the crash, and notifies the artist of the rooms that are
    causing the problem.</li>
</ul>

<h3>Gamebryo 2.2.0</h3>

<ul>
    <li>Fixed a problem with strings getting passed into the
    logging system that have the '%' character in them.</li>

    <li>Added the <span class="NDLSystemFont"><a href=
    "../../Reference/NiStandardSharedData/NiExtraObjectsSharedData.htm">
    NiExtraObjectsSharedData</a></span> class to the <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiStandardSharedData/Introduction_to_NiStandardSharedData.htm">
    NiStandardSharedData</a></span> library to provide a way to
    pass non-scene graph objects between tool plug-ins and export
    them.</li>

    <li>Added the <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXSharedData/Introduction_to_NiPhysXSharedData.htm">
    NiPhysXSharedData</a></span> class (and the ToolLib DLL in
    which it resides) used to hold PhysX content throughout tool
    plug-in processing.</li>

    <li>Added the <span class="NDLSystemFont"><a href=
    "../../Reference/NiViewMath/NiViewMath.htm">NiViewMath</a></span>
    library to provide a variety of helper functions for common
    view and transformation operations from the perspective of a
    camera.</li>

    <li>Added the <span class="NDLSystemFont"><a href=
    "../../ee_goto.htm#Reference/NiXbox360ImageTiler/NiXbox360ImageTiler.htm">
    NiXbox360ImageTiler</a></span> utility class (and
    corresponding Gamebryo ToolLibs DLL) to perform
    Xbox360-specific texture tiling on a texture format that
    Xbox360 supports during art asset export, as part of the
    Gamebryo Xenon SDK. This class (and the ToolLib DLL in which
    it resides) is used internally and augments the functionality
    of the <span class="NDLSystemFont"><a href=
    "../../Reference/Tool_Plug_ins/Save_Source_Texture_Renderer_Data.htm">
    SaveSourceTextureRendererData</a></span> processing plugin at
    export time. These components contribute to the support for
    direct-loading textures on supported platforms, which is
    functionality designed to increase loading performance,
    reduce the load-time memory footprint, improve general memory
    usage, and allow for platform-specific extensions. See
    <span class="NDLSystemFont"><a href=
    "../../Programmer/Object_Systems/Streaming.htm#TextureStreamingOptions">
    Texture Streaming Options</a></span> for Internal Textures,
    the export options for <a href=
    "../../Art/Max/Gamebryo_3ds_max_Export_Options1.htm">3ds
    max</a> or <a href=
    "../../Art/Maya/Export_Display_Options.htm">Maya</a>, and the
    description of <span class="NDLSystemFont"><a href=
    "../../Reference/NiMain/NiPersistentSrcTextureRendererData.htm">
    NiPersistentSrcTextureRendererData</a></span> in the Main
    Class Reference for more details.</li>
</ul>

<h3>Gamebryo 2.1.0</h3>

<ul>
    <li>Changed <span class="NDLSystemFont">INVALID_INDEX</span>
    variable defined in <span class="NDLSystemFont"><a href=
    "../../Reference/NiPluginToolkit/Introduction_to_the_NiPluginToolkit_Library.htm">
    NiPluginToolkit</a></span> to be <span class=
    "NDLSystemFont">NIPT_INVALID_INDEX</span> to avoid name
    conflicts.</li>

    <li>Added <a href=
    "../../Reference/NiPluginToolkit/NiXMLLogger.htm"><span class="NDLSystemFont">
    NiXMLLogger</span></a> to <a href=
    "../../Reference/NiPluginToolkit/Introduction_to_the_NiPluginToolkit_Library.htm">
    <span class="NDLSystemFont">NiPluginToolkit</span></a>.</li>
</ul>

<h3>Gamebryo 2.0.0</h3>

<ul>
    <li><a href=
    "../../Reference/NiDevImageQuantizer/NiDevImageQuantizer.htm">
    <span class=
    "NDLSystemFont">NiDevImageQuantizer</span></a>
		
        <ul>
            <li>Added support for compressing multiple faces into
            DXT surfaces and reducing texture dimensions.</li>

            <li>Added code to support creating a mipmap pyramid
            for HDR pixel formats.</li>

            <li>Added code to support converting from RGBA128 to
            RGBA64 and vice versa.</li>
        </ul>
    </li>

    <li><a href=
    "../../Reference/NiControllerExtractor/Introduction_to_NiControllerExtractor.htm">
    <span class=
    "NDLSystemFont">NiControllerExtractor</span></a>
		
        <ul>
            <li>Now recomputing the intermediate values for the
            accum and nonaccum roots.</li>

            <li>Added code to compute animation compression flags
            from note key entries.</li>
        </ul>
    </li>

    <li>Added <a href=
    "../../Reference/NiAnimationCompression/Introduction_to_NiAnimationCompression.htm">
    <span class=
    "NDLSystemFont">NiAnimationCompression</span></a>,
    <span class="NDLSystemFont"><a href=
    "../../Reference/NiHDRReader/NiHDRReader.htm">NiHDRReader</a></span>,
    and <span class="NDLSystemFont"><a href=
    "../../Reference/NiOpenEXRReader/NiOpenEXRReader.htm">NiOpenEXRReader</a></span>
    libraries.</li>

    <li><a href=
    "../../Reference/NiPluginToolkit/Introduction_to_the_NiPluginToolkit_Library.htm">
    <span class="NDLSystemFont">NiPluginToolkit</span></a>
		
        <ul>
            <li>Added a new method to NiPlugin that determines
            whether or not the plugin can instantiate a default
            version of its options. This allows a plug-in to not
            appear in the UI for adding a new plug-in to a
            script.</li>
        </ul>
    </li>

    <li>
        <span class="NDLSystemFont">NiShaderToolKit</span>

        <ul>
            <li>Fixed bug where crash would occur if the shader
            path had not been set prior to loading shaders.</li>
        </ul>
    </li>

    <li>Fixed a problem in <span class=
    "NDLSystemFont">NiControllerExtractor</span> that could cause
    interpolator pose values for the accumulation root to be
    ignored, resulting in improper animation values being
    exported.</li>

    <li>Fixed two issues that were caused by incorrect handling
    of light sources in OpenFlight conversion for external
    OpenFlight file references: (a) A Boolean variable had been
    declared as bool, instead of as an int, as the OpenFlight API
    requires, resulting in a memory issue for light source
    handling. (b) Erroneous handling of light sources for nested
    external reference files resulted in an access violation. The
    corrected behavior is to ignore light sources defined in
    external reference files, but process all light sources
    defined in the master file. Also, added sanity checks on
    whether a light is found.</li>
</ul>

<a name="Known_Issues_and_Limitations" id="Known_Issues_and_Limitations"></a><h2>Known Issues and Limitations</h2>

<ul>
    <li>The <a href=
    "../../Reference/NiMeshProfileProcessor/Introduction_to_NiMeshProfileProcessor.htm">
    <span class="NDLSystemFont">NiMeshProfileProcessor</span></a>
    is not guaranteed to preserve the order of the elements in
    the resulting <span class="NDLSystemFont"><a href=
    "../../Reference/NiMesh/NiDataStream.htm">NiDataStream</a></span>.</li>

    <li>Some data is not endian-converted when loading a NSB file
    on a different platform than the one it was created on.
    Specifically, the data provided in a NSF for <span class=
    "NDLSystemFont">CM_Global</span> and <span class=
    "NDLSystemFont">CM_Constant</span>, as well as the default
    value for <span class="NDLSystemFont">CM_Attribute</span> are
    not endian swapped when loading the NSB. For example, this
    would occur when an NSB generated from an NSF on Windows was
    loaded on a big-endian console.<br>
    One work-around for this is to generate a platform-specific
    NSB from the NSF on-target, as the data is read and parsed
    properly from an NSF on any platform.</li>

    <li>Xbox 360 tool libraries will only build under Visual
    Studio 2005. This is a limitation imposed by Microsoft. Xbox
    360 developers are urged to use Visual Studio 2005 to build
    their tool pipeline.</li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

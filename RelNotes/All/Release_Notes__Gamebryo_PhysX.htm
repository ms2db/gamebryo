<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Gamebryo-PhysX Release Notes</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Build" content="PhysX" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->

<!--(Begin Links)===================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Body)==========================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Gamebryo-PhysX Release Notes</h1>

<p><a href=
"Release_Notes__Gamebryo_PhysX.htm#Added_Features_Changed_Behavior_And_Fixed_Bugs">
Added Features, Changed Behavior, and Fixed Bugs</a></p>

<p><a href=
"Release_Notes__Gamebryo_PhysX.htm#Known_Issues_and_Limitations">Known
Issues and Limitations</a></p>

<a name="Added_Features_Changed_Behavior_And_Fixed_Bugs" id="Added_Features_Changed_Behavior_And_Fixed_Bugs"></a>
<h2>Added Features, Changed Behavior, and Fixed Bugs</h2>

<h3>Gamebryo LightSpeed 3.2</h3>

<ul>
    <li>Gamebryo LightSpeed has been developed and tested using:
        <ul>
            <li>PhysX SDK Version 2.8.3 (Build 21) on Win32.</li>
            <li>PhysX SDK Version 2.8.3 (Build 34) on Xbox 360.</li>
            <li>PhysX SDK Version 2.8.3 (version B1) on Playstation 3.</li>
            <li>PhysX DCC plug-ins found in the PhysX directory of the Gamebryo install disk.</li>
        </ul>
        
        <p>See the Gamebryo 3.1.1 notes below for additional changes related to using PhysX
        2.8.3.
        </p>
    </li>

    <li>The Gamebryo Max Plug-in now supports PhysX data created by the PhysX Max plug-in version
    2.4 for PhysX 2.8.3. Support for content created by earlier PhysX plug-ins is still present,
    with the exception of joint data created with very early versions of the PhysX plug-in
    (versions prior to the D6Joint Max helper class). Similarly, the Maya Plug-in has been updated
    to the newer PhysX plug-in and support for 1.x plug-ins is dropped though content will still
    function. Note that Maya 2008 cannot be used with the new PhysX plug-in.</li>
    
    <li>Various methods in the
    <span class="NDLSystemFont"><a href="../../Reference/NiPhysX/NiPhysXBodyDesc.htm">NiPhysXBodyDesc</a></span>
    class have been modified to take a sleeping parameter. When the sleep status is true, and
    the velocities are zero, the actor will be put to sleep whenever cached state is restored.
    Code that calls state caching methods must be modified to add the additional parameter.</li>

    <li>Gamebryo-PhysX no longer shares collision meshes based upon names. Sharing is now
    implemented at the level of
    <span class="NDLSystemFont"><a href="../../Reference/NiPhysX/NiPhysXMeshDesc.htm">NiPhysXMeshDesc</a></span>
    objects; if two PhysX collision shapes share a pointer to an instance of 
    <span class="NDLSystemFont">NiPhysXMeshDesc</span> they also share the underlying PhysX collision
    mesh. See the <a href="../../Convert/Previous/Converting_to_Gamebryo_3_2_Overview.htm#NiPhysXChanges">
    Conversion Guide</a> for more details.
    </li>

    <li>The mapping from PhysX cloth vertices to Gamebryo mesh vertices has been moved from the
    <span class="NDLSystemFont"><a href="../../Reference/NiPhysX/NiPhysXMeshDesc.htm">NiPhysXMeshDesc</a></span>
    class to the
    <span class="NDLSystemFont"><a href="../../Reference/NiPhysX/NiPhysXClothDesc.htm">NiPhysXClothDesc</a></span>
    class so that cloth meshes may be shared.
    See the <a href="../../Convert/Previous/Converting_to_Gamebryo_3_2_Overview.htm#NiPhysXChanges">
    Conversion Guide</a> for more details.
    </li>
	
	<li>If you wish to edit Cloth in Max, you must use a previous version (1.06) of the PhysX Max plugin. The current
	PhysX Max plugin will not work and may corrupt your Cloth content.</li>

    <li>The definitions for the extra data used in exporting PhysX have all been moved
    into a single header, found in the PhysXCleanerDLL directory. All other Gamebryo code
    that needs the definitions now references this one header, as should any custom code.
    </li>
    
    <li>The ground plane object in
    <a href="../../Tools/PhysX_Nif_Viewer/Introduction_to_the_PhysX_NIF_Viewer.htm">PhysXNifViewer</a>
    now has the skin width scaled by the PhysX scene
    scale, which significantly improves the behavior with very small or large PhysX objects.
    </li>
    
    <li>Methods for fingerprinting PhysX collision meshes (helpful in determining if a given
    mesh is the same as another) have been added to the
    <span class="NDLSystemFont"><a href="../../Reference/NiPhysXTools/NiPhysXTools.htm">NiPhysXTools</a></span>
    class.
    </li>
</ul>


<h3>Gamebryo LightSpeed 3.1.1</h3>

<ul>
    <li>Gamebryo LightSpeed has been developed and tested using:
        <ul>
            <li>PhysX SDK Version 2.8.1 (Build 16) on Win32.</li>
            <li>PhysX SDK Version 2.8.1 (Build 19) on Xbox 360.</li>
            <li>PhysX SDK Version 2.8.1 (version C7) on Playstation 3.</li>
            <li>PhysX DCC plug-ins found in the PhysX directory of the Gamebryo install disk.</li>
        </ul>
    </li>
        
        <li>In preparation for an upgrade to PhysX 2.8.3, the following changes were made:</p>
        <ul>
            <li>The file <span class="NDLSystemFont">NiPhysX.h</span> has a macro definition
                at the top for <span class="NDLSystemFont">EE_PHYSX_283</span>.
                When defined, this causes the code base to compile as if
                against PhysX 2.8.3. If not defined, the code assumes PhysX 2.8.1.</li>
            <li>The PhysX Mesh Converter Tool Plug-in has been removed from the
                product. The PhysX SDK no longer includes the libraries necessary to
                build it. It was used to convert PhysX meshes from pre-PhysX-2.7.0 to the
                PhysX 2.7.0 and later format. Should you require such functionality, contact
                Gamebryo support.</li>
            <li>The <span class="NDLSystemFont">
                <a href="../../Reference/NiPhysX/NiPhysXClothDesc.htm">
                NiPhysXClothDesc</a></span> class has some additonal parameters to match those
                added in the PhysX SDK. Code that uses the method
                <span class="NDLSystemFont">NiPhysXClothDesc::SetConstantParameters</span>
                must be updated to specify the additional parameters. See the reference
                documentation for the new method signature. These changes apply on all platforms.
                </li>
            <li>The <span class="NDLSystemFont">
                <a href="../../Reference/NiPhysX/NiPhysXSDKDesc.htm">
                NiPhysXSDKDesc</a></span> class has some additonal parameters to match those
                added in the PhysX SDK.</li>
            <li>The
                <a href="../../Tools/PhysX_Scene_Graph_Printer/PhysX_Scene_Graph_Printer_Intro.htm">
                PhysX Scene Graph Printer</a> tool was updated to display new flags and parameters
                associated with PhysX objects.</li>
        </ul>
    </li>

    <li>A major problem with <span class="NDLSystemFont"><a href=
        "../../Reference/NiPhysXParticle/NiPhysXPSParticleSystem.htm">NiPhysXPSParticleSystem</a></span> objects
        that caused particles to be in the wrong position, with incorrect bounds, has been
        fixed.
    </li>

    <li>Several issues with cloning of PhysX-based particle systems were fixed. A cloned
        particle system will be fully set up in a cloned prop when the prop itself was
        cloned. If the particle system was cloned, but the prop was not, then the system is
        not associated with any prop (that is the former behavior).</li>

    <li>A bug was fixed in the <span class="NDLSystemFont"><a href=
        "../../Reference/NiPhysX/NiPhysXScene.htm">NiPhysXScene</a></span> destructor that
        was causing a crash when the destructor was called when simulation was active.</li>

    <li>As a result of the above fixes, PhysX-based particle systems may now be used with
        the Game Framework provided the PhysXScene entity that is controlling simulation has
        the BlockOnFetch property true.</li>

    <li>A bug that caused interpolation of PhysX state to be ignored for <span class=
        "NDLSystemFont"><a href="../../Reference/NiPhysX/NiPhysXRigidBodyDest.htm"
        >NiPhysXRigidBodyDest</a></span>-derived objects has been fixed.</li>

    <li>A bug in the configuration of the <span class="NDLSystemFont">
        <a href="../../Reference/efdPhysX/efdPhysX__PhysXSDKManager.htm">efdPhysX::PhysXSDKManager.htm</a></span>
        object has been fixed. Previously, the configuration option to set the vrdEventMask would
        fail and could crash.
    </li>

    <li>Two methods, <span class="NDLSystemFont">IsSequencePhysical</span> and <span class=
        "NDLSystemFont">IsSequenceRagdoll</span> have been added to the <span class="NDLSystemFont"
        ><a href="../../Reference/NiPhysX/NiPhysXSequenceManager.htm">NiPhysXSequenceManager</a>
        </span> class. This enables applications to easily determine if a sequence is marked as
        physical and if a sequence is currently in a rag-doll state (equivalent to a physical
        sequence being active).</li>
</ul>

<h3>Gamebryo LightSpeed 3.1</h3>

<ul>
    <li>Gamebryo LightSpeed has been developed and tested using:
        <ul>
            <li>PhysX SDK Version 2.8.1 (Build 16) on Win32.</li>
            <li>PhysX SDK Version 2.8.1 (Build 19) on Xbox 360.</li>
            <li>PhysX SDK Version 2.8.1 (version C6)
            on Playstation 3.</li>
            <li>PhysX SDK Version 2.8.1 (Build 15) on Wii.</li>
        </ul>
    </li>

    <li>The <span class="NDLSystemFont"><a href=
        "../../Reference/NiPhysX/NiPhysXProp.htm">NiPhysXProp</a></span> class has
        gained a member variable and accessor functions that provide a string for use
        in dis-ambiguating collision mesh names. Previously, mesh names were required to
        be unique across the entire application, even across art files from different sources.
        Now, the string provided to the prop is propagated to the collision mesh caching code
        and used to modify the names on a per-prop basis. We strongly recommend the use of
        this feature in all applications. See the
        <span class="NDLSystemFont">NiPhysXProp::SetMeshPrependName</span> method.
    </li>

    <li>The <span class="NDLSystemFont"><a href=
        "../../Reference/NiPhysX/NiPhysXPropDesc.htm">NiPhysXPropDesc</a></span> class has been
        modified to add a verification step when setting the actor parent on
        <span class="NDLSystemFont"><a href=
        "../../Reference/NiPhysX/NiPhysXRigidBodyDest.htm">NiPhysXRigidBodyDest</a></span>-derived
        objects. The verification checks the scene-graph relationship between the
        nodes before setting the parent. If a non-accumulation node has been inserted between
        two physically controled nodes the physics control is switched from the accumulation
        to the non-accumulation node. This fixes transformation problems
        that arose with rag-dolls exported for the Gamebryo Animation System. Applications
        will require modification in cases where the transform of the actor root was read
        back from a rag-doll and that rag-doll was not managed by an
        <span class="NDLSystemFont">NiPhysXSequenceManager</span> object.
        The correct transform will now appear on the non-accum node.
    </li>

    <li>A bug in the <span class="NDLSystemFont"><a href=
        "../../Reference/NiPhysX/NiPhysXShapeDesc.htm">NiPhysXShapeDesc</a></span>
        class that caused incorrect cloning of capsule shape descriptors has been fixed.</li>

    <li>A bug in the <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXParticle/NiPhysXPSMeshParticleSystemProp.htm">
    NiPhysXPSMeshParticleSystemProp</a></span> and <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiPhysXParticle/NiPhysXPSParticleSystemProp.htm">
    NiPhysXPSParticleSystemProp.htm</a></span> classes that
    caused unnecessary calls to mesh modifier functions on cloned
    objects has been fixed.</li>

    <li>A bug in the <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXParticle/NiPhysXPSMeshParticleSystem.htm">
    NiPhysXPSMeshParticleSystem</a></span> class that switched the mesh pool size and
    the number of generations has been fixed. Furthermore, the actor pool size was being
    set the the particle count rather than the given parameter, which has now been fixed.
    Finally, the actor pool for particles was not being filled under some circumstances,
    and this has been rectified.
    </li>

    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXParticle/NiPhysXPSMeshParticleSystem.htm">
    NiPhysXPSMeshParticleSystem</a></span> and <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiPhysXParticle/NiPhysXPSParticleSystem.htm">
    NiPhysXPSParticleSystem.htm</a></span> classes now modify actors released to the
    free-actor pool to disable gravity, kill any motion and move them to the defined
    region of the world. This means that free actors go to sleep and minimally interact with
    other geometry.</li>

    <li>A bug in the <span class="NDLSystemFont">IsEqual</span>
    function in the <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXD6JointDesc.htm">NiPhysXD6JointDesc</a></span>
    class has been fixed.</li>

    <li><span class="NDLSystemFont"><a href=
    "../../Reference/ecrPhysX/Introduction_to_ecrPhysX_Class_Reference.htm">
    ecrPhysX</a></span> no longer requires linkage with
    <span class="NDLSystemFont">NiPhysXFluid</span> and
    <span class="NDLSystemFont">NiPhysXParticle</span>. As a
    result of this change, applications that use <span class=
    "NDLSystemFont">ecrPhysX</span> and want to stream in
    <span class="NDLSystemFont">NiPhysXFluid</span> or
    <span class="NDLSystemFont">NiPhysXParticle</span> content
    must now include <span class=
    "NDLSystemFont">NiPhysXParticle.h</span> and <span class=
    "NDLSystemFont">NiPhysXFluid.h</span>. If this is not done,
    warnings will be printed to the debug console and the PhysX
    content will not be loaded.</li>

    <li>A potential crash situation related to rag-doll activation has been fixed.
    The problem arose when an animation sequence was made physical (ragdoll) while active.
    </li>

    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXUserOutput.htm">NiPhysXUserOutput</a></span>
    and <span class="NDLSystemFont"><a href=
    "../../Reference/efdPhysX/efdPhysX__PhysXUserOutput.htm">efdPhysX::PhysXUserOutput</a></span>
    classes now display "PhysX Warning" when the PhysX message is
    not for an error condition.</li>
</ul>

<h3>Gamebryo LightSpeed 3.0</h3>

<ul>
    <li>Gamebryo LightSpeed has been developed and tested using:

        <ul>
            <li>PhysX SDK Version 2.8.1 (Build 14) on Win32 and Xbox
            360.</li>
            <li>PhysX SDK Version 2.8.1 (version C2 for SDK 2.50)
            on Playstation 3.</li>
        </ul>
    </li>

    <li>Some functionality in NiPhysX library has been moved to
    the new Foundation PhysX library. See the <a href=
    "../../Convert/Announce/Foundation_PhysX.htm">Foundation
    PhysX Layer</a> documentation for details.</li>

    <li>Additional integration between Gamebryo and PhysX is
    available in the new <a href=
    "../../Programmer/SystemServices/physx_system_service_using_without_core.htm">
    Game Framework PhysX</a> library. This includes system
    services for managing PhysX <span class=
    "NDLSystemFont">NxScene</span> objects and a system for
    implementing event triggers with PhysX.</li>

    <li>Core Runtime Services that interface between Game
    Framework and Core Runtime are available in the <a href=
    "../../Programmer/SystemServices/physx_system_service_using_core.htm">
    Core Services PhysX</a> library.</li>

    <li>PhysX fluids will now obtain rotation parameters (angle,
    speed, and axis of rotation) from Gamebryo particle systems
    during the export process; previously, they only took color
    and radius.</li>

    <li>Fixed a bug in the <a href=
    "../../Reference/NiPhysX/NiPhysXSequenceManager.htm"><span class="NDLSystemFont">
    NiPhysXSequenceManager</span></a> class that was causing
    incorrect activation of physics for cloned actors. Also
    modified the behavior so that a sequence is made physical if
    it is active at the time it is added to the manager.</li>

    <li>Fixed a bug in cloning of PhysX-based particle
    systems.</li>

    <li>Fixed a bug that prevented PhysX cloth from behaving
    correctly when PhysX simulation was asynchronous.</li>

    <li>Gamebryo-PhysX classes that work with particle systems
    have been modified to incorporate new particle system
    functionality introduced in Gamebryo LightSpeed. See the
    <a href=
    "../../Convert/Previous/Converting_PhysX_Particles_Lightspeed.htm">
    Converting PhysX Particles</a> page for details.</li>

    <li>Updated support for the PhysX Plug-In for 3ds Max to
    version 1.0.6, available from NVIDIA's website. Additional
    changes have improved the robustness of the export process.
    Note that options for "Specify physics representation" when
    creating a proxy in the Physx Max Plugin version 1.0.6 no
    longer include Sphere, Box, Capsule, Convex, or Triangle
    Mesh. See the section on <a href=
    "../../Art/Max/Gamebryo_Rigid_Body_Extras_with_Max.htm">Proxy
    Geometry</a> for steps to associate arbitrary proxy geometry
    with "true" geometry in 3ds Max.</li>

    <li>The <a href=
    "../../Tools/PhysX_Nif_Viewer/Introduction_to_the_PhysX_NIF_Viewer.htm">
    PhysX NIF Viewer</a> application now supports the PhysX
    Visual Remote Debugger. Changes were also made to handle
    scenes with zero-radius bounds.</li>

    <li>Fixed a crash in the <a href=
    "../../Learn/Demos/PhysX_Particles_Demo_Overview.htm">PhysX
    Particles sample</a> that occurred when PhysX hardware was not
    present.</li>

    <li>Fixed a bug in the <a href=
    "../../Learn/FullDemos/Dodgeball_Overview.htm">Dodgeball
    sample</a> that sometimes caused a crash when the game reset.
    Also fixed a bug in which the game failed to reset when the
    character went out of bounds.</li>

    <li>Removed the OWN_MANAGER_MASK flag from the <a href=
    "../../Reference/NiPhysX/NiPhysXScene.htm"><span class=
    "NDLSystemFont">NiPhysXScene</span></a> class. This flag was
    to determine whether or not the PhysXScene owned its <a href=
    "../../Reference/NiFloodgate/NiSPWorkflowManager.htm"><span class="NDLSystemFont">
    NiSPWorkflowManager</span></a>. PhysXScene now has a smart
    pointer to its NiSPWorkflowManager so ownership is no longer
    needed.</li>
</ul>

<h3>Gamebryo 2.6</h3>

<ul>
    <li>Improved the interaction between PhysX and the animation
    system such that physics based sequences can now be reverted
    back to standard animation sequences via <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXSequenceManager.htm">NiPhysXSequenceManager</a>::RevertPhysicalSequence</span>.
    The revised <span class=
    "NDLSystemFont">NiPhysXSequenceManager</span> operates using
    <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXAccumPoseBufferDest.htm">NiPhysXAccumPoseBufferDest</a></span>
    and <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXPoseBufferDest.htm">NiPhysXPoseBufferDest</a></span>
    objects which have replaced the deprecated <span class=
    "NDLSystemFont">NiPhysXAccumInterpolatorDest</span> and
    <span class="NDLSystemFont">NiPhysXInterpolatorDest</span>
    classes. These new destination classes write their physics
    derived values directly to the pose buffer of the active
    animation instead of the sequence's interpolators (which have
    been replaced with evaluators within the sequence). This
    modification allows the sequence evaluators to keep their
    original animation keys when converted to a physical
    sequence. This original keyframe data drives the pose buffer
    values whenever a physics based sequence is reverted.</li>

    <li>Eliminated <span class=
    "NDLSystemFont">NiPhysXSequenceManager::RemoveSequence</span>.
    Use <span class=
    "NDLSystemFont">NiPhysXSequenceManager::RevertPhysicalSequence</span>
    instead.</li>

    <li>Fixed a cloning bug in the <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiPhysXFluid/NiPhysXFluidDest.htm">NiPhysXFluidDest</a></span>
    class that caused a crash in the original fluid system after
    it was cloned.</li>

    <li>Added a function <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXManager.htm">NiPhysXManager::RemoveUnusedMeshes</a></span>
    that removes any cached collision meshes with a reference
    count of 0.</li>
</ul>

<h4>Art Tools</h4>

<ul>
    <li>Enhanced the <a href=
    "../../Tools/animation_tool/Introduction_to_PhysX_in_Animation_Tool.htm">
    Animation Tool</a> so the user may revert physics based
    sequences back to standard animation sequences. Previously,
    it was not possible to convert physics based sequences to
    normal animations because the original animation keys had
    been deleted (which is no longer the case).</li>

    <li>Updated support for the PhysX Max plug-in to version
    1.0.4a.</li>

    <li>The behavior of the fluid system export process has
    changed. Gamebryo now uses the concave/convex designation of
    a mesh to determine if it should be dynamic or static. Any
    mesh in a Max or Maya scene that is marked as "concave", or
    not "convex", will be exported as a static actor when the
    <a href=
    "../../Reference/Tool_Plug_ins/PhysX_Extractor.htm">PhysX
    Extractor</a> is set to convert particles to fluids. This was
    done to work around a problem in Maya, where there is no way
    to specify a static actor. The behavior is unchanged when
    "Convert PSys to Fluid" is unchecked in the <a href=
    "../../Reference/Tool_Plug_ins/PhysX_Extractor.htm">PhysX
    Extractor</a> options.</li>

    <li><a href=
    "../../Reference/Tool_Plug_ins/PhysX_Extractor.htm">PhysX
    Extractor</a> now checks for problems with cloth properties
    individually, so that the errors reported are maximally
    informative.</li>

    <li>The <a href=
    "../../Reference/Tool_Plug_ins/PhysX_Ragdoll.htm">PhysX
    Ragdoll</a> tool plug-in no longer makes any assumption about
    the ordering of actors in a joint when setting actor parent
    pointers. This fixes problems with excessive jerkiness in
    some rag-dolls.</li>
</ul>

<h3>Gamebryo 2.5</h3>

<ul>
    <li>The supported NVIDIA PhysX version on all platforms has
    been updated to SDK 2.8.0.</li>

    <li>The PhysX Art Tool plug-ins are now available from
    <a href=
    "../../Programmer/NiPhysX/NVIDIA_PhysX_Resources.htm">SourceForge.net</a>.
    This was a change made to encourage community development of
    the tools. See the <a href=
    "../../Art/Max/Installation.htm">Max installation
    instructions</a> and the <a href=
    "../../Art/Maya/Gamebryo_Maya_Plug_in_Installation.htm">Maya
    Installation instructions</a> and the <a href=
    "../../Convert/Previous/Gamebryo-PhysX_Conversion.htm#PhysX_Art_Tool_Changes">
    PhysX Conversion Guide</a> for important information.</li>

    <li>See the <a href=
    "../../Convert/Previous/Gamebryo-PhysX_Conversion.htm">Gamebryo-PhysX
    Conversion Guide</a> for major issues that require
    significant changes to existing code, assets, or workflow.
    There have been significant changes due to changes to the
    geometry system and particles in Gamebryo.</li>

    <li>Software fluid simulation is now available on all
    platforms. Hardware fluids on PC will fall back to software
    if hardware is not available.</li>
</ul>

<h4>CoreLibsPhysX</h4>

<ul>
    <li>The <a href=
    "../../Reference/NiPhysX/NiPhysXScene.htm#mesh_modifier_functionality">
    <span class="NDLSystemFont">NiPhysXScene</span></a> class now
    includes support for <a href=
    "../../Programmer/NiMesh/Introduction_to_Mesh_Modifiers.htm">Mesh
    Modifiers</a> that must be synchronized to physics simulation
    start or completion. To support modifier synchronization
    control, a flag has been added to NiPhysXScene to specify
    synchronous or asynchronous simulation. The setting of this
    flag, via the <a href=
    "../../Reference/NiPhysX/NiPhysXScene.htm#simulation_functions">
    NiPhysXScene::SetAsynchronousSimulation</a> function, must be
    <span class="NDLSystemFont">true</span> if the PhysX
    simulation is active during rendering, and <span class=
    "NDLSystemFont">false</span> if simulation and rendering do
    not overlap during execution. <em>Applications using cloth or
    PhysX-based particles or fluids must set this flag</em>.</li>

    <li>Added support for named initial conditions to
    <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXPropDesc.htm">NiPhysXPropDesc</a></span>
    and related classes. This allows a name to be associated with
    the state stored at a given index. This name can then be used
    with functions in <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXScene.htm">NiPhysXScene</a></span>
    to restore a named state.</li>

    <li>Added flags in the <a href=
    "../../Reference/NiPhysX/NiPhysXPropDesc.htm"><span class=
    "NDLSystemFont">NiPhysXPropDesc</span></a> class to control
    the deletion of saved states once PhysX content has been
    created. The aim is to allow applications to save memory in
    cases where PhysX data will not be cloned or restored once
    the PhysX content is created. The use of these flags does not
    prevent cloning <em>before</em> the PhysX content is created
    from the prop. The <span class="NDLSystemFont"><a href=
    "../../Reference/Tool_Plug_ins/PhysX_Extractor.htm">PhysXExtractor</a></span>
    tool plug-in provides artist access to the flags.</li>

    <li>Add a flag to the <a href=
    "../../Reference/NiPhysX/NiPhysXPropDesc.htm"><span class=
    "NDLSystemFont">NiPhysXPropDesc</span></a> class to specify
    that the prop should be simulated on hardware when possible.
    Modified <a href=
    "../../Tools/PhysX_NIF_Viewer/Introduction_to_the_PhysX_NIF_Viewer.htm">
    PhysX Nif Viewer</a> to make use of this.</li>

    <li>Added functions to the <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXShapeDesc.htm">NiPhysXShapeDesc</a></span>
    class to provide direct access to the properties of the
    shape.</li>

    <li>Added an error code argument to <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXManager.htm#public_methods">NiPhysXManager::Initialize</a></span>
    so that applications can check the reason for failure.
    Updated Gamebryo applications to improve feedback of PhysX
    errors where appropriate.</li>

    <li>Added functions to the <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXManager.htm">NiPhysXManager</a></span>
    class to allow PhysX collision meshes to be removed. This
    fixes a problem that arose when a prop was loaded with some
    meshes, then removed, and then another prop was loaded with
    meshes of the same name. The original meshes could not be
    removed and hence caused the new prop to use the old meshes.
    Now, those meshes can be deleted (it must be done explicitly)
    before the new prop is loaded.</li>

    <li>Added an additional function to the <span class=
    "NDLSystemFont">NiPhysXAllocator</span> class to implement
    the memory debug allocations that provide the memory
    allocation class and type.</li>

    <li>The data in <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXMeshDesc.htm">NiMeshDesc</a></span>
    objects is now freed when new data is set using <span class=
    "NDLSystemFont">NiMeshDesc::SetData</span>.</li>

    <li>Error handling has been improved for situations where
    there are problems with the PhysX actor in use with <a href=
    "../../Programmer/NiPhysX/Introduction_to_NiPhysXParticle.htm">
    PhysX-based particle systems</a>.</li>

    <li>Fixed a bug in the <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXRigidBodyDest.htm">NiPhysXRigidBodyDest</a></span>
    class that caused incorrect scaling when an actor has a
    parent actor and there is a non-identity scene-graph
    scale.</li>

    <li>Fixed another problem in the <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXRigidBodyDest.htm">NiPhysXRigidBodyDest</a></span>
    class and derived classes whereby the scene graph for
    sleeping actors was continuing to be updated even if the
    PhysX actors were sleeping. This fix has implications for
    classes derived from the <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXRigidBodyDest.htm">NiPhysXRigidBodyDest</a></span>
    class - see the <a href=
    "../../Reference/NiPhysX/NiPhysXRigidBodyDest.htm">documentation</a>
    for details.</li>

    <li>The <span class="NDLSystemFont">NiPhysXFluidSystem</span>
    class did not implementing cloning, despite the documentation
    indicating otherwise. The <span class=
    "NDLSystemFont"><a href="../../Reference/NiPhysXFluid/NiPhysXPSFluidSystem.htm">
    NiPhysXPSFluidSystem</a></span> class now implements
    cloning.</li>

    <li>Improved the behavior of <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXPropDesc.htm">NiPhysXPropDesc</a></span>
    objects when they are creating materials in an PhysX scene.
    Previously, excess materials would be created when multiple
    props were creating in a scene. Now, only as many materials
    are generated as is necessary to create materials with the
    required indices.</li>

    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXFluid/NiPhysXPSFluidSystem.htm">NiPhysXPSFluidSystem</a></span>
    and <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXFluid/NiPhysXPSMeshFluidSystem.htm">NiPhysXPSMeshFluidSystem</a></span>
    classes now support reset. When a scene containing fluids is
    restored from a snapshot, the <a href=
    "../../Programmer/NiPhysX/Updating_an_NiPhysXPSFluid_System.htm">
    fluid is reset</a>.</li>
</ul>

<h4>ToolLibsPhysX</h4>

<ul>
    <li>The <span class=
    "NDLSystemFont">NiPhysXSnapshotExtractor</span> library has
    been removed and the only class in it, <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiPhysXTools/NiPhysXSnapshotExtractor.htm">NiPhysXSnapshotExtractor</a></span>,
    has been moved into the new <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiPhysXTools/Introduction_to_NiPhysXTools.htm">
    NiPhysXTools</a></span> library, which contains other PhysX
    functionality useful for tools.</li>

    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXSharedData/Introduction_to_NiPhysXSharedData.htm">
    NiPhysXSharedData</a></span> class now includes storage of
    the time-stamps and names for the stored states.</li>
</ul>

<h4>Art Tools</h4>

<ul>
    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/Tool_Plug_ins/PhysX_Extractor.htm">PhysXExtractor</a></span>
    tool plug-in now includes an option to store a PhysX state
    for the start of each Animation Sequence defined for a scene.
    This option should always be checked when the PhysX content
    will be used in <a href=
    "../../Tools/animation_tool/Introduction_to_PhysX_in_Animation_Tool.htm">
    Animation Tool</a> because it enables correct initialization
    of PhysX content when a sequence is played. Support has also
    been added for cloth objects to store multiple states. Use
    the keep flags to control what happens to the data at
    runtime. This fixes a problem in Animation Tool in which
    PhysX joints or cloth would be broken when a sequence was
    played that had a different start pose from the bind
    pose.</li>

    <li>The Gamebryo export process now detects and respects the
    "Use PhysX default material" option for the "Material
    Settings" of a PhysX object. Due to a change in the PhysX Max
    plug-in, it is no longer possible to set the materials of a
    proxy object independently of the materials of the actor it
    is a shape for.</li>

    <li>Some previous versions of the <a href=
    "../../Reference/Tool_Plug_ins/PhysX_Extractor.htm">PhysX
    Extractor</a> tool plug-in modified bytes 8-11 of streamed
    PhysX mesh data to insert the PhysX SDK version. This is no
    longer done as PhysX now uses these bytes itself, and
    provides conversion code.</li>

    <li>PhysX Hardware support has been re-enabled in <a href=
    "../../Tools/animation_tool/Introduction_to_PhysX_in_Animation_Tool.htm">
    Animation Tool</a>. The PhysX bug that previously caused
    problems appears to have been fixed in a subsequent PhysX SDK
    release.</li>

    <li>The behavior of <a href=
    "../../Tools/animation_tool/Introduction_to_PhysX_in_Animation_Tool.htm">
    Animation Tool</a> and <a href=
    "../../Tools/PhysX_NIF_Viewer/Introduction_to_the_PhysX_NIF_Viewer.htm">
    PhysX Nif Viewer</a> for Win32 has been improved in cases
    where fluid simulation is requested but no hardware is
    present. PhysX can now fall back to software fluid simulation
    and the tools take advantage of this.</li>

    <li>The forces applied to cloth in <a href=
    "../../Tools/animation_tool/Introduction_to_PhysX_in_Animation_Tool.htm">
    Animation Tool</a> and <a href=
    "../../Tools/PhysX_NIF_Viewer/Introduction_to_the_PhysX_NIF_Viewer.htm">
    PhysX Nif Viewer</a> are now scaled according to the density
    and area of the cloth, which provides a more reasonable
    approximation to mass.</li>

    <li>The gravity direction in <a href=
    "../../Tools/PhysX_NIF_Viewer/Introduction_to_the_PhysX_NIF_Viewer.htm">
    PhysX Nif Viewer</a> is now taken from the down direction on
    the first non default camera in cases where gravity is not
    specified on the command line and there is a non-default
    camera.</li>

    <li>The locations and names for PhysX Nif Viewer executables
    has changed. For Win32, the executables are now found in
    <em>%EGB_PATH%</em>\Tools\DeveloperTools\PhysXNifViewer\Win32\VC80
    or VC90. This is to prevent conflicts between different
    compiler versions. The Shipping configurations, DLL and
    static, are available by default. For PS3, the executable is
    found in <em>%EGB_PATH%</em>\SDK\Win32\ToolPlugins\Data\PS3
    and several configurations are available. For Xenon, the
    executable is found in
    <em>%EGB_PATH%</em>\SDK\Win32\ToolPlugins\Data\PS3 and the
    shipping configuration is available.</li>

    <li><a href=
    "../../Programmer/NiPhysX/Overview_of_Gamebryo-PhysX_Cloth.htm">
    Cloth Normal and NBT updating</a> is now optional, and
    disabled by default for new exports but enabled for existing
    NIF assets. See the <a href=
    "../../Art/Max/PhysX_Cloth_with_Max.htm">Max</a> and <a href=
    "../../Art/Maya/PhysX_Cloth_with_Maya.htm">Maya</a> Artist
    guides for information.</li>

    <li>Added code to remove extra data that was left behind
    during export from the art tools.</li>

    <li>Fixed a bug that caused <a href=
    "../../Reference/Tool_Plug_ins/PhysX_Extractor.htm">PhysXExtractor</a>
    to crash on certain bad data. Now it issues an appropriate
    warning and exits cleanly.</li>

    <li>The options available in <a href=
    "../../Tools/PhysX_Scene_Graph_Printer/PhysX_Scene_Graph_Printer_Intro.htm">
    PhysX Scene Graph Printer</a> have been updated to match
    those available in <a href=
    "../../Tools/Scene_Graph_Printer/Scene_Graph_Printer_Intro.htm">
    Scene Graph Printer</a>.</li>
</ul>

<h4>Samples and Tutorials</h4>

<ul>
    <li>The files in the <a href=
    "../../Learn/Demos/PhysX_Fluids_Demo_Overview.htm">PhysXFluids</a>
    demo have been renamed to reflect the fact that PhysX fluids
    now work in software. The properties of the fluid system have
    also been changed: the packet size multiplier was increased,
    which had the effect of dramatically reducing dynamic memory
    allocations within PhysX and thus improved performance.</li>

    <li>Fixed an aspect ratio issue introduced in <a href=
    "../../Learn/Demos/PhysX_Particles_Demo_Overview.htm">PhysXParticles</a>
    demo on PS3.</li>
</ul>

<h3>Gamebryo 2.3.0.4</h3>

<ul>
    <li>Fixed a problem in <a href=
    "../../Reference/NiPhysX/NiPhysXSequenceManager.htm"><span class="NDLSystemFont">
    NiPhysXSequenceManager</span></a> that caused a crash if
    controllers had failed to attach to the interpolators in a
    sequence.</li>
</ul>

<h3>Gamebryo 2.3.0.1</h3>

<ul>
    <li>Updated the PhysX SDK to 2.6.4 on Win32 and Xbox 360.
    This resolves memory leak issues in PhysX and makes cloth
    exported using Gamebryo usable on the PS3.</li>

    <li>Fixed bugs in the cloth integration that were causing
    problems when cloth that had torn was reset and the
    transformations applied to cloth under various
    circumstances.</li>

    <li>Fixed a set of bugs in <span class=
    "NDLSystemFont">NiPhysXClothDest</span> that led to incorrect
    transformations of the cloth when moving from PhysX to
    Gamebryo.</li>

    <li>Fixed other bugs in <span class=
    "NDLSystemFont">NiPhysXClothDest</span> that led to an
    assertion when cloth was torn. The bug affected cloth meshes
    in which one PhysX vertex was used by multiple Gamebryo
    vertices.</li>

    <li>Fixed a problem with the <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXClothDesc.htm">NiPhysXClothDesc::IsEqual</a></span>
    function that could cause a crash when attachments that did
    not have a shape were present.</li>
</ul>

<h3>Gamebryo 2.3.0</h3>

<h4>General</h4>

<ul>
    <li>Gamebryo 2.3 has been developed and tested with PhysX
    2.6.2 on PC and Xbox and 2.6.4 on PS3. Developers must obtain
    a license from <a href=
    "../../Programmer/NiPhysX/NVIDIA_PhysX_Resources.htm">NVIDIA</a>
    for NVIDIA PhysX, and if you are licensed for a different
    PhysX version, just ask NVIDIA for 2.6.2 and say you are a
    Gamebryo customer. The change to PhysX 2.6.2 included a
    significant number of updates to remove prior restrictions on
    PhysX content and to make use of new PhysX features.</li>

    <li style="list-style: none">
        <ul>
            <li>The <span class="NDLSystemFont"><a href=
            "../../Reference/NiPhysX/NiPhysXManager.htm">NiPhysXManager</a></span>
            class was modified to address reference counting in
            the NVIDIA PhysX. SDK and to support the SDK
            descriptor argument to <span class=
            "NDLSystemFont">NxCreatePhysicsSDK</span>.</li>

            <li>Cooking has been changed throughout to use the
            <span class="NDLSystemFont">NxCookingInterface</span>
            class.</li>

            <li>Functions have been added to the <a href=
            "../../Reference/NiPhysX/NiPhysXMeshDesc.htm">NiPhysXMeshDesc</a>
            class to get and set the mesh paging mode.</li>

            <li>Code has been added to allow the use of
            simulation compartments.</li>
        </ul>
    </li>

    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXScene.htm">NiPhysXScene</a></span>
    class has been re-factored into two classes to clarify the
    idea of a container, the scene, that has an assortment of
    objects added to it for simulation, the <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXProp.htm">NiPhysXProp</a></span>
    objects. This resulted in changes to almost anything that
    touched PhysX. Existing users should read the <a href=
    "../../Convert/Previous/NiPhysXScene_Conversion.htm">NiPhysXScene
    Conversion</a> page for information related to this
    change.</li>
</ul>

<h4>Cloth Integration</h4>

<p>PhysX cloth simulation has been fully integrated into the
Gamebryo pipeline. This involves extended functionality across
many parts of the Gamebryo product:</p>

<ul>
    <li>The <span class="NDLSystemFont">NiPhysX</span> library
    contains classes for streaming cloth content, <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXClothDesc.htm">NiPhysXClothDesc</a></span>,
    managing cloth meshes, <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXClothMesh.htm">NiPhysXClothMesh</a></span>,
    and transferring state from PhysX to Gamebryo for rendering,
    <span class="NDLSystemFont">NiPhysXClothDest</span>. In
    addition, various classes have been modified to handle cloth
    objects, including <a href=
    "../../Reference/NiPhysX/NiPhysXPropDesc.htm"><span class=
    "NDLSystemFont">NiPhysXPropDesc</span></a> and <a href=
    "../../Reference/NiPhysX/NiPhysXManager.htm"><span class=
    "NDLSystemFont">NiPhysXManager</span></a>. See the cloth
    section in the <a href=
    "../../Programmer/NiPhysX/Overview_of_Gamebryo-PhysX_Cloth.htm">
    Programmers Guide</a> for information about working with
    cloth in applications.</li>

    <li>The <a href=
    "../../Art/Max/PhysX_Cloth_with_Max.htm">Max</a> and <a href=
    "../../Art/Maya/PhysX_Cloth_with_Maya.htm">Maya</a> plug-ins,
    and the <a href=
    "../../Reference/Tool_Plug_ins/PhysX_Extractor.htm">PhysX
    Extractor</a> tool plug-in have been extended to extract
    PhysX cloth content and export for use in Gamebryo
    applications.</li>

    <li>The <a href=
    "../../Tools/PhysX_NIF_Viewer/Introduction_to_the_PhysX_NIF_Viewer.htm">
    PhysX Nif Viewer</a> application can preview cloth content
    and allows forces to be applied to cloth objects.</li>

    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXTools/NiPhysXSnapshotExtractor.htm">NiPhysXSnapshotExtractor</a></span>
    tool library has been extended to capture cloth descriptors
    from a PhysX scene.</li>

    <li>The <a href=
    "../../Tools/PhysX_Scene_Graph_Printer/PhysX_Scene_Graph_Printer_Intro.htm">
    PhysX Scene Graph Printer</a> can dump a textual
    representation of cloth objects in a NIF file.</li>
</ul>

<h4>NiPhysX Library</h4>

<ul>
    <li>A new class, the <!--kadov_tag{{<spaces>}}-->
     <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXSequenceManager.htm">
    <!--kadov_tag{{</spaces>}}-->NiPhysXSequenceManager</a></span>
    class, has been added to automatically manage the activation
    states of PhysX objects as they are blended with animation.
    It is specifically designed to allow animated characters to
    have partial rag-doll effects (a rag-doll arm on an animated
    body) or to enable transitions between animation and physics.
    See the <a href=
    "../../Programmer/NiPhysX/Mixing_Animation_and_Physics_in_Gamebryo.htm">
    Rag-doll Runtime</a> section of the <a href=
    "../../Programmer/Introduction_to_GamebryoPhysX_Programming.htm">
    Gamebryo-PhysX Programming Guide</a>.</li>

    <li>Classes have been added, <a href=
    "../../Reference/NiPhysX/NiPhysXAccumRigidBodyDest.htm">NiPhysXAccumRigidBodyDest,</a>
    <a href=
    "../../Reference/NiPhysX/NiPhysXAccumTransformDest.htm">NiPhysXAccumTransformDest</a>
    and NiPhysXAccumInterpolatorDest, to manage the transfer of
    state from PhysX to the accumulation root of characters or
    animations controlled by Gamebryo's animation system.</li>

    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXScene.htm#simulation_functions">
    NiPhysXScene</a></span> class has been modified to take
    complete control of timing parameters for the physics
    simulation.</li>

    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXManager.htm">NiPhysXManager</a></span>
    class now includes a function to simplify creation of an
    <span class="NDLSystemFont">NxScene</span> object that runs
    on a specific thread.</li>

    <li>Objects derived from <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXRigidBodyDest.htm">NiPhysXRigidBodyDest</a></span>
    benefit from improved interpolation of PhysX state and other
    bug fixes.</li>

    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXDynamicSrc.htm">NiPhysXDynamicSrc</a></span>
    class no longer takes a sequence and interpolator index. It
    is now assumed that this class will be used in conjunction
    with the new <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXSequenceManager.htm">NiPhysXSequenceManager</a></span>
    class to control the activation and deactivation of sources
    and destinations when animation is blended with physics. This
    class has also been extensively over-hauled to improve the
    accuracy and reliability of state transfer from Gamebryo to
    PhysX.</li>

    <li>The <span class=
    "NDLSystemFont">NiPhysXInterpolatorDest</span> class now
    accepts either <span class="NDLSystemFont"><a href=
    "../../Reference/NiAnimation/NiTransformInterpolator.htm">NiTransformInterpolator</a></span>
    objects or <span class="NDLSystemFont"><a href=
    "../../Reference/NiAnimation/NiBSplineTransformInterpolator.htm">
    NiBSplineTransformInterpolator</a></span> objects as the
    target.</li>

    <li>The update of a PhysX <a href=
    "../../Programmer/NiPhysX/PhysX_Sources.htm">Source</a> or
    <a href=
    "../../Programmer/NiPhysX/PhysX_Destinations.htm">Destination</a>
    object now always happens if the <span class=
    "NDLSystemFont">bForced</span> flag is true, even if the
    object is disabled. Forced updates also push state to the
    PhysX actors, or re-read it from the actors.</li>

    <li>Source and Destination objects (<a href=
    "../../Reference/NiPhysX/NiPhysXDest.htm"><span class=
    "NDLSystemFont">NiPhysXDest</span></a> or <a href=
    "../../Reference/NiPhysX/NiPhysXSrc.htm"><span class=
    "NDLSystemFont">NiPhysXSrc</span></a> derived) are no longer
    disabled when the PhysX object that relate to is deleted from
    a scene. Hence, if the scene is later recreated, the sources
    and destinations will still have their prior activation
    state.</li>

    <li><a href=
    "../../Reference/NiPhysX/NiPhysXShapeDesc.htm"><span class=
    "NDLSystemFont">NiPhysXShapeDesc</span></a> objects now store
    the PhysX shape that they were used to create.</li>

    <li><span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXD6JointDesc.htm">NiPhysXD6JointDesc</a></span>
    objects can now return the PhysX joint they correspond
    to.</li>

    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXMeshDesc.htm">NiPhysXMeshDesc</a></span>
    class has received changes to the interface for specifying
    the type of mesh that is stored, and the target platform for
    the mesh.</li>

    <li>The <a href=
    "../../Reference/NiPhysX/NiPhysXKinematicSrc.htm"><span class="NDLSystemFont">
    NiPhysXKinematicSrc</span></a> class has been superceded by
    the <a href=
    "../../Reference/NiPhysX/NiPhysXDynamicSrc.htm"><span class=
    "NDLSystemFont">NiPhysXDynamicSrc</span></a> class. All new
    code should use the latter because <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXKinematicSrc.htm">NiPhysXKinematicSrc</a></span>
    will be deprecated in a future release.</li>

    <li>The robustness of Gamebryo code to errors in PhysX data
    has been significantly improved. Functions will now return
    <span class="NDLSystemFont">NULL</span> values if the
    creation of PhysX content failed, or otherwise warn.</li>

    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXManager.htm">NiPhysXManager</a></span>
    object was not deleting its cache of PhysX meshes when the
    SDK was shut down. All internal references to PhysX collision
    meshes are now removed when <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXManager.htm#public_methods">NiPhysXManager::Shutdown</a></span>
    is called.</li>

    <li>Cloning was not correctly implemented for <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXRigidBodySrc.htm">NiPhysXRigidBodySrc</a></span>
    derived objects. And cloning was not implemented at all for
    <span class="NDLSystemFont">NiPhysXKinematicSrc</span>
    objects. This bug manifested itself in cloned PhysX content
    where only the final cloned PhysX actor followed the original
    Gamebryo object, rather than each actor following their
    corresponding clone. Cloning has been added and fixed for
    these classes.</li>

    <li>A bug in which <a href=
    "../../Reference/NiPhysX/NiPhysXD6JointDesc.htm">joints</a>
    attached to the global frame were not correctly transformed
    when PhysX content was instantiated has been fixed.</li>
</ul>

<h4>Art Pipeline</h4>

<ul>
    <li>The <a href=
    "../../Tools/animation_tool/Introduction_to_Animation_Tool.htm">
    Gamebryo Animation Tool</a> now supports the playback of
    PhysX simulation in the tool. It also supports the assignment
    of animation sequences to physical control, and the set-up
    and preview of transitions between animated and physical
    content. See the <a href=
    "../../Tools/animation_tool/Introduction_to_PhysX_in_Animation_Tool.htm">
    Animation Tool manual</a> for more information.</li>

    <li>NIF files no longer contain <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXScene.htm">NiPhysXScene</a></span>
    objects when streamed from the art tool. Rather, they contain
    <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXProp.htm">NiPhysXProp</a></span>
    objects, and there may be multiple props in one NIF file.
    Applications should now search for objects of type
    <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysX/NiPhysXProp.htm">NiPhysXProp</a></span>
    when looking for PhysX content in a NIF file. The <a href=
    "../../Reference/Tool_Plug_ins/PhysX_Extractor.htm">PhysXExtractor
    tool plug-in</a> has been modified to remove <span class=
    "NDLSystemFont">NiPhysXScene</span> parameters from its
    options. See <a href=
    "../../Convert/Previous/Converting_to_Gamebryo_2_3_Overview.htm">
    Converting to Gamebryo 2.3 Overview</a> for more
    details.</li>

    <li>The <span class="NDLSystemFont">D6Joint</span> objects
    produced through the Create/PX Primitives/D6Joint interface
    in 3ds Max are now exported by Gamebryo.</li>

    <li>The limitation in 3ds Max that required proxy shapes to
    be children of their target has been lifted. Proxy geometry
    can reside anywhere in the scene graph, but must be marked as
    PhysX type "non-physical".</li>

    <li>The quality of warnings in <a href=
    "../../Reference/Tool_Plug_ins/PhysX_Extractor.htm">PhysXExtractor
    tool plug-in</a> has been significantly improved so that
    errors will be reported at the time of export rather than
    when the content is loaded into an application.</li>

    <li>The <a href=
    "../../ee_goto.htm#Reference/Tool_Plug_ins/Xbox_360_Viewer.htm">
    Xbox 360 Viewer plug-in</a> has been modified to optionally
    launch the PhysXNifViewer on Xbox from inside Max or
    Maya.</li>

    <li>The <span class="NDLSystemFont">-gravity</span> command
    line argument has been added to <a href=
    "../../Tools/PhysX_NIF_Viewer/PhysX_Nif_Viewer_Command_Line.htm">
    PhysXNifViewer</a> to set the gravity vector for the viewed
    scene. The <a href=
    "../../Reference/Tool_Plug_ins/PhysX_NIF_Viewer.htm">PhysX
    Viewer tool plug-in</a> has also been modified to reflect
    this change.</li>

    <li>A bug in <a href=
    "../../Tools/PhysX_NIF_Viewer/Introduction_to_the_PhysX_NIF_Viewer.htm">
    PhysX Nif Viewer</a> that caused force application to
    misbehave on scaled scenes has been fixed.</li>

    <li>Problems have been fixed in the camera manipulation code
    that forces gravity to appear as down in PhysX Nif
    Viewer.</li>

    <li>A bug in the 3ds Max plug-in related to the export of
    jointed compound objects (groups in Max) has been fixed.</li>

    <li>A bug in the 3ds Max plug-in related to objects with no
    explicit physics materials settings has been fixed. Objects
    with no material settings now export with the same defaults
    as the PhysX Max plug-in uses.</li>

    <li>A bug in the 3dsMax exporter caused objects with flipped
    or mirrored scaling matrices to export incorrectly. This has
    been fixed.</li>
</ul>

<h4>ToolLibs</h4>

<ul>
    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXSharedData/NiPhysXSharedData.htm">NiPhysXSharedData</a></span>
    class now stores an array of <span class=
    "NDLSystemFont">NiPhysXProp</span> objects, in addition to a
    single <span class="NDLSystemFont">NiPhysXScene</span>.</li>

    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXTools/NiPhysXSnapshotExtractor.htm">NiPhysXSnapshotExtractor</a></span>
    class now creates <span class=
    "NDLSystemFont">NiPhysXScene</span> objects which in turn
    contain <span class="NDLSystemFont">NiPhysXProp</span>
    objects to encode the PhysX content. Gamebryo-PhysX sources,
    destinations and other scene-graph related content are no
    longer extracted - just the descriptors to re-create PhysX
    content. Platform specific mesh cooking support was also
    added.</li>
</ul>

<h3>Gamebryo 2.2.2</h3>

<ul>
    <li>The functions <span class=
    "NDLSystemFont">NiPhysXScene::RemoveDestinationAt</span> and
    <span class=
    "NDLSystemFont">NiPhysXScene::RemoveSourceAt</span> were
    calling NiDelete on the removed pointer. But these are smart
    pointers, so the delete has been removed.</li>

    <li>An oversight in the API design prevented slaved
    NiPhysXScene objects from ever being removed from their
    master scene. The <span class=
    "NDLSystemFont">NiPhysXScene::RemoveSlave</span> function was
    made public to address this issue.</li>

    <li>The PhysX Max plug-in sometimes sets a joint axis to
    [0,0,0], which causes joint creation to fail when the
    exported file is loaded in Gamebryo. We supply a work-around
    where a [0,0,0] joint axis is detected and replaced with an
    axis that is perpendicular to the joint normal.</li>

    <li>Picking objects in PhysX NIF Viewer was not accounting
    for the scale factor between the physics scene and the
    Gamebryo scene. This behavior has been fixed, and the force
    applied is also now scaled.</li>
</ul>

<h3>Gamebryo 2.2.1</h3>

<ul>
    <li>Gamebryo 2.2.1 has been developed and tested with PhysX
    2.4.1 on all platforms (PC, Xbox and PS3). Developers must
    obtain a license from Nvidia for PhysX, and if you are
    licensed for a different PhysX version, just ask for 2.4.1
    and say you are a Gamebryo customer.</li>

    <li>Playstation 3 PhysX support has been added. This requires
    the PhysX for PS3 package available from the SCE developers
    site.</li>
</ul>

<h4>General NiPhysX Library</h4>

<ul>
    <li>The PhysXRuntime directory was renamed CoreLibsPhysX to
    better reflect existing Gamebryo naming conventions.</li>

    <li>Fixed several bugs across multiple files in which
    enumerated values and booleans were not streamed in a safe
    cross-platform manner.</li>
</ul>

<h4>NiPhysX: NiPhysXD6JointDesc</h4>

<ul>
    <li>The RTTI information was incorrect for this class, and
    has been fixed.</li>

    <li>FIxed a problem where data structures used by this class
    were not correctly streamed for safe endian conversion.</li>
</ul>

<h4>NiPhysX: NiPhysXRigidBodySrc</h4>

<ul>
    <li>Fixed a problem with the way angular velocity is
    computed. The incorrect units (degrees instead of radians)
    was assumed. Also now handles zero velocity.</li>

    <li>Additional functions have been added to provide debug
    information.</li>
</ul>

<h4>NiPhysX: NiPhysXScene</h4>

<ul>
    <li>Fixed a bug in which PhysX debug point geometry was
    incorrectly rendered (or not rendered at all).</li>

    <li>Modified the handling of PhysX Debug Geometry to improve
    performance.</li>

    <li>Fixed a bug in which the scene graph nodes added for
    PhysX debug geometry rendering were sometimes not
    removed.</li>

    <li>Fixed a bug where the time-step length and "keep meshes"
    member variables were not being streamed.</li>

    <li>Modified the handling of fluid scenes to enable a
    hardware fluid scene to be slaved to a software rigid body
    scene. This enables the PhysX Hardware Scene Manager
    functionality.</li>

    <li>Added a parameter to <span class=
    "NDLSystemFont">FetchResults</span> to return the hardware
    error state. This has a default value, so applications need
    not be modified.</li>

    <li>Fixed a bug where some member variables were not
    initialized in the constructor. This affected the
    <span class="NDLSystemFont">m_bKeepsMeshes</span> values in
    existing PhysX content, so application might wish to check
    that the value is correct.</li>
</ul>

<h4>NiPhysX: NiPhysXSDKDesc</h4>

<ul>
    <li>Fixed a cross platform bug related to the way NxParameter
    values differ depending on whether or not fluid and cloth
    support are compiled in.</li>
</ul>

<h4>NiPhysXFluid: NiPhysXFluidData</h4>

<ul>
    <li>The IsEqual function for this class was always returning
    false, and now returns the correct value.</li>
</ul>

<h4>3DS Max PhysX Export</h4>

<ul>
    <li>A button has been added to the Gamebryo roll-out in Max
    to launch PhysX Nif Viewer. For PS3, the on-target PhysX
    viewer can be launched via the PS3 on-target viewer
    options.</li>

    <li>Fixed a bug with the handling of pivot points in joints.
    The bug manifested itself when the pivot point of an object
    had been modified, and when optimization did not combine the
    node and its geometry. The fix prevents optimization of the
    node but results in robust behavior regardless of the
    optimization settings and pivot changes.</li>
</ul>

<h4>PhysX Extractor Tool Plug-in</h4>

<ul>
    <li>Modified the handling of fluid scenes to remove
    restrictions in place for PhysX 2.3.2.</li>

    <li>Fixed a bug related to optimization of the scene graph
    and joint export.</li>

    <li>Added code to stash version information into PhysX cooked
    meshes. This information in the cooked mesh file will allow
    for improved back-compatibility in the future, which is
    anticipated in the PhysX SDK but not yet implemented. It does
    not modify the mesh format; it uses space assigned for this
    purpose.</li>
</ul>

<h4>NiPhysXSnapshotExtractor ToolLib</h4>

<ul>
    <li>The <span class="NDLSystemFont"><a href=
    "../../Reference/NiPhysXTools/NiPhysXSnapshotExtractor.htm">
        NiPhysXSnapshotExtractor</a></span> tool library has been
        added to replace functionality previously found in the
        <span class="NDLSystemFont">NiPhysX</span> library. The
        goal of this change is to remove the runtime dependency
        of <span class="NDLSystemFont">NiPhysX</span> on
        <span class="NDLSystemFont">NxCooking.dll</span>. In
        addition to adding the new library, the following
        existing Gamebryo functions were removed:

        <ul>
            <li><span class=
            "NDLSystemFont">NiPhysXScene::CreateSnapshot</span></li>

            <li><span class=
            "NDLSystemFont">NiPhysXMeshDesc::FromConvexDesc</span></li>

            <li><span class=
            "NDLSystemFont">NiPhysXMeshDesc::FromTriMeshDesc</span></li>

            <li><span class=
            "NDLSystemFont">NiPhysXMeshDesc::SetConvexMeshFromDesc</span></li>

            <li><span class=
            "NDLSystemFont">NiPhysXMeshDesc::SetTriMeshFromDesc</span></li>

            <li><span class=
            "NDLSystemFont">NiPhysXShapeDesc::FromConvexDesc</span></li>

            <li><span class=
            "NDLSystemFont">NiPhysXShapeDesc::SetConvexMeshFromDesc</span></li>

            <li><span class=
            "NDLSystemFont">NiPhysXShapeDesc::FromTriMeshDesc</span></li>

            <li><span class=
            "NDLSystemFont">NiPhysXShapeDesc::SetTriMeshFromDesc</span></li>

            <li><span class=
            "NDLSystemFont">NiPhysXActorDesc::SetFromActor</span></li>

            <li><span class=
            "NDLSystemFont">NiPhysXMeshPSysSrc::MapExcludedActors</span></li>

            <li><span class=
            "NDLSystemFont">NiPhysXPSysSrc::MapExcludedActors</span></li>

            <li><span class=
            "NDLSystemFont">NiPhysXFluidDest::MapExcludedActors</span></li>

            <li><span class=
            "NDLSystemFont">NiPhysXPSysDest::MapExcludedActors</span></li>

            <li><span class=
            "NDLSystemFont">NiPhysXSrc::MapExcludedActors</span></li>

            <li><span class=
            "NDLSystemFont">NiPhysXRigidBodySrc::MapExcludedActors</span></li>

            <li><span class=
            "NDLSystemFont">NiPhysXDest::MapExcludedActors</span></li>

            <li><span class=
            "NDLSystemFont">NiPhysXRigidBodyDest::MapExcludedActors</span></li>
        </ul>

        <p class="indent1">And the following functions were
        added:</p>

        <ul>
            <li><a href=
            "../../Reference/NiPhysX/NiPhysXSceneDesc.htm"><span class="NDLSystemFont">
            NiPhysXSceneDesc</span></a>::SetMaterialAt</li>

            <li><a href=
            "../../Reference/NiPhysX/NiPhysXShapeDesc.htm"><span class="NDLSystemFont">
            NiPhysXShapeDesc</span></a>::GetMeshDesc</li>

            <li><a href=
            "../../Reference/NiPhysX/NiPhysXShapeDesc.htm"><span class="NDLSystemFont">
            NiPhysXShapeDesc</span></a>::SetMeshDesc</li>
        </ul>

        <p class="indent1">Most of the removed functions were
        intended for internal Gamebryo use. Applications that
        relied on the deprecated functions, particularly
        <span class=
        "NDLSystemFont">NiPhysXScene::CreateSnapshot</span>, can
        obtain identical functionality by linking with
        <span class=
        "NDLSystemFont">NiPhysXSnapshotExtractor</span> and using
        the functions found within.</p>
    </li>
</ul>

<h4>Samples PhysX</h4>

<ul>
    <li>The PhysX-related demos have been renamed to all have the
    prefix PhysX and have been moved to the standard Gamebryo
    Demos directory.</li>

    <li>Code was added to warn if PhysX initialization
    fails.</li>

    <li>Lenguins was modified to clean up the code related to
    loading and unloading levels. Previously, PhysX data was
    accessed after the PhysX SDK was released.</li>
</ul>

<h4>Tutorials PhysX</h4>

<ul>
    <li>The GamePad controls have been changed to match the
    documentation.</li>

    <li>The PhysX parameters have been tweaked to improve
    realism.</li>
</ul>

<h4>PhysX Nif Viewer</h4>

<ul>
    <li>The <a href=
    "../../Tools/PhysX_NIF_Viewer/Introduction_to_the_PhysX_NIF_Viewer.htm">
    PhysX Nif Viewer</a> now handles spaces in filenames without
    the need to quote the name.</li>

    <li>The <a href=
    "../../Tools/PhysX_NIF_Viewer/Introduction_to_the_PhysX_NIF_Viewer.htm">
    PhysX Nif Viewer</a> now includes a mode to apply forces, and
    implicit torques, to rigid bodies.</li>
</ul>

<ul>
    <li>The <a href=
    "../../Tools/PhysX_NIF_Viewer/Introduction_to_the_PhysX_NIF_Viewer.htm">
    PhysX Nif Viewer</a> now allows control of the size of a
    "Single Step".</li>

    <li>The keys to move among the menus in <a href=
    "../../Tools/PhysX_NIF_Viewer/Introduction_to_the_PhysX_NIF_Viewer.htm">
    PhysX Nif Viewer</a> have changed slightly: The left/right
    arrow keys are now used in place of page-up/page-down. The
    PhysX Nif Viewer now also takes exclusive use of the mouse.
    Use Alt-Tab to switch to another application.</li>
</ul>

<h4>PhysX Scene Graph Printer</h4>

<ul>
    <li>The <a href=
    "../../Tools/PhysX_Scene_Graph_Printer/PhysX_Scene_Graph_Printer_Intro.htm">
    PhysX Scene Graph Printer</a> has been added. This command
    line program dumps the entire contents of a NIF file, showing
    all of the Gamebryo-PhysX content within it.</li>
</ul>

<h3>Gamebryo 2.2.0</h3>

<ul>
    <li>Gamebryo 2.2 is the initial release of Gamebryo-PhysX.

        <p class="indent1">Gamebryo 2.2 has been developed and
        tested with PhysX 2.3.2, on both the PC and Xbox (using a
        March XDK build of PhysX). PhysX is not yet supported on
        PS3, but will be in the future. Developers must obtain a
        license from Nvidia for PhysX.</p>

        <p class="indent1">The Gamebryo art tools require the
        installation of the PhysX 2.3.2 plug-in for Max or Maya.
        If using Maya, be sure to use the "v2" plug-in.</p>
    </li>
</ul>

<a name="Known_Issues_and_Limitations" id="Known_Issues_and_Limitations"></a>
<h2>Known Issues and Limitations</h2>

<p>Additional known issues and limitations are provided in the following, more specific,
    locations:</p>

<ul>
    <li>See <a href=
    "../../Programmer/NiPhysX/Gamebryo-PhysX_Known_Issues_and_Limitations.htm">
    Gamebryo-PhysX Known Issues and Limitations</a> for issues
    that are specific to programming with Gamebryo-PhysX</li>

    <li>Game Framework specific issues appear on the
    <a href="Release_Notes__Game_Framework.htm#PhysX_Framework_Known_Issues">Game Framework Release Notes</a>
    page.
    </li>

    <li>Art tool specific issues are discussed in the <a href=
    "../../Art/Max/Max_Rel_Notes.htm#PhysX">Max</a> and <a href=
    "../../Art/Maya/Maya_Rel_Notes.htm#PhysX">Maya</a> Release
    Notes Known Issues and Limitations sections</li>

    <li>Issues with PhysX in Animation Tool appear in the
    <a href="../../Tools/animation_tool/Tips_for_Physics_in_Animation_Tool.htm">
    Animation Tool documentation</a></li>
</ul>

<h3>Unsupported PhysX Features</h3>
<ul>
    <li>Gamebryo does not include support for terrain shapes or wheel shapes.</li>

    <li>Art tool support is limited largely to those things supported by the PhysX Max and Maya
        plug-ins.</li>
</ul>

<h3>PhysX Nif Viewer</h3>
<ul>
    <li>The viewer will crash if time is reset in a scene that includes PhysX fluids.
    </li>

    <li>It is quite easy to lose the camera in PhysX Nif Viewer.
    Use the "View Reset" menu item to reset to the default
    camera.</li>

    <li>Only one of keyboard or gamepad can be used to control
    PhysX Nif Viewer. The gamepad, if present, will be used
    unless the -keyboard argument is given.</li>

    <li>PhysX Nif Viewer creates all of the PhysX content in the
    default simulation compartment.</li>
</ul>

<h3>PhysX Hardware</h3>
<ul>
    <li>The PhysX drivers may crash the machine when two separate
    processes try to initialize the SDK at the same time, and at
    least one of those processes is requesting hardware. PhysX
    support is aware of the problem but no work-around is known
    at this time.</li>
</ul>

<h3>PhysX Fluids</h3>
<ul>
    <li>Fluids simulated on consoles crash on the first
    simulation step after <span class=
    "NDLSystemFont">NxFluid::removeAllParticles</span>. Gamebryo
    has disabled this functionality for console fluid
    simulation.</li>

    <li>The <a href=
    "../../Learn/Demos/PhysX_Fluids_Demo_Overview.htm">PhysX
    Fluids</a> sample exhibits erratic frame rates on Win32 in
    software simulation, and Xenon. This is an issue internal to
    the PhysX SDK related to particle-particle interactions and,
    possibly, dynamic memory allocations.</li>
</ul>

<h3>Rapid Iteration</h3>
<ul>
    <li>The PhysXTerrainService does not respond to AssetUpdate messages; re-baking PhysX terrain
        data in Scene Designer will not cause a running game (or Toolbench) to dynamically reload
        the PhysX data. This can lead to unexpected behavior, since the new geometry will be
        loaded.</li>

    <li>Terrain asset changes in general may cause the block file in World Builder and the running
        game to require a reload in some cases.</li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

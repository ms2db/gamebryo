<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Samples Release Notes</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Samples Release Notes</h1>

<p><a href="Release_Notes__Samples.htm#Added_Features_and_Fixed_Bugs">Added Features, Changed
Behavior, and Fixed Bugs</a></p>

<p><a href="Release_Notes__Samples.htm#Known_Issues_and_Limitations">Known Issues and
Limitations</a></p>

<a name="Added_Features_and_Fixed_Bugs" id="Added_Features_and_Fixed_Bugs"></a>
<h2>Added Features, Changed Behavior, and Fixed Bugs</h2>

    

<h3>Gamebryo LightSpeed 3.2</h3>

<h4>All Samples</h4>
<ul>
    <li>Existing Tutorials, GraphicsTechDemos and GameDemos that use PhysX and were using platform specific
    assets are now using common, generic assets where possible. The change was made because PhysX meshes can
    be used cross-platform and installer space is saved in this way.</li>
    <li>Samples utilizing old versions of NiTerrain and the NiEntity system have been removed as
    they are now obsolete. The Game Framework-based samples such as MangledMetal are a more
    appropriate place to learn about terrain and entities.</li>
    <li>Lua behaviors in Game Framework-based samples have been updated to use the new, preferred
    syntax for working with entities directly (avoiding GetProperty and SetProperty calls). They
    also use ParameterList to handle passed arguments.</li>
</ul>

<h4>MangledMetal</h4>
<ul>
    <li>Fixed an issue in MangledMetal where the deploy to Xbox 360 BAT file would fail to work
    properly if another config.ini file of a more recent date was already in the user's temp
    folder.</li>
    <li>Level04Terrain.block was added to MangledMetal to demonstrate multi-sector terrain and other
    recent terrain enhancements. It also utilizes the new environment and time of day system. This
    block is set to load only 2 sectors of terrain initially, to ensure compatibility on all
    platforms and fast loads in World Builder. Additional sectors can be loaded manually in the World
    Builder viewport with the terrain gizmo active, or set to auto-load in World Builder and the
    game via the Terrain Properties dialog, Storage tab. Note that loading all sectors at once will
    consume much memory and fail on consoles.</li>
</ul>

<h4>Base Game</h4>
<ul>
    <li>A new dataset is available for the BaseGame sample which demonstrates loading multiple block
    files from script and using block loading behavior callbacks. This data set also demonstrates
    moving entities into and out of the world through script. To use this alternate data set
    simply swap which <span class="NDLSystemFont">Game.InitialWorld</span> setting is commented out
    in the <span class="NDLSystemFont">ConfigCommon.ini</span> file for Base Game.</li>
</ul>


<h3>Gamebryo LightSpeed 3.1.1</h3>

<h4>egmSample Library</h4>
<ul>
    <li>
    The GameState class in the egmSample library was updated to correct a problem when using
    the Lua debugger. The GameState service would unpaused the scheduler even when it was not 
    responsible for pausing it. This invalidated the Lua stack frame reference in the Lua debugger,
    resulting in bizarre, undefined behavior when debugging Lua functions. The egmSample::GameState
    was updated to unpause the scheduler only when it was responsible for pausing it.
    </li>

    <li>
    The methods in <span class="NDLSystemFont">egmSample::TargettedCamera</span> that get the
    camera subject's position and rotation have been made virtual. This allows a derived class
    to pull the target position or rotation from a property other than the entity's Placeable
    properties. The input event handlers in
    <span class="NDLSystemFont">egmSample::ThirdPersonRotatingCamera</span> have also been
    made virtual.
    </li>
</ul>

<h4>MangledMetal</h4>
<ul>
    <li>
    The MangledMetal MmCameraService class was updated to resolve a very rare race condition
    that resulted in a crash when performing a 'reset' operation during rapid iteration. This
    service attempted to access the camera that was deleted in response to the 'reset' request.
    This resulted in a runtime illegal access violation exception. The MmCameraService and
    related classes were updated to fix this race condition.    
    </li>
</ul>


<h3>Gamebryo LightSpeed 3.1</h3>

<h4>Hello World</h4>

<ul>
    <li>The <span class="NDLSystemFont"><a href=
    "../../Tutorials/Hello_World/hello_world_intro.htm">Hello World</a></span> tutorial has been
    improved to better demonstrate best practices.</li>

    <li>HelloWorld now uses an efd::AssetFactoryManager instance to asynchronously load assets,
    including the world file and runtime entities.</li>
</ul>

<h4>Base Game</h4>

<ul>
    <li>The <span class="NDLSystemFont"><a href=
    "../../Tutorials/Base_Game/base_game_intro.htm">Base Game</a></span> tutorial has been improved
    to better demonstrate best practices.</li>

    <li>Base Game no longer duplicates those models it shares with Hello World but instead includes
    the Hello World EMT project directly.</li>

    <li>Game services, such as the Walkable Service and camera handling, that were previously
    implemented directly in the Base Game directory are now used from the egmSample library.</li>

    <li>Base Game now uses an action map to configure all input actions.</li>

    <li>Base Game now uses an efd::AssetFactoryManager instance to asynchronously load assets,
    including the world file and runtime entities.</li>
</ul>

<h4>Peer Game</h4>

<ul>
    <li>A new sample with tutorial, <span class="NDLSystemFont"><a href=
    "../../Tutorials/Peer_Game/sso_peer_game_intro.htm">Peer Game</a></span> has been added which
    extends Base Game into a networked multiplayer game.</li>
</ul>

<h4>egmSample library</h4>

<ul>
    <li>The <span class="NDLSystemFont">egmSample</span> library has been added. This library
    contains helpful commonly needed game services that are used by the Hello World, Base Game, and
    Peer Game tutorials. It provides a movement service, a more advanced camera service, and a game
    state control service with corresponding built-in API bindings.

        <p class="indent1">Even more robust, full-featured libraries, tools, and game samples that
        are designed to reduce the time that it takes you to create a first playable are also
        available from Emergent Labs. For more information, see <a href=
        "../../GetStart/All/kickstart_project.htm">Emergent Labs - Kickstart Project</a>.</p>
    </li>
</ul>

<h4>MangledMetal</h4>

<ul>
    <li>The <span class="NDLSystemFont"><a href=
    "../../Learn/MangledMetal/mm_intro.htm">MangledMetal</a></span> sample has been updated to
    support new features in this release.</li>

    <li>The MangledMetal EMT project was reorganized to clearly distinguish between models
    associated with entities created dynamically at runtime from those associated with block files.
    This enables the application to preload these flat models during initialization.</li>

    <li>Models with KFM or NIF assets now mix in the Standard Model Library Preloadable model,
    indicating entities created from these models are not complete until their assets are
    loaded.</li>

    <li>Entities created from Lua behaviors are now created using
    BehaviorAPI.CreateEntityAndWait.</li>

    <li>MangledMetal now uses an efd::AssetFactoryManager instance to asynchronously load assets,
    including the world file and runtime entities.</li>
</ul>

<h4>All Samples</h4>

<ul>
    <li>Samples with sound or video are tested for support of RAD Game Tools' Bink Video Library
    version 1.9n and Miles Sound System version 7.2g.</li>
</ul>

<h3>Gamebryo LightSpeed 3.0</h3>

<h4>MangledMetal</h4>

<ul>
    <li>Added a full featured demo <a href="../../Learn/MangledMetal/mm_intro.htm">MangledMetal</a>
    to show many of the features and best practices of the Emergent Game Framework.</li>

    <li><a href="../../Learn/MangledMetal/mm_intro.htm">MangledMetal</a> is designed to manage it's
    own windows. It does not use a settings dialog. All settings are accessed thru the Config.ini
    file.</li>

    <li>MangledMetal now uses an efd::AssetFactoryManager instance to asynchronously load assets,
    including the world file and runtime entities.</li>
</ul>

<h4>HelloWorld</h4>

<ul>
    <li>Added a new Sample <a href=
    "../../Tutorials/Hello_World/hello_world_intro.htm">HelloWorld</a> to show how to use the
    Emergent Game Framework to start building your game.</li>
</ul>

<h4>BaseGame</h4>

<ul>
    <li>Added a new Sample <a href="../../Tutorials/Base_Game/base_game_intro.htm">BaseGame</a> to
    show how to evolve your game by adding more services that are built into the Emergent Game
    Framework.</li>
</ul>

<h4>Windows Vista</h4>

<ul>
    <li>If using Windows Vista and have User Access Control turned on, run the new sample
    applications MangledMetal, HelloWorld, and BaseGame as administrator by using the context menu
    "Run as administrator" option. Then select "Allow" from the UAC unidentified program dialog.
    You should only need to do that once.</li>
</ul>

<h4>Rapid Iteration</h4>

<ul>
    <li>The new sample applications MangledMetal, HelloWorld, and BaseGame support rapid iteration
    when run in Release or Debug configurations. (Shipping configurations do not create a rapid
    iteration service by default.)</li>

    <li>In the event that you radically change the data for one of these samples and want to revert
    a sample's data to its original state, you may (a) execute the Gamebryo LightSpeed installer,
    (b) perform a Custom installation, and (c) uncheck all installable features except Samples. The
    result is that a new copy of the samples data will be installed.</li>
</ul>

<h3>Gamebryo 2.6.0</h3>

<h4>Eturnum</h4>

<ul>
    <li>This sample was removed.</li>
</ul>

<h4>LenguinsOnIce</h4>

<ul>
    <li>Fixed a problem that would cause the shadows to fail to be updated correctly following a
    lost device in D3D9.</li>
</ul>

<h4>MetalWars</h4>

<ul>
    <li>Fixed the "see through" shader mode to enable rendering of flames and sparks.</li>
</ul>

<h4>ShaderSample</h4>

<ul>
    <li>The D3D10 implementations of the various shaders now make use of geometry shaders and
    stream-out functionality. This will result in different visual effects for the shaders.</li>
</ul>

<h3>Gamebryo 2.5.0</h3>

<h4>BadSushi</h4>

<ul>
    <li>Added a new sample, the <a href="../../Learn/Demos/BadSushi_Overview.htm">BadSushi</a>
    demo, to demonstrate Gamebryo character animation and morphing performance, with an emphasis on
    <span class="NDLSystemFont"><a href=
    "../../Programmer/NiFloodgate/Introduction_to_NiFloodgate.htm">NiFloodgate</a></span>
    capabilities. Also, In support of this demo, an <span class="NDLSystemFont"><a href=
    "../../Art/Other/AdditiveLightMapsMaterial.htm">AdditiveLightMapsMaterial</a></span> custom
    material has been added to the <span class="NDLSystemFont"><a href=
    "../../Reference/NiCommonMaterialLibrary/NiCommonMaterialLib_Files.htm">NiCommonMaterialLib</a></span>,
    and it has been applied to the fish in the <span class="NDLSystemFont">BadSushi</span>
    demo.</li>
</ul>

<h4>MeshCreation</h4>

<ul>
    <li>Added a new sample <a href=
    "../../Learn/Demos/Introduction_to_the_MeshCreation_Demo.htm">MeshCreation</a> demo to
    illustrate how to programmatically create meshes using the new <span class=
    "NDLSystemFont"><a href="../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span> library.</li>
</ul>

<h4>MeshInstancing</h4>

<ul>
    <li>Added a new sample <a href=
    "../../Learn/Demos/Introduction_to_the_MeshInstancing_Demo.htm">MeshInstancing</a> demo to show
    how to make use of Gamebryo's hardware instancing support in the <span class=
    "NDLSystemFont"><a href="../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span> library.</li>
</ul>

<h4>MetalWars</h4>

<ul>
    <li>Fixed a graphics artifact in the edge detect shader that could be seen on Intel integrated
    graphics hardware.</li>

    <li>The GamePad is now supported in the Win32 version.</li>
</ul>

<h4><span>P</span>icking</h4>

<ul>
    <li>Added support for ABV picking on skinned objects in the <a href=
    "../../Reference/NiCollision/NiPick.htm"><span class="NDLSystemFont">NiPick</span></a>
    mode.</li>

    <li>Fixed a rounding problem on some graphics cards that prevented some objects from being
    picked when using the ShaderPick technique</li>
</ul>

<h4>ShaderSample</h4>

<ul>
    <li>Updated to use a <a href="../../Programmer/NiShader/SemanticAdapterTable.htm">semantic
    adapter table</a>.</li>
</ul>

<h4>TerrainDemo</h4>

<ul>
    <li>Added the TerrainDemo
    application to demonstrate the runtime use of the new <a href=
    "../../Programmer/NiTerrain/Introduction_to_NiTerrain_Library.htm">terrain system</a>.</li>
</ul>

<h4>All Samples</h4>

<ul>
    <li>Enabled PC, <a href=
    "../../Reference/NiSample/Introduction_To_NiSample.htm">NiSample</a>-derived programs to find
    Sample Data files (cursor, look and feel texture) via the EMERGENT_PATH environment variable
    when the sample program executable is not inside the Gamebryo directory structure.</li>

    <li>Message box errors are now displayed when the application cannot be initialized due to data
    files that cannot be found.</li>
</ul>

<h4>All Samples with Sound or Video</h4>

<ul>
    <li>Tested for support of RAD Game Tools' Bink Video Library version 1.9b and Miles Sound
    System version 7.2a.</li>
</ul>

<h4>FullDemos</h4>

<ul>
    <li>Many of the FullDemos applications were updated to bring up the renderer selection dialog
    when the preferred screen resolution is not supported.</li>
</ul>

<h4>New "Debug with Release Libs" build configuration</h4>

<ul>
    <li>Whether an application is optimized or unoptimized is now independent of the build
    configuration of the Gamebryo libraries used to link to the application. Gamebryo includes a
    "Debug with Release Libs" configuration as an example of how to build an unoptimized
    application with debug symbols that is linked with Gamebryo Release libraries. The Gamebryo
    Tutorials and AssetViewer both demonstrate this build configuration.</li>
</ul>

<h4>VertexMorphing</h4>

<ul>
    <li>The VertexMorphing sample has been deprecated. For an example of how to programatically
    create and modify geometry, please refer to the new <a href=
    "../../Learn/Demos/Introduction_to_the_MeshCreation_Demo.htm">MeshCreation</a> sample.</li>

    <li>The <a href="../../Learn/FullDemos/Lenguins_on_Ice_Overview.htm">Lenguins On Ice</a> sample
    no longer offers a non-shader command line option for Win32. All configurations and run-time
    settings now use shaders.</li>
</ul>

<h3>Gamebryo 2.3.0</h3>

<h4>MOUT</h4>

<ul>
    <li>There were certain circumstances where the lens flare effect in <span class=
    "NDLSystemFont">MOUT</span> would remain visible, even when occluded. This has been fixed.</li>
</ul>

<h4>MetalWars</h4>

<ul>
    <li><span class="NDLSystemFont">MetalWars</span> does not run on cards that require the manual
    alpha blending technique when MSAA is enabled. This condition is now checked, and a dialog
    comes up when that situation is encountered.</li>
</ul>

<h4>SceneApp</h4>

<ul>
    <li>The custom materials in <span class="NDLSystemFont"><a href=
    "../../Reference/NiCommonMaterialLibrary/Introduction_to_NiCommonMaterialLib.htm">NiCommonMaterialLib</a></span>,
    such as <span class="NDLSystemFont">TextureBlendMaterial</span>, are now supported in
    <span class="NDLSystemFont">SceneApp</span> on Win32 and Xbox 360, since <span class=
    "NDLSystemFont">SceneApp</span> on those platforms now links in the <span class=
    "NDLSystemFont">NiCommonMaterialLib</span> static library. If you have other custom materials
    and/or shaders, you'll need to link them into <span class="NDLSystemFont">SceneApp</span> in
    order for the application to handle them.</li>

    <li>Custom materials are not displayed in split-screen mode in <span class=
    "NDLSystemFont">SceneApp</span>, since split-screen mode assumes an <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiMain/NiStandardMaterial.htm">NiStandardMaterial</a></span> vs.
    legacy-pipeline comparison.</li>
</ul>

<h4>UnicodeCharacterSets</h4>

<ul>
    <li>Added new UnicodeCharacterSets demo.</li>
</ul>

<h4>All Tutorials and Demos</h4>

<ul>
    <li>All tutorials and demos with the exception of the <span class="NDLSystemFont"><a href=
    "../../Learn/Demos/StandardMaterial_Demo_Overview.htm">StandardMaterial</a></span> and
    <span class="NDLSystemFont"><a href=
    "../../Learn/Demos/Overview_!SimpleApp.htm">SimpleApp</a></span> demos have been converted to
    use the <a href=
    "../../Programmer/Frame_Rendering_System/Introduction_to_the_Frame_Rendering_System.htm">frame
    rendering system</a> to do their rendering. In most cases, this simply involved passing a new
    parameter to the <span class="NDLSystemFont"><a href=
    "../../Reference/NiApplication/NiApplication.htm">NiApplication</a></span> or <span class=
    "NDLSystemFont"><a href="../../Reference/NiSample/NiSample.htm">NiSample</a></span>
    constructor, but some demos had to be significantly changed to work properly in the new system.
    The documentation for the demos and tutorials has been updated to reflect their use of the
    frame rendering system. FullDemos have not been converted unless otherwise mentioned
    below.</li>
</ul>

<h4>MetalWars</h4>

<ul>
    <li><span class="NDLSystemFont"><a href=
    "../../Learn/FullDemos/MetalWars_Overview.htm">MetalWars</a></span> has been converted to
    perform the vast majority of its rendering using the <a href=
    "../../Programmer/Frame_Rendering_System/Introduction_to_the_Frame_Rendering_System.htm">frame
    rendering system</a>. Many classes have been converted to use <a href=
    "../../Programmer/Frame_Rendering_System/Frame_Rendering_System_Render_Click.htm">render
    clicks</a> and <a href=
    "../../Programmer/Frame_Rendering_System/Frame_Rendering_System_Render_Step.htm">render
    steps</a> rather than performing all the rendering operations manually.</li>
</ul>

<h4>SceneApp</h4>

<ul>
    <li><span class="NDLSystemFont">SceneApp</span> has been converted to perform
    its rendering using the <a href=
    "../../Programmer/Frame_Rendering_System/Introduction_to_the_Frame_Rendering_System.htm">frame
    rendering system</a>.</li>
</ul>

<h3>Gamebryo 2.2.1</h3>

<h4>MetalWars</h4>

<ul>
    <li>A bug in <span class="NDLSystemFont">MetalWars</span> was fixed that was passing an
    incorrect time value to the adaptation model. Adaptation in <span class=
    "NDLSystemFont">MetalWars</span> is greatly improved.</li>
</ul>

<h4>All Demos</h4>

<ul>
    <li><span class="NDLSystemFont">ObjectPick</span> and <span class=
    "NDLSystemFont">MousePicking</span> were merged into the <a href=
    "../../Learn/Demos/Picking_Demo_Overview.htm"><span class="NDLSystemFont">Picking</span></a>
    demo</li>

    <li><span class="NDLSystemFont">NiBinaryShaderExtension</span> was removed. The significant
    feature that it illustrated, custom <span class="NDLSystemFont"><a href=
    "../../Reference/NiBinaryShaderLib/NiBinaryShader.htm">NiBinaryShader</a></span>-derived class
    support, is shown in the <a href="../../Learn/Demos/Picking_Demo_Overview.htm"><span class=
    "NDLSystemFont">Picking</span></a> demo.</li>

    <li><span class="NDLSystemFont">Compressor</span> was removed. Its functionality is now
    encompassed within the art pipeline.</li>

    <li>New art has been generated for the majority of the demos.</li>

    <li><span class="NDLSystemFont">AdvancedMultitexture</span> was renamed to <span class=
    "NDLSystemFont">StandardMaterial</span> and has been updated to match the new standard material
    pipeline. New art has also been generated for this sample.</li>
</ul>

<h4>All Tutorials</h4>

<ul>
    <li>Tutorial 1 - Basic was removed as it did not contain useful content.</li>

    <li>Tutorial 2 - Renderers is now the first tutorial.</li>

    <li>Tutorial 3 - NIF files is now the second tutorial</li>

    <li>A new tutorial 3 was written that details how to load <span class="NDLSystemFont"><a href=
    "../../Reference/NiMain/NiShader.htm">NiShader</a></span>-derived classes in the engine.</li>

    <li>New art has been generated for the tutorials.</li>
</ul>

<h3>Gamebryo 2.2.0</h3>

<h4>ShaderSample</h4>

<ul>
    <li>Update the names of the shaders in the <span class="NDLSystemFont"><a href=
    "../../Learn/Demos/ShaderLibrary.htm">ShaderLibrary</a></span> to reflect the shader names that
    the <span class="NDLSystemFont">ShaderLibrary</span> reports..</li>
</ul>

<h4>ShadowMap</h4>

<ul>
    <li>Fixed a bug generating the view frustum from the spotlight's view angle.</li>

    <li>The ShadowMap demo has been updated to demonstrate nVidia's hardware shadow mapping
    technology, in addition to the more conventional Shader Model 2.0 technique that it previously
    used.</li>
</ul>

<h4>SamplePluginsDLL</h4>

<ul>
    <li>Fixed errors in SamplePluginsDLL related to the memory system changes in Gamebryo 2.1.</li>
</ul>

<h4>All Samples</h4>

<ul>
    <li>Numerous samples were modified to take advantage of the <span class=
    "NDLSystemFont"><a href="../../Programmer/NiMaterial/Introduction_to_the_NiMaterial_System.htm">
    NiMaterial</a></span> system.</li>

    <li>Numerous samples had a problem where minimizing the application would corrupt the camera's
    view matrix, because the height and width of the window were used to calculate the camera
    direction in response to mouse movement.</li>
</ul>

<h3>Gamebryo 2.0.1</h3>

<ul>
    <li>Gamebryo version 2.0.1 is a maintenance release to address console specific issues. No
    changes were made to the samples for this release.</li>
</ul>

<h3>Gamebryo 2.0.0</h3>

<h4>All Samples</h4>

<ul>
    <li>All samples have been refactored to make use of the new Gamebryo render system, as
    described in the Conversion notes.</li>

    <li>Numerous samples that load NSF or FX shaders have been modified to only attempt to load the
    libraries that they need. In addition, samples that only have static library configurations do
    not include the code to load the DLL shader libraries.</li>

    <li>Numerous samples that use rendered textures have been modified to use the new <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiMain/NiRenderTargetGroup.htm">NiRenderTargetGroup</a></span> API.</li>
</ul>

<h4>FullDemos</h4>

<ul>
    <li>The Games subdirectory has been renamed FullDemos to reflect the fact that these samples
    are not actual games, but instead represent full Gamebryo applications that make use of a
    number of different technologies.</li>
</ul>

<h4>ATLActiveXDemo</h4>

<ul>
    <li>The ATL ActiveX demo has been removed.</li>
</ul>

<h4>CollisionTestDynamic</h4>

<ul>
    <li>Reworked the collision response in the Interact class to address a problem in which some
    bullets occasionally fell through the floor. The main problem was that the collision detection
    prediction uses linear velocity but the collision response also has to consider angular
    velocity and acceleration. The sample now checks for penetration of the walls and floor by
    bullets and makes the necessary adjustments if it finds penetration.</li>
</ul>

<h4>MadLab</h4>

<ul>
    <li>The MadLab sample has been removed.</li>
</ul>

<h4>ShaderSample</h4>

<ul>
    <li>The ShaderSample shader has been changed to allow the non-Cg-enabled builds of the
    application to link without generating an error warning. The Cg-enabled builds are now in
    separate build configurations.</li>
</ul>

<h4>ShadowMap</h4>

<ul>
    <li>Revamped the sample to include the latest changes to the rendered texture API, allowing
    creation of HDR render targets outside of directly specifying them using the D3D interfaces.
    This also made it possible to remove the reset notifications.</li>
</ul>

<h4>Eturnum</h4>

<ul>
    <li>All shaders in this sample have been converted to use the NSF files to access arbitrary
    <span class="NDLSystemFont"><a href=
    "../../Reference/NiMain/NiDynamicEffect.htm">NiDynamicEffect</a></span> parameters from the
    <span class="NDLSystemFont"><a href=
    "../../Reference/NiMain/NiDynamicEffectState.htm">NiDynamicEffectState</a></span> for each
    rendered object. This allows a shader to use an arbitrary number of lights without the need for
    all lighting parameters, such as light position and color, to be defined as global constants
    and modified every frame by the application. These changes cause the shader system to look for
    the specified objects in the <span class="NDLSystemFont">NiDynamicEffectState</span> for each
    rendered object, allowing shaders that use these effects to be applied to scenes with somewhat
    arbitrary lighting conditions with minimal programming effort. See the <a href=
    "../../Programmer/NiShader/NSF_File_Format_Reference.htm">NSF</a> and <a href=
    "../../Programmer/NiShader/Introduction_!FX_Shaders.htm">FX</a> documentation sections for
    more information.</li>
</ul>

<h4>Compressor</h4>

<ul>
    <li>Updated a function signature in the <span class=
    "NDLSystemFont">NiCompressingConverter</span> class of the Compressor sample to reflect the
    change that was made in the base class <span class="NDLSystemFont"><a href=
    "../../Reference/NiMain/NiImageConverter.htm">NiImageConverter</a></span>.</li>
</ul>

<h4>CollisionTestDynamic</h4>

<ul>
    <li>A revision of this sample includes the following changes:

        <ul>
            <li>Made significant performance improvements, mainly by reclassifying bullets as
            collidees once they are at rest.</li>

            <li>Replaced bullet with a higher quality model, while only adding 1 to the OBB tree
            depth. Now bullets are cloned from a Nif file (bullet.nif), instead of being built in
            code.</li>

            <li>Increased maximum number of bullets to 100 to increase likelihood of collisions,
            given significant performance improvements in the sample and the underlying collision
            detection system.</li>

            <li>Removed unneeded updates.</li>

            <li>Reworked the collision response in the Interact class, as explained in the Bug
            Fixes section above.</li>
        </ul>
    </li>
</ul>

<h4>DynamicTexture</h4>

<ul>
    <li>A revision of this sample includes the following changes:

        <ul>
            <li>Made changes to determine the sequential layout of red, green, blue, and padding
            channels directly from the pixel format in a device-agnostic way.</li>

            <li>Altered scale changes to use smaller steps.</li>

            <li>Made minor refinements to color and slide rate.</li>

            <li>Added sanity check for maximum number of octaves, to avoid "overflow" behavior (a
            white screen).</li>
        </ul>
    </li>
</ul>

<h4>VideoTexture</h4>

<ul>
    <li>Added new VideoTexture sample, and the NiVideo library on which it depends.</li>
</ul>

<a name="Known_Issues_and_Limitations" id="Known_Issues_and_Limitations"></a><h2>Known Issues and Limitation</h2>

<h3>Gamebryo LightSpeed 3.1 Specific Notes</h3>

<h4>BaseGame and PeerGame</h4>

<ul>
    <li>AIJack characters get stuck in a running state between a TargetRing and a wall. 
    This happens on occasionally on a slow frame. 
    The movement logic is dependent on PhysX Triggers and if a frame is slow, 
    the calculated position would not be as expected thus causing the AIJack to lose his next target.</li>
</ul>

<h3>All Gamebryo LightSpeed Releases</h3>

<h4>MangledMetal</h4>

<ul>
    <li>When you run MangledMetal in a virtual machine, you will not be able to see HUD updates
    like the splash screen or the health bar. Reproduced using VMware. Player 2.5.1
    build-126130.</li>

    <li>MangledMetal assets are exported using a custom <a href=
    "../../Reference/NiMeshProfileXMLParser/Introduction_to_NiMeshProfileXMLParser.htm">Mesh
    Profile</a> that compresses some vertex data. Compressed vertex data may not be supported on
    all older hardware, which will cause the assets to fail to render correctly. See <a href=
    "../../Reference/NiMeshProfileXMLParser/Mesh_Profile_Supported_Formats.htm">Authoring
    Considerations for Supported Formats</a> for more information on supported vertex formats.</li>
	
	<li>Occasionally you'll experience visible artifacts in the Vandal actor during runtime.</li>
	
</ul>

<h3>All Gamebryo Releases</h3>

<h4>CollisionTestStatic</h4>

<ul>
    <li>When 3ds max loads the art asset (Collides.max) for the CollisionTestStatic sample,
    Character Studio repositions both characters at the origin, instead of using their original
    positions at the opposite ends of the scene. No earlier version of 3ds max exhibits this
    behavior with this file. If you want to work with this art asset in 3ds max, a work-around is
    to manually reposition the two characters using 3ds max.</li>

    <li>The ground plane in the CollisionTestStatic sample is a true plane using a half space ABV
    despite the fact that the proxy geometry and flash ABV in the sample are finite. This can lead
    to situations where the manipulated objects do not appear to intersect either the proxy
    geometry or the flash ABV but generate collisions nonetheless. This is expected behavior for a
    true, infinite plane.</li>
</ul>

<h4>ShadowMap</h4>

<ul>
    <li>Using the largest shadow map size requires a large amount of video memory. Graphics cards
    with less than 256MB of video memory may have trouble using the largest shadow map size in this
    demo on PC resulting in some scene objects disappearing. Please refer to the <a href=
    "../PC/Release_Notes__NiDX9Renderer_Library.htm#Card_and_Driver_Specific_Issues">DX9 renderer
    release notes</a> for more information on cards that encountered this problem in our
    testing.</li>

    <li>Rendering with back faces helps eliminate precision issues in the shadow map. Toggling the
    "<span class="NDLSystemFont">Render Backfaces</span>" check box in the <span class=
    "NDLSystemFont">ShadowMap</span> sample will show the difference between rendering shadow maps
    with back faces and front faces, especially for the <span class=
    "NDLSystemFont">NiStandardShadowTechnique</span> technique. Without rendering backfaces, the
    <span class="NDLSystemFont">NiStandardShadowTechnique</span> technique exhibits many striping
    or "shadow acne" artifacts.</li>
</ul>

<h4>MetalWars</h4>

<ul>
    <li>The sample includes a work around for a Nvidia hardware issue that Nvidia is currently
    working on. The issue is only reproduceable on older Nvidia GPUs. The work around clamps shader
    variable values in the HDR shader code to prevent out of range values which can cause blacked
    out frames while running the sample.</li>

    <li>The sample does not properly show off blooming for sparks on certain older Radeon video
    cards because those cards to not support alpha blending with multiple render targets.</li>
</ul>

<h4>CubeMap</h4>

<ul>
    <li>If cube maps are not supported on the current hardware, then this sample will crash.</li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>XSI Plug-in programmer notes</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->

<!--(Begin Links)===================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>XSI Plug-in programmer notes</h1>

<p>While the Gamebryo XSI plug-in is primarily intended
 for artists, there are a few items that are of relevance to programmers.</p>

<h2>Custom Attributes</h2>

<p>Gamebryo allows several powerful ways to customize your
 exports and add meta-data to your art assets. See the documentation <a
 href="Custom_Parameters_in_XSI.htm">Custom Parameters in XSI</a> for more
 details.</p>

<h2>How ToolPlugins Are Parsed</h2>

<p>All tool plug-ins are loaded from the directory
 <span class="NDLSystemFont"><em>%EMERGENT_PATH%</em>\SDK\Win32\DLL\ToolPlugins</span>.  By
 default, the <span class="NDLSystemFont">EMERGENT_PATH</span> variable is set by the installer.
 </p>

<h2>How Dependent DLLs Are Loaded</h2>

<p>All DLLs must be in the user's PATH environment variable.</p>

<h2>How to Build The Gamebryo XSI Plug-in</h2>

<p>In order to build the Gamebryo XSI plug-in, you must
 have the XSI SDK installed.&nbsp; The XSI SDK comes with XSI. You must
 also have the following: &nbsp; </p>

<ul>

	<li>Crosswalk 3.3 SDK.
 This can be found on Softimage's site. The XSI Plug-in may build with
 other versions of Crosswalk, but this has not been tested.</li>

	<li>The NVIDIA Cg Toolkit.</li>

	<li>glext.h located in
 a folder named GLH. Many users may already have this. Alternatively, a
 compatible version comes with Cg or can be found on opengl.org.</li>
</ul>

<p>In addition to having the XSI and Crosswalk SDKs installed,
 you must set a number of environment variables. In the environment variables
 below, 'xx' refers to the XSI version you are building for without decimals.
 Thus, the 'xx' would become a 65 for XSI 6.5.</p>

<ul>

	<li>XSIINSTALLPATHxx -
 Root XSI installation path</li>

	<li>XSISDKxx - Root XSI
 SDK path; this should generally point to the XSISDK directory located
 in your XSI install path</li>

	<li>GLH - The directory
 <em>containing</em> the GLH directory. For instance, if your glext.h is
 located in c:\glh\glext.h, this should be c:\. Previous versions used the
 GLHxx environment variable; this is no longer the case.</li>

	<li>XSIWORKGROUPPATHxx
 - The directory where you want the XSI workgroup to be written.</li>

	<li>CROSSWALKSDK33 - The
 root directory of the Crosswalk 3.3 SDK. If Crosswalk is installed at
 C:\softimage\Crosswalk3.3, this will be C:\softimage\Crosswalk3.3\SDK</li>

	<li>CG_INC_PATH - The directory
 where Cg stores its header files. </li>

	<li>CG_LIB_PATH - The directory
 where Cg stores its library files.</li>
</ul>

<p>An example set follows for XSI6.5: </p>

<ul>

	<li>XSIINSTALLPATH65 -
 &quot;c:\Softimage\XSI6.5&quot;</li>

	<li>XSISDK65 - &quot;c:\Softimage\XSI6.5\XSISDK&quot;</li>

	<li>GLH - c:\</li>

	<li>XSIWORKGROUPPATH65
 - &quot;c:\Softimage\XSI6.5\GamebryoAddon&quot;</li>

	<li>CROSSWALKSDK33 - &quot;C:\softimage\Crosswalk3.3\SDK&quot;</li>

	<li>CG_INC_PATH - &quot;C:\Cg\include&quot;</li>

	<li>CG_LIB_PATH - &quot;C:\Cg\lib&quot;</li>
</ul>

<p>The following projects must be built in sequence prior
 to building the Gamebryo XSI plug-in :</p>

<ul>

	<li><em>%EMERGENT_PATH%</em>\Build\CoreRuntime\Win32\VC80\Core00_ThirdPartyCode.sln</li>

	<li><em>%EMERGENT_PATH%</em>\Build\CoreRuntime\Win32\VC80\Core01_EngineLibs.sln</li>

	<li><em>%EMERGENT_PATH%</em>\Build\CoreRuntime\Win32\VC80\Core03_ToolLibs.sln</li>

	<li><em>%EMERGENT_PATH%</em>\Build\CoreRuntime\Win32\VC80\Core05_ShaderLibs.sln</li>

	<li><em>%EMERGENT_PATH%</em>\Build\Tools\Win32\VC80\Tools06_ToolPlugins.sln</li>

	<li><em>%EMERGENT_PATH%</em>\Build\Tools\Win32\VC80\Tools10_XSIPlugin.sln</li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->
</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>XSI Sample Index</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>XSI Sample Index</h1>

<p>When you install the XSI Plug-in, a number of artist samples are installed in the following location:</p>

<p><span class="NDLSystemFont"><em>%EMERGENT_PATH%</em>\Samples\Models\XSI Artist Examples</span></p>


<p>Exported (.kf, .kfm, or .nif) versions of the sample scenes are located here:</p>

<p><span class="NDLSystemFont"><em>%EMERGENT_PATH%</em>\Samples\Models\XSI Artist Examples\Scenes\Exported</span></p>

  <table class="NDLNoteContainer" width="100%">
      <tr align="left">
          <td class="NDLNoteContainerTD"><p class="NDLHeadingNoteContainer">Note</p>
              <div class="NDLNote">When you open several of the scenes in the 
                  <a href="../../Tools/Asset_Viewer/Asset_Viewer_Overview.htm">Gamebryo Asset Viewer</a>, you may need to orbit the default camera to a new position in 
                  order to view the scene in its entirety.
              </div>
          </td>
      </tr>
  </table>

<ul>

<li><span class="NDLSystemFont">ABVSample.scn</span>&mdash;An ABV setup and node naming example.</li>

<li><span class="NDLSystemFont">ClipSample.scn</span>&mdash;An Animation Mixer test scene that demonstrates clip extraction to separate Gamebryo sequences.</li>

<li><span class="NDLSystemFont">CubeMapSample.scn</span>&mdash;Demonstrates two different cube mapping techniques, one using the GamebryoMaterial shader node (the preferred technique) and the other using an OpenGL render tree. The scene demonstrates that the GamebryoMaterial cube map is applied in a mathematically equivalent manner.</li>

<li><span class="NDLSystemFont">DragonSample.scn</span>&mdash;A sample that shows GamebryoMaterial with a base, normal, gloss, and cube map applied simultaneously.</li>

<li><span class="NDLSystemFont">LODSample.scn</span>&mdash;Demonstrates the proper application of Gamebryo level-of-detail metadata to objects in a scene.</li>

<li><span class="NDLSystemFont">PointLightAnimatedColorSample.scn</span>&mdash;Multiple spheres lit by a light with attenuation and animated color.</li>

<li><span class="NDLSystemFont">RotateTranslateScaleAnimationSample.scn</span>&mdash;Demonstrates basic animation export without using the Animation Mixer.</li>

<li><span class="NDLSystemFont">ShadowSample.scn</span>&mdash;A scene that exercises different possibilities with the Gamebryo lighting and shadow metadata controls.</li>

<li><span class="NDLSystemFont">ShapeAnimationSample.scn</span>&mdash;A morphing sphere that depicts shape animation support.</li>

<li><span class="NDLSystemFont">SkinningSample.scn</span>&mdash;A skinned cylinder attached to a simple animated rig.</li>

<li><span class="NDLSystemFont">VertexColorSample.scn</span>&mdash;A scene with lighting baked into the vertex colors, which are exported to Gamebryo.</li>

<li><span class="NDLSystemFont">VisibilitySample.scn</span>&mdash;A scene that applies visibility metadata to control the visibility of portions of the scene.</li>

<li><span class="NDLSystemFont">ZBufferSample.scn</span>&mdash;A sample with three colored planes that are tagged with z-buffer metadata. The sample demonstrates how object z-buffering properties can be controlled.</li>

</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Max Plug-in Release Notes</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->

<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Max Plug-in Release Notes</h1>

<p>For information about the Max versions that are supported in this Gamebryo release, see <a href=
"Max_Supported_Versions.htm">Max Plug-in: Supported Versions</a>.</p>

<p><a href="#Added_Features">Added Features</a></p>

<p><a href="#Fixed_Bugs">Fixed Bugs</a></p>

<p><a href="#Changed_Behavior">Changed Behavior</a></p>

<p><a href="#Known_Issues_and_Limitations">Known Issues and Limitations</a></p>

<a name="Added_Features" id="Added_Features"></a><h2>Added Features</h2>

<h3>Gamebryo LightSpeed 3.2</h3>

<ul>
    <li>The Gamebryo Max Plug-in now supports PhysX data created by the PhysX Max plug-in version
    2.4 for PhysX 2.8.3. The earlier plug-ins are no longer supported, but content created by them
    is still functional, with the exception of joint data created with very early versions of the
    PhysX plug-in (versions prior to the D6Joint Max helper class).
    </li>
</ul>

<h3>Gamebryo LightSpeed 3.1</h3>

<ul>
    <li>Added support for 3ds Max 2010.</li>

    <li>Added support for particle system alignment, scale, and UV Animation. See <a href=
    "Particles.htm#gamebryo_extra_params">Gamebryo Extra Params</a> for more information.</li>

    <li>Added export option to control whether external original textures are copied to the export
    location.</li>

    <li>Fixed an issue with the path to default textures for custom shaders (from
    Media\Shaders\Textures to Media\Shaders\Data\Textures)</li>
</ul>

<h3>Gamebryo LightSpeed 3.0</h3>

<ul>
    <li>Added support for Max's <a href="DirectX_Shader_in_Max.htm">DirectX Shader
    Material</a>.</li>

    <li>Updated support for the PhysX Max Plug-In to version 1.0.6 available from NVIDIA's
    website.</li>
</ul>

<h3>Gamebryo 2.6.0</h3>

<ul>
    <li>Support added for specifying Anisotropic Filtering as a filter mode in the texture export
    custom attributes. At runtime, the value specified for maximum number of samples will be
    clamped to the range supported by the hardware, and on platforms which do not support
    anisotropic filtering, trilinear filtering will be used instead. For more information, see the
    <span class="NDLSystemFont"><a href=
    "../../Reference/NiMain/NiRenderer.htm">NiRenderer</a></span> documentation and the
    documentation for each platform-specific renderer.</li>

    <li>Updated support for the PhysX Max plug-in to version 1.0.4a.</li>

    <li>Gamebryo now uses the concave/convex designation of a mesh to determine if it should be
    dynamic or static during fluid system export. Any mesh in a Max scene that is marked as
    "concave" will be exported as a static actor when the <a href=
    "../../Reference/Tool_Plug_ins/PhysX_Extractor.htm">PhysX Extractor</a> is set to convert
    particles to fluids, regardless of the static/dynamic/kinematic designation in Max. The
    behavior is unchanged when "Convert PSys to Fluid" is unchecked in the <a href=
    "../../Reference/Tool_Plug_ins/PhysX_Extractor.htm">PhysX Extractor</a> options.</li>

    <li>There is a difference in how normals are calculated compared to previous versions of
    Gamebryo which can result in subtle differences in the final rendering. The Utilities panel now
    has a "Use Old Normals" check box to use the previous method of normal generation.</li>
</ul>

<h3>Gamebryo 2.5.0.0</h3>

<ul>
    <li>Added support for 3ds Max 2009.</li>

    <li>Added the <a href="../../Art/Other/Introduction_to_Mesh_Profiles.htm">Mesh Profile
    System</a>.</li>

    <li>The exporter now only turns alpha blending on when a texture has transparent alpha texels.
    Refer to <a href="Bitmap_Texture.htm">Bitmap Texture</a> section in the Max artist guide for
    additional information.</li>
</ul>

<h3>Gamebryo 2.3.0.4</h3>

<ul>
    <li>Added support for 3ds Max 2008.</li>
</ul>

<h3>Gamebryo 2.3.0</h3>

<ul>
    <li>Omni, Directional, and Spot lights can now cast dynamic shadows in the exported Gamebryo
    scene.</li>

    <li>Added support for 3ds Max 9</li>

    <li>Added support for converting Max's XRef material type.</li>

    <li>Added PS3 On-target Viewer and PhysX Nif Viewer options in the Gamebryo 3ds Max Plug-in
    utility panel.</li>
</ul>

<h3>Gamebryo 2.2.0</h3>

<ul>
    <li>Added <a href="Introduction_To_Gamebryo_PhysX_Max_Support.htm">PhysX</a> support</li>

    <li>Added support for spotlight "hotspot" when using shader-driven materials.</li>

    <li>Added support for parallax and normal maps when using shader-driven materials. Also added
    support in the Gamebryo Shader for setting the parallax offset.</li>

    <li>The maximum value Material Shininess for the Gamebryo Shader has been increased to 2500.0.
    This allows for much tighter specular highlights.</li>

    <li>The Luma Offset and Luma Scale parameters have been removed from the Gamebryo Shader.</li>

    <li>Added support for clipping projected lights and shadows by adding the string "NiClipPlane =
    true" to the user property buffer of the light.</li>

    <li>Max Line objects can now be exported to Gamebryo NiLines objects if you add the string
    "NiExportLines" to the user defined properties of the shape.</li>

    <li>Added support for direct-loading textures on supported platforms. This functionality is
    designed to increase loading performance, reduce the load-time memory footprint, improve
    general memory usage, and allow for platform-specific extensions. As a part of this effort, "DX
    9" and "Playstation 3" platform options were added to the Gamebryo export dialog (along with
    "Xbox 360"), and "PC" was renamed "Generic". See <span class="NDLSystemFont"><a href=
    "../../Programmer/Object_Systems/Streaming.htm#TextureStreamingOptions">Texture Streaming
    Options</a></span> for Internal Textures, the <a href=
    "Gamebryo_3ds_max_Export_Options1.htm">export options</a> for 3ds max, and the description of
    <span class="NDLSystemFont"><a href=
    "../../Reference/NiMain/NiPersistentSrcTextureRendererData.htm">NiPersistentSrcTextureRendererData</a></span>
    in the Main Class Reference for more details.</li>

    <li>Added support for exporting and viewing only the <a href=
    "Gamebryo_3ds_max_Export_Options1.htm#ExportSelected">selected objects</a> in the scene.</li>

    <li>OpenEXR textures now export properly.</li>
</ul>

<h3>Gamebryo 2.1.0</h3>

<ul>
    <li>Replaced NiNextGenXboxViewer with Xbox 360 Viewer.</li>

    <li>Added support for 3d Studio Max 8.</li>

    <li>Added support for the 'Start Frame' parameter in the Time rollout for animated
    bitmaps.</li>

    <li>Various memory leaks were addressed. The Max Plug-in now uses the Gamebryo memory
    management system.</li>

    <li>Added the ability for the plugin to export without bringing up any modal dialogs and
    writing all of that information to a log file instead. Additionally, the user can now also set
    whether the export error/warning dialog displays. These are done from the <a href=
    "Options_Panel.htm">Options Panel</a>.</li>

    <li>Added three new MaxScript-accessible export variables: "WriteErrorsToFile",
    "ShowErrorLogPrompt", and "LastErrorLogPromptReturn". These are used to set whether the export
    warnings and errors dialog displays or writes to a log file. More information can be found at
    <a href="MaxScript_Functions.htm">MaxScript Functions</a>.</li>
</ul>

<h3>Gamebryo 2.0.0</h3>

<ul>
    <li>Added support for exporting non-power-of-two textures, including custom mip-mapchain
    specification.</li>

    <li>Cubemaps are now shared in memory after export to conserve memory.</li>

    <li>Added support for High-Dynamic-Range (.HDR) images.</li>

    <li>Changed NifExport.ms so that it loaded using the file units and recursively exports to the
    same directory structure as the source directory structure.</li>

    <li>Added support for the animated light dimmer values.</li>

    <li>Added support for Xbox 360 renderer, including a slot in the Gamebryo Cross Platform
    Material and Xbox 360 material viewer.</li>

    <li>Added support for cubemaps in DDS files.</li>

    <li>Added new ARRAY shader attribute type. This allows the FX file to contain arrays of float,
    float2, float3, float4 values and supports annotations and custom UI for all of them.</li>

    <li>Added support for "/" and "\" in custom attribute names.</li>

    <li>Particle size is now exactly consistent between Max and Gamebryo for both mesh particles
    and sprite particles when Max display is set to 'facing'.</li>

    <li>Changed the export behavior of Life Variation and Speed Variation in the Particle
    Generation rollout to match Max.</li>

    <li>Added support for the Phase and Phase Variation parameters in the Rotation and Collision
    rollout.</li>

    <li>Added support for animated PlanarAngleVariation and DeclinationVariation for
    SuperSprays.</li>

    <li>Added three new Particle system Gamebryo parameters - rotation speed, rotation speed
    variation, and bidirectional rotation.</li>

    <li>Added a flag, 'NiMorphUpdateNormals', to the available User Defined Properties flags to
    allow morphed objects to recalculate their surface normals per frame.</li>

    <li>Added the Gamebryo Max Portal Utility to speed up the process of organizing a level into a
    portal system.</li>

    <li>Removed all functionality specific to the Playstation 2, GameCube, and Xbox consoles. This
    includes some texture export custom attributes that are no longer needed.</li>

    <li>PC and Xbox 360material viewers now also work for Multi/sub object materials.</li>

    <li>Added support for particle size variation for all particle systems that utilize that
    parameter.</li>

    <li>Fixed export of IFL animated textures which use some frame images more than once in the
    sequence.</li>

    <li>Revised <a href="Position__Rotation__And_Scale.htm">animation key</a> discussion.</li>

    <li>Added document on Max coordinate systems.</li>

    <li>Added <a href="Max_Portal_Utility.htm">portal utility</a> documentation.</li>

    <li>Added <a href="SwitchNode_Utility.htm">Switch node utility</a> documentation.</li>

    <li>Revised <a href="Introduction_!Programmer_s_Guide.htm">programmer's guide</a>.</li>

    <li>'Allow NPOT Textures' checkbox added. Checking this option will cause the exporter to not
    sample Non-power-of-two textures when it encounters them. Note that non-power-of-two textures
    are not fully supported by most graphics hardware.</li>

    <li>Removed all functionality specific to the Playstation 2, Gamecube, and Xbox consoles.</li>

    <li>Added Xbox 360 console.</li>
</ul>

<a name="Fixed_Bugs" id="Fixed_Bugs"></a><h2>Fixed Bugs</h2>

<h3>Gamebryo LightSpeed 3.1.1</h3>

<ul>
    <li>Fixed an issue with the Max Cross Platform Material that could cause a crash.</li>
    <li>Fixed a crash that could occur when showing a standard map in the Max viewport in Max 2010.</li>
</ul>

<h3>Gamebryo LightSpeed 3.1</h3>

<ul>
    <li>Locked swing values for PhysX Joints now always export as locked instead of only locking
    if limiting was also enabled.</li>

    <li>Twist low and high angles for PhysX Joints are now properly interpreted. Previously, the
    high limit would modify the limit in the wrong direction.</li>

    <li>NBTs are now generated using the Normal map's UV set rather than UV 0 when there is no
    parallax map present.</li>

    <li>The GamebryoOutputLog.xml is now properly named and formatted when the silent export option
    is set.</li>

    <li>Fixed a bug where multiple decals on the same material using a composite map would not all
    show up in exported assets on Win32.</li>

    <li>Shader attribute rollout parameters now stay connected to the associated attributes in Max
    2009.</li>
</ul>

<h3>Gamebryo LightSpeed 3.0</h3>

<ul>
    <li>Renamed a function in the Max macro scripts that was causing a conflict with the Autodesk
    Creativity Extension.</li>

    <li>Fixed invalid memory access that was causing some assets to cause a crash during
    export.</li>
</ul>

<h3>Gamebryo 2.6.0.0</h3>

<ul>
    <li>When using spherical wind, the force value no longer has the opposite effect in
    Gamebryo.</li>

    <li>Clicking the "Add/Remove Texture Export Custom Attributes" button now behaves properly when
    the currently selected texture is a sub texture of a composite map.</li>

    <li>Selecting "Original Images VRAM" no longer results in an empty directory being
    created.</li>

    <li>Going into the first sub-material of a Gamebryo XPlatform Material and hitting the "next
    sibling" button will now iterate over all sub-materials.</li>

    <li>When NBT generation is turned on, NBTs will now be generated even if the shader does not
    request them.</li>

    <li>Flipbook textures behave properly when the "Use App Time" option is turned off.</li>

    <li>Max no longer crashes when assigning a Reflect/Refract map to a shader's map slot.</li>

    <li>Exporting a scene with photometric lights no longer gives shadow technique warnings.</li>

    <li>The Unify Normals plugin now works properly with skinned meshes.</li>

    <li>Adding custom attributes in the animation editor no longer causes normals to export
    incorrectly.</li>
</ul>

<h3>Gamebryo 2.5.0.0</h3>

<ul>
    <li>Morpher objects with non-animated weights now export properly.</li>

    <li>The Max Plug-in no longer stores exporter options in two separate INI files.</li>

    <li>Assigning objects that belong to a group to a portal hierarchy using the Portal Utility no
    longer causes those objects to lose parent data.</li>

    <li>The Gamebryo Shadow Params no longer generate errors when loaded without the Gamebryo Max
    Plug-in installed.</li>

    <li>Exporting scenes with invalid Gamebryo shadow attributes no longer crashes.</li>
</ul>

<h3>Gamebryo 2.3.0.4</h3>

<ul>
    <li>Skylights in the scene no longer cause export failures.</li>
</ul>

<h3>Gamebryo 2.3.0.1</h3>

<ul>
    <li>Instanced objects now retain the reflection maps assigned to the original.</li>

    <li>Instancing a skinned mesh with a Multi\Sub-Object material no longer causes an invalid NIF
    to be exported</li>

    <li>Instanced objects with Multi\Sub-Object materials now no longer have transformation
    problems when scales or pivot offsets are applied.</li>
</ul>

<h3>Gamebryo 2.3.0</h3>

<ul>
    <li>Certain PArray setups will no longer cause exceptions on export.</li>

    <li>The 'Use Current Frame Bounds' button in particle system custom attributes now calculates a
    local space bound.</li>

    <li>Turning on sequence rotation accumulation will now always ensure that there is a front
    facing direction to ensure that the UI is accurate.</li>

    <li>The 'Keep Bone Indices' flag on the geometry precache custom attributes rollout has been
    renamed to 'Keep Indices' to properly reflect the internal use of the flag.</li>

    <li>Multi-sub materials that have a reflection map assigned to a sub-material will no longer
    have the reflection effect on the entire object.</li>

    <li>Glow maps will no longer get converted twice on export.</li>

    <li>Instanced geometry now exports changes in scale.</li>

    <li>Beginning an extra info tag with the strings "start", "morph: ", or "end" will now be
    replaced instead of breaking the Animation Manager.</li>

    <li>The plug-in will no longer attempt to convert Mental Ray or DirectX manager custom
    attributes when it encounters them. This should speed up export, remove some warnings, and
    avoid a crashing issue in the case where these attributes were attached to meshes instead of
    materials.</li>

    <li>You can now use cubemaps when creating environment maps via a point light instead of
    through the reflection map slot.</li>
</ul>

<h3>Gamebryo 2.2.0</h3>

<ul>
    <li>Certain mesh type and vertex color combinations no longer cause exceptions.</li>

    <li>Fixed faulty behavior where additional and unnecessary global animation compression data
    was getting added to an actor root after a file was opened.</li>

    <li>Fixed memory manager mismatch when exporting integer table custom attributes.</li>
</ul>

<h3>Gamebryo 2.1.2</h3>

<ul>
    <li>Previously, assigning a custom shader in the material editor that has a custom attribute
    rollout then reverting that shader back to the default shader would have left the custom
    attribute rollout attached. The rollout is now removed properly.</li>
</ul>

<h3>Gamebryo 2.1.0</h3>

<ul>
    <li>Previously the Vertex Paint modifier in Max 6 and 7 sometimes didn't export when applied to
    some meshes without collapsing the stack. Now the vertex paint modifier should always be
    exported.</li>

    <li>Instanced static geometry that has non-uniform or negativescale values now instance scale
    values properly.</li>

    <li>Morphing objects that have degenerate triangles in the base mesh that expand in one of the
    morph targets will no longer optimize out their degenerate triangles.</li>

    <li>Particle system animated size parameter is no longer converted on file load so that export
    of older particle systems is consistent. The size parameter is still halved.</li>

    <li>Meshes that have more than 65,535 faces will now generate an export warning and be ignored
    instead of exporting incorrectly or potentially crashing the exporter.</li>

    <li>Meshes with more than 65,535 texture coordinates (vertices * map channels) now export all
    texture coordinates instead of only the first 65,535.</li>

    <li>Objects that have transform controllers, but no position, rotation, or scale controllers
    now can sample animations.</li>
</ul>

<h3>Gamebryo 2.0.0</h3>

<ul>
    <li>Bugfix for bumpmap preference formats being converted to 32 bit unnecessarily.</li>

    <li>Fixed bug allowing a script template's version in memory to be overwritten by a script of
    the same name.</li>

    <li>Fixed a bug regarding Multi/sub-object materials with only one sub-material not
    exporting.</li>

    <li>Fixed minor issues with not supporting the default color and alpha values for colortabs
    when used as shader custom attributes.</li>

    <li>Removed deletion of older mipmap pyramid custom attributes after conversion because of
    internal Max errors.</li>

    <li>Fixed bug regarding incorrect handling of the NETWORK_SCRIPT_PATH variable when accessing
    it from Maxscript.</li>

    <li>Bugfix for spherical environment map export. The exporter assumed that it was exporting
    camera-space environment maps. This is incorrect, we should only export world-space environment
    maps. Ideally, the user expects the up/down/left/right of the environment map to match the
    up/down/left/right when looking directly at the object and aligned with the object. Unless we
    apply a transform to the resultant texture effect, this will not occur. Users wishing to change
    behavior will need to uncomment the #define USE_OLD_SPHERICAL_ENVIRONMENT_MAP in MaxImmerse.h.
    If your art assets relied on the old behavior, they may need to be changed.</li>

    <li>Fixed bug where the Max preview tool was crashing after being launched multiple times in
    one session for a scene with shaders.</li>

    <li>Fixed a bug where a MaxScript error dialog would appear when the Animation Manager was open
    while a new Max file was loaded.</li>

    <li>Fixed a bug where the tolerance for determining if vertices normals needed to be welded via
    the 'Normal Unifier' plug-in was too large.</li>

    <li>Fixed a bug concerning the coordinate space of path interpolators.</li>

    <li>Fixed a bug in which exporting the multiplier parameter of a photometric light caused the
    export to fail.</li>

    <li>Changed the export strength of the PBomb object to match Max.</li>

    <li>Fixed a bug in which if the first texture shader input was not assigned a map, the
    NiTexturingProperty would not get assigned to the object.</li>

    <li>Fixed a bug in which instanced objects with multi-sub object materials were not scaling the
    clones correctly.</li>

    <li>Removed code that set the alpha channel to white for textures that had an alpha channel but
    didn't want to use alpha blending.</li>

    <li>Fixed bug in which if the pivot of a Gravity or PBomb space warp was changed, Gamebryo
    would use the wrong axis to force the particles.</li>

    <li>Fixed bug in which texture transforms on shader maps were not getting baked into the UV
    coordinates.</li>

    <li>When generating a mipmap pyramid from files, images are no longer read from their original
    path as defined in the Max file. Instead they are loaded from wherever Max finds the image
    files.</li>

    <li>Fixed bug in which when instanced objects used multi-materials, the instances would get
    double-transformed.</li>

    <li>Fixed bug in which Textures that were used as shader inputs were not being removed from
    memory after export was complete.</li>

    <li>Fixed bug in the Animation Manager, BoneLOD Utility, and LOD Utility that could potentially
    cause a MaxScript exception when callback functions were called.</li>

    <li>Applying a skin modifier to a surface (as opposed to a mesh) will now issue an export
    warning instead of an assertion.</li>

    <li>Fixed export of <span class="NDLSystemFont"><a href=
    "../../Reference/NiAnimation/NiLookAtInterpolator.htm">NiLookAtInterpolators</a></span> to make
    them observe the <span class="NDLSystemFont">CycleType</span> set in 3ds max.</li>

    <li>Fixed the export of high specularity non-Gamebryo shader materials.</li>
</ul>

<a name="Changed_Behavior" id="Changed_Behavior"></a><h2>Changed Behavior</h2>

<h3>Gamebryo LightSpeed 3.1</h3>

<ul>
    <li>The high twist limit for PhysX joints is now interpreted as the opposite direction as it
    was previously so that the limit arc in Gamebryo matches the one in the Max Viewport. Assets
    that depend on the high twist limit may need to be refactored to achieve the same simulation
    constraints.</li>

    <li>NBTs are now generated using the Normal map's UV set rather than UV 0 when there is no
    parallax map present.</li>

    <li>Using the Graphite Modeling Tools will automatically add vertex colors to a mesh, which can
    decrease performance. If unmodified, these vertex colors will be removed by the Scene Graph
    Optimization tool plug-in, but users should be aware anyway to prevent geometry data bloat.</li>

    <li>Removed support for 3ds Max 9</li>
</ul>

<h3>Gamebryo 2.6.0.0</h3>

<ul>
    <li>The "NBT Generation" option has been changed to "NBT Override" and determines the method
    for NBT generation regardless of what the selected shader requests. If "None" is selected then
    no NBTs will be generated even if the shader requests NBTs.</li>

    <li>Photometric lights no longer export with shadow information.</li>

    <li>Removed support for 3ds Max 8.0.</li>

    <li>There is now a change in how normals are calculated which may cause subtle differences in
    how the final render looks compared to previous versions of Gamebryo. The Utilities panel now
    has a "Use Old Normals" check box which can be checked to revert to the previous method of
    normal calculation.</li>
</ul>

<h3>Gamebryo 2.5.0.0</h3>

<ul>
    <li>Removed support for 3ds Max versions 6 &amp; 7.</li>

    <li>The debug configuration of the Max Plug-in now uses a hybrid build configuration. This
    means that it uses the release runtime libraries in order to operate properly in a release
    build of 3ds Max.</li>

    <li>In the "Switch Node Utility" rollout, the "Update only Active Child" checkbox has been
    removed. This feature has been deprecated in the underlying Gamebryo class, so the option is no
    longer needed.</li>

    <li>Upon export, any process script will prompt for update in order to add the new <a href=
    "../../Reference/Tool_Plug_ins/Mesh_Finalize.htm">Mesh Finalize plug-in</a>. All process
    scripts should be updated to include this plug-in.</li>
</ul>

<h3>Gamebryo 2.3.0</h3>

<ul>
    <li>Lights that have the shadow checkbox turned on will export to Gamebryo casting dynamic
    shadows. This will have a performance impact on the exported scene. This checkbox previously
    had no effect.</li>

    <li><span class="NDLSystemFont"><a href=
    "../../Reference/NiMain/NiCamera.htm">NiCamera</a></span> objects will now be assigned a name
    based on the Max camera's name. Previously if the camera was animated, the <span class=
    "NDLSystemFont">NiCamera</span> object would have no name.</li>

    <li>The UVW map conversion behavior has changed slightly in Max 9. The Gamebryo exporter is
    more strict with warnings about textures that reference nonexistent UVW maps. If you get a
    warning like the following, check to ensure that all materials using that texture have
    specified existing UVW maps:<br>
    <br>
    WARNING: Deleting texture, "Room_Large_A_Lighting.bmp", map due to invalid UV channel
    assignment.<br>
    <br>
    The same warning may not have been reported in previous versions of Max.</li>
</ul>

<h3>Gamebryo 2.2.2</h3>

<ul>
    <li>Added support for Max 9. This included requiring an additional environment variable,
    MAXSDKPATH90, now that Max and the Max SDK can be installed to different locations.</li>
</ul>

<h3>Gamebryo 2.2.1</h3>

<ul>
    <li>Removed support for 3ds Max 5.1</li>

    <li>Console specific viewers and platform-specific material swappers are no longer buttons on
    the default Gamebryo toolbar. If you want to have these buttons, you can simply drag-and-drop
    them from the toolbar tab of the custom user interface dialog onto the Gamebryo toolbar.</li>
</ul>

<h3>Gamebryo 2.2.0</h3>

<ul>
    <li>Added support for direct-loading textures on supported platforms. This functionality is
    designed to increase loading performance, reduce the load-time memory footprint, improve
    general memory usage, and allow for platform-specific extensions. As a part of this effort, "DX
    9" and "Playstation 3" platform options were added to the Gamebryo export dialog (along with
    "Xbox 360"), and "PC" was renamed "Generic". See <span class="NDLSystemFont"><a href=
    "../../Programmer/Object_Systems/Streaming.htm#TextureStreamingOptions">Texture Streaming
    Options</a></span> for Internal Textures, the export options for <a href=
    "Gamebryo_3ds_max_Export_Options1.htm">3ds max</a>, and the description of <span class=
    "NDLSystemFont"><a href=
    "../../Reference/NiMain/NiPersistentSrcTextureRendererData.htm">NiPersistentSrcTextureRendererData</a></span>
    in the Main Class Reference for more details.</li>

    <li>Spotlights may export differently now that the Light Cone Hotspot is supported. Previously,
    spotlights were exported as if they had a hotspot of 0.</li>

    <li>Materials with the 'faceted' flag checked in the Shader Basic Parameters rollout will no
    longer render as faceted in Gamebryo.</li>

    <li>The 'Luma Offset' and 'Luma Scale' parameters are no longer exposed in the Gamebryo Shader
    rollout for bump maps.</li>

    <li>The 'Use old particle system for export' option has been removed from the Options rollout.
    The old Gamebryo particle systems are no longer exportable by the Gamebryo Max Plug-in.</li>
</ul>

<h3>Gamebryo 2.0.0</h3>

<ul>
    <li>Frustum values for orthographic cameras were modified to properly match how they are in the
    Max viewport. In particular, orthographic cameras used to use the innermost safe frame as its
    frustum, but perspective cameras properly used the outermost safe frame. Gamebryo now uses the
    outermost safe frame for both perspective and orthographic cameras. If your art assets relied
    on the old behavior, they may need to be changed.</li>

    <li>Updated 4.2.2 script conversion to match new stripify platforms.</li>

    <li>Change in export for spherical environment maps. The exporter assumed that it was exporting
    camera-space environment maps. This is incorrect, we should only export world-space environment
    maps. Ideally, the user expects the up/down/left/right of the environment map to match the
    up/down/left/right when looking directly at the object and aligned with the object. Unless we
    apply a transform to the resultant texture effect, this will not occur. Users wishing to change
    behavior will need to uncomment the #define USE_OLD_SPHERICAL_ENVIRONMENT_MAP in MaxImmerse.h.
    If your art assets relied on the old behavior, they may need to be changed.</li>

    <li>Change in the export of PBomb space warp objects. The strength of exported PBombs is now 10
    times what it was before in order to match the strength in Max.</li>

    <li>The Spin Time and Spin Time Variation parameters are no longer supported for mesh
    particles. Instead, the previously existing values in these parameters are translated to their
    equivalent values in the new Gamebryo Export Params Rotation Speed and Rotation Speed
    Variation.</li>

    <li>The resulting values from exporting Speed Variation and Life Variation for particles is
    double what it used to be in order to match Max's behavior.</li>

    <li>Particle size is now exactly consistent between Max and Gamebryo for both mesh particles
    and sprite particles when Max display is set to 'facing'. In order to enforce a consistent
    export, when an existing particle system is loaded that uses an outdated version of the
    Gamebryo Export Params, its Size parameter will be half what it was before, causing the system
    to appear different in Max.</li>

    <li>If loading a Max file that contains outdated Custom Shader Attributes, the user will no
    longer be prompted if they want to update shader definitions. This will always be done.</li>

    <li>The Normal Map group in the Gamebryo Shader Parameters rollout has been renamed to NBT
    method in order to more accurately describe its function.</li>
</ul>

<a name="Known_Issues_and_Limitations" id="Known_Issues_and_Limitations"></a><h2>Known Issues and Limitations</h2>

<p><a href="#All_Releases">All Releases</a></p>

<p><a href="#PhysX">PhysX</a></p>

<a name="All_Releases" id="All_Releases"></a><h3>All Releases</h3>

<ul>
    <li>Custom Shader attributes have some editing limitations in Max 2009. For textures, you
    cannot view the bitmap parameters or drag and drop maps. All parameters require a UI refresh
    before they reflect animated values.</li>

    <li>When the exporter for 32-bit Max 2010 is installed on Windows 7 64-bit or Vista 64-bit, the
    exporter plug-in may not load successfully in Max 2010 until the machine is rebooted.</li>

    <li>Export of Bone / Skin LOD requires the SceneGraphOptimization plug-in.</li>

    <li>Autodesk requires that all 3ds Max Plug-ins are compiled with the same Visual Studio
    version that was used to create 3ds Max. The necessary Visual Studio version can change between
    releases of 3ds Max. These are documented at <a href=
    "Introduction_!Programmer_s_Guide.htm#VisualStudio2008">Programmer's Introduction to the 3ds
    Max Plug-in</a>.</li>

    <li>If using the DirectX Shader material with explicit light references set up, the light
    references may be reset to default if loading the Max file in 3ds Max 2010. The Gamebryo Max
    Plug-in will honor whatever light is reported by the directX Shader UI.</li>

    <li>Parsing mesh profiles can take a significant amount of time. The more files needed to parse
    will increase the time it takes "MAX" to load. The time is directly proportional to the number
    of profiles. The number of profiles should be monitored and kept to a minimum.</li>

    <li>The Max Light Lister tool does not work with the Gamebryo Max Plug-in due to a bug in
    Max.</li>

    <li>The Gamebryo Precache Attributes rollout checkboxes do not link properly with their
    underlying attributes in Max 2009. If you need to change the value of the checkboxes in Max
    2009, you must use MaxScript to set the value. The names of the underlying attributes are
    <span class="NDLSystemFont">KeepPositions</span>, <span class=
    "NDLSystemFont">KeepNormals</span>, <span class="NDLSystemFont">KeepVertColors</span>,
    <span class="NDLSystemFont">KeepUVCoords</span>, <span class=
    "NDLSystemFont">KeepBoneIndices</span>, and <span class=
    "NDLSystemFont">KeepBoneData</span>.</li>

    <li>Lights that are switched off in Max export with black light color.</li>

    <li>When exporting objects with a morpher modifier for the PS3, keep the number of targets for
    the morph below 20.</li>

    <li>Morph targets exported from Max must have unique names. If this is not the case, it will
    assert at run-time in the animation system.</li>

    <li>Using an Edit Normals modifier on an Editable Mesh that has multiple materials applied will
    export incorrect data. Use Editable Poly instead.</li>

    <li>Assigning a path controller to an object will cause it to loose its rotation controller in
    order to support banking and following rotation.</li>

    <li>If you collapse the stack of an object that uses textures with Gamebryo texture export
    custom attributes, there is a chance that those custom attributes will get attached to the
    collapsed mesh. To prevent this, uncheck the 'preserve custom attributes' option from the
    stack's right-click menu before collapsing.</li>

    <li>Per texture size reduction fails for HDR images when exported for the Xenon console. Either
    scale down HDR images with global exporter settings, or modify the source images.</li>

    <li>When exporting a PBomb space warp, it is possible that Gamebryo's interpretation will
    appear to be weaker than Max's. This is due to the fact that in Gamebryo the Particle Bomb
    modifier does not affect particle systems for partial frames and that PBombs usually have a
    very short duration (the default is 1/30th of a second). To compensate for this, increase the
    duration of the PBomb.</li>

    <li>Drag fields do not behave exactly as they do in Max. Where in Max, setting the drag range
    and falloff for a given axis sets how far from the plane perpendicular to that axis the
    particles are affected, Gamebryo uses the range and falloff relative to the origin on the drag
    field to determine how much the field affects the particle's movement along that axis.</li>

    <li>Custom Mipmap chains for Non-Power-of-Two textures are not supported.</li>

    <li>Pixel and Vertex shaders that are defined by FX files will display that they have a min/max
    Pixel and Vertex shader version of 0.0. Consult a programmer to determine the hardware
    requirements of the shader.</li>

    <li>The accumulation root for a character should not be used as a bone for skinning any
    vertices. This is because some of the transformations on that bone will be propagated to a
    NonAccum node, and the skinning will no longer look correct.</li>

    <li>NiEulerRotKeys have limitations in how they are used for rotation accumulation. If any axis
    is specified for rotation accumulation, then all axes will be accumulated.</li>

    <li>Stripification of wireframe materials creates unwanted lines due to the presence of
    degenerate triangles.</li>

    <li>Max's support for loading DDS files is limited in that high dynamic range DDS files are
    considered low dynamic range, and after loading a great deal of DDS files in one session Max's
    Direct3D device can encounter errors and fail.</li>

    <li>If a controller has keys that are looped in the source art package and the sequence time
    range does not include those keys, a single clamped value will be computed from the keys and
    used for that sequence, eliminating the looping behavior. A workaround for this is to manually
    loop the animation keyframes within the sequence time range. This problem also affects IFL
    files that are used with sequences. In the case of an IFL file, a workaround is to manually
    loop the listed frames in the IFL file itself so that the animation loops throughout the entire
    time range. Adding duplicate IFL frames will not duplicate the memory required for those
    frames.</li>

    <li>When exporting using internal/NIF textures, the exporter uses an image's unqualified file
    name as a unique identifier when keeping track of textures. Multiple uses of textures with the
    same unqualified file name may produce undesired results. There are two problems with this.
    First, texture images with the same file name stored in different directories are not treated
    as different textures by the exporter. For example, the exporter does not recognize that
    <span class="NDLSystemFont">C:\Directory\texture.bmp</span> is different from <span class=
    "NDLSystemFont">C:\ADifferentDirectory\texture.bmp.</span> Second, the exporter may modify the
    exported texture image based on how it was used on the first exported object, and these
    modifications may not be suitable for subsequent uses of textures with the same unqualified
    filename. For example, when the exporter encounters an RGBA image used as a base texture in
    replace mode it will strip off the alpha channel. When another object uses a texture with the
    same unqualified filename as a dark map, the alpha channel has already been stripped off and is
    unavailable to be used as a dark map. <em>The solution is to ensure that all texture images
    have unique unqualified filenames</em>. Note that this may cause some image data to be exported
    multiple times, increasing memory usage.</li>

    <li>Objects that are instanced will all share the same material in Gamebryo. Instanced objects
    that need to use different materials should be made unique.</li>

    <li>In some cases if a particle system has not emitted at the current point in time, the
    maximum particle count estimation will be incorrect. Move the time slider to a position where
    the emitter is active to re-estimate.</li>

    <li>When using the path constraint as a motion controller jagged animation can occur if many
    control points are close together on a very small scale. If control points are within tenths of
    a unit of each other, it is likely that the tangents retrieved from max will be too large
    relative to the path. This can be avoided by using fewer control points or using a larger
    scale.</li>

    <li>Cropping with tiling will not export correctly. This is due to the fact that cropping is
    not supported in hardware and is instead emulated by changing the range of the UV coordinates
    themselves.</li>

    <li>Synchronizing sequences requires at least two matching morph keys in each sequence. Morph
    transitions and Sequence Groups with synchronized sequences will need to be corrected for this
    limitation.</li>

    <li>Max will in rare cases flip the 'Light Affects Shadow Color' checkbox to on when a max file
    is loaded. (under the 'Shadow Parameters' rollout of the light dialog.) This will turn a
    projected texture or projected shadow map into an environment map. This has been experienced in
    very rare occasions but has been known to happen. If you are suddenly experiencing odd behavior
    from an exported max projected texture, this might be one area you want to check first.</li>

    <li>To properly export biped characters, the time slider must match the full range of animation
    from start to end for all animation sequences or at least two note keys must be present in the
    scene graph spanning the animation start to the animation end.</li>

    <li>Particle system fragments are unsupported.</li>

    <li>Objects linked as children to included objects in a light list become included as well.
    This situation occurs in projected and environment effects, even though they are not actually
    included in the light include list.</li>

    <li>Do not use the mesh LOD utility with skinned characters, instead use Bone LOD.</li>

    <li>In some cases the LOD utility can get out of sync with the actual content. Please close and
    restart the maxscript when this happens.</li>

    <li>Please see the <a href="Particles.htm#Particle_System_Charts">Particle System &amp; Space
    Warp</a> section for a complete detailing of supported/unsupported features.</li>

    <li>You may need to reset the scale on your particle systems to 100% to make them appear
    correctly.</li>

    <li>Certain names for pixel &amp; vertex shader attributes get changed. For example, Blue
    becomes blue. The value in the NSB is unchanged. At runtime, the extra data key lookup tries to
    link Blue and blue and fails.</li>

    <li>Optimization must be run in order to produce a skinned character. If not, the volatile flag
    must be set on the object manually for software skinning to work correctly.</li>

    <li>Textures will be dropped if their corresponding UV sets are not found. This is especially
    relevant for shaders that do not need UV sets. Just set them to the first UV set in your list
    and it will export fine.</li>

    <li>Assigning a Reflect/Refract map type to a shader map slot an leaving the source as
    'Automatic' instead of 'From File' can cause Max to crash.</li>

    <li>Non-animated scale of spherical particle colliders is not supported. Set the radius of the
    collider to the appropriate value instead of relying on the scale. Animated scale for these
    colliders works fine.</li>

    <li>The Gamebryo Max Plug-in may have problems reading in 24-bit DDS files that result in an
    unusable output. The quickest solution to this problem is to add a Texture Conversion Custom
    Attribute to the offending Bitmap texture and set it to 24-bit.</li>

    <li>Bone LOD paint mode does not work for bones that only have a wireframe representation.</li>

    <li>The Blizzard particle system uses the Out of Range Type for the size controller instead of
    the speed ORT when exporting animated speed.</li>

    <li>Exporting a scene that contains a SpeedTree object that was imported from a .stl file can
    cause an export exception.</li>

    <li>When using the Gamebryo portal system, attempting to select everything in a scene and then
    adding it to a room will result in a MaxScript exception. At this point, the room is deleted
    and the Portal Utility dialog no longer functions (it has to be closed and re-opened).</li>

    <li>Please see the <a href="Supported_Max_Features.htm">supported features section</a> for more
    information.</li>

    <li>The Xbox 360 does not support 24-bit images. To avoid runtime image conversion and possible
    memory fragmentation, 24-bit images will be converted to 32 bits during Xbox 360-specific
    export.</li>

    <li>The Playstation3 does not support 24-bit images. To avoid runtime image conversion and
    possible memory fragmentation, 24-bit images will be converted to 32 bits during
    Playstation3-specific export.</li>
</ul>

<a name="PhysX" id="PhysX"></a><h3>PhysX</h3>

<ul>
    <li><b>Possible Crash Issues with PhysX plug-in in Max2010</b> -
     The 1.0.6 PhysX plug-in provided by nVidia and necessary for cloth authoring
     may not be compatible with Max2010. In testing, we saw crashes in Max2010 that
     appear to have been due to this incompatibility.
    </li>

    <li><b>PhysX SDK Params not Supported</b>&mdash;Changing the values in the PhysX SDK
    Params interface will not have any impact on the exported scene. This includes gravity,
    solver iterations, etc.</li>

    <li>
        <b>Non-Uniform Scale not Supported</b>&mdash;Applying non-uniform scale to objects that
        will be exported as spheres, boxes or capsules results in mesh export.

        <p class="indent1"><em>Workaround:</em> The Gamebryo plug-in automatically converts
        non-uniformly scaled spheres, boxes an meshes to convex meshes when exported as collision
        shapes. Note that for spheres and possibly capsules you may need to reduce the Segments
        used to create the mesh to get under the 256-face limit for convex collision shapes. Use
        proxies if you do not want this approximate collision geometry rendered.</p>
    </li>

    <li>
        <b>Static Rigid Body groups not supported with fluids</b>&mdash;There is no way to
        use a group of objects as a single static rigid body when exporting with the
        &quot;Convert PSys to Fluid&quot; option active.

        <p class="indent1"><em>Workaround:</em> Merge the meshes from the group
        into a single new mesh (use custom collision shapes if necessary).
        </p>
    </li>

    <li>
        <b>Cloth objects cannot be instances</b>&mdash;A cloth object must not be an instance
        (in Max) of another cloth object. If it is, all instances will move identically,
        despite incurring the overhead of simulation.

        <p class="indent1"><em>Workaround:</em> Copy cloth objects instead of instancing.</p>
    </li>

    <li>
        <b>Single material on Cloth objects</b>&mdash;Cloth objects must have only a single
        material attached for the entire mesh.

        <p class="indent1"><em>Workaround:</em> If you need different textures on different parts
        of a cloth object, combine the textures into one map and use UVs to select appropriate
        pieces of the whole texture for each portion of the mesh.</p>
    </li>

    <li>
        <b>Parameters in Cloth Interface are not always correct</b>&mdash;Many cloth parameters
        have a limited range of valid values. Unfortunately the PhysX Max plug-in does not respect
        these limits, while in other cases it does not allow valid values to be set. Consult the
        PhysX SDK documentation on the <span class="NDLSystemFont">NxClothDesc</span> class and
        <span class="NDLSystemFont">NxClothMeshDesc</span> class for the range of valid values.

        <p class="indent1"><em>Workaround:</em> If the interface prevents you from setting a
        particular valid value, you can modify the User Props on the object directly. If a value is
        inaccurate, you will get a message either at export or when you try to open the NIF file in
        the PhysX Nif Viewer.</p>
    </li>

    <li>
        <b>Cloth Objects must use NDL format NBTs</b>&mdash;The run-time cloth system in Gamebryo
        only support NDL format NBT coordinate frames.

        <p class="indent1"><em>Workaround:</em> You must explicitly specify the NBT Generation
        method in the Gamebryo Shader roll-out of the Material Editor if the cloth has a shader on
        it that requires NBT frames (such as a normal or parallax map). If you forget to do this,
        the cloth will generate an error message when it is loaded into a Gamebryo application.</p>
    </li>

    <li>
        <b>Cloth Attachments seem to fail</b>&mdash;You may find that cloth seems to not respect
        attachments, particularly if the cloth is tearable.

        <p class="indent1"><em>Workaround:</em> The problem is that the attachment is immediately
        tearing when the cloth initially settles. You can prevent this by reducing the mesh
        resolution of the cloth (effectively creating longer edges), by increasing the tear factor,
        or by reducing the density of the cloth (which reduces the force of gravity on it). Also
        check that the cloth is actually intersecting the shape you wish to attach it to, and note
        that you cannot attach to a concave mesh shape.</p>
    </li>

    <li>
        <b>Scale on Accumulation Root not Supported</b>&mdash;Scaling transformations of any kind
        on the "Accumulation Root" of a character will cause physics control of the character to
        fail.

        <p class="indent1"><em>Workaround:</em> Create an intermediate node as a child of the
        Accumulation Root and scale it instead of the root.</p>
    </li>

    <li>
        <b>Reactor Joints not Exported</b>&mdash;Gamebryo does not export joint information found
        in rigid bodies connected via Reactor joints.

        <p class="indent1"><em>Workaround:</em> Use PhysX joints. They are more flexible and map
        exactly onto PhysX parameters.</p>
    </li>

    <li>
        <b>Fluid Emitters Cannot be Attached to Triangle Mesh Shapes</b>&mdash;A fluid emitter
        cannot be attached to an actor that has a triangle mesh shape.

        <p class="indent1"><em>Workaround:</em> Add an extra shape for the actor that is inside
        the primary collision shape, and attach the emitter to that.</p>
    </li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

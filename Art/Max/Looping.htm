<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Looping</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Looping</h1>

<div class="FigureContainer">
    <img src="images/OutOfRangeTypes.jpg" width="368" height=
    "218" alt="OutOfRangeTypes (38K)"> 
    <!-- <p class="FigureCaption">{Figure caption}</p> -->
</div>

<p>There are three possibilities for how an animation will behave
in Gamebryo: looped, clamped (not looped), or reverse
(ping-pong). You can control this behavior in 3ds max via the
Parameter Curve Out-of-Range Types for the animation in the Track
View. This is important when you are using multiple .NIF files to
work together and they are time independent. If you want
something to loop forever, make sure the controllers have their
respective Parameter Curve Out-Of-Range types set correctly to
loop.</p>

<p>The Gamebryo 3ds max Plug-in viewer is intended to behave like
the Max Play button. It is restricted to the application play
time. Time in the Gamebryo 3ds max Plug-in viewer cycles over the
Max animation time range, whereas in <span class=
"NDLSystemFont">SceneViewer</span> or in an application time,
ranges from 0 to infinity. Because of these differences, you may
not notice an animation's cycle type until you view it in the
<span class="NDLSystemFont">SceneViewer</span> or your
application. In other words, animations in the Gamebryo 3ds max
Plug-in viewer will always loop, because time itself is
looping.</p>

<p>Translation, Rotation, and Scale controllers in Gamebryo are
stored in a single controller, so there is only one time range
for all three types of transformation. This one time range is the
one that is used for looping, so some animations may not loop as
they do in Max.</p>

<p>Particle systems behave slightly differently. There is no
Out-of-Range type for particle systems. They will always reset
and loop in the Gamebryo 3ds max Plug-in viewer. However, when
they are exported and viewed in your application or <span class=
"NDLSystemFont">SceneViewer</span>, they will still loop, but
they will not reset when they loop so you do not need to worry
about making your particles loop seamlessly. If some other
behavior is desired, the cycle type for particle systems must be
set programmatically.</p>

<p>Character Studio Bipeds and IK are an exception. They will not
loop properly even if you set the Out-of-Range types to loop. You
can force your Biped or IK animations to loop if you export your
animations with the Animation Manager utility by using the
"-loop" sequence option. See the <a href=
"Introduction_!Animation_Manager.htm">Animation Manager Tool
documentation</a> for details.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

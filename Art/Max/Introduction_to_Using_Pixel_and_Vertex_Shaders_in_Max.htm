<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>
		<title>Introduction to Using Pixel and Vertex Shaders with 3ds Max</title> 
		
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Introduction to Using Pixel and Vertex Shaders with 3ds
Max</h1>

<p>The <a href="../Other/shaders_intro.htm">Gamebryo shaders</a>
section covers pixel and vertex shaders that ship in the sdk
folder for Gamebryo. Most of the shaders are presented as samples
to help programmers write their own shaders and are not overly
complicated. Screenshots are included for most of the shaders. A
discussion of the requirements for that shader follows each
description, as many shaders require certain graphics hardware to
run.</p>

<h2>Pixel and Vertex Shaders in the Default Pipeline</h2>

<p>The Gamebryo default material pipeline takes advantage of
shader technology by building a material description that can be
translated to pixel and vertex shader programs on load.
Constructing shader programs from material components is called a
fragment-based rendering system. The shader programs are
constructed by combining program fragments and is dependent on
the graphics hardware that they are built on.</p>

<p>In order to take advantage of this material system, the
graphics hardware used to render the assets must support at least
Pixel and Vertex Shader version 2.0. A general guideline for
determining what hardware supports this shader model version is
that it is supported in Radeon 9500 and above and GeForce FX and
above graphics cards.</p>

<p>When materials are loaded on graphics hardware that does not
support at least Shader Model 2.0, the legacy Gamebryo rendering
pipeline will be used, which disables some effects such as
per-pixel lighting and parallax maps.</p>

<h2>Lighting with Shaders</h2>

<p>Gamebryo is fully dedicated to shader integration. However,
you may need help from a programmer to customize the given Shader
examples to work best in your scene. Gamebryo will automatically
associate scene lights with shaders, but how many and what types
of lights that shaders can take as inputs are variable and
defined in the shader. If you need more or less lights to affect
an object with a shader, talk with a programmer about modifying
the shader definition.</p>

<p>Although adding lights to material that use the default
pipeline will work, each light add to the rendering overhead of
objects using that material. If there are too many lights
affecting a material, the generated shader may require multiple
passes to render, which can have a significant negative impact on
rendering performance. The rendering overhead of each light is
increased by use of normal mapping and specular highlights.</p>

<h2>Additional Information</h2>

<p>Additional information about using shaders can be found in
<a href="Custom_Shader_Sub_Panel.htm">Custom Shader Sub-Panel</a>
and <a href=
"Custom_Attributes_For_your_Custom_Shaders.htm">Custom Attributes
For your Custom Shaders</a></p>

<p>More about creating and programming shaders can be found in
<a href=
"../../Programmer/NiShader/Introduction_to_Gamebryo_s_Shader_System.htm">
NiShader Introduction</a></p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

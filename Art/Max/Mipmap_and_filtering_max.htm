<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Mipmap and filtering.max</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Mipmap and filtering.max</h1>

<p>You can employ different kinds of filtering after you choose your Base map. You choose a
filtering type based on how you want your texture to look in your application. There are three
types of filtering in Max: pyramidal, summed area, and none. In programmer's language, these
filtering types translate to trilerp (also known as trilinear interpolation or mipmap), bilerp
(bilinear interpolation), or none. You can use additional filter modes such as anisotropic
filtering with Gamebryo, but they require you to add a texture export attribute to the texture
(this is used in the AnisotropicFiltering.max sample).</p>

<div class="FigureContainer">
    <img src="images/mipmapfilter.jpg" width="646" height="505" alt=
    "Mipmap and filtering.max sample (56K)">

    <p class="FigureCaption">Mipmap and filtering.max sample</p>
</div>

<p>In the sample file, each of the three panels illustrates one of the filtering techniques
mentioned above. The material to the far left is using a pyramidal (trilerp or mipmap) filter. When
this panel is viewed from an angle, it appears smoother than the others. This type of filtering is
most noticeable when viewing objects from an angle.</p>

<p>The material in the middle is using summed area (bilerp) filtering. Notice how it shimmers at a
distance or at an angle, though it looks the same as the mipmapped material when it is viewed up
close. Now look at the last material on the right. It is uses no filtering. As you can see, it is
very grainy and shimmers badly from a distance. Up close, it looks pixelated.</p>

<p>All three filtering types have their advantages and can be used for interesting effects. For
example, you could use no filter for an object that is glittery in the distance. The main thing to
keep in mind about texture filtering is the storage they require. Pyramidal filtering increases the
size of the file in VRAM by 4/3rds. A few textures may look fine with no filtering. If memory
starts to become an issue with your application, it may be time to take a look at how some of your
textures can be sacrificed by changing the filtering mode. However, large textures viewed in the
distance without mipmaps can also cause performance problems because they will exhibit very poor
cache performance.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="Texture_Conversion_Custom_Attributes.htm">Texture Conversion Custom
    Attributes</a></li>

    <li><a href="Where_to_Find_the_Max_Artist_Examples.htm">Where to Find the Max Artist
    Examples</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

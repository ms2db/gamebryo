<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Programmer's Introduction to the 3ds Max Plug-in</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Programmer's Introduction to the 3ds Max Plug-in</h1>

<p>While the Gamebryo 3ds Max plug-in is primarily intended for artists, there are a few items that
are of relevance to programmers.</p>

<h2>Creating Shaders compatible with DirectX Shader Material</h2>

<p>In order for an FX Shader file to work with both the DirectX Shader Material in 3ds Max and be
properly exported by the Gamebryo Max Plug-in, the FX Shader file must conform to specifications
described in <a href="DirectX_Shader_in_Max.htm">DirectX Shader in Max</a>.</p>

<h2>Custom Attributes</h2>

<p>Gamebryo allows several powerful ways to customize your exports and add meta-data to your art
assets. See the documentation <a href="Adding_Custom_Content_to_3ds_Max.htm">Adding Custom
Attributes to 3ds Max</a> and <a href=
"Appendix_A_WeaponData_MaxScript_Utility_Plug_in.htm">Appendix A: WeaponData MaxScript Utility
Plug-in</a> for more details.</p>

<h2>How Are Shaders Parsed?</h2>

<p>All shaders are parsed from the following directory: <em>%EMERGENT_PATH%</em>\Media\Shaders\Data
where EMERGENT_PATH is the environment variable that points to the root of your Gamebryo
installation.</p>

<h2>How Are ToolPlugins Loaded?</h2>

<p>All tool plug-ins are loaded from the All tool plug-ins are loaded from the following Directory:
<em>%EMERGENT_PATH%</em>\SDK\Win32\Dll\ToolPlugins\&lt;VC Version&gt; where EMERGENT_PATH is the
environment variable that points to the root of your Gamebryo installation and &lt;VC Version&gt;
is either VC80 or VC90 depending on what version of Visual Studio was used to compile the Gamebryo
Max Plug-in. Note that each version of the Gamebryo Max Plug-in only works with the Visual Studio
version that was used to create the corresponding 3ds Max. See <a href=
"Introduction_!Programmer_s_Guide.htm#VisualStudio">below</a> for more information.</p>

<h2>How Are Dependent DLLs Loaded</h2>

<p>All DLLs must be in the user's PATH environment variable. This is accomplished for the Gamebryo
dependencies by adding <em>%EMERGENT_PATH%</em>\SDK\Win32\DLL to the PATH upon installation.</p>

<h2>How to Build The Gamebryo Max Plug-in</h2>

<p>In order to build the Gamebryo Max plug-in, you must have the Max SDK installed. The Max SDK
comes with 3d Studio Max, but is not installed by default. If you do not have the Max SDK
installed, re-run the Max installer program with the Max SDK option turned on.</p>

<p>In addition to having the Max SDK installed, you must set an environment variable pointing to
your Max installation folder so that the project can find the Max SDK include files. The
environment variables are named based off of what version of Max you are compiling for according to
the following convention:</p>

<p>MAXINSTALLPATHxxxx<br>
MAXSDKPATHxxxx</p>

<p>In the convention above, the 'xxxx' needs to be replaced by the four digit year representing the
version number of Max. For example, the environment variables for Max 2010 would be
MAXINSTALLPATH2010, and MAXSDKPATH2010.</p>

<p>The values of these environment variables should point to the root of your Max installation
directory, and the directory you installed the Max SDK to. An example set would be as follows:</p>

<p>MAXINSTALLPATH2010 = "C:\Program Files\Autodesk\3dsMax2010\"<br>
MAXSDKPATH2010 = "C:\Program Files\Autodesk\3ds Max 2010 SDK\"</p>

<p>The following projects must be built in sequence prior to building the Gamebryo Max plug-in
:</p>

<ul>
    <li><em>%EMERGENT_PATH%</em>\Build\Foundation\Win32\VC80\Foundation.sln</li>

    <li><em>%EMERGENT_PATH%</em>\Build\CoreRuntime\Win32\VC80\Core00_ThirdPartyCode.sln</li>

    <li><em>%EMERGENT_PATH%</em>\Build\CoreRuntime\Win32\VC80\Core01_EngineLibs.sln</li>

    <li><em>%EMERGENT_PATH%</em>\Build\CoreRuntime\Win32\VC80\Core03_ToolLibs.sln</li>

    <li><em>%EMERGENT_PATH%</em>\Build\CoreRuntime\Win32\VC80\Core05_ShaderLibs.sln</li>

    <li><em>%EMERGENT_PATH%</em>\Build\Tools\Win32\VC80\Tools06_ToolPlugins.sln</li>

    <li><em>%EMERGENT_PATH%</em>\Build\Tools\Win32\VC80\Tools08_MaxPlugin.sln</li>
</ul>

<a name="VisualStudio" id="VisualStudio"></a><h2>Visual Studio version</h2>

<p>Autodesk requires that all 3ds Max Plug-ins are compiled with the same Visual Studio version
that was used to create 3ds Max. The necessary Visual Studio version can change between releases of
3ds Max. These are the required Visual Studio versions for each supported 3ds Max release:</p>

<ul>
    <li>3ds Max 2008 - Visual Studio 2005</li>

    <li>3ds Max 2009 - Visual Studio 2005</li>

    <li>3ds Max 2010 - Visual Studio 2008 SP1</li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

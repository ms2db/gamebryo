<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Projected Multi-Texturing effects</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Projected Multi-Texturing effects</h1>

<p>The projected texture effects supported by Gamebryo 3ds max
Plug-in include projected light maps, projected shadow maps, and environment
maps. Each of these effects is specified by a light in Max since, just as with
normal lights, projected texture effects are applied to the whole scene unless an
&quot;Include&quot; list is used to limit which parts of the scene are
affected. Each Max light can only be converted into one Gamebryo light or
projected texture effect. In other words, a 3ds
max light is converted to a Gamebryo light, a projected light map, a projected
dark map, or an environment map, but never to more than one. To create both a normal light and a projected
texture effect, two Max lights will be needed (one for each).</p>

<p>Unlike static textures, projected multi-textures do not take
their texture coordinates directly from the objects to which they are applied.
Projected multi-textures work by computing their texture coordinates on-the-fly
by transforming and/or projecting either the object's vertex positions or
surface normal vectors. As a result, projected multi-textures can be more
expensive than static multi-textures, but the effects tend to be more dramatic.
</p>

<p>Like static multi-textures, there are several basic types of
projected multi-texture, and each projected multi-texture has settings that control
its coordinate clamping and texture filtering. Also, there are settings that
determine how the texture coordinates are generated. The Gamebryo interfaces
place no limits on the number of projected multi-textures that may be applied to
an object, although performance issues or renderer limitations may do so.</p>



<!--kadov_tag{{<placeholder id="footer">}}-->
</body>
</html>

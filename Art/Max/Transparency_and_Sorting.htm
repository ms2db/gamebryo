<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Transparency and Sorting</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type=
"text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Transparency and Sorting</h1>

<p>Transparency is a feature required in many situations, and Gamebryo provides
two ways to accomplish this effect: Alpha Blending and Alpha Testing. The
process of ordering all the objects in a scene graph so that they are drawn on
the screen back to front is called sorting. Sorting is required for alpha
blending and is expensive.</p>

<p>Alpha testing is often used with alpha blending, but it doesn't have to be.
The following summarizes which types of transparency are appropriate for
various situations:</p>

<ul>
    <li>If the object has regions that are either completely opaque or
    completely transparent, but nothing in between, you may use Alpha
    Testing.</li>

    <li>If the object has regions that are semi-transparent, you must use Alpha
    Blending.</li>
</ul>

<p>If the object has some regions that are semi-transparent or opaque, and some
regions that are completely transparent, you may use Alpha Testing along with
Alpha Blending.</p>

<p>When using alpha blending, you should be aware of the behavior of sorting.
Sorting is a process that rearranges the scene graph such that more distant
objects are drawn before closer objects. Gamebryo only does inter-object
sorting, not intra-object sorting. When two non-opaque objects are drawn,
Gamebryo's sorting guarantees that the more distant object will be drawn first.
It sorts objects back-to-front by comparing the camera's distance from the
center of each object.</p>

<p>When a single object is being drawn, the individual triangles that form it
are not sorted, posing a possible problem when rendering semi-transparent
objects. Drawing-order problems can occur when transparent objects overlap. In
some cases, these issues can be solved with alpha testing.</p>

<p>In the Gamebryo 3ds max Plug-in, the Zbuffer is on by default. In most
cases, you'll want to turn off writing to the Z-buffer for rendering
alpha-blended objects by adjusting its zMode in the objects User Defined
Properties dialog.</p>

<p>Sometimes the Zbuffer technique can produce incorrect results for two or
more objects that are close to each other, but far away from the camera. In
this case, you may see a more distant object showing through a closer object. A
32-bit Zbuffer can usually solve this problem. However, this option is not
available on all graphics cards.</p>

<div class="FigureContainer">
    <img src="images/image010.jpg" width="556" height="456" alt=
    "Trees Ablend vs ATest 01.max sample (52K)">

    <p class="FigureCaption">Trees Ablend vs ATest 01.max sample</p>
</div>

<p>This example shows different types of transparency in Gamebryo and sorting
issues associated with each type.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

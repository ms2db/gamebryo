<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Modeling for Sequence Accumulations</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type=
"text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Modeling for Sequence Accumulations</h1>

<p>When evaluating KF files, the Gamebryo Animation Tool assumes that the root
character node ("Bip01" for Character Studio animations) is at world position
(0, 0, 0). This may cause problems with your animations jumping when going from
an idle sequence to a moving sequence, or from a walking or running sequence to
a stair-climbing sequence. This is because the accumulation of the sequence
from one set of animations to another changes from not accumulating to
accumulating. The tool has to then add the first set of accumulations to the
second set just as it transitions, making the character jump. This problem can
be solved in one of two ways. Either you can plan how the animations will flow
together and model the character with Bip01 at (0, 0, 0), or you can model the
way you usually do and then translate the character and any of its footstep
bindings so that Bip01 is at (0, 0, 0) after the fact.</p>

<p>If you model the character to face you in the Front viewport, then your
transform coordinates are (0, 0, -90). Turn the character to face you in the
Right view, so that Z is 0 also and the animations follow along the X axis. An
alternative is to use the front sequence option. For example, if the character
is facing down the negative Y axis, you would specify front negy.</p>

<p>When the Controller Extractor creates KF files for the animations in a
scene, the accumulation root is split into two nodes; one to store the
accumulated animations and one to store the non-accumulated animations. Because
of this, your accumulation root should not be animated using a non-standard
controller type such as a path controller or look-at controller.</p>

<p>Additionally, the accumulation root should not be a bone influencing a
skinned mesh. Because the accumulation root's animations will not remain
completely intact, having it influence a skinned mesh could cause skinning
artifacts.</p>

<p>One limitation to be aware of is that <span class=
"NDLSystemFont">NiEulerRotKeys</span> can only accumulate rotation on all of
their axes. If any axis is specified to accumulate rotation, then all axes will
accumulate. Other kinds of keys do not have this limitation.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>PhysX Fluids with Maya</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Build" content="PhysX" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
   
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Body)==========================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>PhysX Fluids with Maya</h1>


<p>Gamebryo supports the conversion of Gamebryo particle 
 systems into PhysX fluid systems to be simulated on PhysX hardware. Any 
 Gamebryo particle system that uses a Volume-type emitter (Box, Sphere, 
 etc.) can be converted into a fluid system. The rendering-related properties, 
 such as particle properties, grow-fade, shading etc. are all used to render 
 the fluid particles. Any modifiers related to the motion of the particles 
 (gravity, wind fields, etc.) are all ignored. See the Rain.mb example for a system
 that can be converted to fluids, and is set up to 
 export as such. </p>

<h2>Fluid Emitters</h2>

<p>Fluid emitters are automatically created out of the 
 particle system's volume emitter. The emission rate, particle lifetime 
 and emission direction and speed are all respected, but other emission 
 properties are not. </p>

<p>All fluid emitters are planar polygonal shapes that 
 lie in the local X-Y plane of the particle system emitter and emit in 
 the positive Z direction. So for correct preview in Maya, set the emission 
 direction to x=0, y=0, z=1. The fluid emitter shape, rectangular or elliptical, 
 is based on the particle emitter shape. </p>

<p>To attach an emitter to a PhysX actor, link it as a 
 direct child of the actor in Maya. The export process will automatically 
 associate the emitter with the actor.</p>

<h2>Exporting Fluids</h2>

<p>The conversion to PhysX fluids is done by the PhysX 
 Extractor tool plug-in when the &quot;Convert to PhysX Fluids&quot; 
 option is checked. All of the other content in the scene is also prepared 
 for use with fluids. Specifically: </p>

<ul>
	
	<li>All physics-enabled 
 objects with the &quot;nonconvex&quot; Geometry Type will be exported 
 as PhysX static actors because these are the only supported shapes for 
 static fluid simulation geometry. Any object you wish to be a static actor 
 in a fluid simulation must be marked with the &quot;nonconvex&quot; Geometry 
 Type.</li>
	
	<li>Convex shapes must 
 have fewer then 32 faces when converted to convex geometry for hardware, 
 so you must significantly reduce the number of subdivisions for spheres, 
 capsules, etc. If the fluid is intended to lie on the surface, then you 
 must also use these low tessellations for the rendered shape, or the fluid 
 will appear to move strangely over the surface.</li>
</ul>

<p>If you plan on merging scenes into one simulation at 
 run-time, these limitations on collision shapes must apply in all the 
 scene that will be merged. So do not use the PhysX-specific collision 
 shapes for a fluid scene and pay attention to the &quot;Geometry Type&quot; 
 attribute on the rigid bodies - it should be convex for dynamic bodies 
 and non-convex for passive bodies. </p>

<p class="NDLHeadingRelatedTopic">Related topics</p>
    <ul>
        <li><a href="PhysX_Artist_Samples_with_Maya.htm">Rain</a>
        </li>
			<li><a href="../../Reference/Tool_Plug_ins/PhysX_Extractor.htm">PhysX 
 Extractor</a>
			</li>
    </ul> 

<!--kadov_tag{{<placeholder id="footer">}}-->
</body>

</html>

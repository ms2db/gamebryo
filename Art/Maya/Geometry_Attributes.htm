<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Geometry Attributes</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Geometry Attributes</h1>

<p>Geometry Attributes allow you to specify information 
 about how the geometry will be used and stored. Select an object 
 and click the <span class="NDLGUILabel">Geometry Attributes</span> button in the Attribute editor to add a group of &quot;Extra Attributes&quot; to the object. To export correctly from Maya, the Geometry Attributes are not necessary. 
 </p>

<div class="FigureContainer">
    <img src="./images/MyImmerseGeometryStabilityAttributeIcon.png" width="32" height="32"
	/>
          <p class="FigureCaption">Geometry Attributes button</p>
</div>



<div class="FigureContainer">
    <img src="./images/GeometryAttributes.gif" width="563" height="116" />
          <p class="FigureCaption">Geometry Overrides</p>
</div>


<h4>Static Geometry Keep Attributes</h4>

<p>When geometry is considered static it is possible to 
 optimize how it is stored during your game. Gamebryo will optimize the 
 memory usage of static objects by deleting the copy of the geometry in 
 system memory so that the data only exists in video memory where it is 
 needed for rendering. Under some circumstance you may want to keep some 
 elements of the geometry in system memory and the Static Geometry Keep 
 Attributes allow to specify what information to keep.</p>

<p>For example, when doing collision detection, you may 
 need to keep vertex position and normals, but may still be able to remove 
 the unnecessary vertex colors, etc. These settings apply to this object 
 and all children of this object in the scene graph.</p>

<p>On a technical level the exporter maps the Geometry 
 Keep attributes to the <span 
 class="NDLSystemFont">NiDataStream</span> access flag ACCESS_CPU_READ 
 for a stream that has the elements that are checked. This is in addition 
 to other flags the exporter may add to the data stream of the geometry. 
 </p>

<p>Access flags can also be specified using the Mesh 
 Profile System. Using a mesh profile gives much more control because 
 it allows any access flags to be set, which enables such things as making 
 data exist only in system memory by removing the ACCESS_GPU_READ 
 flag.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>
    <ul>
        <li><a href="../../Reference/NiMesh/NiDataStream.htm">NiDataStream</a>
        </li>
        <li><a href="../../Programmer/NiMesh/Data_Stream_Access.htm#AccessFlags">ACCESS_CPU_READ</a>
        </li>
        <li><a href="../Other/Introduction_to_Mesh_Profiles.htm">Mesh 
 Profile System</a>
        </li>
			<li><a href="../../Programmer/NiMesh/Data_Stream_Access.htm#AccessFlags">ACCESS_GPU_READ</a>
			</li>
    </ul> 

<!--kadov_tag{{<placeholder id="footer">}}-->
</body>

</html>

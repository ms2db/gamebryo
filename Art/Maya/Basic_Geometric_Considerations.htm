<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Basic Geometric Considerations with Maya</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Basic Geometric Considerations with Maya</h1>

<p>When you work with Maya and Gamebryo, you need to be aware of some key differences in the ways that the applications behave.</p>

<h4>Different Representation of Geometry</h4>

<p>Maya represents shapes differently than does Gamebryo. 
 Maya maintains there data in sets for each element: position, normal, 
 uv, color. A vertex in Maya is a mapping into each of these sets. Gamebryo 
 requires each vertex to be represented by each of the elements and not 
 the mapping of the elements. The number of vertices is related to all 
 the unique combinations that could occur. If any of the elements are different, Gamebryo must duplicate the data to create a unique vertex. This requirement leads to vertex bloat. You can minimize the bloat by thinking about the position data. If you maintain the same values for all the elements of 
 a given position, you will minimize the vertex bloat.</p>

<p>Box01 below has the usual UV mapping and a texture map that 
 visualizes the UVs. In Maya the position at the tip of the pink corner 
 has the three UVs (1,0), (0,0) and (0,1). </p>

<p>Gamebryo will generate three vertices to replace the 
 one Maya vertex&mdash;one for each UV. While Maya represents Box01 as 12 triangles 
 and 8 vertices, the Gamebryo Maya Plug-in will convert this model into 
 12 triangles and 24 vertices.</p>
 
<div class="FigureContainer">
    <img src="./images/image006.gif" width="239" height="187" />
    <p class="FigureCaption">Box01</p>
</div> 

<h4>Instanced Geometry</h4>

<p>The Gamebryo Maya Plug-in will preserve the instance 
 relationships found in Maya. If objects are instanced in your scene, then 
 they will share textures and geometry. Instancing can significantly reduce 
 the size and load times of your scene. This technique can be EXTREMELY 
 useful on memory-starved consoles. </p>
 
  <table class="NDLNoteContainer" width="100%">
      <tr align="left">
          <td class="NDLNoteContainerTD"><p class="NDLHeadingNoteContainer">Note</p>
              <div class="NDLNote">If you adjust 
 the pivot or non-uniform scale of an instance it will be an instance in 
 Gamebryo but the non-uniform scale will be ignored. Uniform scale is supported 
 however. Non-uniform scale cannot work with instances in Gamebryo because 
 non-uniform scale becomes baked into the geometry.
              </div>
          </td>
      </tr>
  </table>


<h4>Non-Uniform &amp; Uniform Scale</h4>

<p>Gamebryo does not support animating non-uniform scales 
 (scales with different values in the x, y, and z axes). Animating 
 non-uniform scale is not supported and will be treated like a uniform 
 scale when animating. All static non-uniform scales are baked into the 
 geometry data itself. If you wish to animate a non-uniform scale, please 
 use blending in Maya to create this effect.</p>

<h4>Complex Transforms</h4>

<p>There is a fundamental difference between transforms 
 in Maya and transforms in Gamebryo. Within Maya, a transform can contain 
 translate, rotate, scale, shear, rotate axis, rotation pivot, and scale 
 pivot. Within Gamebryo, a transform contains translate, rotate, and scale. 
 The Gamebryo Maya Plug-in creates an equivalent functionality in Gamebryo 
 by creating multiple transforms. This bloating of the scene graph only 
 happens when the transform is animated.</p>
 
<ul>
	<li>Rotation Pivots and Scale Pivots&mdash;Rotation and scale pivots can cause bloating of the 
 scene graph. Freezing the transform of an object is the easiest way to 
 accidentally introduce unneeded rotation and scale pivots.</li>
	<li>Joint Orientation and Rotate Axis&mdash;Joint orientation and axis rotation also causes bloating 
 of the scene graph. The default settings for the joint tool will automatically 
 create joint orientations, so you should be conscious to turn this off. 
 This is not an issue when quaternion sampling is used.</li>	
</ul> 

<h4>Skinning</h4>

<p>Skinning is supported during export using the Gamebryo 
 Maya Plug-in. Minimize the number of bones used when skinning for real-time 
 rendering; the number of bones directly influences the time required to 
 animate and render the object. </p>

<!--kadov_tag{{<placeholder id="footer">}}-->
</body>

</html>

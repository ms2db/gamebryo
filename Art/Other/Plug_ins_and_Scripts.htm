<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Plug-ins and Scripts</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Plug-ins and Scripts</h1>

<p>Gamebryo Tool Plug-ins, when 
 linked together, form a version of the asset processing pipeline. This 
 version of the pipeline is called a script. A script stores what tool 
 plug-ins to execute, what order to execute them, and what parameters to 
 use for each plug-in if they have any.</p>

<p>Since you have different 
 objects in your game that have different requirements, it is usually a 
 good idea to come up with a set of scripts for each object type. For instance, 
 if you have a level laid out in Max or Maya and you want to use the portal 
 system with it, that level needs to have the Portal Converter plug-in 
 run on it. A character doesn't need to have portal conversion run. It, 
 however, would possibly want to have all of its keyframes extracted for 
 use in the Gamebryo Animation Tool by the Controller Extractor plug-in. 
 Two different pipelines require two different scripts.</p>

<p>Additionally, plug-ins are divided into four logical categories that describe, in general, what they do.</p>

<ul>
<li><b>Import</b>&mdash;These plug-ins load a file and add them to the scene.</li>
<li><b>Export</b>&mdash;These plug-ins write a scene or some component of that scene to disk.</li>
<li><b>Process</b>&mdash;These plug-ins operate on the scene graph in some way. Examples of this kind of operation include stripifying geometry, creating collision volumes, and merging geometry with matching properties.</li>
<li><b>Viewer</b>&mdash;These plug-ins display the scene graph or some portion of the scene graph visually.</li>
</ul>


<!--kadov_tag{{<placeholder id="footer">}}-->
</body>

</html>

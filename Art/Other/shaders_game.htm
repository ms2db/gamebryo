<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Game Shaders</title>

<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Game Shaders</h1>

<p>These shaders can be used in a production environment with little or no customization.</p>

<table>
    <thead>
        <tr>
            <th>Shader Name</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><a href="AdditiveLightMapsMaterial.htm">AdditiveLightMapsMaterial</a></td>

            <td>A material that enables projected light maps (up to 3) to be added in after the base map has been applied, with the result that projected lights lighten the base map.</td>
        </tr>

        <tr>
            <td><a href=
            "AlphaTextureBlender.htm">AlphaTextureBlender.NSF</a></td>

            <td>A shader that blends between two textures using
            the alpha channel of a third texture.</td>
        </tr>

        <tr>
            <td><a href=
            "BaseBumpWithSpatialGlow.htm">BaseBumpWithSpatialGlow.NSF</a></td>

            <td>A shader that renders an object with three
            textures and two lights.</td>
        </tr>

        <tr>
            <td><a href="Chrome.htm">Chrome</a>, <a href="ChromeSkinned.htm">ChromeSkinned</a></td>

            <td>Shaders that produce a chrome effect using a
            base map, diffuse cube map, specular cube map, and
            normal map (that contains gloss in alpha
            channel).</td>
        </tr>

        <tr>
            <td><a href=
            "Dot3BumpMap.htm">Dot3BumpMap.NSF</a></td>

            <td>A shader that implements a simple dot3 bump
            mapping effect.</td>
        </tr>

        <tr>
            <td><a href=
            "GeneralDiffuseSpecular.htm">GeneralDiffuseSpecular</a>, <a href="GeneralDiffuseSpecularGlow.htm">GeneralDiffuseSpecularGlow</a>, <a href="GeneralDiffuseSpecularGlowSkinned.htm">GeneralDiffuseSpecularGlowSkinned</a>, <a href="GeneralDiffuseSpecularNoNormal.htm">GeneralDiffuseSpecularNoNormal</a>, <a href="GeneralDiffuseSpecularSkinned.htm">GeneralDiffuseSpecularSkinned</a></td>

            <td>Shaders that implement some variation of a lighting model that is based on two HDR image cube maps, and two point light sources. These are used in the MetalWars demo.</td>
        </tr>

        <tr>
            <td><a href="Glass.htm">Glass.NSF</a></td>

            <td>A shader that implements ATI's Complex Glass
            effect, found in ATI's RenderMonkey 1.0 sample.</td>
        </tr>

        <tr>
            <td><a href=
            "LuminanceTransfer.htm">LuminanceTransfer.NSF</a></td>

            <td>Demonstrates how to implement a variety of
            techniques at the object level with a simple
            luminance conversion and a texture lookup of a 1D
            ramp texture based off of the luminance value.</td>
        </tr>

        <tr>
            <td><a href="OilyFilm.htm">OilyFilm.NSF</a></td>

            <td>A shader that uses two lights to illuminate the
            object with both diffuse and specular channels.</td>
        </tr>

        <tr>
            <td><a href=
            "OilyFilmWithGlow.htm">OilyFilmWithGlow.NSF</a></td>

            <td>Similar to OilyFilm, except that it uses the glow
            map instead of the warp effect map.</td>
        </tr>

        <tr>
            <td><a href="Outlining.htm">Outlining.NSF</a></td>

            <td>A shader that implements a simple toon outlining
            algorithm.</td>
        </tr>

        <tr>
            <td><a href=
            "ParallaxMapping.htm">ParallaxMapping.NSF</a></td>

            <td>A shader that gives a parallax effect also known
            as virtual displacement mapping.</td>
        </tr>

        <tr>
            <td><a href=
            "PerPixelLighting.htm">PerPixelLighting</a>, <a href="PerPixelLightingNoPS.htm">PerPixelLightingNoPS</a></td>

            <td>Shaders that apply a base map and perform
            per-pixel lighting using a normal map and a single
            point light.</td>
        </tr>

        <tr>
            <td><a href=
            "Skin2DirLightsWarpEffect.htm">Skin2DirLightsWarpEffect.NSF</a></td>

            <td>A shader that implements skinning, lighting,
            normal mapping, and a warp effect.</td>
        </tr>

        <tr>
            <td><a href="SkinBump11.htm">SkinBump11.NSF</a></td>

            <td>A shader that skins a model and lights it with
            two dynamic lights.</td>
        </tr>

        <tr>
            <td><a href=
            "SkinnedToonShading.htm">SkinnedToonShading.NSF</a></td>

            <td>A toon shader that enables you to shade a skinned
            character using a simple luminance transfer.</td>
        </tr>

        <tr>
            <td><a href=
            "SkinnedToonShadingWithOutline.htm">SkinnedToonShadingWithOutline.NSF</a></td>

            <td>A toon shader that enables you to shade a skinned
            character using a simple luminance transfer and
            outlining.</td>
        </tr>

        <tr>
            <td><a href=
            "Skin_DirLight_AmbLight.htm">Skin_DirLight_AmbLight.NSF</a></td>

            <td>A shader that skins a character and lights it
            with a dynamic light and an ambient light.</td>
        </tr>

        <tr>
            <td><a href=
            "SpectralGlow.htm">SpectralGlow.NSF</a></td>

            <td>A shader that simulates a ghostly effect by
            causing an object to be visible only where its
            normals are perpendicular to the view vector.</td>
        </tr>
			
			<tr>
            <td><a href="TextureBlendMaterial.htm">TextureBlendMaterial</a></td>

            <td>A material that blends four textures together using a fifth texture as a control map.</td>
        </tr>

        <tr>
            <td><a href=
            "TextureBlendUsingVertexColors.htm">TextureBlendUsingVertexColors.NSF</a></td>

            <td>A shader that allows three independent textures
            to be blended together using the red, green, and blue
            vertex color channels as alpha modifiers.</td>
        </tr>

        <tr>
            <td><a href=
            "ToonShading.htm">ToonShading.NSF</a></td>

            <td>A modified version of LuminanceTransfer that
            produces cartoon lighting.</td>
        </tr>

        <tr>
            <td><a href=
            "ToonShadingWithOutline.htm">ToonShadingWithOutline.NSF</a></td>

            <td>A shader that combines the ToonShading shader
            with the Outlining shader for a complete toon
            rendering effect.</td>
        </tr>

        <tr>
            <td><a href=
            "VCAlphaTextureBlender.htm">VCAlphaTextureBlender.NSF</a></td>

            <td>A shader that blends between two textures,
            Texture1 and Texture2, using the alpha value from the
            vertex colors.</td>
        </tr>
    </tbody>
</table>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>
</html>

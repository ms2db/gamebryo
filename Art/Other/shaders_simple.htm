<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Simple Shaders</title>

<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Simple Shaders</h1>

<p>Simple shaders are examples that, in most cases, would not be used in a production environment without customization.</p>

<table>
    <thead>
        <tr>
            <th>Simple shader</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><a href="Aniso.htm">Aniso</a></td>

            <td>A programmatic shader that performs a simple
            anisotropic lighting effect.</td>
        </tr>

        <tr>
            <td><a href=
            "ASMSkinning.htm">ASMSkinningLighting</a>, <a href="ASMSkinningNoLighting.htm">ASMSkinningNoLighting</a></td>

            <td>Perform skinning in the vertex shader using 20
            bones. Use assembly shaders referenced by an NSF
            shader.</td>
        </tr>

        <tr>
            <td><a href="Colorize.htm">Colorize.NSF</a></td>

            <td>A programming sample shader that takes the color
            from the custom attribute and modulates it by the
            base map.</td>
        </tr>

        <tr>
            <td><a href="FXSkinning.htm">FXSkinning.fx</a></td>

            <td>Minimal FX-based skinning shader with 20 bones.
            Like ASMSkinningNoLighting, it is not capable of
            transforming normals to perform lighting
            calculations.</td>
        </tr>

        <tr>
            <td><a href="Halo.htm">Halo</a></td>

            <td>A programmatic shader that draws a halo effect
            around an object.</td>
        </tr>

        <tr>
            <td><a href=
            "HLSLSkinning.htm">HLSLSkinning.NSF</a></td>

            <td>Minimal HLSL-based skinning shader with 20 bones.
            Like ASMSkinningNoLighting, it is not capable of
            transforming normals to perform lighting
            calculations.</td>
        </tr>

        <tr>
            <td><a href="NiFlatWireframeMaterial.htm">NiFlatWireframeMaterial</a></td>

            <td>A material that handles applying a completely unshaded wireframe shader to skinned and unskinned objects</td>
        </tr>

        <tr>
            <td><a href="SeaFloor.htm">SeaFloor.NSF</a></td>

            <td>Implements the look of the sea floor found in the
            DirectX DolphinVS sample.</td>
        </tr>

        <tr>
            <td><a href="TwoPass.htm">TwoPass.NSF</a></td>

            <td>A programmer sample that illustrates how multiple
            passes can be placed in a single shader.</td>
        </tr>

    </tbody>
</table>

<!--kadov_tag{{<placeholder id="footer">}}-->
		

</body>
</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>etk::RCSFeedback</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">etk::RCSFeedback</p>


<p class="NDLRefHeaderFile">&lt;RCSFeedback.h&gt;</p>


<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class allows a provider object to report errors back to the calling application. </p>
<p class="NDLNormal">This includes display status/progress messages and an error handler that enables the user to interactively abort, retry, or ignore an error that results from a failed RCS operation.  To add feedback to a provider, inherit from <span class="NDLSystemFont">RCSFeedback</span> and use <span class="NDLSystemFont"><a href="etk__RCSProvider.htm#classetk_1_1_r_c_s_provider_1ad305fc1dc718756bc2fe502cb6226655">RCSProvider::SetFeedback()</a></span> to associate your feedback object to the provider object. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>
<a name="classetk_1_1_r_c_s_feedback_1a7bb127bf7556a5b2f4c7a3dda9e5ee44"></a>
<p class=NDLRefHead2>etk::RCSFeedback::ErrorAction</p>


<p class="NDLRefMemberDescription">Actions that can be taken by a provider in response to an RCS operation error. </p>


<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">RCS_ERR_ACTION_ABORT</span></td>
    <td>Stop attempting the RCS operation. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">RCS_ERR_ACTION_RETRY</span></td>
    <td>Try the RCS operation again. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">RCS_ERR_ACTION_IGNORE</span></td>
    <td>Ignore the current RCS error and continue. </td>
</tr>

  </tbody>
</table>
</div>

<a name="classetk_1_1_r_c_s_feedback_1a35ec4793e520c6e697818ed7c4dda2d1"></a>
<p class=NDLRefHead2>etk::RCSFeedback::MessageSeverity</p>


<p class="NDLRefMemberDescription">The importance of a status message being logged by a RCS provider. </p>


<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">RCS_INFO</span></td>
    <td>Informational and progress message. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">RCS_WARNING</span></td>
    <td>The RCS operation succeeded but the user may want to review the results. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">RCS_ERROR</span></td>
    <td>Indicates RCS operation failed. </td>
</tr>

  </tbody>
</table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classetk_1_1_r_c_s_feedback_1a625b1baac196ea55fdc7aaeb78aa92cd"></a>
<p class="NDLRefMemberFunction">virtual ~RCSFeedback()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="classetk_1_1_r_c_s_feedback_1abaaf48f325a26a8aa9ac15364169bb63"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="etk__RCSFeedback.htm#classetk_1_1_r_c_s_feedback_1a7bb127bf7556a5b2f4c7a3dda9e5ee44">ErrorAction</a></span>  HandleError(<span class="NDLSystemFont"><a href="etk__RCSResult.htm">RCSResult</a></span>& result) = 0</p>
<p class="NDLRefMemberDescription">This method is invoked when a provider encounters an error while attempting a RCS operation. </p>
<p class="NDLRefMemberDetailedDescription">For example, the caller may implement this method to display a message box with retry and abort options. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">result</span></td>
    <td>Object passed-in by the caller to return status/error information for displaying to the user. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The value returned by this method is used to determine how the error will be handled. The return value should be specified by the user through UI. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classetk_1_1_r_c_s_feedback_1ac3b2b86b495be9a33df51b3567743649"></a>
<p class="NDLRefMemberFunction">virtual void  LogMessage(<br/><span class="NDLSystemFont"><a href="etk__RCSFeedback.htm#classetk_1_1_r_c_s_feedback_1a35ec4793e520c6e697818ed7c4dda2d1">MessageSeverity</a></span> severity, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& message) = 0</p>
<p class="NDLRefMemberDescription">This method is called by the provider object to display progress and status messages. </p>
<p class="NDLRefMemberDetailedDescription">The caller typically implements this method to display messages in an output window or log file. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">severity</span></td>
    <td>The type of message being issued by the RCS provider </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">message</span></td>
    <td>Caller supplied-object used to return the actual message </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classetk_1_1_r_c_s_feedback_1ad8124f092252e8248e5fb4138f89bae0"></a>
<p class="NDLRefMemberFunction">void  LogMessage(<br/><span class="NDLSystemFont"><a href="etk__RCSFeedback.htm#classetk_1_1_r_c_s_feedback_1a35ec4793e520c6e697818ed7c4dda2d1">RCSFeedback::MessageSeverity</a></span> severity, <br/>const char* pFormat, <br/>... )</p>
<p class="NDLRefMemberDescription">Printf-style convenience method that formats a message with 0 or more arguments and then calls <span class="NDLSystemFont"><a href="etk__RCSFeedback.htm#classetk_1_1_r_c_s_feedback_1ac3b2b86b495be9a33df51b3567743649">LogMessage()</a></span> to display the message. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">severity</span></td>
    <td>The type of message being issued by the RCS provider </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pFormat</span></td>
    <td>Printf-style format string </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classetk_1_1_r_c_s_feedback_1a06a774885ec8940113d9764282a4f9e3"></a>
<p class="NDLRefMemberFunction">void  VLogMessage(<br/><span class="NDLSystemFont"><a href="etk__RCSFeedback.htm#classetk_1_1_r_c_s_feedback_1a35ec4793e520c6e697818ed7c4dda2d1">RCSFeedback::MessageSeverity</a></span> severity, <br/>const char* pFormat, <br/>va_list args)</p>
<p class="NDLRefMemberDescription">Varargs convenience method that can be used to by other classes to implement printf-style convenience methods. </p>
<p class="NDLRefMemberDetailedDescription">This method calls <span class="NDLSystemFont"><a href="etk__RCSFeedback.htm#classetk_1_1_r_c_s_feedback_1ac3b2b86b495be9a33df51b3567743649">LogMessage()</a></span> once the message has been formatted. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">severity</span></td>
    <td>The type of message being issued by the RCS provider </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pFormat</span></td>
    <td>Printf-style format string </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">args</span></td>
    <td>Variable argument list </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

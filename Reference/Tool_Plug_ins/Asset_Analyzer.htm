<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Asset Analyzer</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">Asset Analyzer</p>

<p class="NDLRefParentage">Type: PROCESS</p>

<p class="NDLRefParentage">Version: 2.0</p>

<p class="NDLRefHeaderFile">&lt;AssetAnalyzer.dll&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>The Asset Analyzer is a process plug-in designed to 
 do basic error checking of art assets. The scene is examined to determine 
 if it falls within certain general guidelines which you define. The analyzer 
 examines both at the scene and object level. At the scene level the analyzer 
 can check for a variety of options including: max triangle count, max 
 scene texture size (KB), max scene data size (geometry, animation, and 
 textures), and max scene objects. At 
 the object level the analyzer can check for options including: max lights 
 per object, max triangles per object, max individual texture size, and 
 multi sub-object warnings. Additionally you can define a list of objects 
 required in the scene. If a correspondingly named object is not found 
 in the scene, the analyzer will display an error. The Asset Analyzer will 
 run silently and display no results dialog if there are no errors to display.</p>

<p class="NDLRefHead1">Typical Use Examples</p>

<p class="NDLRefHead2">Unexpected Geometry </p>

<p>Sometimes art assets contain far more data than the artist expected them to contain. The Asset Analyzer can flag assets with excessive data sizes so they may be corrected.</p>

<p class="NDLRefHead2">Enforcing Required Objects </p>

<p>The game programming team may need to rely on certain 
 objects being labeled in an art asset. The Required Objects option can 
 be used to alert the artist if the needed objects are not present in the 
 asset.</p>

<p class="NDLRefHead2">Texture Bloating and Complex Lighting </p>

<p>Maintaining tight control of memory usage and lighting 
 complexity is necessary to produce a first-class game. The Asset Analyzer 
 can be used to warn artists when assets use oversize textures or exceed 
 the allowable number of lights.</p>

<p class="NDLRefHead1">Options</p>

<p class="NDLRefHead1">
<div class="NDLFigureContainer">
    <img src="./images/AssetAnalyzerOptions.jpg" width="731" height="413"
	/>
    <p class="NDLFigureCaption">Asset Analyzer Options</p> 
</div>


<p class="NDLRefHead2">Required Objects</p>

<p>During analysis the scene will be searched for objects 
 with names on this list. Any object not found will be listed in the results 
 dialog. If a name is listed multiple times then it will need to be found 
 multiple times. It is important to remember that names in Gamebryo are 
 case sensitive. Any required names that are not found will be displayed 
 in the results dialog.</p>

<p class="NDLRefHead2">Max Data Memory Size (KB)</p>

<p>In general the majority of a scene is taken up by the 
 geometry, textures, and animations. This gives a rough estimate of the 
 scene size by totaling the geometry, textures, and animations. This does 
 not include the size of the scene graph objects or any &quot;Extra Data&quot;. 
 An error will be in the results dialog if your scene exceeds this size. 
 </p>

<p class="NDLRefHead2">Max Triangle Count</p>

<p>This counts the total number of triangle in the scene 
 and does not include degenerate triangles. If two objects are clones and 
 share geometry then their triangles will be counted twice. This is useful 
 for determining the number of triangle that would be drawn if everything 
 was visible. An error will be in the results dialog if your scene exceeds 
 this size.</p>

<p class="NDLRefHead2">Max Scene Texture Size (KB)</p>

<p>This represents the total size of textures in this scene. 
 An error will be in the results dialog if your scene exceeds this value.</p>

<p class="NDLRefHead2">Triangle to Mesh Ratio</p>

<p>This represents the triangle complexity of objects. 
 When your scene has a small triangle to mesh ratio it indicates you may 
 be processor bound. A larger proportion of your rendering time will be 
 used to prepare to draw objects than actually drawing them. An error will 
 be found in the Results dialog if the ratio of your scene falls below 
 this value.</p>

<p class="NDLRefHead2">Max Scene Graph Depth</p>

<p>In general, the deeper the scene graph of a scene the 
 slower it will update. An error will be generated if your maximum scene 
 graph depth exceeds this value.</p>

<p class="NDLRefHead2">Max Scene Object Count</p>

<p>When rendering an object there is some inherit overhead 
 with preparing the video hardware to draw. When the number of object in 
 the scene gets large enough your scene will be come processor bound. An 
 error will be generated if the number of objects in your scene exceeds 
 this value.</p>

<p class="NDLRefHead2">No Spot Lights</p>

<p class="NDLRefHead2">No Point Lights</p>

<p class="NDLRefHead2">No Directional Lights</p>

<p class="NDLRefHead2">No Ambient Lights</p>

<p>In general the rendering performance of an object is 
 tied to how it is lighted. Spot lights are very expensive to draw. Point 
 lights are also very expensive but less so than spot lights. Directional 
 lights are relatively inexpensive and ambient lights are the least expensive 
 of all. An error will be generated in the results window if one of these 
 lights are found in your scene. </p>

<p class="NDLRefHead2">Max Lights Per Object</p>

<p>In general the rendering performance of an object is 
 tied to how many lights affect it. Even if a light only contributes in 
 a small way to the final illumination of an object it still takes the 
 same amount of extra time to draw an objects. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->An 
 error will be generated in the results window if an object is affected 
 by more than the number of lights specified.</p>

<p class="NDLRefHead2">Max Triangles Per Object</p>

<p>This is useful as a double check on the expected complexity 
 of objects. An error will be generated in the results window if any object's 
 triangle count exceeds this value.</p>

<p class="NDLRefHead2">Max Texture Size (NxN)</p>

<p>An error will be generated if any dimension of a texture 
 exceeds the value specified.</p>

<p class="NDLRefHead2">Max Sub Object Warnings</p>

<p>In Gamebryo an object can have one and only one material/texture. 
 Both 3DS Max and Maya allow you to apply different material/textures to 
 the different faces of an object. During export these objects will be 
 broken into &quot;Sub Objects&quot; <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->as 
 they are converted for Gamebryo. This unexpectedly increases the number 
 of objects in the scene and can be a performance problem. An error will 
 be generated if an object has been broken up into more than the number 
 of objects specified in this field.</p>

<p class="NDLRefHead2">Max Morphing Vertex Count</p>

<p>There is an inherit cost to morphing objects that is 
 proportional to the number of vertices. An error will be generated if 
 the number of vertices in a morphing object exceeds the specified value.</p>

<p class="NDLRefHead1">Results</p>

<p class="NDLRefHead1">
<div class="NDLFigureContainer">
    <img src="./images/AssetAnalyzerResults.jpg" width="579" height="497"
	/>
    <p class="NDLFigureCaption">Asset Analyzer: Sample results</p>
</div>

<p>Asset Analyzer results will be displayed in the results 
 window. It is important to remember that the Asset Analyzer will NOT display 
 a dialog if there are no results.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

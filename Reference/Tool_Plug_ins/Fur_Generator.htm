<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Fur Generator</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">Fur Generator</p>

<p class="NDLRefParentage">Type: PROCESS</p>

<p class="NDLRefParentage">Version: 1.0</p>

<p class="NDLRefHeaderFile">&lt;FurGenerator.dll&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This plug-in is used in the <a href="../../Learn/FullDemos/Lenguins_on_Ice_Overview.htm">Lenguins 
 on Ice Demo</a>. It generates the shell and fin data for any objects that 
 have either the &quot;Fur&quot; shader or the &quot;FurSkinning&quot; 
 shader applied. Shell data is calculated from the base models vertex position 
 and normal. We push the vertex position outward along the normal by the 
 given length. The fins are generated by adding a quad from every edge 
 on the base model. The model's color channel is used to modulate against 
 the fur. This is important to control the visibility of the fur on a per 
 vertex level.</p>

<p class="NDLRefHead1">Requirements</p>

<ul>
	
	<li>This plug-in must be 
 run before the <a href="./Scene_Graph_Optimization.htm">Scene Graph Optimization</a> 
 plug-in.</li>
	
	<li>A hardware skinned 
 object must use the &quot;FurSkinning&quot; shader.</li>
	
	<li>A non-skinned or software 
 skinned objects must use the &quot;Fur&quot; shader.</li>
	
	<li>The object must have 
 a base map and a detail map that is used for the &quot;fin&quot; texture.</li>
</ul>

<p class="NDLRefHead1">Options</p>


<div class="NDLFigureContainer">
    <img src="./images/FurGeneratorOptions.jpg" width="273" height="380"
/>
    <p class="NDLFigureCaption">Fur Generator Options</p>
</div>

<p class="NDLRefHead2">Fur Length</p>

<p><b>Explanation:</b>&nbsp; 
 Sets the length of the fins and the scale of the shells. The larger the 
 number the longer the fur hairs will appear.</p>

<p class="NDLRefHead2">Fur Length Randomness</p>

<p><b>Explanation:</b>&nbsp; 
 Applies a random factor to the fur length. This provides a mechanism to 
 handle the uniform nature of the fur. A value of '0' indicates no randomness. 
 A value of '100' indicates a random fur length of 0 - 2x(Fur Length).</p>

<p class="NDLRefHead2">Texture Tiles Per Fin</p>

<p><b>Explanation:</b>&nbsp; 
 This sets the uv values for the fins. The larger the number the more tiled 
 the texture will be thus creating thinning looking hair. A smaller number 
 will create a coarser looking hair.</p>

<p class="NDLRefHead2">Texture Tiles Per Fin Randomness</p>

<p><b>Explanation:</b>&nbsp; 
 Applies a random factor to the texture tiles per fin. This provides a 
 mechanism to handle the uniform density of the fur. A value of '0' indicates 
 no randomness and a value of '100' indicates that it the texture tiles 
 per fin will be between 0 and 2x(Texture Tiles per Fin).</p>

<p class="NDLRefHead2">Num Shells</p>

<p><b>Explanation:</b>&nbsp; 
 This is the number of shells. This value has to be 1, 4, 9, 16. This controls 
 the quality of the fur. The more shells the better the quality at the 
 expense of both memory and rendering time. The shells are placed in the 
 buffers from the inner most shell to the outer most shell.</p>

<p class="NDLRefHead2">Shell Size Factor</p>

<p><b>Explanation:</b>&nbsp; 
 This is a value that is used to space the shells. If this value is one 
 all shells will be space (Fur Length / Num Shells) apart. This factor 
 helps submerge the shells deeper into the fins to achieve a more aesthetically 
 appealing look.</p>

<p class="NDLRefHead2">Shell Texture Size</p>

<p><b>Explanation:</b>&nbsp; 
 This is the size of the texture that gets generated to be used while rendering 
 the shells. The smaller the size the more coarse the fur. The larger the 
 size the more fine the fur.</p>

<p class="NDLRefHead2">Fur Density</p>

<p><b>Explanation:</b>&nbsp; 
 This controls the overall density of the fur. We multiply the base uv 
 set by this value to determine how dense the fur is going to be. The larger 
 the number is the more dense the fur will be, the smaller the number the 
 more sparse the individual fur strands will be.</p>

<p class="NDLRefHead2">Fur Tint Color</p>

<p><b>Explanation:</b>&nbsp; 
 This color value is multiplied by the base texture color to represent 
 the color of both the fins and the shells. The alpha component is modulated 
 with the final output color to give an overall maximum alpha value for 
 both the shells and fins.</p>

<p class="NDLRefHead2">Generate Dense Fins</p>

<p><b>Explanation:</b>&nbsp; 
 This option when selected automatically generates more fins. The base 
 uv set is multiplied by the fur density. If the value between the edge 
 of a triangle is greater then one the triangle is subdivided. The triangles 
 continue to be subdivided until all uv lengths are less then or equal 
 to one. This option helps get better results on meshes that are not as 
 heavily tessellated. </p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

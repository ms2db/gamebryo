<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiBinaryShader</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiBinaryShader</p>

<p class="NDLRefParentage">: public <span><a HREF="../../Reference/NiDX9Renderer/NiD3DShader.htm">NiD3DShader</a></span></p>

<p class="NDLRefHeaderFile">&lt;NiBinaryShader.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiBinaryShader</span> 
 is a <span class="NDLSystemFont">NiD3DShader</span>-derived class that provides 
 a completely data-driven model for shader usage. All functions, even those 
 considered 'internal', are documented to provide a model for developing 
 your own shader classes.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiBinaryShader()</p>

<p class="NDLRefMemberDescription">The constructor for <span class="NDLSystemFont">NiBinaryShader</span> initializes 
 the members to 0, and clears the pass array.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual bool Initialize()</p>

<p class="NDLRefMemberDescription">If the shader has not already been initialized 
 (i.e., <span class="NDLSystemFont">m_bInitialized</span> 
 is <span class="NDLSystemFont">false</span>), the pass array 
 is iterated over, and if any pass requires shader programs, they get loaded.</p>

<p class="NDLRefMemberFunction">virtual unsigned int UpdatePipeline(<a href="../../Reference/NiMain/NiRenderCallContext.htm">NiRenderCallContext</a>&amp; 
 kRCC)</p>

<p class="NDLRefMemberDescription">Iterates over the array of passes and 
 causes each pass to set up the textures that it will use.</p>

<p class="NDLRefMemberFunction">virtual unsigned int SetupTransformations(<a href="../../Reference/NiMain/NiRenderCallContext.htm">NiRenderCallContext</a>&amp; 
 kRCC)</p>

<p class="NDLRefMemberDescription">If a vertex shader is present, the <span class="NDLSystemFont"><a HREF="../../Reference/NiDX9Renderer/NiDX9Renderer.htm">NiD3DRenderer</a>::SetModelTransform</span> 
 function is called, telling the renderer NOT to push the transform onto 
 the device. This arrangement is required since the <span class="NDLSystemFont">SetupShaderProgram</span> 
 will likely access the world matrix when performing its calculations.</p>

<p class="NDLRefMemberDescription">Otherwise, the default <span class="NDLSystemFont"><a href="../../Reference/NiDX9Renderer/NiD3DShader.htm">NiD3DShader</a></span><span class="NDLSystemFont">::SetupTransformations</span> function 
 is called.</p>

<p class="NDLRefMemberFunction"><a name="NiBinaryShader::GetShaderUserDefinedDataSet"></a>NSBUserDefinedDataSet* 
 GetShaderUserDefinedDataSet()</p>

<p class="NDLRefMemberDescription">Returns a pointer to the <span class="NDLSystemFont"><a 
 href="../../Reference/NSBShaderLib/NSBUserDefinedDataSet.htm">NSBUserDefinedDataSet</a></span> that 
 was defined at the shader level.</p>

<p class="NDLRefMemberFunction"><a name="NiBinaryShader::GetImplementationUserDefinedDataSet"></a>NSBUserDefinedDataSet* 
 GetImplementationUserDefinedDataSet()</p>

<p class="NDLRefMemberDescription">Returns a pointer to the <span class="NDLSystemFont"><a 
 href="../../Reference/NSBShaderLib/NSBUserDefinedDataSet.htm">NSBUserDefinedDataSet</a></span> that 
 was defined at the loaded implementation level.</p>

<p class="NDLRefMemberFunction"><a name="NiBinaryShader::GetPassUserDefinedDataSet"></a>NSBUserDefinedDataSet* 
 GetPassUserDefinedDataSet(unsigned int uiPass)</p>

<p class="NDLRefMemberDescription">Returns a pointer to the <span class="NDLSystemFont"><a 
 href="../../Reference/NSBShaderLib/NSBUserDefinedDataSet.htm">NSBUserDefinedDataSet</a></span> that 
 was defined in the given pass.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

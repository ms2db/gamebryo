<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Only Update What Is Actually Moving</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Only Update What Is Actually Moving</h1>

<p>Any serious attempts to optimize application performance 
 in the context of collision detection should necessarily include steps 
 to address the negative impacts resulting from unnecessary calls to <span 
 class="NDLSystemFont"><a href="../../Reference/NiMain/NiAVObject.htm">NiAVObject</a>::Update()</span>.</p>

<p>When an object is transformed, it needs to be Updated, 
 so that its world <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiBound.htm">NiBound</a></span> 
 will be correct for culling (for rendering), for collision detection, 
 etc. By only updating the scene elements that are actually moving, you 
 can often see dramatic improvements to performance.</p>

<p>For example, have one branch of the scene graph consist 
 of all the static objects in the scene and another consist of all the 
 dynamic objects. A third branch may be used for dynamic objects that are 
 not part of the collision system, for instance. If constructed this way, 
 scene graphs will never have to visit or recalculate bounds for the static 
 geometry in the scene during <span class="NDLSystemFont">Update()</span>. 
 In many cases, static geometry constitutes the majority of the geometry 
 of the scene graph. If all the dynamic objects in the scene are moving, 
 a single <span class="NDLSystemFont">Update()</span> could be efficiently 
 called on the root of the dynamic branch.</p>

<p><span class="NDLSystemFont"><a href="../../Reference/NiMain/NiAVObject.htm">NiAVObject</a></span><span 
 class="NDLSystemFont">::UpdateSelected()</span> can also be used to help 
 facilitate the application's selective update needs and is well-suited 
 for situations such as those described here.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

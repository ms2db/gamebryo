<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiBoundingVolume</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiBoundingVolume</p>

<p class="NDLRefParentage">: public <a href=
"../../Reference/NiSystem/NiMemObject.htm"><span>NiMemObject</span></a></p>

<p class="NDLRefHeaderFile">&lt;NiBoundingVolume.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiBoundingVolume</span> is a pure
abstract base class for alternate bounding volumes (<a href=
"Alternate_Bounding_Volumes.htm">ABVs</a>), used by the Gamebryo
collision detection system. <span class=
"NDLSystemFont">NiBoundingVolume</span>-derived classes are used
with <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObject</a></span>-derived
objects in Gamebryo scene graphs to provide alternatives to the
default system-generated <span class=
"NDLSystemFont">NiBound</span> bounding spheres during collision
detection.</p>

<p>The primitive bounding volume classes derived from
<span class="NDLSystemFont">NiBoundingVolume</span> are:</p>

<ul>
    <li><span class="NDLSystemFont"><a href=
    "NiBoxBV.htm">NiBoxBV</a></span> (oriented bounding box)</li>

    <li><span class="NDLSystemFont"><a href=
    "NiCapsuleBV.htm">NiCapsuleBV</a></span> (points equidistant
    from a line segment)</li>

    <li><span class="NDLSystemFont"><a href=
    "NiHalfSpaceBV.htm">NiHalfSpaceBV</a></span> (half-space
    generated by a planar boundary)</li>

    <li><span class="NDLSystemFont"><a href=
    "NiSphereBV.htm">NiSphereBV</a></span> (points equidistant
    from a point).</li>
</ul>

<p>The bounding volume class <span class="NDLSystemFont"><a href=
"NiUnionBV.htm">NiUnionBV</a></span> enables the application to
create arbitrarily complex bounding volumes as a union of
bounding volumes. An element in the union may be a union itself,
so the structure enables the building of hierarchical trees of
bounding volumes. As a rule of thumb, however, complexity should
be avoided, except where it is really needed, for optimal
performance.</p>

<p><span class="NDLSystemFont"><a href=
"NiDrawableBV.htm">NiDrawableBV</a></span> is a class composed
entirely of static functions used to create wireframe models of
any of the <a href="Alternate_Bounding_Volumes.htm">ABVs</a>
listed above. Such wireframe models are mostly useful for
debugging purposes, but may also be useful for generating
selection volumes, as is done in the <a href="../../Learn/Demos/Purpose_!CollisionTestStatic.htm">CollisionTestStatic</a> sample application.</p>

<p><span class="NDLSystemFont">NiBoundingVolume</span> also
provides streaming support via the macros <span class=
"NDLSystemFont">NiDeclareBVStream</span>, <span class=
"NDLSystemFont">NiRegisterBVStream</span>, and <span class=
"NDLSystemFont">NiImplementBVStream</span>.</p>

<p class="NDLRefHead1">Constructors</p>

<p>The compiler generates the default constructor. <span class=
"NDLSystemFont">NiBoundingVolume</span> has no non-static members
to initialize.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual int Type() const</p>

<p class="NDLRefMemberDescription">This function supplies runtime
type information consisting of a unique integer identifier for
each bounding volume class. This approach avoids having the
memory overhead and side effects associated with being derived
from <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiObject.htm">NiObject</a></span>.</p>

<p class="NDLRefMemberFunction">virtual unsigned int
WhichObjectIntersect() const</p>

<p class="NDLRefMemberDescription">Returns the index of the primitive bounding volume that
generated a collision in the last call to <span class=
"NDLSystemFont"><a href=
"NiCollisionGroup.htm">NiCollisionGroup</a>::FindCollisions.</span>
It is only nonzero for the case of <span class=
"NDLSystemFont"><a href="NiUnionBV.htm">NiUnionBV</a></span>
objects.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiCollisionTraversals</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiCollisionTraversals</p>

<p class="NDLRefHeaderFile">&lt;NiCollisionTraversals.h&gt;</p>

<p class="NDLRefHead1">Description:</p>

<p><span class="NDLSystemFont">NiCollisionTraversals</span> is
the namespace that encapsulates scene graph traversal mechanisms
used by the Gamebryo Collision System.</p>

<p class="NDLRefHead1">Namespace Member Functions:</p>

<p class="NDLRefMemberFunction">void CreateCollisionData(<a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObject</a>* pkRoot,
NiCollisionData::CollisionMode eCollision =
NiCollisionData::USE_OBB)</p>

<p class="NDLRefMemberDescription">Recursively traverse the scene
graph to create collision data for geometry objects. Unless
supplied by the user, the default value for the collision type is
USE_OBB.</p>

<p class="NDLRefMemberFunction">bool
CheckForCollisionData(<a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObject</a>* pkRoot,
bool bRecursive)</p>

<p class="NDLRefMemberDescription">Optionally recursive, this
function returns true if <span class="NDLSystemFont"><a href=
"NiCollisionData.htm">NiCollisionData</a></span> can be found and
false otherwise.</p>

<p class="NDLRefMemberFunction">void
ClearWorldVelocities(<a href="../../Reference/NiMain/NiAVObject.htm">
NiAVObject</a>* pkRoot, <a href=
"../../Reference/NiMain/NiPoint3.htm">NiPoint3</a>&amp;
kValue)</p>

<p class="NDLRefMemberDescription">Recursively traverses the
scene graph, looks for collision data, and if found, sets the
world velocity to <span class="NDLSystemFont">kValue</span>.</p>

<p class="NDLRefMemberFunction">void CreateWorldVertices(<a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObject</a>*
pkObj)</p>

<p class="NDLRefMemberFunction">void
UpdateWorldVertices(<a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObject</a>*
pkObj)</p>

<p class="NDLRefMemberFunction">void
DestroyWorldVertices(<a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObject</a>*
pkObj)</p>

<p class="NDLRefMemberDescription">Recursively traverse the scene
graph to create, update, and destroy world vertex arrays.</p>

<p class="NDLRefMemberFunction">void CreateWorldNormals(<a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObject</a>*
pkObj)</p>

<p class="NDLRefMemberFunction">void
UpdateWorldNormals(<a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObject</a>*
pkObj)</p>

<p class="NDLRefMemberFunction">void
DestroyWorldNormals(<a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObject</a>*
pkObj)</p>

<p class="NDLRefMemberDescription">Recursively traverse the scene
graph to create, update, and destroy world space normal
arrays.</p>

<p class="NDLRefMemberFunction">void UpdateWorldData(<a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObject</a>*
pkRoot)</p>

<p class="NDLRefMemberDescription">A call to <span class=
"NDLSystemFont">UpdateWorldData</span> recursively traverses the
scene graph looking for collision data on objects. When they are
found, the collision data's world data is updated. This includes
updating velocity and world transforms on ABVs.</p>

<p class="NDLRefHead1">Notes:</p>

<p>Creation of world vertices and world normals requires the
existence of <span class="NDLSystemFont"><a href=
"NiCollisionData.htm">NiCollisionData</a></span>. If
<span class="NDLSystemFont"><a href=
"NiCollisionData.htm">NiCollisionData</a></span> does not exist,
it will be created. On the other hand, the destruction of world
vertices or world normals will never result in the destruction of
<span class="NDLSystemFont"><a href=
"NiCollisionData.htm">NiCollisionData</a></span>. If
<span class="NDLSystemFont"><a href=
"NiCollisionData.htm">NiCollisionData</a></span> is created for
the sole purpose of holding world data, then, on application shut
down, it will be necessary to delete the <span class=
"NDLSystemFont"><a href=
"NiCollisionData.htm">NiCollisionData</a></span> explicitly.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

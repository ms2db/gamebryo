<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>SimpleSkinPickObjectPolicy</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">SimpleSkinPickObjectPolicy</p>

<p class="NDLRefParentage">: public <a href="NiPick__PickObjectPolicy.htm">NiPick::PickObjectPolicy</a></p>

<p class="NDLRefHeaderFile">&lt;NiPick.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">SimpleSkinPickObjectPolicy</span> is a derived class of <span class="NDLSystemFont">NiPick::PickObjectPolicy</span> that is provided as a way 
 to pick against a skinned mesh without deforming the mesh. The bind pose 
 vertices are matched up with bone influences and used to compute a bounding 
 volume per bone. This picking routine will compute the updated bounding 
 volume per bone based on the bone's current transforms. This bound is 
 then picked against as an approximation for the mesh. It is inexact, but 
 may be good enough for many applications.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual bool FindIntersections(const <a href="../../Reference/NiMain/NiPoint3.htm">NiPoint3</a>&amp; 
 kOrigin, const <a href="../../Reference/NiMain/NiPoint3.htm">NiPoint3</a>&amp; 
 kDir, <a href="NiPick.htm">NiPick</a>&amp; kPick, <a href="../../Reference/NiMain/NiRenderObject.htm">NiRenderObject</a>* 
 pkRenderObj)</p>

<p class="NDLRefMemberDescription">This method tests the render object against 
 the ray and records any intersections that it encountered in the <span 
 class="NDLSystemFont">NiPick</span> object. This implementation adds picking 
 against bone bounds to the logic in the base class.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

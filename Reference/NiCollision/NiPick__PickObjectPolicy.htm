<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPick::PickObjectPolicy</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiPick::PickObjectPolicy</p>

<p class="NDLRefParentage">: public <a href=
"../../Reference/NiSystem/NiMemObject.htm"><span>NiMemObject</span></a></p>

<p class="NDLRefHeaderFile">&lt;NiPick.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiPick::PickObjectPolicy</span> is
a nested class of <span class="NDLSystemFont"><a href=
"NiPick.htm">NiPick</a></span> that allows an application to
insert custom picking logic into the picking traversal. This
class is invoked whenever triangle-level picking is required for
an <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiRenderObject.htm">NiRenderObject</a></span>
instance. Examples of custom behavior might be to pick against
the radii of particles in a particle system, instances for an
instanced mesh, and a quad-tree for a terrain. An example derived
class, <a href="SimpleSkinPickObjectPolicy.htm"><span class=
"NDLSystemFont">SimpleSkinPickObjectPolicy</span></a> is provided
as a way to pick against a skinned mesh without deforming the
mesh.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual bool
FindIntersections(const <a href=
"../../Reference/NiMain/NiPoint3.htm">NiPoint3</a>&amp; kOrigin,
const <a href=
"../../Reference/NiMain/NiPoint3.htm">NiPoint3</a>&amp; kDir,
<a href="NiPick.htm">NiPick</a>&amp; kPick, <a href=
"../../Reference/NiMain/NiRenderObject.htm">NiRenderObject</a>*
pkRenderObj)</p>

<p class="NDLRefMemberDescription">This method tests the render
object against the ray and records any intersections that it
encountered in the <span class="NDLSystemFont">NiPick</span>
object. The default implementation checks for the existence of a
CPU_READ'able POSITION0 stream and does a triangle by triangle
check against the ray.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Introduction to Collision</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Introduction to Collision</h1>

<p>The phrase &quot;collision detection&quot; in a real-time 
 3D application refers to a system that can identify the intersection of 
 geometric objects and provide an interface for performing &quot;collision 
 response&quot; when intersections occur. The Gamebryo collision detection 
 system provides collision detection functionality to applications and 
 enables straightforward integration of a collision response via a callback 
 mechanism.</p>

<p>Collision detection deals with the general case of finding 
 intersections between two arbitrary 3D objects at a time.&nbsp; The geometry 
 of these objects is normally defined with polygons, or with parametrically 
 defined bounding volumes.</p>

<p>Furthermore, collision detection may be used in dynamic 
 or static situations.&nbsp;</p>

<p>Dynamic collision detection deals with situations where 
 either one or both of two interacting objects are moving, and you're concerned 
 about whether a collision will occur within a specified amount of time 
 from the current time.&nbsp; Dynamic collision detection works in a predictive 
 manner.&nbsp; Given this specified time period, it can determine through 
 the <span 
 class="NDLSystemFont"><a href="NiCollisionGroup.htm">NiCollisionGroup</a>::FindCollisions()</span> interface 
 if and when two objects will collide within that time, as well as calculating 
 a point of intersection and collision normals if they do collide.&nbsp;</p>

<p>Static testing is only concerned with determining if 
 two objects are currently intersecting, whether they are moving or not. 
 Two objects may interpenetrate each other significantly, in which case, 
 there is no single point of collision, nor unambiguous collision normals. 
 Since the point of intersection and collision normals are not needed for 
 this determination, a faster <span 
 class="NDLSystemFont"><a href="NiCollisionGroup.htm">NiCollisionGroup</a>::TestCollisions()</span> interface 
 may be used in this case, which simply returns a Boolean result on whether 
 the two objects currently intersect.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiMeshProfileOperations</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiMeshProfileOperations</p>


<p class="NDLRefHeaderFile">&lt;NiMeshProfileOperations.h&gt;</p>



<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>
<a name="class_ni_mesh_profile_operations_1a2e6dbcaec933ecba4f6475d6b046380a"></a>
<p class=NDLRefHead2>NiMeshProfileOperations::CastConvertType</p>


<p class="NDLRefMemberDescription">Enumerates how the CastConvert operation should perform. </p>


<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">CT_SMARTCLAMP</span></td>
    <td>This enumeration specifies that the data is to be converted by traversing all the data and verifying that the data can be converted without any data loss. If it detects a single occurrence it will warn and return without converting the stream. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">CT_NORMALIZE</span></td>
    <td>This enumeration specifies that the data is to be converted using a built-in range remapping from the source type range to the destination type range. In the case of float values, the type range is considered to be 0.0f to 1.0f. If possible, an appropriate predefined normalized format will be used for the final format. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">CT_TYPECLAMP</span></td>
    <td>This enumeration specifies that the data is to be clamped by the upper and lower bounds of the data type that is being converted to. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">CT_BLINDCAST</span></td>
    <td>This enumeration specifies that the data is simply casted to the new data type. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">CT_COUNT</span></td>
    <td>&nbsp;</td>
</tr>

  </tbody>
</table>
</div>


<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="class_ni_mesh_profile_operations_1a96634eee79bd6cee34e2077006c06160"></a>
<p class="NDLRefMemberFunction">static void  ApplyClampInPlace(<br/><span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>& kStreamRef, <br/>double dMin, <br/>double dMax, <br/><span class="NDLSystemFont">NiInt32</span> iComponent)</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_ni_mesh_profile_operations_1a24a5916271fd6773cb4cbd210c383613"></a>
<p class="NDLRefMemberFunction">static void  ApplyRemapInPlace(<br/><span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>& kStreamRef, <br/>double dSrcBegin, <br/>double dSrcEnd, <br/>double dDstBegin, <br/>double dDstEnd, <br/><span class="NDLSystemFont">NiInt32</span> iComponent)</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_ni_mesh_profile_operations_1ae364bdb7ccf3626be164fdf83e6d40b6"></a>
<p class="NDLRefMemberFunction">static void  ApplyRenameInPlace(<br/><span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>& kStreamRef, <br/><span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kGenericSemantic, <br/><span class="NDLSystemFont">NiUInt8</span> uiGenericIndex)</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_ni_mesh_profile_operations_1a3a8eba0fed7d98e89b7ee46087f73f69"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">bool</span>  IsValidStreamRef(const <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>& pkStreamRef)</p>
<p class="NDLRefMemberDescription">All Mesh Operations have the same basic requirements for NiDataStreamRef's. </p>
<p class="NDLRefMemberDetailedDescription">This method is used to determine if the <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> object referred to by pkStreamRef meets those requirements. </p>
<a name="static_methods"></a>
<p class="NDLRefHead1">Static Methods</p>

<p class="NDLRefMemberDescription">Methods to perform operations over data streams </p>

<a name="class_ni_mesh_profile_operations_1ac1613f481a79515ea77117da9c5a2975"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>  MergeAndSwizzle(<br/><span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kNewSemantic, <br/><span class="NDLSystemFont">NiUInt8</span> uiNewIndex, <br/><span class="NDLSystemFont"><a href="NiComponentInput.htm">NiComponentInput</a></span>* pkIn0, <br/><span class="NDLSystemFont"><a href="NiComponentInput.htm">NiComponentInput</a></span>* pkIn1 = NULL, <br/><span class="NDLSystemFont"><a href="NiComponentInput.htm">NiComponentInput</a></span>* pkIn2 = NULL, <br/><span class="NDLSystemFont"><a href="NiComponentInput.htm">NiComponentInput</a></span>* pkIn3 = NULL)</p>
<p class="NDLRefMemberDescription">MergeAndSwizzle takes a semantic name, an index, 1 to 4 stream or literal value components, and results in a swizzle and merged datastream that is wrapped by the returning <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> object. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<p class="NDLRefMemberDetailedDescription">At least one input must come from a stream component in order for the operation to succeed in a valid <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>. The reason being is that an existing datastream is required in order to determine the number of elements and various datastream properties. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kNewSemantic</span></td>
    <td>Specifies the new semantic name for the newly merged and/or swizzled data stream </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiNewIndex</span></td>
    <td>Specifies the new index for the newly merged and/or swizzled data stream. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkIn0</span></td>
    <td>Specifies the first component input. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkIn1</span></td>
    <td>Specifies the second component input. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkIn2</span></td>
    <td>Specifies the third component input. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkIn3</span></td>
    <td>Specifies the fourth component input.</td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_mesh_profile_operations_1a74fd03422f47db11c12957fe0efcec61"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>  Clamp(<br/>const <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>& kSrcRef, <br/><span class="NDLSystemFont">NiInt32</span> iComponent, <br/>double dMin, <br/>double dMax)</p>
<p class="NDLRefMemberDescription">Clamp takes a <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> that contains a single element datastream, a selected component, and min/max values to use for clamping. </p>
<p class="NDLRefMemberDetailedDescription">If iComponent is -1, then all components are clamped. The returning <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> represents the results of the Clamp operation.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kSrcRef</span></td>
    <td>The single element <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> that will be clamped. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">iComponent</span></td>
    <td>The component index that should be clamped. A value of -1 indicates that all components should be clamped. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">dMin</span></td>
    <td>The min range. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">dMax</span></td>
    <td>The max range. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_mesh_profile_operations_1a17b4697c6dd7cb6658642375c962d6bb"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>  Remap(<br/>const <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>& kSrcRef, <br/>double dSrcBegin, <br/>double dSrcEnd, <br/>double dDstBegin, <br/>double dDstEnd, <br/><span class="NDLSystemFont">NiInt32</span> iComponent)</p>
<p class="NDLRefMemberDescription">Remap takes a <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> that contains a single element datastream, a selected component, and source/destination ranges for linear remapping. </p>
<p class="NDLRefMemberDetailedDescription">If iComponent is -1, then all components are linearly remapped. The returning <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> represents the results of the remap operation.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kSrcRef</span></td>
    <td>The single element <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> that will be remapped. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">dSrcBegin</span></td>
    <td>The source start range. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">dSrcEnd</span></td>
    <td>The source end range. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">dDstBegin</span></td>
    <td>The destination start range. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">dDstEnd</span></td>
    <td>The destination end range. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">iComponent</span></td>
    <td>The component index that should be remapped. A value of -1 indicates that all components should be remapped. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_mesh_profile_operations_1a79ba914231a497ad72ae2ff22700aa76"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>  Rename(<br/>const <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>& kSrcRef, <br/><span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kSemantic, <br/><span class="NDLSystemFont">NiUInt8</span> uiIndex)</p>
<p class="NDLRefMemberDescription">Rename takes a <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> that contains a single element datastream, a semantic, and an index. </p>
<p class="NDLRefMemberDetailedDescription">The returning <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> will have the new semantic name and index.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<p class="NDLRefMemberDetailedDescription">The Rename operation, which only needs to change the semantic and index, will continue to share the underlying datastream that what passed in (since the datastream data did not change). This is the only operation that does not make a unique copy of the datastream. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kSrcRef</span></td>
    <td>The single element <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> that will have its semantic renamed. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kSemantic</span></td>
    <td>The new semantic. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiIndex</span></td>
    <td>The new index.</td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_mesh_profile_operations_1af1f4bbd04ee9096b94ba297292d0a5d6"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>  CastConvert(<br/>const <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>& kSrcRef, <br/><span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamElement.htm#class_ni_data_stream_element_1a0d721d952c046046a09969f562caebdd">NiDataStreamElement::Type</a></span> eDstType, <br/><span class="NDLSystemFont"><a href="NiMeshProfileOperations.htm#class_ni_mesh_profile_operations_1a2e6dbcaec933ecba4f6475d6b046380a">CastConvertType</a></span> eConvertType)</p>
<p class="NDLRefMemberDescription">CastConvert takes a <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> that contains a single element datastream, a destination type, and a conversion type. </p>
<p class="NDLRefMemberDetailedDescription">The conversion type may specify if the cast is a blind one, if it is type-clamped, or if it should be normalized. If normalized is specified, the final format will be one of the known normalized formats (if possible). The returning <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> represents the results of the CastConvert operation.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kSrcRef</span></td>
    <td>The single element <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> that will have its element cast-converted. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">eDstType</span></td>
    <td>The enumerated data type that each component will be converted to. The final format will retain the source component count. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">eConvertType</span></td>
    <td>The cast-method that will be used. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_mesh_profile_operations_1a4af3f3a1304f80abf0242c4d9f938f59"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>  ComponentPack(<br/><span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>& kSrcRef, <br/><span class="NDLSystemFont">bool</span> bSigned, <br/><span class="NDLSystemFont">bool</span> bNormalized, <br/><span class="NDLSystemFont">bool</span> bLastFieldIsLiteral, <br/><span class="NDLSystemFont">NiUInt8</span> uiF0, <br/><span class="NDLSystemFont">NiUInt8</span> uiF1, <br/><span class="NDLSystemFont">NiUInt8</span> uiF2 = 0, <br/><span class="NDLSystemFont">NiUInt8</span> uiF3 = 0)</p>
<p class="NDLRefMemberDescription">ComponentPack takes a <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> that contains a single non-packed element datastream and packs it to a predefined Gamebryo pack format using the passed in parameters. </p>
<p class="NDLRefMemberDetailedDescription">The same layout as the incoming <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> will be used. If no predefined format exists for the parameter specification, or if the operation fails, then the returning <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> will not be valid. The operation will also fail if the number of components of the incoming element does not match the number of fields specified for component packing. If the operation, succeeds, the returning <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> will represent the results of the ComponentPack operation.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kSrcRef</span></td>
    <td>The single element <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> that will have its element cast-converted. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bSigned</span></td>
    <td>Indicates that the fields are to be signed. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bNormalized</span></td>
    <td>Indicates that the fields are to be normalized. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bLastFieldIsLiteral</span></td>
    <td>indicates the last field gets literal </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiF0</span></td>
    <td>Indicates the number of bits reserved for the first field. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiF1</span></td>
    <td>Indicates the number of bits reserved for the second field. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiF2</span></td>
    <td>Is optional, but if specified, indicates the number of bits reserved for the third field. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiF3</span></td>
    <td>Is optional, but if specified, indicates the number of bits reserved for the fourth field. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_mesh_profile_operations_1a0391b1c86c3d03d185df1f67c607ad44"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>  ReinterpretFormat(<br/>const <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>& kSrcRef, <br/><span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamElement.htm#class_ni_data_stream_element_1a4a4822c6a137f25713f304012b600d20">NiDataStreamElement::Format</a></span> eDstFormat)</p>
<p class="NDLRefMemberDescription">ReinterpretFormat takes a <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> that contains a single element datastream and simply changes the format type w/o changing the data. </p>
<p class="NDLRefMemberDetailedDescription">In order for the function to succeed, the overall size of the data stream must be evenly divisible by the size of the new format type.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<p class="NDLRefMemberDetailedDescription">Reinterpreting the format may result in a change of the element count. For example, going from a FLOAT32_4 to a FLOAT32_2 will double the overall count while going the reverse direction would half it. Also note that some reinterpretations may fail. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kSrcRef</span></td>
    <td>The single element <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> that will have its data stream reinterpreted. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">eDstFormat</span></td>
    <td>The desired format.</td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::MessageWrapper</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::MessageWrapper</p>
<p class="NDLRefParentage">: public BaseMessageClass</p>


<p class="NDLRefHeaderFile">&lt;IMessage.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_message_wrapper.gif" alt="Inheritance graph for efd::MessageWrapper"/>
  <p class="FigureCaption">Inheritance graph for efd::MessageWrapper</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">A helper template class to make creating new message types easier. </p>
<p class="NDLNormal">This template defines both GetClassID and a factory method that knows how to create a new instance of the base message class.</p>
<p class="NDLNormal">usage: MessageWrapper&lt;Base message class, new message Class ID&gt;</p>
<p class="NDLNormal">example: MessageWrapper&lt;EnvelopeMessage, kMSGID_RemoteWrapper&gt;</p>
<p class="NDLNormal">
<p class="NDLNormal">Incorrect usage of <span class="NDLSystemFont">MessageWrapper</span> can generate a compile time assert. This will happen if you attempt to wrap a class using the same ClassID that the base class is already using. In such a case the base class should simply be directly used instead.</p></p>

<a name="public_static_attributes"></a>
<p class="NDLRefHead1">Public Static Attributes</p>


<a name="classefd_1_1_message_wrapper_1a761075da01e333e037b0d658cefbabec"></a>
<p class="NDLRefMemberFunction">static const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a11b3d968bc96d7f04115a0aad3893469">efd::ClassID</a></span>  CLASS_ID</p>
<p class="NDLRefMemberFunction"></p>
<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classefd_1_1_message_wrapper_1a2b4eb6800c2ba1b3377f6520cc6eb017"></a>
<p class="NDLRefMemberFunction">MessageWrapper()</p>
<p class="NDLRefMemberFunction"></p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classefd_1_1_message_wrapper_1aea7418fc4546a9d53f01b8868cfb32f0"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="efd__SmartPointer.htm">efd::IMessagePtr</a></span>  FactoryMsg()</p>
<p class="NDLRefMemberDescription">Factory a new message with the appropriate base class and message type ID. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_message_wrapper_1abd37f202dc9a9b7154e0dbca14a3282b"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a11b3d968bc96d7f04115a0aad3893469">efd::ClassID</a></span>  GetClassID() const</p>
<p class="NDLRefMemberDescription">Get the class id for this instance. </p>
<p class="NDLRefMemberDetailedDescription">Note: overriding GetClassID like this saves some boiler plate that would be needed if we used EE_DECLARE_CLASS, and EE_IMPLEMENT_CONCRETE... </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::CircularBuffer</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::CircularBuffer</p>


<p class="NDLRefHeaderFile">&lt;CircularBuffer.h&gt;</p>


<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class is an implementation of a circular or ring buffer. </p>
<p class="NDLNormal"><span class="NDLSystemFont">CircularBuffer</span> always leaves 1 byte open so that it can distinguish between empty and full. If <span class="NDLSystemFont">CircularBuffer</span> is used in a single reader/single writer case no lock should be necessary. The reader only ever writes to the read position and the writer only ever writes to the write position. This leaves the buffer always in a valid state even if it is being both read and written to at the same time. In these cases only valid data is read, but either not all of the data is read/written. The next call to Read/Write will pick up at the appropriate place. </p>

<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classefd_1_1_circular_buffer_1a48ee93695537fc8886c8b0ece61ea95b"></a>
<p class="NDLRefMemberFunction">CircularBuffer(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> maxBytes)</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_circular_buffer_1a198b8539add8d567ac6e8a0ab05b8304"></a>
<p class="NDLRefMemberFunction">virtual ~CircularBuffer()</p>
<p class="NDLRefMemberFunction"></p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_circular_buffer_1aee30f515107477277f350f3067337f8d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  BytesAvailableToRead()</p>
<p class="NDLRefMemberDescription">Get the number of bytes waiting to be read from the <span class="NDLSystemFont">CircularBuffer</span>. </p>

<a name="classefd_1_1_circular_buffer_1aff556a15932559bd9ffb54b431dc8ee9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  BytesAvailableToWrite()</p>
<p class="NDLRefMemberDescription">Get the number of bytes free to be written to in the <span class="NDLSystemFont">CircularBuffer</span>. </p>

<a name="classefd_1_1_circular_buffer_1ab97453cc0729c702924ca981a77370c4"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  Write(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a59a3838ab5cdfe87f98f5b8371e4e91d">efd::UInt8</a></span>* pBuffer, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> size)</p>
<p class="NDLRefMemberDescription">Write buffer into the <span class="NDLSystemFont">CircularBuffer</span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pBuffer</span></td>
    <td>the buffer to write into the <span class="NDLSystemFont">CircularBuffer</span>. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">size</span></td>
    <td>the size in bytes of the buffer to write. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>: the number of bytes actually written. Note: this may be less that the number of bytes specified by size or 0 if the <span class="NDLSystemFont">CircularBuffer</span> is full. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_circular_buffer_1ad182bff92b0aa4e11e6557378c14afac"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  Read(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a59a3838ab5cdfe87f98f5b8371e4e91d">efd::UInt8</a></span>* pBuffer, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> size)</p>
<p class="NDLRefMemberDescription">Read the contents of <span class="NDLSystemFont">CircularBuffer</span> into pBuffer. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pBuffer</span></td>
    <td>the buffer to read into. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">size</span></td>
    <td>the size in bytes of the buffer to read. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>: the number of bytes actually read. Note: this may be less that the number of bytes specified by size or 0 if the <span class="NDLSystemFont">CircularBuffer</span> is empty. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_circular_buffer_1a6e2487edb34f2a1123a2e079e3ab3f3f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  AdvanceReadTo(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">UInt32</a></span> absoluteByte)</p>
<p class="NDLRefMemberDescription">Set the read position of the <span class="NDLSystemFont">CircularBuffer</span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">absoluteByte</span></td>
    <td>absolute position to <span class="NDLSystemFont"><a href="efd__set.htm">set</a></span> read position to. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_circular_buffer_1a9c84a556e5bf485f959631012848c17d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  AdvanceWriteTo(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">UInt32</a></span> absoluteByte)</p>
<p class="NDLRefMemberDescription">Set the write position of the <span class="NDLSystemFont">CircularBuffer</span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">absoluteByte</span></td>
    <td>absolute position to <span class="NDLSystemFont"><a href="efd__set.htm">set</a></span> write position to. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_circular_buffer_1a1a4a57c9ebdd4c69a26469d19b7197a1"></a>
<p class="NDLRefMemberFunction">void  Reset()</p>
<p class="NDLRefMemberDescription">Resets the read and write position to 0. </p>

<a name="classefd_1_1_circular_buffer_1aa89ef2d4095fd7c40b98e199f67bb457"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetReadPos()</p>
<p class="NDLRefMemberDescription">Returns the current read position. </p>

<a name="classefd_1_1_circular_buffer_1a5262550e0fea81d1210cfad3d911a0c8"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetWritePos()</p>
<p class="NDLRefMemberDescription">Returns the current read position. </p>

<a name="classefd_1_1_circular_buffer_1aa2c5b30c03161452aafce30436dbb637"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetMaxBytes()</p>
<p class="NDLRefMemberDescription">Returns maximum number of bytes that can be written into this <span class="NDLSystemFont">CircularBuffer</span>. </p>

<a name="classefd_1_1_circular_buffer_1a19c751ef79b9787e2f321fcb1457b522"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a59a3838ab5cdfe87f98f5b8371e4e91d">efd::UInt8</a></span>*  GetBuffer()</p>
<p class="NDLRefMemberDescription">Returns the internal buffer used by <span class="NDLSystemFont">CircularBuffer</span>. </p>

<a name="classefd_1_1_circular_buffer_1a9d17d950062b04b1123c2e81624c9925"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsFull()</p>
<p class="NDLRefMemberDescription">Returns true if Circular buffer is Full. </p>

<a name="classefd_1_1_circular_buffer_1aa467d6c606ae330299fde651398743e8"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsEmpty()</p>
<p class="NDLRefMemberDescription">Returns true if Circular buffer is Empty. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

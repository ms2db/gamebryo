<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::StreamInfo</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::StreamInfo</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__MemObject.htm">efd::MemObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;StreamInfo.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_stream_info.gif" alt="Inheritance graph for efd::StreamInfo"/>
  <p class="FigureCaption">Inheritance graph for efd::StreamInfo</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Information about a data stream. </p>
<p class="NDLNormal">The <span class="NDLSystemFont">StreamInfo</span> class encapsulates information used when transferring data streams over the wire. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>
<a name="classefd_1_1_stream_info_1a9e1ab0a45a0f90247c094ef7abde353f"></a>
<p class=NDLRefHead2>efd::StreamInfo::Endian</p>



<p class="NDLRefMemberDetailedDescription">List of supported endian types. </p>

<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">Endian_Big</span></td>
    <td>Big <span class="NDLSystemFont"><a href="efd__Endian.htm">Endian</a></span> (non-intel architecture, typically). </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">Endian_Little</span></td>
    <td>Little <span class="NDLSystemFont"><a href="efd__Endian.htm">Endian</a></span> (Intel machines). </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">Endian_NetworkOrder</span></td>
    <td>Network byte order is the same as Little <span class="NDLSystemFont"><a href="efd__Endian.htm">Endian</a></span>. </td>
</tr>

  </tbody>
</table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_stream_info_1aa851e142c7fd72669418593a2b0d2ad1"></a>
<p class="NDLRefMemberFunction">StreamInfo()</p>
<p class="NDLRefMemberDescription">Constructor. </p>

<a name="classefd_1_1_stream_info_1aa2d16ce774ee51ad24eadd2759f17e14"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  NeedsSwap() const</p>
<p class="NDLRefMemberDescription">Determine if <span class="NDLSystemFont"><a href="efd__Endian.htm">Endian</a></span> swapping is needed. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classefd_1_1_stream_info_1ad23f1ff114973110af49341e653f4067"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">bool</span>  IsHostLittleEndian()</p>
<p class="NDLRefMemberDescription">Determine if the host is little <span class="NDLSystemFont"><a href="efd__Endian.htm">Endian</a></span>. </p>
<a name="stream_support_methods."></a>
<p class="NDLRefHead1">Stream support methods.</p>


<a name="classefd_1_1_stream_info_1aa5cc3aa0101c4773081c7a1dc99ce08a"></a>
<p class="NDLRefMemberFunction">void  SetEndian(<span class="NDLSystemFont"><a href="efd__StreamInfo.htm#classefd_1_1_stream_info_1a9e1ab0a45a0f90247c094ef7abde353f">Endian</a></span> eType)</p>
<p class="NDLRefMemberDescription">Set the endianness for the associated stream. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">eType</span></td>
    <td><span class="NDLSystemFont"><a href="efd__Endian.htm">Endian</a></span> setting for the stream. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_stream_info_1a3be3c6381aa49d6b9153ea108a0216f4"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__StreamInfo.htm#classefd_1_1_stream_info_1a9e1ab0a45a0f90247c094ef7abde353f">Endian</a></span>  GetEndian() const</p>
<p class="NDLRefMemberDescription">Get the endianness for the associated stream. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="efd__Endian.htm">Endian</a></span> setting for the stream. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_stream_info_1ae7c6d85300189fe241b31db0e0fe4824"></a>
<p class="NDLRefMemberFunction">void  SetVariant(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span> var)</p>
<p class="NDLRefMemberDescription">Set the variant (state ID) for this stream. </p>
<p class="NDLRefMemberDetailedDescription">Variants are a state enumeration that can be used to differentiate a stream condition (in packing/unpacking).</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">var</span></td>
    <td>Variant setting for the stream. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_stream_info_1a5971ca0bffe862b74b84ef7671d76fc0"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span>  GetVariant() const</p>
<p class="NDLRefMemberDescription">Get the variant (state ID) for this stream. </p>
<p class="NDLRefMemberDetailedDescription">Variants are a state enumeration that can be used to differentiate a stream condition (in packing/unpacking).</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>Variant setting for the stream. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_stream_info_1afd109b927ebfe90a9bc8c282655a2465"></a>
<p class="NDLRefMemberFunction">void  SetVersion(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> version)</p>
<p class="NDLRefMemberDescription">Set the version ID for this stream. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">version</span></td>
    <td>Version ID for the stream. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_stream_info_1ae721276e2194ecbc82cdee480997c968"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetVersion() const</p>
<p class="NDLRefMemberDescription">Get the version ID for this stream. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>Version ID for the stream. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::Graph</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::Graph</p>


<p class="NDLRefHeaderFile">&lt;AssetMetaGraph.h&gt;</p>


<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">The <span class="NDLSystemFont">Graph</span> class represents a collection of RDF triples. </p>
<p class="NDLNormal">It provides methods for loading and persisting the graph using Ntriples text-based file format. It also provides methods for searching the graph to find triples that are partial matches of the search criteria. </p>

<a name="friend_members"></a>
<p class="NDLRefHead1">Friend Members</p>


<a name="classefd_1_1_graph_1a9830fc407400559db7e7783cc10a9394"></a>
<p class="NDLRefMemberFunction">friend class  Iterator()</p>
<p class="NDLRefMemberDescription">These two classes will access private member variables. </p>

<a name="classefd_1_1_graph_1afb4612c774466bd799fc8d2efe8ae905"></a>
<p class="NDLRefMemberFunction">friend class  NTripleFormat()</p>
<p class="NDLRefMemberFunction"></p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_graph_1a63eec74e7f46489fb35382a3a720be97"></a>
<p class="NDLRefMemberFunction">void  intersection(<span class="NDLSystemFont"><a href="efd__vector.htm">TripleSet</a></span>& set)</p>
<p class="NDLRefMemberDescription">Methods for combining graph contents with another TripleSet. </p>

<a name="classefd_1_1_graph_1a6aa2a3189ebac75401a72fc77fa0766a"></a>
<p class="NDLRefMemberFunction">void  unionize(<span class="NDLSystemFont"><a href="efd__vector.htm">TripleSet</a></span>& set)</p>
<p class="NDLRefMemberDescription">Methods for combining graph contents with another TripleSet. </p>

<a name="classefd_1_1_graph_1a65caeef0b0393ac95356f42d628bb68c"></a>
<p class="NDLRefMemberFunction">static void  intersection(<br/><span class="NDLSystemFont"><a href="efd__vector.htm">TripleSet</a></span>& set, <br/>const <span class="NDLSystemFont"><a href="efd__vector.htm">TripleSet</a></span>& other)</p>
<p class="NDLRefMemberDescription">Methods for combining graph contents with another TripleSet. </p>

<a name="classefd_1_1_graph_1a372e231c9f786bc8ec7247fc79a29f57"></a>
<p class="NDLRefMemberFunction">static void  unionize(<br/><span class="NDLSystemFont"><a href="efd__vector.htm">TripleSet</a></span>& set, <br/>const <span class="NDLSystemFont"><a href="efd__vector.htm">TripleSet</a></span>& other)</p>
<p class="NDLRefMemberDescription">Methods for combining graph contents with another TripleSet. </p>

<a name="classefd_1_1_graph_1ab657fd5b58eecc9e89d331aae2835e17"></a>
<p class="NDLRefMemberFunction">static void  unique_values(<br/><span class="NDLSystemFont"><a href="efd__vector.htm">TripleSet</a></span>& set, <br/>const <span class="NDLSystemFont"><a href="efd__vector.htm">TripleSet</a></span>& other)</p>
<p class="NDLRefMemberDescription">Methods for combining graph contents with another TripleSet. </p>

<a name="classefd_1_1_graph_1a90430fb9e95ec77eab0f76d6ffe7be36"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">bool</span>  compareTriple(<br/>const <span class="NDLSystemFont"><a href="efd__Triple.htm">Triple</a></span>& a, <br/>const <span class="NDLSystemFont"><a href="efd__Triple.htm">Triple</a></span>& b)</p>
<p class="NDLRefMemberDescription">Methods for combining graph contents with another TripleSet. </p>

<a name="classefd_1_1_graph_1a6ee6272ab838a015fa2f6c86a5be4869"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  load(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& filename)</p>
<p class="NDLRefMemberDescription">Load a graph from an Ntriples file. </p>

<a name="classefd_1_1_graph_1a4e8a586adea00f18818a1947d05a3c44"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  isLoaded()</p>
<p class="NDLRefMemberDescription">Retrieve or <span class="NDLSystemFont"><a href="efd__set.htm">set</a></span> current loaded status. </p>

<a name="classefd_1_1_graph_1ad07f77ca459fe183a9ad64ab43dedc38"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aea39ed942feecdbf7cffdb0d74abdf4d">GraphSaveResult</a></span>  save(<span class="NDLSystemFont">bool</span> always_overwrite = false)</p>
<p class="NDLRefMemberDescription">Serialize a graph in Ntriples format. </p>
<p class="NDLRefMemberDetailedDescription">Will default to using the same filename previously passed to <span class="NDLSystemFont"><a href="efd__Graph.htm#classefd_1_1_graph_1a6ee6272ab838a015fa2f6c86a5be4869">load()</a></span>. </p>

<a name="classefd_1_1_graph_1a31a6879ed18fd3ac723fc6cf1e54f5a9"></a>
<p class="NDLRefMemberFunction">void  purge(<span class="NDLSystemFont">efd::Bool</span> removePersistent)</p>
<p class="NDLRefMemberDescription">Remove all data previously associated with the <span class="NDLSystemFont">Graph</span>, including persistent data. </p>

<a name="classefd_1_1_graph_1af4c9f8e391dfb4ba5e8f84abff09e5f0"></a>
<p class="NDLRefMemberFunction">void  query(<br/>const <span class="NDLSystemFont"><a href="efd__Triple.htm">Triple</a></span>& q, <br/><span class="NDLSystemFont"><a href="efd__vector.htm">TripleSet</a></span>& matches)</p>
<p class="NDLRefMemberDescription">Query the graph for all matching triples. </p>

<a name="classefd_1_1_graph_1a3b70cb1b1845ce02fb514342fb40a97b"></a>
<p class="NDLRefMemberFunction">void  queryWithCompare(<br/>const <span class="NDLSystemFont"><a href="efd__Triple.htm">Triple</a></span>& q, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a75c7e5f71a52eea79494959e20759060">AssetQueryCompareFunc</a></span> comp, <br/><span class="NDLSystemFont"><a href="efd__vector.htm">TripleSet</a></span>& matches)</p>
<p class="NDLRefMemberDescription">Query the graph for all matching triples as indicated by the compare function. </p>

<a name="classefd_1_1_graph_1aa881a24d7d444e0703a757462503ec35"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  append(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& subject, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& value)</p>
<p class="NDLRefMemberDescription">Add a new property value. </p>
<p class="NDLRefMemberDetailedDescription">Any index associated with 'value' may also be updated if it is passed in as the 'index' parameter. </p>

<a name="classefd_1_1_graph_1aa5fea1cdde6d5885304e1336bbf9aa81"></a>
<p class="NDLRefMemberFunction">void  deleteAllSubject(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& subject)</p>
<p class="NDLRefMemberDescription">Delete all triples with matching 'subject' value. </p>

<a name="classefd_1_1_graph_1ae7b3b1261711308758614b44dd831365"></a>
<p class="NDLRefMemberFunction">void  merge_triple(const <span class="NDLSystemFont"><a href="efd__Triple.htm">Triple</a></span>& triple)</p>
<p class="NDLRefMemberDescription">Methods for inserting triples into the graph. </p>
<a name="constructor"></a>
<p class="NDLRefHead1">Constructor</p>


<a name="classefd_1_1_graph_1a452338bb3cbef9c4f64d0f7f9e92a640"></a>
<p class="NDLRefMemberFunction">Graph(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& predicate, <br/><span class="NDLSystemFont">efd::Bool</span> isIndexed = false, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& refValue = "")</p>
<p class="NDLRefMemberDescription">Create a <span class="NDLSystemFont">Graph</span> object. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">predicate</span></td>
    <td>The common predicate value for all triples in the <span class="NDLSystemFont">Graph</span></td>
</tr>
<tr>
    <td><span class="NDLSystemFont">isIndexed</span></td>
    <td>Set to true to include a value-&gt;subject index for fast searching </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">refValue</span></td>
    <td>Some graphs have the same object value for every triple. Specify that value in this parameter. This is used for specifying asset tags. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_graph_1abaf96de93a339bda8dde6210bed1c208"></a>
<p class="NDLRefMemberFunction">Graph()</p>
<p class="NDLRefMemberDescription">Default constructor. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

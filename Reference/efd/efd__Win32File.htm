<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::Win32File</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::Win32File</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__FileCommon.htm">efd::FileCommon</a></span></p>


<p class="NDLRefHeaderFile">&lt;Win32File.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_win32_file.gif" alt="Inheritance graph for efd::Win32File"/>
  <p class="FigureCaption">Inheritance graph for efd::Win32File</p>
</div>
</p>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_win32_file_1a6f904f4ab5764b93cebbf2e24e8de141"></a>
<p class="NDLRefMemberFunction">Win32File(<br/>const char* pcName, <br/><span class="NDLSystemFont"><a href="efd__File.htm#classefd_1_1_file_1aebb61699dfb91f58aa1a287ff8dad1c5">OpenMode</a></span> eMode, <br/>unsigned int uiBufferSize = 32768, <br/><span class="NDLSystemFont">bool</span> flushOnWrite = false)</p>
<p class="NDLRefMemberDescription">Constructor. </p>
<p class="NDLRefMemberDetailedDescription">Opens the file pcName in mode eMode.</p>
<p class="NDLRefMemberDetailedDescription">The size of the internal buffer used to cache data from the file is uiBufferSize. This value should generally be left at the default value unless memory is tight.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pcName</span></td>
    <td>Filename. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">eMode</span></td>
    <td>Open mode (read versus write versus append). </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiBufferSize</span></td>
    <td>Buffer size (defaults to 32768). </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">flushOnWrite</span></td>
    <td>if false buffer writes until we fill the buffer. If true, flush after every write call. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_win32_file_1adc4c582e998223fb2ba38c8d28d6ad03"></a>
<p class="NDLRefMemberFunction">virtual ~Win32File()</p>
<p class="NDLRefMemberDescription">Virtual destructor. </p>

<a name="classefd_1_1_win32_file_1afd5ebed7fc02617e102e0b4040e981bc"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  Seek(<br/>int offset, <br/><span class="NDLSystemFont"><a href="efd__File.htm#classefd_1_1_file_1a8f5eb7d45e5cf11a53aaa2961158cf2d">SeekOrigin</a></span> seekFrom)</p>
<p class="NDLRefMemberDescription">Reset the current read/write position of the file. </p>
<p class="NDLRefMemberDetailedDescription">The new position is determined by an offset and a starting location. The starting location for the seek operation can be one of the following:</p>
<p class="NDLRefMemberDetailedDescription">
<ul>
<li>Beginning of the file</li>
<li>End of the file</li>
<li>Current location in the file.</li></ul></p>
<p class="NDLRefMemberDetailedDescription">Passing a negative value into iOffset will move the current position back towards the beginning of the file, while a positive value will advance the position towards the end of the file.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">offset</span></td>
    <td>Number of bytes to move (forward or backward) from the starting location of the seek operation. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">seekFrom</span></td>
    <td>Starting location of the seek operation. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if successful, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_win32_file_1a825a760253ad00125871e0199e246931"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  Flush()</p>
<p class="NDLRefMemberDescription">Flush all buffered data to the file. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>: True if flush of all buffered data to file succeeded; false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_win32_file_1afd0ba842831c03481f82e88bd1d14d50"></a>
<p class="NDLRefMemberFunction">virtual unsigned int  GetFileSize() const</p>
<p class="NDLRefMemberDescription">Return the size of the file in bytes. </p>

<a name="classefd_1_1_win32_file_1a445060c23cdf70f37d143ff7b943500b"></a>
<p class="NDLRefMemberFunction">virtual void  SetEndianSwap(<span class="NDLSystemFont">bool</span> bDoSwap)</p>
<p class="NDLRefMemberDescription">Set whether endian swapping is needed. </p>
<p class="NDLRefMemberDetailedDescription">The base class has two function pointers that point to the current read and write functions for a given binary stream. Derived functions should <span class="NDLSystemFont"><a href="efd__set.htm">set</a></span> those function pointers to either raw I/O functions or to functions that endian swap, based on the value bDoSwap.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">bDoSwap</span></td>
    <td>Whether endian swapping is needed. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::URIReader</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::URIReader</p>


<p class="NDLRefHeaderFile">&lt;AssetUriReader.h&gt;</p>


<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class provides methods for creating and dealing with URIs as they are used by the other Asset Service classes. </p>
<p class="NDLNormal">The fundamental purpose is to parse a URI string into its constituent parts, like individual tags, the asset name, the asset Id, etc. </p>

<a name="constants"></a>
<p class="NDLRefHead1">Constants</p>

<p class="NDLRefMemberDescription">We define several string constants for predicates used in the asset web metadata.</p>

<a name="classefd_1_1_u_r_i_reader_1ae18cd264138c734f38ef02e122a2826a"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1a32eb1e003b0616ca08e218cf8da753ae"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_tag</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1af0605acca988f6f0e64d4b58a6f9c44d"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_label</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1aff14f4cb68f94e85efb02d446c89da8b"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_class</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1a135bf7aec85f61115eaf41b795dcd68b"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_name</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1acdd1599cc2b33cb67ac449af80a3e192"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_relpath</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1a1a59d64ebcab0df141ff8906ec9a50ec"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_canonical</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1a687835862aac4900f15c528e2d878c85"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_llid</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1a47ddff988bf4ffa60c795d6b761a7084"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_logpath</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1a1e1e2b5e28f7a07c66922f99779ece69"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_stdtags</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1a7c9878f878e24e854da7d26d3198f87f"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_stdtags_value</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1ab9c11b482a7ff6e5c9dbd4f722e303f0"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_usertags</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1a3388677f384036d30e2b9da0b0a01e95"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_usertags_value</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1a51ad140d442397edcb7866936828b389"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_userenums</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1ac6ec6dc4808e69dc20ad9418b1817e0a"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_userenums_value</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1ab5382492b8239b6be1ef08e431e478bf"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_ids</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1afe197ebad4a19919f1295855260f6366"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_ids_instance</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1a90b877da18996af9f812384098c9c287"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_ids_author</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1a3f71d27e89efaf9efc538a34a9f17e5f"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_ckpt</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1af79a6a7b5fa7bb609c76759796916164"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_ckpt_success</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1afc6154df9be1b14b0d9c9f738b353101"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_ckpt_hash</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1af72f122a56aa8a90946fb789252b3e41"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_ckpt_version</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1ad62dce61ef12d8afbbf8b2e1a4834c3a"></a>
<p class="NDLRefMemberFunction">static const char*  GlobalNamespace_llid_persist</p>
<p class="NDLRefMemberFunction"></p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_u_r_i_reader_1aed4484e2c625f89500e5462bfde8e07c"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  isAssetId()</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1af9f25bd18857d1ce68a5bfed409b4d3b"></a>
<p class="NDLRefMemberFunction">void  getAssetId(<span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& uri)</p>
<p class="NDLRefMemberDescription">Retrieves the URI in the typical asset id format like 'urn:uuid:XXXXX'. </p>

<a name="classefd_1_1_u_r_i_reader_1a7631f54fe5eaf151126879d8b1b90c7f"></a>
<p class="NDLRefMemberFunction">void  getScheme(<span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& scheme)</p>
<p class="NDLRefMemberDescription">Retrieve the scheme of the URI. Should always be equal to 'urn'. </p>

<a name="classefd_1_1_u_r_i_reader_1aea746501e64fcfa9601f52d6f24fbbd9"></a>
<p class="NDLRefMemberFunction">void  getNameLiteral(<span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& name)</p>
<p class="NDLRefMemberDescription">Retrieve the asset name element of the URI, if present. </p>

<a name="classefd_1_1_u_r_i_reader_1ad21491cc088d13965093622e35cd6006"></a>
<p class="NDLRefMemberFunction">void  getCanonicalLiteral(<span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& name)</p>
<p class="NDLRefMemberDescription">Retrieve the canonical path for the asset URI, if present. </p>

<a name="classefd_1_1_u_r_i_reader_1aee6e749c31f3a0523ac0f224828adcf1"></a>
<p class="NDLRefMemberFunction">void  getLogicalId(<span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& id)</p>
<p class="NDLRefMemberDescription">Retrieve the logical asset id for the asset URI, if present. </p>

<a name="classefd_1_1_u_r_i_reader_1a239197900ed0d93f5b2b7f5bdb80bb81"></a>
<p class="NDLRefMemberFunction">void  getTagLiterals(<span class="NDLSystemFont"><a href="efd__vector.htm">efd::vector</a></span>&lt;<span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>&gt;& tagNames)</p>
<p class="NDLRefMemberDescription">Retrieve a <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span> of all the tags in the URI. </p>

<a name="classefd_1_1_u_r_i_reader_1a9c4142fb93c5fe56fb1b50eddd45126d"></a>
<p class="NDLRefMemberFunction">void  getLabels(<span class="NDLSystemFont"><a href="efd__vector.htm">efd::vector</a></span>&lt;<span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>&gt;& labelNames)</p>
<p class="NDLRefMemberDescription">Retrieve a <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span> of all the label tags in the URI. </p>

<a name="classefd_1_1_u_r_i_reader_1a0b4004627a254921ec9ad002929dadef"></a>
<p class="NDLRefMemberFunction">void  getClassifications(<span class="NDLSystemFont"><a href="efd__vector.htm">efd::vector</a></span>&lt;<span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>&gt;& classNames)</p>
<p class="NDLRefMemberDescription">Retrieve a <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span> of all the classification tags in the URI. </p>

<a name="classefd_1_1_u_r_i_reader_1a181a297212bf40f47e722730918ffdd9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  hasTag(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& tag)</p>
<p class="NDLRefMemberDescription">Check and return True if 'tag' is one of the tags in the URI. </p>

<a name="classefd_1_1_u_r_i_reader_1a337e8839602c2f32f1cb298e77179a90"></a>
<p class="NDLRefMemberFunction">int  UpperBitsValue()</p>
<p class="NDLRefMemberDescription">Retrieve the decimal value of the upper 8 bits of the name for <span class="NDLSystemFont"><a href="efd__URIReader.htm#classefd_1_1_u_r_i_reader_1aed4484e2c625f89500e5462bfde8e07c">isAssetId()</a></span>==True. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classefd_1_1_u_r_i_reader_1a612e0cba9885571c6f039bef3144bbec"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">efd::Bool</span>  isAssetId(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span>& uri)</p>
<p class="NDLRefMemberDescription">Specifies whether the URI represents a valid physical asset id (format urn:uuid:X). </p>

<a name="classefd_1_1_u_r_i_reader_1a80618101087fad403e211dc53cbd2769"></a>
<p class="NDLRefMemberFunction">static void  _SDMInit()</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_u_r_i_reader_1ac006e52ebeae588e389727e993b6dda8"></a>
<p class="NDLRefMemberFunction">static void  _SDMShutdown()</p>
<p class="NDLRefMemberFunction"></p>
<a name="constructors"></a>
<p class="NDLRefHead1">Constructors</p>


<a name="classefd_1_1_u_r_i_reader_1a7bfe51649e107d98eb6e14fb2b8a763f"></a>
<p class="NDLRefMemberFunction">URIReader(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& uri)</p>
<p class="NDLRefMemberDescription">Create a <span class="NDLSystemFont">URIReader</span> class from the given URI string value. </p>

<a name="classefd_1_1_u_r_i_reader_1a696853d73d0175f6d998f70ede3f3989"></a>
<p class="NDLRefMemberFunction">URIReader(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& uri, <br/>const <span class="NDLSystemFont"><a href="efd__vector.htm">efd::vector</a></span>&lt;<span class="NDLSystemFont"><a href="efd__AssetTagDescriptor.htm">AssetTagDescriptor</a></span>&gt;& tagNames)</p>
<p class="NDLRefMemberDescription">Create a <span class="NDLSystemFont">URIReader</span> class for the 'uri' string, but allow it to contain any tags in 'tagNames'. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

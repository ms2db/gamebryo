<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::AssetLocatorRequest</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::AssetLocatorRequest</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__IMessage.htm">efd::IMessage</a></span></p>


<p class="NDLRefHeaderFile">&lt;AssetLocatorRequest.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_asset_locator_request.gif" alt="Inheritance graph for efd::AssetLocatorRequest"/>
  <p class="FigureCaption">Inheritance graph for efd::AssetLocatorRequest</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Message class for the <span class="NDLSystemFont"><a href="efd__AssetLocatorService.htm">AssetLocatorService</a></span> request messages. </p>

<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classefd_1_1_asset_locator_request_1aa064600fedea3e72c92c1b22135343e7"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont">AssetLocatorRequest</span>&gt;  CreateTypedMessage(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a11b3d968bc96d7f04115a0aad3893469">efd::ClassID</a></span> msgClassID, <br/><span class="NDLSystemFont"><a href="efd__MessageService.htm">MessageService</a></span>* pMessageService)</p>
<p class="NDLRefMemberDescription">Helper function to factory a message of a specific type. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_asset_locator_request_1a31ffbd9f47f34da3b00a98bf0cad32d2"></a>
<p class="NDLRefMemberFunction">AssetLocatorRequest()</p>
<p class="NDLRefMemberDetailedDescription">Constructor </p>

<a name="classefd_1_1_asset_locator_request_1a5993be13373e57bc3f8862c627e87161"></a>
<p class="NDLRefMemberFunction">virtual void  SetURI(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& uri_request)</p>
<p class="NDLRefMemberDescription">Set URI value for request. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uri_request</span></td>
    <td>Asset URI value. Should be of the form for either and asset Id (urn: uuid: [GUID value]) or an asset URI (urn:tag1:tag2:etc.) </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_locator_request_1a242c7bfeec8ce4cba6189aeebba6c9a6"></a>
<p class="NDLRefMemberFunction">virtual const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>&  GetURI() const</p>
<p class="NDLRefMemberDescription">Get URI value for request. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span> Value of the message's asset URI. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_locator_request_1aae6579521b3dabf4dbe9953cdb49e8be"></a>
<p class="NDLRefMemberFunction">virtual void  SetPathHint(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& pathHint)</p>
<p class="NDLRefMemberDescription">Sets a path hint. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pathHint</span></td>
    <td>The path hint. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_locator_request_1af46b0cfe8a39f825628e38f3b068c1f4"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>&  GetPathHint() const</p>
<p class="NDLRefMemberDescription">Gets the path hint. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>The path hint. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_locator_request_1a5bd393ff5e2184b1d99841595882fb19"></a>
<p class="NDLRefMemberFunction">virtual void  CallbackCategory(const <span class="NDLSystemFont"><a href="efd__Category.htm">efd::Category</a></span>& callback)</p>
<p class="NDLRefMemberDescription">Set private process callback category. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">callback</span></td>
    <td>A category to use to respond to the requesting process. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_locator_request_1a98da5c3b317bac89df7c570fd2d5dc07"></a>
<p class="NDLRefMemberFunction">virtual const <span class="NDLSystemFont"><a href="efd__Category.htm">efd::Category</a></span>&  CallbackCategory() const</p>
<p class="NDLRefMemberDescription">Get private process callback category. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>const <span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span> A category to use to respond to the requesting process. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_locator_request_1acd454a228ba9ec472a90d8aab28f0868"></a>
<p class="NDLRefMemberFunction">virtual void  ClientCategory(const <span class="NDLSystemFont"><a href="efd__Category.htm">efd::Category</a></span>& callback)</p>
<p class="NDLRefMemberDescription">Set private client callback category. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">callback</span></td>
    <td>A category to use to respond to the requesting client. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_locator_request_1a9b308d14ffe862826f4740cf85ea62a8"></a>
<p class="NDLRefMemberFunction">virtual const <span class="NDLSystemFont"><a href="efd__Category.htm">efd::Category</a></span>&  ClientCategory() const</p>
<p class="NDLRefMemberDescription">Get private client callback category. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>const <span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span> A category to use to respond to the requesting client. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_locator_request_1a29940977f83bc5fe61a27c812af201db"></a>
<p class="NDLRefMemberFunction">virtual void  Serialize(<span class="NDLSystemFont"><a href="efd__Archive.htm">efd::Archive</a></span>& io_ar)</p>
<p class="NDLRefMemberDescription">Serialize a polymorphic type to or from an <span class="NDLSystemFont"><a href="efd__Archive.htm">Archive</a></span>. </p>
<p class="NDLRefMemberDetailedDescription">This method must be overridden, but if your streamable object has no data the override can be an empty function. A typical implementation of this method will make one call to <span class="NDLSystemFont"><a href="../Namespaces/efd__Serializer.htm#namespaceefd_1_1_serializer_1a63e0b99047011bde53be44786ab9ee7b">efd::Serializer::SerializeObject</a></span> for each member of the class. If you are derived from another streamable class you should be sure to call to parent implementation of this method as well; it is recommended that the parent class be serialized first before adding the data for the derived class. If your class contains complex data such as STL-style contianers or pointers to allocated data then you can simplify the implementation of Serialize by using the templated helper functions in &lt;<span class="NDLSystemFont">efd/SerializeRoutines.h</span>&gt;; these can serialize even the most complex data structures with a single method call and will reduce the chance of making common mistakes (which could introduce security vulnerabilities if marshalling data from untrusted sources).</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">io_ar</span></td>
    <td>The <span class="NDLSystemFont"><a href="efd__Archive.htm">Archive</a></span> to serialize to or from. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

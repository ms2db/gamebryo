<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::LoopedThreadProcedure</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::LoopedThreadProcedure</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__ThreadFunctor.htm">efd::ThreadFunctor</a></span></p>


<p class="NDLRefHeaderFile">&lt;LoopedThreadProcedure.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_looped_thread_procedure.gif" alt="Inheritance graph for efd::LoopedThreadProcedure"/>
  <p class="FigureCaption">Inheritance graph for efd::LoopedThreadProcedure</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal"><span class="NDLSystemFont">efd::LoopedThreadProcedure</span> defines the function and associated data that will run in an <span class="NDLSystemFont"><a href="efd__LoopedThread.htm">efd::LoopedThread</a></span>. </p>
<p class="NDLNormal">While not abstract, applications should not create instances of this class but should instead define some useful subclass that overrides LoopedProcedure. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>
<a name="classefd_1_1_looped_thread_procedure_1adee85ca72c1c52216c049a75616f6cdb"></a>
<p class=NDLRefHead2>efd::LoopedThreadProcedure::ReturnCode</p>


<p class="NDLRefMemberDescription">Enumerate the possible return values of this <span class="NDLSystemFont"><a href="efd__ThreadFunctor.htm">ThreadFunctor</a></span>. </p>


<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">THREAD_TERMINATED</span></td>
    <td>Indicates the thread was terminated by <span class="NDLSystemFont"><a href="efd__LoopedThread.htm#classefd_1_1_looped_thread_1a21c4882b3306c96b0416aaa4e075569d">LoopedThread::Shutdown()</a></span>. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">PROC_TERMINATED</span></td>
    <td>Indicates the thread was terminated by the LoopedProcedure. </td>
</tr>

  </tbody>
</table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_looped_thread_procedure_1a3e368053b6be2a16b676cbd82b227448"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  LoopedProcedure(<span class="NDLSystemFont"><a href="efd__Thread.htm">efd::Thread</a></span>* pArg)</p>
<p class="NDLRefMemberDescription">This function describes a single iteration of a loop. </p>
<p class="NDLRefMemberDetailedDescription">This function is the one that classes derived from <span class="NDLSystemFont">LoopedThreadProcedure</span> should override. It returns false if the <span class="NDLSystemFont"><a href="efd__Thread.htm">Thread</a></span> should terminate or true if the <span class="NDLSystemFont"><a href="efd__Thread.htm">Thread</a></span> should be kept alive so that this function may be called again. <span class="NDLSystemFont"><a href="efd__LoopedThread.htm">LoopedThread</a></span> may also be externally signaled through its Shutdown() function to stop looping.</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">The thread will never be terminated in the middle of a LoopedProcedure function call. It will always wait until the loop completes.</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pArg</span></td>
    <td>Pointer to a thread. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the thread should continue looping; false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::utf8char_t</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::utf8char_t</p>


<p class="NDLRefHeaderFile">&lt;utf8char.h&gt;</p>


<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Structure in support of UTF-8 chars, as defined by the Unicode Standard. </p>
<p class="NDLNormal">In UTF-8, characters from the U+0000..U+10FFFF range (the UTF-16 accessible range) are encoded using sequences of 1 to 4 octets. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>
<a name="structefd_1_1utf8char__t_1acaed8d37bdd707c97baddeab52cffe8d"></a>
<p class=NDLRefHead2>anonymous enum</p>




<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">kReservedUnits</span></td>
    <td>Need 5 8-bit storage units, since we keep the internal buffer null terminated. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kReservedBytes</span></td>
    <td>Bytes occupied by storage units. </td>
</tr>

  </tbody>
</table>
</div>


<a name="public_attributes"></a>
<p class="NDLRefHead1">Public Attributes</p>


<a name="structefd_1_1utf8char__t_1a13272224158733d35fb134ceebe9e53e"></a>
<p class="NDLRefMemberFunction">char  bytes[kReservedUnits]</p>
<p class="NDLRefMemberDescription">Array of storage units. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="structefd_1_1utf8char__t_1ac0728ceed234c76655d56a236ab56e1d"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">utf8char_t</span>  from_stream(const char* buffer_sz)</p>
<p class="NDLRefMemberDescription">Construct a character from the first utf8-encoded sequence of a stream. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="structefd_1_1utf8char__t_1a51691a59154e5c73f6756bfabc30a6b2"></a>
<p class="NDLRefMemberFunction">utf8char_t()</p>
<p class="NDLRefMemberDescription">These constructors support conversions between various Unicode 3.1 encodings, but they do NOT support locale-specific translation into Unicode. </p>

<a name="structefd_1_1utf8char__t_1ada4e0fd08349d5ddd6454950b78012a7"></a>
<p class="NDLRefMemberFunction">utf8char_t(const <span class="NDLSystemFont">utf8char_t</span>& rhs)</p>
<p class="NDLRefMemberDescription">These constructors support conversions between various Unicode 3.1 encodings, but they do NOT support locale-specific translation into Unicode. </p>

<a name="structefd_1_1utf8char__t_1a040d53828d8122c069ecff7b9cd95754"></a>
<p class="NDLRefMemberFunction">utf8char_t(const <span class="NDLSystemFont"><a href="efd__utf16char_t.htm">utf16char_t</a></span>& rhs)</p>
<p class="NDLRefMemberDescription">These constructors support conversions between various Unicode 3.1 encodings, but they do NOT support locale-specific translation into Unicode. </p>

<a name="structefd_1_1utf8char__t_1adf1fec1b7ef94bcb9755d519c401fcc7"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator==(const <span class="NDLSystemFont">utf8char_t</span>& rhs) const</p>
<p class="NDLRefMemberDescription">Comparison operators. </p>

<a name="structefd_1_1utf8char__t_1a56ebdb450d549c07d051b465006ebf93"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator!=(const <span class="NDLSystemFont">utf8char_t</span>& rhs) const</p>
<p class="NDLRefMemberDescription">These constructors support conversions between various Unicode 3.1 encodings, but they do NOT support locale-specific translation into Unicode. </p>

<a name="structefd_1_1utf8char__t_1a6088bdff5c164d3fa4815e195dadce75"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator&lt;(const <span class="NDLSystemFont">utf8char_t</span>& rhs) const</p>
<p class="NDLRefMemberDescription">These constructors support conversions between various Unicode 3.1 encodings, but they do NOT support locale-specific translation into Unicode. </p>

<a name="structefd_1_1utf8char__t_1ae14077d0bf8976dda11e2de6c918a890"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator&lt;=(const <span class="NDLSystemFont">utf8char_t</span>& rhs) const</p>
<p class="NDLRefMemberDescription">These constructors support conversions between various Unicode 3.1 encodings, but they do NOT support locale-specific translation into Unicode. </p>

<a name="structefd_1_1utf8char__t_1a22ff54205ab51193c44e61cd7dff833a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator&gt;(const <span class="NDLSystemFont">utf8char_t</span>& rhs) const</p>
<p class="NDLRefMemberDescription">These constructors support conversions between various Unicode 3.1 encodings, but they do NOT support locale-specific translation into Unicode. </p>

<a name="structefd_1_1utf8char__t_1a9c5e43c9b9018fe46426e4559b14a269"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator&gt;=(const <span class="NDLSystemFont">utf8char_t</span>& rhs) const</p>
<p class="NDLRefMemberDescription">These constructors support conversions between various Unicode 3.1 encodings, but they do NOT support locale-specific translation into Unicode. </p>

<a name="structefd_1_1utf8char__t_1a0c000f6eca35f2e3ab1b4cc27a819b93"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator==(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1add86b31b043c249b287806395efeecd4">efd::Char</a></span> rhs) const</p>
<p class="NDLRefMemberDescription">These constructors support conversions between various Unicode 3.1 encodings, but they do NOT support locale-specific translation into Unicode. </p>

<a name="structefd_1_1utf8char__t_1aa59b9c1f34d0ec6b9b5919087ad99532"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator!=(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1add86b31b043c249b287806395efeecd4">efd::Char</a></span> rhs) const</p>
<p class="NDLRefMemberDescription">These constructors support conversions between various Unicode 3.1 encodings, but they do NOT support locale-specific translation into Unicode. </p>

<a name="structefd_1_1utf8char__t_1a1747d7ee64661e7d70cc4bef2165ccf5"></a>
<p class="NDLRefMemberFunction">utf8char_t(unsigned int rhs)</p>
<p class="NDLRefMemberDescription">This constructor is dangerous, since all sorts of types can automatically cast to an unsigned int and only a very small number of those are valid UTF32 values. </p>
<p class="NDLRefMemberDetailedDescription">Use of this constructor will compile without errors in many cases where you want an error to be generated. On the other hand, it is very convenient, as long as its used correctly. </p>

<a name="structefd_1_1utf8char__t_1adb4986f7d6df5fa349d3baf9a74cd2eb"></a>
<p class="NDLRefMemberFunction">const char*  c_str() const</p>
<p class="NDLRefMemberDescription">Get a C-string representation of this character. </p>

<a name="structefd_1_1utf8char__t_1a56d30c146b83ec470c100c6f84f86940"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  is_valid() const</p>
<p class="NDLRefMemberDescription">Validate the utf8-encoding of this character. </p>

<a name="structefd_1_1utf8char__t_1aee93aedb0396a4ad61cb70d717ce643d"></a>
<p class="NDLRefMemberFunction">void  FromUTF32(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a8a230daba237d04a03bd183befd54fdb">utf32char_t</a></span> code)</p>
<p class="NDLRefMemberDescription">Convert from UTF-32. </p>

<a name="structefd_1_1utf8char__t_1a5a19c105cfdbf755a48873d4eb94730f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a8a230daba237d04a03bd183befd54fdb">utf32char_t</a></span>  ToUTF32() const</p>
<p class="NDLRefMemberDescription">Convert to UTF-32. </p>

<a name="structefd_1_1utf8char__t_1af8694968c91d9279e567491d08ccea1f"></a>
<p class="NDLRefMemberFunction">char  ToAscii(char chDefault = '?') const</p>
<p class="NDLRefMemberDescription">Convert to ASCII. </p>

<a name="structefd_1_1utf8char__t_1aa1bd7dc9a2866fd7ae38ffbdb17e9f71"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">utf8char_t</span>&  operator=(const <span class="NDLSystemFont">utf8char_t</span>& rhs)</p>
<p class="NDLRefMemberDescription">Assignment operator. </p>

<a name="structefd_1_1utf8char__t_1a2aeb9c19f1a55603e2540c3bce8484f6"></a>
<p class="NDLRefMemberFunction">unsigned  size() const</p>
<p class="NDLRefMemberDescription">Get the size, in bytes, of this utf8-encoded character. </p>

<a name="structefd_1_1utf8char__t_1a91e261a3b03bf0efa271e726b4a34974"></a>
<p class="NDLRefMemberFunction">void  Serialize(<span class="NDLSystemFont"><a href="efd__Archive.htm">efd::Archive</a></span>& ar)</p>
<p class="NDLRefMemberDescription">Serialization. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

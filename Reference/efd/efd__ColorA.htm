<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::ColorA</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::ColorA</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__MemObject.htm">efd::MemObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;Color.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_color_a.gif" alt="Inheritance graph for efd::ColorA"/>
  <p class="FigureCaption">Inheritance graph for efd::ColorA</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class represents floating-point RGBA colors. </p>
<p class="NDLNormal">Normally, colors are assumed to be in the range [0.0,1.0] for each component, but this assumption is not required inherently. The data members m_r, m_g, m_b, and m_a are all declared public for application convenience. </p>

<a name="friend_members"></a>
<p class="NDLRefHead1">Friend Members</p>


<a name="classefd_1_1_color_a_1a4258c749d693a41cb33d9e7d4ad84e3d"></a>
<p class="NDLRefMemberFunction">EE_EFD_ENTRY friend <span class="NDLSystemFont">ColorA</span>  operator*(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> scalar, <br/>const <span class="NDLSystemFont">ColorA</span>& c)</p>
<p class="NDLRefMemberDescription">Multiples a color and a scalar. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">scalar</span></td>
    <td>Scalar to apply to the color. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">c</span></td>
    <td><span class="NDLSystemFont"><a href="efd__Color.htm">Color</a></span> with which to scale. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A new color containing the scaled version of the color specified. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_attributes"></a>
<p class="NDLRefHead1">Public Attributes</p>


<a name="classefd_1_1_color_a_1a5ec83b42db5eac0f27cc65a4e0f4077f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  m_r</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_color_a_1a081d5bce21d1719a45e10de44c31888e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  r</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_color_a_1a98baa0c9aeea0bf7fe60efb211065362"></a>
<p class="NDLRefMemberFunction">union efd::ColorA::@264  @265</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_color_a_1a11071138aab67eb5a5d68f886e7994ab"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  m_g</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_color_a_1a830567f1dad112f133b950e169bc62db"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  g</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_color_a_1adecb04fa1c90ca073d3d853974cfd354"></a>
<p class="NDLRefMemberFunction">union efd::ColorA::@266  @267</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_color_a_1aea2a0495d2335db4ec27ff197430f88a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  m_b</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_color_a_1a217efd53abc9a7c84e7c1fecf4563e01"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  b</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_color_a_1a4523fa19b42dd59e381380386ad8baa3"></a>
<p class="NDLRefMemberFunction">union efd::ColorA::@268  @269</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_color_a_1a8da8619dee48ee877e03978a5ed1654f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  m_a</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_color_a_1a2156d8893527d61a065ff8189e84858b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  a</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_color_a_1a610f661b294312426114985a8c6ab1e2"></a>
<p class="NDLRefMemberFunction">union efd::ColorA::@270  @271</p>
<p class="NDLRefMemberFunction"></p>
<a name="public_static_attributes"></a>
<p class="NDLRefHead1">Public Static Attributes</p>


<a name="classefd_1_1_color_a_1a1249128beb87f6a401377e2048030049"></a>
<p class="NDLRefMemberFunction">static const <span class="NDLSystemFont">ColorA</span>  WHITE</p>
<p class="NDLRefMemberDescription">Convenience color representing opaque white. (1,1,1,1). </p>

<a name="classefd_1_1_color_a_1a86b609e1f921855266bc2d54a901aa29"></a>
<p class="NDLRefMemberFunction">static const <span class="NDLSystemFont">ColorA</span>  BLACK</p>
<p class="NDLRefMemberDescription">Convenience color representing opaque black. (0,0,0,1). </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_color_a_1a18fe0ac7b369f3843cb1cb95c6fdb415"></a>
<p class="NDLRefMemberFunction">ColorA(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> initR = 0.0f, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> initG = 0.0f, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> initB = 0.0f, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> initA = 0.0f)</p>
<p class="NDLRefMemberDescription">Constructs a new color instance. </p>
<p class="NDLRefMemberDetailedDescription">If no parameters are specified, the color <span class="NDLSystemFont"><a href="efd__set.htm">set</a></span><span class="NDLSystemFont"><a href="efd__set.htm">set</a></span> to (0,0,0,0) or translucent black. </p>

<a name="classefd_1_1_color_a_1afa7b84f2fa9b01976c808db3cbdaa702"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">ColorA</span>&  operator=(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> scalar)</p>
<p class="NDLRefMemberDescription">Assigns a single scalar value to this color object. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">scalar</span></td>
    <td>The scalar value. This is copied to each color channel. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A reference to this color instance. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_color_a_1ac178026850190d463f9088196afeffa6"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator==(const <span class="NDLSystemFont">ColorA</span>& c) const</p>
<p class="NDLRefMemberDescription">Performs an  equality test. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">c</span></td>
    <td>The color with which to compare to this one. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if exactly equal, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_color_a_1ad46b0a2b6e6aa5dcc6e611b9c29ea9eb"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator!=(const <span class="NDLSystemFont">ColorA</span>& c) const</p>
<p class="NDLRefMemberDescription">Performs an  in-equality test. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">c</span></td>
    <td>The color with which to compare to this one. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if not equal, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_color_a_1a8de7c06bf8d828e85c0c48395ffae5e6"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">ColorA</span>  operator+(const <span class="NDLSystemFont">ColorA</span>& c) const</p>
<p class="NDLRefMemberDescription">Member wise addition. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">c</span></td>
    <td>The color to add to this one. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A new color representing the addition of this color and the other color. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_color_a_1a4541a33c3f7268501b12e4d30b425819"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">ColorA</span>  operator-(const <span class="NDLSystemFont">ColorA</span>& c) const</p>
<p class="NDLRefMemberDescription">Member wise subtraction. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">c</span></td>
    <td>The color to subtract from this one. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A new color representing the difference of this color and the other color. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_color_a_1a9821c2cf246fb32033d10c7b6156c66b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">ColorA</span>  operator*(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> scalar) const</p>
<p class="NDLRefMemberDescription">Scales all channels of this color by the specified scalar. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">This color is not modified. </p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">scalar</span></td>
    <td>The scalar value to apply to this color. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A new color representing the scaled version of this color. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_color_a_1a44f8693d032f632228302d041f233bdf"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">ColorA</span>  operator*(const <span class="NDLSystemFont">ColorA</span>& c) const</p>
<p class="NDLRefMemberDescription">Member wise multiplication of two colors. </p>
<p class="NDLRefMemberDetailedDescription">(NOT a dot product) </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">c</span></td>
    <td><span class="NDLSystemFont"><a href="efd__Color.htm">Color</a></span> value to multiply with this one. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A new color representing the product of this color and the one specified. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_color_a_1ac5ed8b0443605eddf0f7fd4f9f9817c0"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">ColorA</span>  operator/(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> scalar) const</p>
<p class="NDLRefMemberDescription">Divides all channels of this color by the specified scalar. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">scalar</span></td>
    <td>The scalar with which to divide. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A new color representing the division of this color by the specified scalar. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_color_a_1affd8c6071b4fb16b97bf97524fb24225"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">ColorA</span>  operator/(const <span class="NDLSystemFont">ColorA</span>& c) const</p>
<p class="NDLRefMemberDescription">Member wise division. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">c</span></td>
    <td><span class="NDLSystemFont"><a href="efd__Color.htm">Color</a></span> with which to divide. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A new color containing the member wise division of this color by the specified color. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_color_a_1a2eaa7324e228d143e9948910f4573e14"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">ColorA</span>  operator-() const</p>
<p class="NDLRefMemberDescription">Unary negation. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>A new color containing the negated version of this color. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_color_a_1a2627a11886e0a3deb52030cb4bac037e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">ColorA</span>&  operator+=(const <span class="NDLSystemFont">ColorA</span>& c)</p>
<p class="NDLRefMemberDescription">In place addition. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">c</span></td>
    <td>The color to add with this color. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A reference to this color plus the specified color. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_color_a_1a8b58d1a3a843db87ac9414f426bd7b62"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">ColorA</span>&  operator-=(const <span class="NDLSystemFont">ColorA</span>& c)</p>
<p class="NDLRefMemberDescription">In place subtraction. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">c</span></td>
    <td>The color to subtract from this color. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A reference to this color minus the specified color. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_color_a_1aaab02f05e16e700140768cb09831e6b3"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">ColorA</span>&  operator*=(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> scalar)</p>
<p class="NDLRefMemberDescription">In place color scale. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">scalar</span></td>
    <td>The amount with which to scale this color. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A reference to this color scaled by the specified scalar. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_color_a_1a6fc9fb1585b916e8313cfc82ccf6e66b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">ColorA</span>&  operator*=(const <span class="NDLSystemFont">ColorA</span>& c)</p>
<p class="NDLRefMemberDescription">In place member wise multiplication. </p>
<p class="NDLRefMemberDetailedDescription">(NOT a dot product) </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">c</span></td>
    <td>The color to multiply with this color. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A reference to this color multiplied with the specified color. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_color_a_1a56426a641209c8ed6dfe6e65f472bada"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">ColorA</span>&  operator/=(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> scalar)</p>
<p class="NDLRefMemberDescription">In place division. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">scalar</span></td>
    <td>A scalar value with which to divide. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A reference to this color divided by the specified scalar. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_color_a_1aeed5e43c80f27dd6b385c4d33dbbc2dd"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">ColorA</span>&  operator/=(const <span class="NDLSystemFont">ColorA</span>& c)</p>
<p class="NDLRefMemberDescription">In place member wise division. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">c</span></td>
    <td>The color with which to divide. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A reference to this color divided by the specified color. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_color_a_1a1c90135a892d11473c3902e1385a7481"></a>
<p class="NDLRefMemberFunction">void  Clamp()</p>
<p class="NDLRefMemberDescription">Ensure RGBA components are within the range [0.0,1.0] by clamping any components above 1.0 to 1.0. </p>
<p class="NDLRefMemberDetailedDescription">Note that all the components are assumed to be&gt;= 0.0, so no such check is performed. </p>

<a name="classefd_1_1_color_a_1ace3181ca4e71854a6ee3a929cf748b8f"></a>
<p class="NDLRefMemberFunction">void  Scale()</p>
<p class="NDLRefMemberDescription">Ensure RGBA components are within the range [0.0,1.0] by scaling down all components by the max component. </p>
<p class="NDLRefMemberDetailedDescription">This function sets the components in the correct range and preserves the hue of the final color. Note that all the components are assumed to be&gt;= 0.0, so no such check is performed. </p>

<a name="classefd_1_1_color_a_1a858c42041b1e3ca32454f525585c1ec0"></a>
<p class="NDLRefMemberFunction">void  GetAs(<span class="NDLSystemFont"><a href="efd__ColorA_UInt8.htm">ColorA_UInt8</a></span>& kColor) const</p>
<p class="NDLRefMemberDescription">Function to return the color as an unsigned integer. </p>

<a name="classefd_1_1_color_a_1af73c1564c0f15dc52961a1539198289a"></a>
<p class="NDLRefMemberFunction">void  Serialize(<span class="NDLSystemFont"><a href="efd__Archive.htm">efd::Archive</a></span>& ar)</p>
<p class="NDLRefMemberDescription">Serialization. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

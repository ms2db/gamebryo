<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::SR_ExternalAllocator</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::SR_ExternalAllocator</p>


<p class="NDLRefHeaderFile">&lt;SerializeRoutines.h&gt;</p>


<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Similar to the default allocator, only it assumes the object should be allocated using external new. </p>
<p class="NDLNormal">Use this if the pointed to object is not a <span class="NDLSystemFont"><a href="efd__MemObject.htm">efd::MemObject</a></span> but instead uses C++ allocation. Of course if you want to use some other heap then simply implement your own allocator that does whatever is needed. </p>

<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="structefd_1_1_s_r___external_allocator_1a9fd2c67a67787784a1345f265911ef03"></a>
<p class="NDLRefMemberFunction">template &lt;typename DATATYPE  &gt; static void  Allocate(DATATYPE *& o_pObject)</p>
<p class="NDLRefMemberFunction"></p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

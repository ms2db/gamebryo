<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::DataDrivenEnum</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::DataDrivenEnum</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__DataDrivenEnumBase.htm">efd::DataDrivenEnumBase</a></span></p>


<p class="NDLRefHeaderFile">&lt;DataDrivenEnum.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_data_driven_enum.gif" alt="Inheritance graph for efd::DataDrivenEnum"/>
  <p class="FigureCaption">Inheritance graph for efd::DataDrivenEnum</p>
</div>
</p>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_data_driven_enum_1ad37fcd9ec25a911cc720067408d6e643"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  FindEnumValue(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& i_name, <br/>T& o_value)</p>
<p class="NDLRefMemberDescription">Lookup the value for a given name. </p>

<a name="classefd_1_1_data_driven_enum_1a51a7ba430b54ee4534ae6df6a644d2c8"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  FindEnumName(<br/>const T& i_value, <br/><span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& o_name)</p>
<p class="NDLRefMemberDescription">Lookup the name for a given value. </p>

<a name="classefd_1_1_data_driven_enum_1a25896b1f5c3013325bacc4fb95c77e14"></a>
<p class="NDLRefMemberFunction">T  GetEnumValue(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& i_name)</p>
<p class="NDLRefMemberDescription">Get the named value, if present. </p>
<p class="NDLRefMemberDetailedDescription">If not present, the "Invalid" value will be returned. If no "invalid" value was specified and the name is not found, zero will be returned. </p>

<a name="classefd_1_1_data_driven_enum_1a436e5a3bb2ef9b3790380dfd4f969755"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>  GetEnumName(const T& i_value)</p>
<p class="NDLRefMemberDescription">Get the name of the given value. </p>
<p class="NDLRefMemberDetailedDescription">If the value is not found, a name will be built using the name of this enumeration and the numerical value. For example: &lt;MyEnum 0x00001234&gt; </p>

<a name="classefd_1_1_data_driven_enum_1adbd88ccbae34df52ecbae703b57ba5aa"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  HasName(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& i_name) const</p>
<p class="NDLRefMemberDescription">Check if the given name is in the enum. </p>

<a name="classefd_1_1_data_driven_enum_1aeff12c390a5a7569e3b2e663dd129c76"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  HasValue(const T& i_value) const</p>
<p class="NDLRefMemberDescription">Check if the given value is in the enum. </p>

<a name="classefd_1_1_data_driven_enum_1a55ce0c31d6879903fd81bdbcf58921f5"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">DataDrivenEnum</span>&lt;T&gt;*  GetBaseEnum() const</p>
<p class="NDLRefMemberDescription">Fetch the base enumeration. </p>
<a name="protected_types"></a>
<p class="NDLRefHead1">Protected Types</p>


<a name="classefd_1_1_data_driven_enum_1a09529e5db0c1b2e3ac4e71cef26e47f8"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="efd__map.htm">efd::map</a></span>&lt;<span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>, T&gt;  NameToValueMap</p>
<p class="NDLRefMemberDescription">The maps to and from name and value. </p>

<a name="classefd_1_1_data_driven_enum_1a92c013d272dd3e0450069ac0c82f6bb4"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="efd__map.htm">efd::map</a></span>&lt;T, <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>&gt;  ValueToNameMap</p>
<p class="NDLRefMemberDescription">The maps to and from name and value. </p>

<a name="classefd_1_1_data_driven_enum_1a883d66173967acbc6737871d1f85906a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  m_fUseInvalid</p>
<p class="NDLRefMemberDescription">My invalid entry info. Note that the invalid entry also lives in the maps. </p>

<a name="classefd_1_1_data_driven_enum_1a351624881e34e683b5ff6bc98efe076e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>  m_invalidName</p>
<p class="NDLRefMemberDescription">The maps to and from name and value. </p>

<a name="classefd_1_1_data_driven_enum_1a61dbe6218545543820ad5f226770f7de"></a>
<p class="NDLRefMemberFunction">T  m_invalidValue</p>
<p class="NDLRefMemberDescription">The maps to and from name and value. </p>

<a name="classefd_1_1_data_driven_enum_1a2d443c75fd4a94f1e4eaf60c7db900b7"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__map.htm">NameToValueMap</a></span>  m_nameToValue</p>
<p class="NDLRefMemberDescription">The maps to and from name and value. </p>

<a name="classefd_1_1_data_driven_enum_1a2cd72e942f1bf0c07c971311bd9c6947"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__map.htm">ValueToNameMap</a></span>  m_valueToName</p>
<p class="NDLRefMemberDescription">The maps to and from name and value. </p>

<a name="classefd_1_1_data_driven_enum_1a54c35f1b0469d1cbe2def57ab9914b7a"></a>
<p class="NDLRefMemberFunction">DataDrivenEnum(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& i_name, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aa046c1e8ad7deee312ed0f7dc2222bea">efd::EnumType</a></span> i_type)</p>
<p class="NDLRefMemberDescription">Constructor. </p>

<a name="classefd_1_1_data_driven_enum_1a043a2b17ccee4739ab8e3671dec0b80d"></a>
<p class="NDLRefMemberFunction">DataDrivenEnum(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& i_name, <br/><span class="NDLSystemFont">DataDrivenEnum</span>&lt;T&gt;* pParentEnum)</p>
<p class="NDLRefMemberDescription">The maps to and from name and value. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::ParameterListMessage</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::ParameterListMessage</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__IMessage.htm">efd::IMessage</a></span></p>


<p class="NDLRefHeaderFile">&lt;ParameterListMessage.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_parameter_list_message.gif" alt="Inheritance graph for efd::ParameterListMessage"/>
  <p class="FigureCaption">Inheritance graph for efd::ParameterListMessage</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">A message class that can be used for fast prototyping. </p>
<p class="NDLNormal">Like <span class="NDLSystemFont"><a href="efd__StreamMessage.htm">StreamMessage</a></span> only: 1) type safe 2) supports named parameters 3) supports random access </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_parameter_list_message_1ad85d4eebac6153b7d93f2aab546c9bc2"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__ParameterList.htm">efd::ParameterList</a></span>&  GetParameters()</p>
<p class="NDLRefMemberDescription">Accessor for the <span class="NDLSystemFont"><a href="efd__ParameterList.htm">ParameterList</a></span>. </p>

<a name="classefd_1_1_parameter_list_message_1af08b9401eb30e6f48cff6ef1af229660"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="efd__ParameterList.htm">efd::ParameterList</a></span>&  GetParameters() const</p>
<p class="NDLRefMemberDescription">Accessor for the <span class="NDLSystemFont"><a href="efd__ParameterList.htm">ParameterList</a></span>. </p>
<p class="NDLRefMemberDescription">Some of the methods on the contained parameter <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span> are exposed for convenience.</p>
<p class="NDLRefMemberDescription">To call other methods use GetParameters to access the underlying <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span></p>

<a name="classefd_1_1_parameter_list_message_1a0b56c73c513c8428737e2fbdcc316177"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span>  AddParameter(const T& parameter)</p>
<p class="NDLRefMemberDescription">Adds a new unnamed parameter to the end of the parameter <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">parameter</span></td>
    <td>The data being added </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The index at which the data was added, or -1 on error </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_parameter_list_message_1af85e1968b922aeeb397dacd3c15a0321"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span>  AddParameter(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& pszName, <br/>const T& parameter)</p>
<p class="NDLRefMemberDescription">Adds a new named parameter to the end of the parameter <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pszName</span></td>
    <td>The name of this data item </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">parameter</span></td>
    <td>The data being added </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The index at which the data was added, or -1 on error </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_parameter_list_message_1a902b5473f23ba6dc144215d697c61aaa"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetSize() const</p>
<p class="NDLRefMemberDescription">Get the number of parameters in the <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span>. </p>

<a name="classefd_1_1_parameter_list_message_1a90ed99f6d16c3f7e819ab1c0692d13ff"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ad75e44853f2061ef232825176555761d">ParameterResult</a></span>  GetParameter(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span> i_index, <br/>T& o_result) const</p>
<p class="NDLRefMemberDescription">Read a parameter from the <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_index</span></td>
    <td>The parameter to read </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_result</span></td>
    <td>The resulting value </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A ParameterResult indicating the result </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_parameter_list_message_1a8b45856dbb1a0842ddd8f33de4c1dad3"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ad75e44853f2061ef232825176555761d">ParameterResult</a></span>  GetParameter(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> i_index, <br/>T& o_result) const</p>
<p class="NDLRefMemberDescription">Read a parameter from the <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_index</span></td>
    <td>The parameter to read </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_result</span></td>
    <td>The resulting value </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A ParameterResult indicating the result </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_parameter_list_message_1a37a65f7cbb1a228e864d1c2c6e64c7ca"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ad75e44853f2061ef232825176555761d">ParameterResult</a></span>  GetParameter(<br/>const char* i_pszName, <br/>T& o_result) const</p>
<p class="NDLRefMemberDescription">Read a parameter from the <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span> by name. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_pszName</span></td>
    <td>The parameter to read </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_result</span></td>
    <td>The resulting value </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A ParameterResult indicating the result </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_parameter_list_message_1aa930acfd3a619e4ff8c4f600e8e1d486"></a>
<p class="NDLRefMemberFunction">ParameterListMessage()</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_parameter_list_message_1a134aff3e80112d98d8103ecab00e4505"></a>
<p class="NDLRefMemberFunction">virtual ~ParameterListMessage()</p>
<p class="NDLRefMemberDescription">Virtual destructor. </p>

<a name="classefd_1_1_parameter_list_message_1a5f1283078c2f2fb23610bba798e3f77b"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; const <span class="NDLSystemFont">ParameterListMessage</span>&  operator&gt;&gt;(T& data) const</p>
<p class="NDLRefMemberDescription">Stream-style operator for legacy compatibility with <span class="NDLSystemFont"><a href="efd__StreamMessage.htm">StreamMessage</a></span>. </p>

<a name="classefd_1_1_parameter_list_message_1aabd29077a24452fe31ea647d33138382"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; <span class="NDLSystemFont">ParameterListMessage</span>&  operator&lt;&lt;(const T& data)</p>
<p class="NDLRefMemberDescription">Stream-style operator for legacy compatibility with <span class="NDLSystemFont"><a href="efd__StreamMessage.htm">StreamMessage</a></span>:. </p>

<a name="classefd_1_1_parameter_list_message_1a331681a8ddb9dc1be75cf6932f156103"></a>
<p class="NDLRefMemberFunction">void  Reset() const</p>
<p class="NDLRefMemberDescription">Resets the read cursor of this message. </p>

<a name="classefd_1_1_parameter_list_message_1a6f43a355a3f177053d05d65532560832"></a>
<p class="NDLRefMemberFunction">virtual void  Serialize(<span class="NDLSystemFont"><a href="efd__Archive.htm">efd::Archive</a></span>& io_ar)</p>
<p class="NDLRefMemberDescription">Serialize a polymorphic type to or from an <span class="NDLSystemFont"><a href="efd__Archive.htm">Archive</a></span>. </p>
<p class="NDLRefMemberDetailedDescription">This method must be overridden, but if your streamable object has no data the override can be an empty function. A typical implementation of this method will make one call to <span class="NDLSystemFont"><a href="../Namespaces/efd__Serializer.htm#namespaceefd_1_1_serializer_1a63e0b99047011bde53be44786ab9ee7b">efd::Serializer::SerializeObject</a></span> for each member of the class. If you are derived from another streamable class you should be sure to call to parent implementation of this method as well; it is recommended that the parent class be serialized first before adding the data for the derived class. If your class contains complex data such as STL-style contianers or pointers to allocated data then you can simplify the implementation of Serialize by using the templated helper functions in &lt;<span class="NDLSystemFont">efd/SerializeRoutines.h</span>&gt;; these can serialize even the most complex data structures with a single method call and will reduce the chance of making common mistakes (which could introduce security vulnerabilities if marshalling data from untrusted sources).</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">io_ar</span></td>
    <td>The <span class="NDLSystemFont"><a href="efd__Archive.htm">Archive</a></span> to serialize to or from. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

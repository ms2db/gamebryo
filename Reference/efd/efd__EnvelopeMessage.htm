<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::EnvelopeMessage</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::EnvelopeMessage</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__NetMessage.htm">efd::NetMessage</a></span></p>


<p class="NDLRefHeaderFile">&lt;NetMessage.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_envelope_message.gif" alt="Inheritance graph for efd::EnvelopeMessage"/>
  <p class="FigureCaption">Inheritance graph for efd::EnvelopeMessage</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Implements the network message envelope. </p>

<a name="public_static_attributes"></a>
<p class="NDLRefHead1">Public Static Attributes</p>


<a name="classefd_1_1_envelope_message_1a463762e2cccd22941cbacc70791748e8"></a>
<p class="NDLRefMemberFunction">static const int  kDESTINATION_OFFSET</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_envelope_message_1a6020c4781f274bb54d026bc31a4dd5ca"></a>
<p class="NDLRefMemberFunction">static const int  kSIZE_BEFORE_MESSAGE_OFFSET</p>
<p class="NDLRefMemberFunction"></p>
<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classefd_1_1_envelope_message_1a7e077b9413cf27d0b2bc65ffa3710864"></a>
<p class="NDLRefMemberFunction">EnvelopeMessage()</p>
<p class="NDLRefMemberDescription">Constructor creates an empty envelope message that can be filled from a stream. </p>

<a name="classefd_1_1_envelope_message_1aed81ecc2e4462a7e2f0c0f6a1a6ae785"></a>
<p class="NDLRefMemberFunction">EnvelopeMessage(<br/><span class="NDLSystemFont"><a href="efd__IMessage.htm">IMessage</a></span>* pMessage, <br/>const <span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span>& cat, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> senderNetID = 0, <br/>const <span class="NDLSystemFont"><a href="efd__ConnectionID.htm">ConnectionID</a></span>& sender = kCID_INVALID)</p>
<p class="NDLRefMemberDescription">Constructor which creates an envelope message class containing the given payload message for sending to the specified category. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The message to add to the envelope message </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">cat</span></td>
    <td>The category the message will be sent on </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">senderNetID</span></td>
    <td>[optional] Only <span class="NDLSystemFont"><a href="../efdNetwork/efd__INetLib.htm">INetLib</a></span> should ever use this parameter. NetID for the sending process. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">sender</span></td>
    <td>[optional] Only <span class="NDLSystemFont"><a href="../efdNetwork/efd__INetLib.htm">INetLib</a></span> should ever use this parameter. Connection on which envelope was received. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_envelope_message_1a98c24b4c415f6c0fe97291d2678d8f7f"></a>
<p class="NDLRefMemberFunction">EnvelopeMessage(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a11b3d968bc96d7f04115a0aad3893469">efd::ClassID</a></span> idChildType, <br/><span class="NDLSystemFont"><a href="efd__SmartBuffer.htm">efd::SmartBuffer</a></span>& childStreamedContents, <br/>const <span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span>& cat)</p>
<p class="NDLRefMemberDescription">Constructor which creates an envelope message class containing an already streamed message of the given type for sending to the specified category. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">idChildType</span></td>
    <td>The message type for the message in the buffer </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">childStreamedContents</span></td>
    <td>The streamed message data for the child message </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">cat</span></td>
    <td>The category the message will be sent on. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_envelope_message_1abbd55a8c9421ef852ae33540e3936885"></a>
<p class="NDLRefMemberFunction">virtual ~EnvelopeMessage()</p>
<p class="NDLRefMemberDescription">Destructor. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_envelope_message_1a391e4bb4bf2110906395c55dd59f63e9"></a>
<p class="NDLRefMemberFunction">virtual const <span class="NDLSystemFont"><a href="efd__IMessage.htm">IMessage</a></span>*  GetContents(<span class="NDLSystemFont"><a href="efd__GenericFactory.htm">MessageFactory</a></span>* pMessageFactory) const</p>
<p class="NDLRefMemberDescription">Returns the message contents. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessageFactory</span></td>
    <td>A pointer to the MessageFactory that will be used to create the message. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_envelope_message_1ad4a1f3a0c42fbdef8c4b411842b7e551"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a11b3d968bc96d7f04115a0aad3893469">efd::ClassID</a></span>  GetContentsClassID() const</p>
<p class="NDLRefMemberDescription">Returns the message contents class ID. </p>

<a name="classefd_1_1_envelope_message_1aa4cf03cebb4e24bc124a7453ca49bdac"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetContentsUniqueIdentifier() const</p>
<p class="NDLRefMemberDescription">Returns the message contents unique identifier. </p>

<a name="classefd_1_1_envelope_message_1a84e3d9c6efceebc9ef0c68b9b678dc09"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>  GetChildDescription() const</p>
<p class="NDLRefMemberDescription">Returns the child description. </p>

<a name="classefd_1_1_envelope_message_1accd05a0cdfbb002d862da2ec55582b1c"></a>
<p class="NDLRefMemberFunction">void  SetChild(<span class="NDLSystemFont"><a href="efd__IMessage.htm">IMessage</a></span>* pMessage)</p>
<p class="NDLRefMemberDescription">Set the child of the message. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The child Message of this Envelope. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_envelope_message_1abe0110ac845dafa0615b6fd8dea8accf"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsInflated() const</p>
<p class="NDLRefMemberDescription">Returns true if the envelope contains a message. </p>

<a name="classefd_1_1_envelope_message_1a3b0280d7426ec3ec9e9e0b2bff25b061"></a>
<p class="NDLRefMemberFunction">virtual void  Serialize(<span class="NDLSystemFont"><a href="efd__Archive.htm">efd::Archive</a></span>& ar)</p>
<p class="NDLRefMemberDescription">Method to convert this class to or from an archive. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">ar</span></td>
    <td>Serialization archive. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_envelope_message_1a47a0b062ef716b002aef7d680a5dd833"></a>
<p class="NDLRefMemberFunction">void  SetContentsType(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a11b3d968bc96d7f04115a0aad3893469">efd::ClassID</a></span> type)</p>
<p class="NDLRefMemberDescription">Sets the contents type. </p>
<a name="accessors_for_quality_of_service"></a>
<p class="NDLRefHead1">Accessors for Quality of Service</p>


<a name="classefd_1_1_envelope_message_1a45a24d2c9c3ab279f2ad0c35b82ca966"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a3f46b06120f84d47e33a25e39034ed8e">efd::QualityOfService</a></span>  GetQualityOfService() const</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_envelope_message_1a5db98b9510967816fec031f113717089"></a>
<p class="NDLRefMemberFunction">void  SetQualityOfService(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a3f46b06120f84d47e33a25e39034ed8e">efd::QualityOfService</a></span> qos)</p>
<p class="NDLRefMemberFunction"></p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

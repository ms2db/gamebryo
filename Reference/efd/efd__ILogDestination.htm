<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::ILogDestination</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::ILogDestination</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__IBase.htm">efd::IBase</a></span></p>


<p class="NDLRefHeaderFile">&lt;ILogDestination.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_i_log_destination.gif" alt="Inheritance graph for efd::ILogDestination"/>
  <p class="FigureCaption">Inheritance graph for efd::ILogDestination</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Interface for log destination classes. </p>
<p class="NDLNormal">Any class that derives from this class maybe added as a destination for the logger. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_i_log_destination_1abe65470348c625b2fc34af744736e1bd"></a>
<p class="NDLRefMemberFunction">ILogDestination(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& name)</p>
<p class="NDLRefMemberDescription">Constructor. </p>

<a name="classefd_1_1_i_log_destination_1aed8092f2fe6b9b5bef8e4d848098288e"></a>
<p class="NDLRefMemberFunction">virtual const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>&  GetName() const</p>
<p class="NDLRefMemberDescription">Get the log destination name. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>destination name </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_log_destination_1a5b113fca6c17572d4872543f264df90f"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">efd::Bool</span>  OnInit() = 0</p>
<p class="NDLRefMemberDescription">Initializes the destination and prepares it for use. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if the destination initialized properly </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_log_destination_1a25c6d717664513a46283b1a7bc2be004"></a>
<p class="NDLRefMemberFunction">virtual void  LogMessage(<br/><span class="NDLSystemFont">efd::Bool</span> assert, <br/>const char* timeStampMachine, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a37c593debc73d82d7ddc571c725f0e2d">efd::TimeType</a></span> timeStampGame, <br/>const char* pModule, <br/>const char* pLevel, <br/>const char* pFile, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span> line, <br/>const char* pMsg)</p>
<p class="NDLRefMemberDescription">Receives a complete log message from the logger to be written to the destination. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">assert</span></td>
    <td>True if the message is from an assert of verify </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">timeStampMachine</span></td>
    <td>The time stamp that the log message occurred as a date time string based on the local machines clock. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">timeStampGame</span></td>
    <td>The time stamp that the log message occurred as a float in game time. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pModule</span></td>
    <td>The name of the module that generated the log message. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pLevel</span></td>
    <td>The level the log message is. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pFile</span></td>
    <td>The source file where the log message was generated. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">line</span></td>
    <td>The source line where the log message was generated. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pMsg</span></td>
    <td>The formatted log message. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_log_destination_1a43c428a87306be135c87ae5df0ab0260"></a>
<p class="NDLRefMemberFunction">virtual void  BeginLog(<br/><span class="NDLSystemFont">efd::Bool</span> assert, <br/>const char* timeStampMachine, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a37c593debc73d82d7ddc571c725f0e2d">efd::TimeType</a></span> timeStampGame, <br/>const char* pModule, <br/>const char* pLevel, <br/>const char* pFile, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span> line) = 0</p>
<p class="NDLRefMemberDescription">Begin receiving a multi-part log message from the logger to be written to the destination. </p>
<p class="NDLRefMemberDetailedDescription">This call must be followed by zero or more calls to ContinueLog and then exactly one call to EndLog.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">assert</span></td>
    <td>True if the message is from an assert of verify </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">timeStampMachine</span></td>
    <td>The time stamp that the log message occurred as a date time string based on the local machines clock. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">timeStampGame</span></td>
    <td>The time stamp that the log message occurred as a float in game time. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pModule</span></td>
    <td>The name of the module that generated the log message. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pLevel</span></td>
    <td>The level the log message is. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pFile</span></td>
    <td>The source file where the log message was generated. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">line</span></td>
    <td>The source line where the log message was generated. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_log_destination_1ab20455bc85bc12fd65e62818f71ae08f"></a>
<p class="NDLRefMemberFunction">virtual void  ContinueLog(const char* pMsg) = 0</p>
<p class="NDLRefMemberDescription">Add output to the current log following a BeginLog call. </p>

<a name="classefd_1_1_i_log_destination_1a856e3886d40f882b0b705f43f91ddddc"></a>
<p class="NDLRefMemberFunction">virtual void  EndLog() = 0</p>
<p class="NDLRefMemberDescription">Used to complete a multi-part log statement. </p>

<a name="classefd_1_1_i_log_destination_1a74258309fe5666910f35d5da17ec12c3"></a>
<p class="NDLRefMemberFunction">virtual void  Flush() = 0</p>
<p class="NDLRefMemberDescription">Flush any buffered data to output. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::vector</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::vector</p>
<p class="NDLRefParentage">: public efd::stlport::vector< _data, efd::CustomAllocator< _data > ></p>


<p class="NDLRefHeaderFile">&lt;StdContainers.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1vector.gif" alt="Inheritance graph for efd::vector"/>
  <p class="FigureCaption">Inheritance graph for efd::vector</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">At STL <span class="NDLSystemFont">vector</span> that uses Emergent's memory allocator. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>


<a name="classefd_1_1vector_1a615794b2b09a957797061eb88a8cbc4b"></a>
<p class="NDLRefMemberFunction">typedef efd::stlport::vector&lt;_data, <span class="NDLSystemFont"><a href="efd__CustomAllocator.htm">efd::CustomAllocator</a></span>&lt;_data&gt;&gt;  BaseClass</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1vector_1a3b974c59511c4d9304a870f5fb54a992"></a>
<p class="NDLRefMemberFunction">typedef BaseClass::allocator_type  allocator_type</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1vector_1aaacb69a991892b359784b49f242fd5fa"></a>
<p class="NDLRefMemberFunction">typedef _data  value_type</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1vector_1a951f21ab24b822fa1e88e5a0d5ab41eb"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="efd__vector.htm#classefd_1_1vector_1aaacb69a991892b359784b49f242fd5fa">value_type</a></span>*  pointer</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1vector_1a996f4b362d185e01e189c6036cd90c42"></a>
<p class="NDLRefMemberFunction">typedef const <span class="NDLSystemFont"><a href="efd__vector.htm#classefd_1_1vector_1aaacb69a991892b359784b49f242fd5fa">value_type</a></span>*  const_pointer</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1vector_1aa5968f6e3b0186a7deacc293290e94b3"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="efd__vector.htm#classefd_1_1vector_1aaacb69a991892b359784b49f242fd5fa">value_type</a></span>*  iterator</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1vector_1ad0674f8651f8971ddae6c72debbe031d"></a>
<p class="NDLRefMemberFunction">typedef const <span class="NDLSystemFont"><a href="efd__vector.htm#classefd_1_1vector_1aaacb69a991892b359784b49f242fd5fa">value_type</a></span>*  const_iterator</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1vector_1abf93b04f950c0b53f8b29bc4dafd126a"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="efd__vector.htm#classefd_1_1vector_1aaacb69a991892b359784b49f242fd5fa">value_type</a></span>&  reference</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1vector_1ad2e9e2ff1580f23e569466b6af9b4ec8"></a>
<p class="NDLRefMemberFunction">typedef const <span class="NDLSystemFont"><a href="efd__vector.htm#classefd_1_1vector_1aaacb69a991892b359784b49f242fd5fa">value_type</a></span>&  const_reference</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1vector_1ace7e2e4211f5a93a5f700b6b0f78ccc1"></a>
<p class="NDLRefMemberFunction">typedef size_t  size_type</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1vector_1a23b822680671e53de22323fe9c5859ca"></a>
<p class="NDLRefMemberFunction">typedef ptrdiff_t  difference_type</p>
<p class="NDLRefMemberFunction"></p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1vector_1a30d741fd99c2a7b36501438079e2b954"></a>
<p class="NDLRefMemberFunction">vector()</p>
<p class="NDLRefMemberDescription">Construct a <span class="NDLSystemFont">vector</span>. </p>
<p class="NDLRefMemberDetailedDescription">Semantics are identical to std::vector. </p>

<a name="classefd_1_1vector_1a21fae80884cfd2867c080e3ad8969e7a"></a>
<p class="NDLRefMemberFunction">vector(<span class="NDLSystemFont"><a href="efd__vector.htm#classefd_1_1vector_1ace7e2e4211f5a93a5f700b6b0f78ccc1">size_type</a></span> _Count)</p>
<p class="NDLRefMemberDescription">Construct a <span class="NDLSystemFont">vector</span>. </p>
<p class="NDLRefMemberDetailedDescription">Semantics are identical to std::vector. </p>

<a name="classefd_1_1vector_1a8fa01363e483b2d253af0e6cc0f5b735"></a>
<p class="NDLRefMemberFunction">vector(<br/><span class="NDLSystemFont"><a href="efd__vector.htm#classefd_1_1vector_1ace7e2e4211f5a93a5f700b6b0f78ccc1">size_type</a></span> _Count, <br/>const _data& _Val)</p>
<p class="NDLRefMemberDescription">Construct a <span class="NDLSystemFont">vector</span>. </p>
<p class="NDLRefMemberDetailedDescription">Semantics are identical to std::vector. </p>

<a name="classefd_1_1vector_1ac3be341c4918956e65251d6f2124dfaf"></a>
<p class="NDLRefMemberFunction">vector(const <span class="NDLSystemFont">vector</span>& _Right)</p>
<p class="NDLRefMemberDescription">Construct a <span class="NDLSystemFont">vector</span>. </p>
<p class="NDLRefMemberDetailedDescription">Semantics are identical to std::vector. </p>

<a name="classefd_1_1vector_1a7f0fb1d99a3b996555d527543cbb78fa"></a>
<p class="NDLRefMemberFunction">vector(const <span class="NDLSystemFont"><a href="efd__vector.htm#classefd_1_1vector_1a615794b2b09a957797061eb88a8cbc4b">BaseClass</a></span>& _Right)</p>
<p class="NDLRefMemberDescription">Construct a <span class="NDLSystemFont">vector</span>. </p>
<p class="NDLRefMemberDetailedDescription">Semantics are identical to std::vector. </p>

<a name="classefd_1_1vector_1af30a8e601002aad541f540e826dabb5b"></a>
<p class="NDLRefMemberFunction">template &lt;class InputIterator  &gt; vector(<br/>InputIterator _First, <br/>InputIterator _Last)</p>
<p class="NDLRefMemberDescription">Construct a <span class="NDLSystemFont">vector</span>. </p>
<p class="NDLRefMemberDetailedDescription">Semantics are identical to std::vector. </p>

<a name="classefd_1_1vector_1a3e25124c162ec775f0e4eeb7693ca2a1"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__vector.htm#classefd_1_1vector_1aa5968f6e3b0186a7deacc293290e94b3">iterator</a></span>  find(const _data& i_data)</p>
<p class="NDLRefMemberDescription">Returns an iterator addressing the first location of an element in a <span class="NDLSystemFont">vector</span> that has a data value equivalent to a specified value. </p>
<p class="NDLRefMemberDetailedDescription">This simply thunks to EE_STL_NAMESPACE::find.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_data</span></td>
    <td></td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1vector_1aa639c73eb87a27a3de4dae8c0487053f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__vector.htm#classefd_1_1vector_1ad0674f8651f8971ddae6c72debbe031d">const_iterator</a></span>  find(const _data& i_data) const</p>
<p class="NDLRefMemberDescription">Construct a <span class="NDLSystemFont">vector</span>. </p>
<p class="NDLRefMemberDetailedDescription">Semantics are identical to std::vector. </p>

<a name="classefd_1_1vector_1a9388ab971d155daa6012d4289c93f794"></a>
<p class="NDLRefMemberFunction">void  static_shutdown()</p>
<p class="NDLRefMemberDescription">Deletes any memory that this container is holding onto. </p>
<p class="NDLRefMemberDetailedDescription">This should be used during any SDM shutdown. Not calling this function could potentially cause the container to report memory leaks during application shutdown. After <span class="NDLSystemFont"><a href="efd__vector.htm#classefd_1_1vector_1a9388ab971d155daa6012d4289c93f794">static_shutdown()</a></span>, the size and capacity of the container are zero. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::INetService</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::INetService</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__ISystemService.htm">efd::ISystemService</a></span></p>


<p class="NDLRefHeaderFile">&lt;INetService.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_i_net_service.gif" alt="Inheritance graph for efd::INetService"/>
  <p class="FigureCaption">Inheritance graph for efd::INetService</p>
</div>
</p>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_i_net_service_1a229e8290361c0092b9e7ca0cfe70d2ef"></a>
<p class="NDLRefMemberFunction">virtual void  Subscribe(<br/>const <span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span>& cat, <br/><span class="NDLSystemFont"><a href="efd__INetCallback.htm">INetCallback</a></span>* pCallback) = 0</p>
<p class="NDLRefMemberDescription">Subscribe tells <span class="NDLSystemFont"><a href="../efdNetwork/efd__NetService.htm">NetService</a></span> that the <span class="NDLSystemFont"><a href="efd__INetCallback.htm">INetCallback</a></span> specified by pCallback is interested in receiving messages on the <span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span> cat. </p>
<p class="NDLRefMemberDetailedDescription">Messages delivered to this <span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span> will be delivered to the <span class="NDLSystemFont"><a href="efd__INetCallback.htm">INetCallback</a></span> specified.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">cat</span></td>
    <td><span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span> to subscribe to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pCallback</span></td>
    <td>pointer to callback class to handle messages </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_service_1a2abc047bf0e5c91977a03af8c2024263"></a>
<p class="NDLRefMemberFunction">virtual void  Unsubscribe(<br/>const <span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span>& cat, <br/><span class="NDLSystemFont"><a href="efd__INetCallback.htm">INetCallback</a></span>* pCallback) = 0</p>
<p class="NDLRefMemberDescription">Unsubscribe tells <span class="NDLSystemFont"><a href="../efdNetwork/efd__NetService.htm">NetService</a></span> that the <span class="NDLSystemFont"><a href="efd__INetCallback.htm">INetCallback</a></span> specified by pCallback is no longer interested in receiving messages on the <span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span> cat. </p>
<p class="NDLRefMemberDetailedDescription">Messages delivered to the <span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span> specified will no longer be delivered to the <span class="NDLSystemFont"><a href="efd__INetCallback.htm">INetCallback</a></span> specified.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">cat</span></td>
    <td><span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span> to subscribe to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pCallback</span></td>
    <td>pointer to callback class to handle messages </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_service_1ab83c5dab31617928dc44f5115d2b4b3b"></a>
<p class="NDLRefMemberFunction">virtual void  Unsubscribe(<span class="NDLSystemFont"><a href="efd__INetCallback.htm">INetCallback</a></span>* pCallback) = 0</p>
<p class="NDLRefMemberDescription">Unsubscribe the specified callback from all Categories. </p>
<p class="NDLRefMemberDetailedDescription">Used in cases where the callback object pCallback is going to be deleted, or is otherwise no longer interested in receiving any more callbacks </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pCallback</span></td>
    <td>pointer to callback object to Unsubscribe </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_service_1a25efd6d39131bbd0cae35825949f158d"></a>
<p class="NDLRefMemberFunction">virtual void  SendRemote(<br/><span class="NDLSystemFont"><a href="efd__IMessage.htm">IMessage</a></span>* pMessage, <br/>const <span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span>& cat, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a3f46b06120f84d47e33a25e39034ed8e">efd::QualityOfService</a></span> defaultQOS = QOS_INVALID) = 0</p>
<p class="NDLRefMemberDescription">Send an <span class="NDLSystemFont"><a href="efd__IMessage.htm">IMessage</a></span> to every process except this one (in other words, send to every remote process). </p>
<p class="NDLRefMemberDetailedDescription">Only those processes subscribed to the given category will be notified.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>Pointer to message for delivery </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">cat</span></td>
    <td><span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span> to send with </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">defaultQOS</span></td>
    <td>quality of service to send message on </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_service_1a8f5fcbd55bc62a6c57203e35bbf2c201"></a>
<p class="NDLRefMemberFunction">virtual void  SendRemote(<br/><span class="NDLSystemFont"><a href="efd__IMessage.htm">IMessage</a></span>* pMessage, <br/>const <span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span>& cat, <br/>const <span class="NDLSystemFont"><a href="efd__ConnectionID.htm">ConnectionID</a></span>& cid) = 0</p>
<p class="NDLRefMemberDescription">Send an <span class="NDLSystemFont"><a href="efd__IMessage.htm">IMessage</a></span> to the remote process specified by the <span class="NDLSystemFont"><a href="efd__ConnectionID.htm">ConnectionID</a></span>. </p>
<p class="NDLRefMemberDetailedDescription">The message will be sent using quality of service assigned to that connection.</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">This function ignores subscription data and sends directly to the connection.</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>Pointer to message for delivery </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">cat</span></td>
    <td><span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span> to send with </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">cid</span></td>
    <td>the <span class="NDLSystemFont"><a href="efd__ConnectionID.htm">ConnectionID</a></span> to send message to </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_service_1ac8ec8e60a6c33fad1cbd6c42e1858ae1"></a>
<p class="NDLRefMemberFunction">virtual void  ProducerSendRemote(<br/><span class="NDLSystemFont"><a href="efd__IMessage.htm">IMessage</a></span>* pMessage, <br/>const <span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span>& categoryProduced, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a3f46b06120f84d47e33a25e39034ed8e">QualityOfService</a></span> qualityOfService) = 0</p>
<p class="NDLRefMemberDescription">Send a message to producers of specified category. </p>
<p class="NDLRefMemberDetailedDescription">In other words, send the message to any process in which someone called BeginCategoryProduction on this category and with an <span class="NDLSystemFont"><a href="efd__INetCallback.htm">INetCallback</a></span> pointer.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>Pointer to message for delivery </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">categoryProduced</span></td>
    <td>send message to anyone who produces this category </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">qualityOfService</span></td>
    <td>The quality of service. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_service_1aedfccf733873ee348e9adf9caf016be0"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  BeginCategoryProduction(<br/>const <span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span>& cat, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a3f46b06120f84d47e33a25e39034ed8e">QualityOfService</a></span> qualityOfService, <br/><span class="NDLSystemFont"><a href="efd__INetCallback.htm">INetCallback</a></span>* pCallback) = 0</p>
<p class="NDLRefMemberDescription">BeginCategoryProduction assigns a quality of service to a category and notifies the CategoryManager of the intention of this <span class="NDLSystemFont"><a href="../efdNetwork/efd__NetService.htm">NetService</a></span> to produce messages destined for the specified category. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">cat</span></td>
    <td>The category specified "match" category </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">qualityOfService</span></td>
    <td>Quality of service for this category </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pCallback</span></td>
    <td>The callback that will receive producer messages for this category </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_service_1a85d6ff5bd4ea08444d2faad2ffa4009d"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  EndCategoryProduction(<br/>const <span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span>& cat, <br/><span class="NDLSystemFont"><a href="efd__INetCallback.htm">INetCallback</a></span>* pCallback) = 0</p>
<p class="NDLRefMemberDescription">EndCategoryProduction notifies the CategoryManager of the intention of this <span class="NDLSystemFont"><a href="../efdNetwork/efd__NetService.htm">NetService</a></span> to no longer produce messages destined for the specified category. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">cat</span></td>
    <td>The category specified "match" category </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pCallback</span></td>
    <td>The callback that will no longer receive producer messages for this category </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_service_1aa2a4bb8bf47d9717b3766756998593c4"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a3b3ac05aae06dbfe022fc0b79d48de28">ConnectionStatus</a></span>  GetConnectionStatus() = 0</p>
<p class="NDLRefMemberDescription">Gets the status of the connection to the ChannelManager. </p>
<p class="NDLRefMemberDetailedDescription">If there is no concept of a "primary" or main connection (what we call the Channel Manager Connection in the default <span class="NDLSystemFont"><a href="../efdNetwork/efd__NetService.htm">NetService</a></span> implementation) then the exact meaning of this is left to the <span class="NDLSystemFont">INetService</span> implementation. It is recommended that the status be used as an aggregated state describing whether any connections exist in a connected state. </p>

<a name="classefd_1_1_i_net_service_1af6e21df689c5a29085a9c5859fc9be35"></a>
<p class="NDLRefMemberFunction">virtual void  SetMessageService(<span class="NDLSystemFont"><a href="efd__MessageService.htm">MessageService</a></span>* pMessageService) = 0</p>
<p class="NDLRefMemberDescription">Set the <span class="NDLSystemFont"><a href="efd__MessageService.htm">MessageService</a></span> this <span class="NDLSystemFont"><a href="../efdNetwork/efd__NetService.htm">NetService</a></span> will use. </p>
<p class="NDLRefMemberDetailedDescription">The message service implements the MessageFactory which must be used to allocate incoming messages. There may be multiple MessageService/INetService pairs running simultaneously in the same service manager so it important to use the passed in message service rather than assuming that a call to <span class="NDLSystemFont"><a href="efd__ServiceManager.htm#classefd_1_1_service_manager_1af313f215e68fdcc164cf8c63f7e5cfdf">ServiceManager::GetSystemServiceAs<MessageService></a></span> will return the correct one. </p>

<a name="classefd_1_1_i_net_service_1adbe302cdda07a23192464eb72920c7e0"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="efd__ConnectionID.htm">efd::ConnectionID</a></span>  GetChannelManagerConnectionID(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a3f46b06120f84d47e33a25e39034ed8e">QualityOfService</a></span> qualityOfService) = 0</p>
<p class="NDLRefMemberDescription">Return the <span class="NDLSystemFont"><a href="efd__ConnectionID.htm">ConnectionID</a></span> of our connection to the the ChannelManager for the given quality of service. </p>
<p class="NDLRefMemberDetailedDescription">This is used by the <span class="NDLSystemFont"><a href="efd__MessageService.htm">MessageService</a></span> to detect whether a given message was actually sent by this process and then bounced back by the ChannelManager due to a local subscription.</p>

<a name="classefd_1_1_i_net_service_1a2aef68f7abb2b82556fd8c1890354b92"></a>
<p class="NDLRefMemberFunction">virtual void  CheckPendingSubscriptions(<br/><span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span> catIDToCheck, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a3f46b06120f84d47e33a25e39034ed8e">QualityOfService</a></span> qos) = 0</p>
<p class="NDLRefMemberDescription">Make sure the specified <span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span> is associated with the specified QualityOfService. </p>
<p class="NDLRefMemberDetailedDescription">This is used by the <span class="NDLSystemFont"><a href="efd__MessageService.htm">MessageService</a></span> when messages are received remotely to ensure that the local <span class="NDLSystemFont">INetService</span> knows about the remote category to QoS mapping. For locally produced categories we should already know this information since it would have either been passed to SendRemote or BeginCategoryProduction. This method lets us verify that remote producers are consistent with local producers.</p>
<a name="accessors_for_netid"></a>
<p class="NDLRefHead1">Accessors for NetID</p>


<a name="classefd_1_1_i_net_service_1a45c91c5ed33910c52c4201b285702106"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetNetID() const = 0</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_i_net_service_1aa468215a1670f26f4aaa08edab9e573b"></a>
<p class="NDLRefMemberFunction">virtual void  SetNetID(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> netID) = 0</p>
<p class="NDLRefMemberFunction"></p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

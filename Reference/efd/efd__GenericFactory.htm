<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::GenericFactory</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::GenericFactory</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__MemObject.htm">efd::MemObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;GenericFactory.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_generic_factory.gif" alt="Inheritance graph for efd::GenericFactory"/>
  <p class="FigureCaption">Inheritance graph for efd::GenericFactory</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">A generic templated factory class. </p>
<p class="NDLNormal">T represents the type of object to be returned from <span class="NDLSystemFont"><a href="efd__GenericFactory.htm#classefd_1_1_generic_factory_1a99145d396964469179342816e6465c4f">CreateObject()</a></span>. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>


<a name="classefd_1_1_generic_factory_1a6be5593c3fb4e7d076019c43beb4a630"></a>
<p class="NDLRefMemberFunction">typedef T(  FactoryMethod)()</p>
<p class="NDLRefMemberFunction"></p>
<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classefd_1_1_generic_factory_1aae6da93b254f4c94b1613d6a5385de68"></a>
<p class="NDLRefMemberFunction">virtual ~GenericFactory()</p>
<p class="NDLRefMemberDescription">Virtual destructor. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classefd_1_1_generic_factory_1a2100e169ec4f2ea9d1a81fc157f482a0"></a>
<p class="NDLRefMemberFunction">template &lt;typename TConcrete  &gt; static T  GenerateFactoryMethod()</p>
<p class="NDLRefMemberDescription">Static method to automatically generate a factory method necessary to instantiate the concrete type. </p>
<p class="NDLRefMemberDetailedDescription">The concrete type is passed in as a template parameter to this method. The concrete type must be a <span class="NDLSystemFont"><a href="efd__MemObject.htm">MemObject</a></span> and must have a no-argument constructor. The usage will typically be:</p>
<p class="NDLRefMemberDetailedDescription">typedef GenericFactory&lt;IMyInterfaceType&gt; MyFactory; MyFactory m_MyFactory; m_MyFactory.RegisterFactoryMethod( MyClassID, MyFactory::GenerateFactoryMethod&lt;MyConcreteClass&gt;);</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="efd__SmartPointer.htm">SmartPointer</a></span> of the Interface type that points to an instance of the concrete type </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_generic_factory_1a99145d396964469179342816e6465c4f"></a>
<p class="NDLRefMemberFunction">virtual T  CreateObject(KEY classID) const</p>
<p class="NDLRefMemberDescription">Factory an object based on a classID specifying the concrete class to factory. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">classID</span></td>
    <td>The class ID used to identify the concrete class </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>Smart Pointer of the Interface type pointing to the concrete type just created </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_generic_factory_1a7e442ecfa2d6cc0aeac5952e39eeb786"></a>
<p class="NDLRefMemberFunction">virtual void  RegisterFactoryMethod(<br/>KEY classID, <br/><span class="NDLSystemFont"><a href="efd__GenericFactory.htm#classefd_1_1_generic_factory_1a6be5593c3fb4e7d076019c43beb4a630">FactoryMethod</a></span>* pMethod)</p>
<p class="NDLRefMemberDescription">Registers a new class with this factory. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">This method will overwrite any previous registration of a class sharing the same ID.</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">classID</span></td>
    <td>The ClassID identifying the object that is factoried in the FactoryMethod </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pMethod</span></td>
    <td>A method used to create a new concrete object. GenerateFactoryMethod can normally be used to generate this function. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_generic_factory_1a96beab4a4eba752eae25751e98867d56"></a>
<p class="NDLRefMemberFunction">template &lt;typename TConcrete  &gt; void  RegisterDefaultFactoryMethod(KEY classID)</p>
<p class="NDLRefMemberDescription">Registers a new class with this factory. </p>
<p class="NDLRefMemberDetailedDescription">The class will be created using the <span class="NDLSystemFont"><a href="efd__GenericFactory.htm#classefd_1_1_generic_factory_1a2100e169ec4f2ea9d1a81fc157f482a0">GenericFactory::GenerateFactoryMethod</a></span> as the FactoryMethod.</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">This method will overwrite any previous registration of a class sharing the same ID.</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">classID</span></td>
    <td>The ClassID identifying the object that is factoried in the FactoryMethod </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_generic_factory_1a4dbef4427910f809955314e4db3bcef5"></a>
<p class="NDLRefMemberFunction">virtual void  UnregisterFactoryMethod(KEY classID)</p>
<p class="NDLRefMemberDescription">Unregisters a class from the factory. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">classID</span></td>
    <td>The class to unregister. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

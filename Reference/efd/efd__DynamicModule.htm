<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::DynamicModule</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::DynamicModule</p>


<p class="NDLRefHeaderFile">&lt;DynamicModule.h&gt;</p>


<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">A wrapper for dynamically loading modules and maintaining a reference count so that the module can be automatically unloaded when no longer in use. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_dynamic_module_1ad92002a832836ef78dafa1f19a32287b"></a>
<p class="NDLRefMemberFunction">DynamicModule()</p>
<p class="NDLRefMemberDescription">Constructors and Destructor. </p>

<a name="classefd_1_1_dynamic_module_1a3bcbd6313a1a479bc001db617fe274b5"></a>
<p class="NDLRefMemberFunction">DynamicModule(const <span class="NDLSystemFont">DynamicModule</span>& i_other)</p>
<p class="NDLRefMemberDescription">Constructors and Destructor. </p>

<a name="classefd_1_1_dynamic_module_1aeb616706551fc6d47854d0407bef4359"></a>
<p class="NDLRefMemberFunction">~DynamicModule()</p>
<p class="NDLRefMemberDescription">Constructors and Destructor. </p>

<a name="classefd_1_1_dynamic_module_1a42f683893764897dc4a54ce6b98ce85f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">DynamicModule</span>&  operator=(const <span class="NDLSystemFont">DynamicModule</span>& i_rhs)</p>
<p class="NDLRefMemberDescription">Assignment operator. </p>

<a name="classefd_1_1_dynamic_module_1a4c7a575ee3414a995104bbe82fd05eb0"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  LoadModule(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& i_strName, <br/><span class="NDLSystemFont">bool</span> loadLibraryAsDatafile = false)</p>
<p class="NDLRefMemberDescription">Dynamically loads a module. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">If this fails, you must currently use platform specific calls to find out why the call failed.</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_strName</span></td>
    <td>the exact name of the module to load. This may optionally include a complete or partial directory path. The file name should be a platform specific name, see <span class="NDLSystemFont"><a href="../Namespaces/efd__DynamicModuleNameRules.htm#namespaceefd_1_1_dynamic_module_name_rules_1a37d5523916d48618b6028b88209d79ed">DynamicModuleNameRules::GetPlatformSpecificName</a></span> for information on how to generate the platform specific name in a platform neutral manor. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">loadLibraryAsDatafile</span></td>
    <td>(Windows-only) When this parameter is <span class="NDLSystemFont"><a href="efd__set.htm">set</a></span> to true, the DLL will be loaded for reading resource-data only. Functions will not be mapped into the current process AND DLLs implicitly linked to the DLL will not be loaded. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the module was successfully loaded, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_dynamic_module_1a2b5bd922602013cd54383299bad547a4"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  UnloadModule()</p>
<p class="NDLRefMemberDescription">Unloads a previously loaded module. </p>
<p class="NDLRefMemberDetailedDescription">The module will automatically unload when the <span class="NDLSystemFont">DynamicModule</span> object is destroyed, or you can call this to control when the module is unloaded. </p>

<a name="classefd_1_1_dynamic_module_1a71e9df7ef58a0ba53be14c4002805dd4"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsLoaded() const</p>
<p class="NDLRefMemberDescription">Determine if the module has been loaded. </p>

<a name="classefd_1_1_dynamic_module_1ac2d4de0b7c01a4ff56b51d716786c22a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac4125a510209c0aad5b7ba40ba708e83">MethodHandle</a></span>  GetMethod(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& i_strName) const</p>
<p class="NDLRefMemberDescription">Looks up a method from the loaded module by name. </p>
<p class="NDLRefMemberDetailedDescription">You must already know the exact calling convention of the returned function pointer and are expected to cast the result before using it in any way.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_strName</span></td>
    <td>the exact name of the module to load. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>bool True if the method was successfully loaded, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_dynamic_module_1a29fae03ebdf71a34a76be88c1aaffd3d"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>&  GetModuleName() const</p>
<p class="NDLRefMemberDescription">Returns the module name. </p>
<p class="NDLRefMemberDetailedDescription">This will be the exact name that was passed to LoadModule and is not in any way cleaned up or adjusted based on the final actual module that was loaded. The module name will be an empty string if no module is currently successfully loaded.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span> The module name </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_dynamic_module_1a06bdc35cf2af78345e0ae7a74a40ce87"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a9fe972b8e2bb3185afe030814bc48280">ModuleHandle</a></span>  GetModuleHandle() const</p>
<p class="NDLRefMemberDescription">Returns the raw module handle. </p>
<p class="NDLRefMemberDetailedDescription">This might be needed for passing to other system functions in which case it might require a platform specific cast before using.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span> The module handle </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

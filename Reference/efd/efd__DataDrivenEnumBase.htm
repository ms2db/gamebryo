<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::DataDrivenEnumBase</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::DataDrivenEnumBase</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__RefCount.htm">efd::RefCount</a></span></p>


<p class="NDLRefHeaderFile">&lt;DataDrivenEnum.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_data_driven_enum_base.gif" alt="Inheritance graph for efd::DataDrivenEnumBase"/>
  <p class="FigureCaption">Inheritance graph for efd::DataDrivenEnumBase</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Base class for data driven enumerations. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_data_driven_enum_base_1a0b36017d5d912cdced3f6f6903936070"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>&  GetName() const</p>
<p class="NDLRefMemberDescription">Get the name of this enumeration. All enumerations should have a unique name. </p>

<a name="classefd_1_1_data_driven_enum_base_1a57d4640bcd44a8d0ad9ab51997f31585"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aa046c1e8ad7deee312ed0f7dc2222bea">EnumType</a></span>  GetEnumType() const</p>
<p class="NDLRefMemberDescription">Get the type of this enumeration. </p>
<p class="NDLRefMemberDetailedDescription">One of either Normal or Bitwise, the type determines how new values are assigned to the enumer, either as sequential integers or as single bit values. </p>

<a name="classefd_1_1_data_driven_enum_base_1a5272ed67ba3cf5729fb442fbda6bf9e1"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a11b3d968bc96d7f04115a0aad3893469">efd::ClassID</a></span>  GetStorageType() const</p>
<p class="NDLRefMemberDescription">Get a class ID defining the type of data stored in this enum. </p>

<a name="classefd_1_1_data_driven_enum_base_1a52e4596aabb53a43d56dd7ec13b0ae9a"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; <span class="NDLSystemFont"><a href="efd__DataDrivenEnum.htm">efd::DataDrivenEnum</a></span>&lt;T&gt;*  CastTo()</p>
<p class="NDLRefMemberDescription">Cast this enum to an enum with the given storage type. </p>
<p class="NDLRefMemberDetailedDescription">Example: 
<pre>                efd::DataDrivenEnum&lt;efd::UInt32&gt;* pResult = pEnum-&gt;CastTo&lt;efd::UInt32&gt;();
</pre>
</p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>NULL if this enum does not have the matching storage type, this otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_data_driven_enum_base_1aa350d08bd78af75a6e4f29682fd2460a"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; const <span class="NDLSystemFont"><a href="efd__DataDrivenEnum.htm">efd::DataDrivenEnum</a></span>&lt;T&gt;*  CastTo() const</p>
<p class="NDLRefMemberDescription">Cast this enum to a const enum with the given storage type. </p>
<p class="NDLRefMemberDetailedDescription">Example: 
<pre>                const efd::DataDrivenEnum&lt;efd::UInt32&gt;* pResult = pEnum-&gt;CastTo&lt;efd::UInt32&gt;();
</pre>
</p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>NULL if this enum does not have the matching storage type, this otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_data_driven_enum_base_1ae475df7fb3f52204a5c349bf8b74e966"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  HasBaseEnum() const</p>
<p class="NDLRefMemberDescription">Determine whether this enum derives from another enum. </p>

<a name="classefd_1_1_data_driven_enum_base_1a60002e4579c253239ac043dc9897c5b2"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">DataDrivenEnumBase</span>*  GetBaseEnum() const</p>
<p class="NDLRefMemberDescription">Fetch the base enumeration. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::AssetApplicationInfoMsg</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::AssetApplicationInfoMsg</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__IMessage.htm">efd::IMessage</a></span></p>


<p class="NDLRefHeaderFile">&lt;AssetApplicationInfoMsg.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_asset_application_info_msg.gif" alt="Inheritance graph for efd::AssetApplicationInfoMsg"/>
  <p class="FigureCaption">Inheritance graph for efd::AssetApplicationInfoMsg</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Message class used for <span class="NDLSystemFont">AssetApplicationInfoMsg</span> messages. </p>
<p class="NDLNormal">This message is intended to be sent by an application after receiving a NetServiceConnectionEstablished message. The message allows the application to send information about itself to an asset controller's channel manager. The asset controller can use this information to offer additional information about connections or connection loss to clients. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_asset_application_info_msg_1a6adbda5bc1fd4977551dbb31eea92fb7"></a>
<p class="NDLRefMemberFunction">AssetApplicationInfoMsg()</p>
<p class="NDLRefMemberDescription">Constructor. </p>

<a name="classefd_1_1_asset_application_info_msg_1a478e61f7906c9befe9dcdde7cc9877b0"></a>
<p class="NDLRefMemberFunction">AssetApplicationInfoMsg(const <span class="NDLSystemFont"><a href="efd__AssetApplicationInfoMsg__AppInfo.htm">AppInfo</a></span>& ci)</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_asset_application_info_msg_1ae70b11d5ba08b14fff1344244b567cab"></a>
<p class="NDLRefMemberFunction">virtual void  Serialize(<span class="NDLSystemFont"><a href="efd__Archive.htm">efd::Archive</a></span>& io_ar)</p>
<p class="NDLRefMemberDescription">Serialize a polymorphic type to or from an <span class="NDLSystemFont"><a href="efd__Archive.htm">Archive</a></span>. </p>
<p class="NDLRefMemberDetailedDescription">This method must be overridden, but if your streamable object has no data the override can be an empty function. A typical implementation of this method will make one call to <span class="NDLSystemFont"><a href="../Namespaces/efd__Serializer.htm#namespaceefd_1_1_serializer_1a63e0b99047011bde53be44786ab9ee7b">efd::Serializer::SerializeObject</a></span> for each member of the class. If you are derived from another streamable class you should be sure to call to parent implementation of this method as well; it is recommended that the parent class be serialized first before adding the data for the derived class. If your class contains complex data such as STL-style contianers or pointers to allocated data then you can simplify the implementation of Serialize by using the templated helper functions in &lt;<span class="NDLSystemFont">efd/SerializeRoutines.h</span>&gt;; these can serialize even the most complex data structures with a single method call and will reduce the chance of making common mistakes (which could introduce security vulnerabilities if marshalling data from untrusted sources).</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">io_ar</span></td>
    <td>The <span class="NDLSystemFont"><a href="efd__Archive.htm">Archive</a></span> to serialize to or from. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_application_info_msg_1ac0861a1a09028416bceb9c8afbff748f"></a>
<p class="NDLRefMemberFunction">void  SetPrivateCategory(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a845df149ec80fc0bf36f875ece09ef9d">UInt64</a></span> category)</p>
<p class="NDLRefMemberDescription">Set the private category which will be used by the asset controller to inform the application of new connections or connection lost. </p>
<p class="NDLRefMemberDetailedDescription">The application may generate a private category like the following:</p>
<p class="NDLRefMemberDetailedDescription">AssetControllerPrivateCategory = <span class="NDLSystemFont"><a href="efd__Category.htm">efd::Category</a></span>(<span class="NDLSystemFont">efd::UniversalID::ECU_Any</span>, pNetService-&gt;<span class="NDLSystemFont"><a href="../Namespaces/bapiOnline.htm#namespacebapi_online_1ab7cde8e3889824aa57a8256c40e81839">GetNetID()</a></span>, efd::kBASEID_AssetController).GetValue(); </p>

<a name="classefd_1_1_asset_application_info_msg_1a81b622ddf7c8902a3d6bca184aa6c7cf"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a845df149ec80fc0bf36f875ece09ef9d">UInt64</a></span>  GetPrivateCategory() const</p>
<p class="NDLRefMemberDescription">Get the privated category which is <span class="NDLSystemFont"><a href="efd__set.htm">set</a></span> by the application. </p>

<a name="classefd_1_1_asset_application_info_msg_1abf9016acf5f10c77dff3b39aefa7be3c"></a>
<p class="NDLRefMemberFunction">void  SetAppPort(int port)</p>
<p class="NDLRefMemberDescription">Set the application port. </p>
<p class="NDLRefMemberDetailedDescription">This value should be the local port number of the application. This port value is used by the asset controller to look up application information when a connection has been closed. </p>

<a name="classefd_1_1_asset_application_info_msg_1a5077d4f9db0f718816f1246c93799ec7"></a>
<p class="NDLRefMemberFunction">int  GetAppPort() const</p>
<p class="NDLRefMemberDescription">Get the application port. </p>
<p class="NDLRefMemberDetailedDescription">This value represents the applications local port number. </p>

<a name="classefd_1_1_asset_application_info_msg_1af9ae58434869a0124510330c5bddfb6b"></a>
<p class="NDLRefMemberFunction">void  SetConnected(<span class="NDLSystemFont">bool</span> bConnected)</p>
<p class="NDLRefMemberDescription">Set the connected status for the application. </p>
<p class="NDLRefMemberDetailedDescription">This value should not be <span class="NDLSystemFont"><a href="efd__set.htm">set</a></span> by any application other than the asset controller. </p>

<a name="classefd_1_1_asset_application_info_msg_1a30acf69d6b8d08bc2d8be4a359c9cc8a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetConnected() const</p>
<p class="NDLRefMemberDescription">Get the connected status for the application. </p>

<a name="classefd_1_1_asset_application_info_msg_1acb56fd832b02fcd793b614b6e588ac91"></a>
<p class="NDLRefMemberFunction">void  SetApplicationName(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span>& appName)</p>
<p class="NDLRefMemberDescription">Set the name of the application. </p>
<p class="NDLRefMemberDetailedDescription">The default value is "UNKNOWN". </p>

<a name="classefd_1_1_asset_application_info_msg_1a808efc50b64573db61307a09b19da5b1"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span>&  GetApplicationName() const</p>
<p class="NDLRefMemberDescription">Get the name of the application. </p>

<a name="classefd_1_1_asset_application_info_msg_1ae8220c7eb0851df2c070ad041be675f1"></a>
<p class="NDLRefMemberFunction">void  SetApplicationType(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span>& appType)</p>
<p class="NDLRefMemberDescription">Set the application type. </p>
<p class="NDLRefMemberDetailedDescription">The application type may be used to distinguish one type of application from another. For example, a previewer could be distinguished from a game or a tool. The default value is "UNKNOWN". </p>

<a name="classefd_1_1_asset_application_info_msg_1ad2f38a46a732d72b29e9ec692e8275da"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span>&  GetApplicationType() const</p>
<p class="NDLRefMemberDescription">Get the application type. </p>

<a name="classefd_1_1_asset_application_info_msg_1a3e266e22349837c960d06661b0f76f9c"></a>
<p class="NDLRefMemberFunction">void  SetExtraInfo(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span>& extraInfo)</p>
<p class="NDLRefMemberDescription">Set any additional extra string data that may be helpful to convey. </p>
<p class="NDLRefMemberDetailedDescription">For example, passing along data like "SupportsRapidIteration=TRUE" might be useful to some recipients of the message. </p>

<a name="classefd_1_1_asset_application_info_msg_1a8419b87ae4e4ba327f142d15200a4915"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span>&  GetExtraInfo() const</p>
<p class="NDLRefMemberDescription">Get the extra string information associated with the application. </p>

<a name="classefd_1_1_asset_application_info_msg_1a5386b386713f0172080f62ff50e58ea2"></a>
<p class="NDLRefMemberFunction">void  SetApplicationInfo(const <span class="NDLSystemFont"><a href="efd__AssetApplicationInfoMsg__AppInfo.htm">AppInfo</a></span>& ai)</p>
<p class="NDLRefMemberDescription">Set the application info using the embedded convenience class. </p>

<a name="classefd_1_1_asset_application_info_msg_1ad61ba96737a2de1157544a04e2904b69"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__AssetApplicationInfoMsg__AppInfo.htm">AppInfo</a></span>  GetApplicationInfo() const</p>
<p class="NDLRefMemberDescription">Get a copy of the application info that is stored in the embedded convenience class. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

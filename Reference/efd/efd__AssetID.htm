<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::AssetID</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::AssetID</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__MemObject.htm">efd::MemObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;AssetID.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_asset_i_d.gif" alt="Inheritance graph for efd::AssetID"/>
  <p class="FigureCaption">Inheritance graph for efd::AssetID</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Encapsulation of an individual asset ID. </p>
<p class="NDLNormal">This can hold either a fully qualified UUID or a logical asset identifier. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>
<a name="classefd_1_1_asset_i_d_1acaf333147edb3e2788f633673d33d24b"></a>
<p class=NDLRefHead2>efd::AssetID::CachingPolicy</p>


<p class="NDLRefMemberDescription">Caching hint for the asset. </p>

<p class="NDLRefMemberDetailedDescription">This hint can be used to intelligently cache assets in the system. </p>

<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">NEVER_CACHE</span></td>
    <td>The asset is never cached. Each fetch reads the asset from disk. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">CACHE</span></td>
    <td>Cache the asset when appropriate. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">ALWAYS_CACHE</span></td>
    <td>Always keep this asset cached for quick lookup. </td>
</tr>

  </tbody>
</table>
</div>


<a name="public_static_attributes"></a>
<p class="NDLRefHead1">Public Static Attributes</p>


<a name="classefd_1_1_asset_i_d_1a5d4acba4f23f94b5445cbfff2e1a000b"></a>
<p class="NDLRefMemberFunction">static const <span class="NDLSystemFont">AssetID</span>  INVALID_ASSET_ID</p>
<p class="NDLRefMemberDescription">Convenience static <span class="NDLSystemFont">AssetID</span> for an invalid asset. </p>
<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classefd_1_1_asset_i_d_1adcd99b886d37f5c8de3f8d0eefc01743"></a>
<p class="NDLRefMemberFunction">AssetID()</p>
<p class="NDLRefMemberDescription">Default constructor. </p>

<a name="classefd_1_1_asset_i_d_1ab95315f284b4f20c5a0db60647a14ba8"></a>
<p class="NDLRefMemberFunction">AssetID(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& urn, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a59a3838ab5cdfe87f98f5b8371e4e91d">efd::UInt8</a></span> multiplicity = 0, <br/><span class="NDLSystemFont"><a href="efd__AssetID.htm#classefd_1_1_asset_i_d_1acaf333147edb3e2788f633673d33d24b">CachingPolicy</a></span> cachingPolicy = NEVER_CACHE)</p>
<p class="NDLRefMemberDescription">Construct a new <span class="NDLSystemFont">AssetID</span> from a URN. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">urn</span></td>
    <td>The URN for the asset. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">multiplicity</span></td>
    <td>The number of assets represented by this id. (default=0) </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">cachingPolicy</span></td>
    <td>The policy for caching the asset. (default=NEVER_CACHE) </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_i_d_1a81b5b17697b5fda86ad1b5896475758b"></a>
<p class="NDLRefMemberFunction">AssetID(<br/>const char* urn, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a59a3838ab5cdfe87f98f5b8371e4e91d">efd::UInt8</a></span> multiplicity = 0, <br/><span class="NDLSystemFont"><a href="efd__AssetID.htm#classefd_1_1_asset_i_d_1acaf333147edb3e2788f633673d33d24b">CachingPolicy</a></span> cachingPolicy = NEVER_CACHE)</p>
<p class="NDLRefMemberDescription">Construct a new <span class="NDLSystemFont">AssetID</span> from a const char URN. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">urn</span></td>
    <td>The URN for the asset. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">multiplicity</span></td>
    <td>The number of assets represented by this id. (default=0) </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">cachingPolicy</span></td>
    <td>The policy for caching the asset. (default=NEVER_CACHE) </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_i_d_1ab5c6461852c5fa20cee41a06ec7f5eee"></a>
<p class="NDLRefMemberFunction">AssetID(const <span class="NDLSystemFont">efd::AssetID</span>& other)</p>
<p class="NDLRefMemberDescription">Copy constructor. </p>

<a name="classefd_1_1_asset_i_d_1a1557243359288f8231b448012515b997"></a>
<p class="NDLRefMemberFunction">virtual ~AssetID()</p>
<p class="NDLRefMemberDescription">Virtual destructor. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_asset_i_d_1a6eb76481fcfccf4c9a03664e149642fe"></a>
<p class="NDLRefMemberFunction">operator const efd::utf8string &() const</p>
<p class="NDLRefMemberDescription">implicit conversion to const const <span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span>& </p>

<a name="classefd_1_1_asset_i_d_1a51ad05e67d8503e2ecc128087313150d"></a>
<p class="NDLRefMemberFunction">const char*  c_str() const</p>
<p class="NDLRefMemberDescription">Convert this <span class="NDLSystemFont">AssetID</span> to a string. </p>

<a name="classefd_1_1_asset_i_d_1a47a8a67a8a33338c9da81066de915db3"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  IsValidURN() const</p>
<p class="NDLRefMemberDescription">returns true if the <span class="NDLSystemFont">AssetID</span> is a valid URN. </p>

<a name="classefd_1_1_asset_i_d_1ae1d769604eede703ebe71058301c291d"></a>
<p class="NDLRefMemberFunction">void  SetURN(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& urn)</p>
<p class="NDLRefMemberDescription">Set the asset URN. </p>

<a name="classefd_1_1_asset_i_d_1a28a68aef0e060bb9eea4b4e8e1222517"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>&  GetURN() const</p>
<p class="NDLRefMemberDescription">Get the asset URN as a <span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span>. </p>

<a name="classefd_1_1_asset_i_d_1aeef67c50725740b719d3326b9ed2d34c"></a>
<p class="NDLRefMemberFunction">virtual void  SetMultiplicity(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a59a3838ab5cdfe87f98f5b8371e4e91d">efd::UInt8</a></span> val)</p>
<p class="NDLRefMemberDescription">Set the multiplicity between this assetID and the underlying asset(s). </p>
<p class="NDLRefMemberDetailedDescription">An assetID can represent a single asset or a class of assets. When fetching an asset by ID it is important to know how many responses to expect.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">val</span></td>
    <td>1 if there is a 1-1 correspondence between assetID and Asset. n if this <span class="NDLSystemFont">AssetID</span> maps to n distinct assets. 0 if this assetID maps to any number of assets. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_i_d_1a906bc66980ee23ab1a26404ce97efc32"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a59a3838ab5cdfe87f98f5b8371e4e91d">efd::UInt8</a></span>  GetMultiplicity() const</p>
<p class="NDLRefMemberDescription">Get the multiplicity between this assetID and the underlying asset(s). </p>
<p class="NDLRefMemberDetailedDescription">An assetID can represent a single asset or a class of assets. When fetching an asset by ID it is important to know how many responses to expect.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>1 if there is a 1-1 correspondence between assetID and Asset. n if this <span class="NDLSystemFont">AssetID</span> maps to n distinct assets. 0 if this assetID maps to any number of assets. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_i_d_1a42bb1c95abeb7e8f7b38534f9c04092a"></a>
<p class="NDLRefMemberFunction">void  SetCachingPolicy(<span class="NDLSystemFont"><a href="efd__AssetID.htm#classefd_1_1_asset_i_d_1acaf333147edb3e2788f633673d33d24b">CachingPolicy</a></span> policy)</p>
<p class="NDLRefMemberDescription">Set the caching policy for the asset(s) represented by this ID. </p>

<a name="classefd_1_1_asset_i_d_1a46a208951e0a2ad565b9ed989df6fa1f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__AssetID.htm#classefd_1_1_asset_i_d_1acaf333147edb3e2788f633673d33d24b">CachingPolicy</a></span>  GetCachingPolicy() const</p>
<p class="NDLRefMemberDescription">Get the caching policy for the asset(s) represented by this ID. </p>

<a name="classefd_1_1_asset_i_d_1a168a7829a2f3532cfcee19fa0d20f93e"></a>
<p class="NDLRefMemberFunction">void  Serialize(<span class="NDLSystemFont"><a href="efd__Archive.htm">efd::Archive</a></span>& io_archive)</p>
<p class="NDLRefMemberDescription">Serialize method for using <span class="NDLSystemFont">AssetID</span> with <span class="NDLSystemFont"><a href="efd__Archive.htm">Archive</a></span> and <span class="NDLSystemFont"><a href="efd__ParameterList.htm">ParameterList</a></span>. </p>

<a name="classefd_1_1_asset_i_d_1a1e92c21a67bab6b880db16811a5c73db"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsUUID() const</p>
<p class="NDLRefMemberDescription">Returns true if this <span class="NDLSystemFont">AssetID</span> represents a universal unique ID as opposed to a query URN. </p>
<a name="assignment_operators"></a>
<p class="NDLRefHead1">Assignment operators</p>


<a name="classefd_1_1_asset_i_d_1a8ad6726d5b8fd40385555084ca197704"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">AssetID</span>&  operator=(const <span class="NDLSystemFont">AssetID</span>& other)</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_asset_i_d_1ade246004cbfbb5b892ea9882fa6265da"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">AssetID</span>&  operator=(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& urn)</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_asset_i_d_1a48ac21ab7e3d46d83814e275e0ff4276"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">AssetID</span>&  operator=(const char* urn)</p>
<p class="NDLRefMemberFunction"></p>
<a name="comparison_operators"></a>
<p class="NDLRefHead1">comparison operators</p>


<a name="classefd_1_1_asset_i_d_1a7c7189a0e3bdf51e497e8aacf84c7f2a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator==(const <span class="NDLSystemFont">AssetID</span>& other) const</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_asset_i_d_1a25439d4a18988c93100a4dd9186182e0"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator!=(const <span class="NDLSystemFont">AssetID</span>& other) const</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_asset_i_d_1a4da46de1112cd308002fa01096858f2e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator&lt;(const <span class="NDLSystemFont">AssetID</span>& other) const</p>
<p class="NDLRefMemberFunction"></p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::UniversalID</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::UniversalID</p>


<p class="NDLRefHeaderFile">&lt;UniversalID.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_universal_i_d.gif" alt="Inheritance graph for efd::UniversalID"/>
  <p class="FigureCaption">Inheritance graph for efd::UniversalID</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">A class that encapsulates a unique ID. </p>
<p class="NDLNormal">Universal <span class="NDLSystemFont"><a href="efd__IDs.htm">IDs</a></span> are 64-bit identifiers segmented into specific bit fields. The ID is composed of several distinct fields which are hierarchically defined for several specific end uses. These fields are described below.</p>
<p class="NDLNormal">System : 1 - 1==defined by Emergent, 0==not. Half the namespace is available to end users.</p>
<p class="NDLNormal">IsCategory : 1 - Must be 1 if it is valid to use this ID with subscribe, unsubscribe, or send. <span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span> - = 1 Entity - = 1 <span class="NDLSystemFont"><a href="EventID.htm">EventID</a></span> - = 0</p>
<p class="NDLNormal">IsWidelyUnique : 1 - Combined with IsCategory this uniquely distinguishes <span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span>, Event, and Entity <span class="NDLSystemFont"><a href="efd__IDs.htm">IDs</a></span><span class="NDLSystemFont"><a href="efd__Category.htm">Category</a></span> - = 0 Entity - = 1 <span class="NDLSystemFont"><a href="EventID.htm">EventID</a></span> - = 1</p>
<p class="NDLNormal">if this ID represents a CategoryId (IsCategory=1): Many-to-1 : 1 - 1==single subscriber, 0 ==multiple subscribers 1-to-Many : 1 - 1==single producer, 0==multiple producers</p>
<p class="NDLNormal">netid : 10 - optional portion <span class="NDLSystemFont"><a href="efd__set.htm">set</a></span> to the processes NetId.</p>
<p class="NDLNormal">If this ID is widely unique across processes (IsWidelyUnique=1): netid : 10 - 0==temporary entity, cannot migrate or subscribe to events. !0==what process originally created entity (might have since migrated) shardid : 10 - 0==temporary entity, cannot be persisted. !0==what shard created the entity</p>
<p class="NDLNormal">If both a CategoryID and widely unique: 1-to-Many : 1 - must be 0, many people can send me messages Many-to-1 : 1 - must be 1, only I subscribe to the private channel which is my entity ID</p>
<p class="NDLNormal">netid : 10 - 0==temporary entity, cannot migrate or subscribe to events. !0==what process originally created entity (might have since migrated)</p>
<p class="NDLNormal">shardid : 10 - 0==temporary entity, cannot be persisted. !0==what shard created the entity</p>
<p class="NDLNormal">baseid :* - The remainder of the 64-bit namespace representing unique portion of the ID. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>
<a name="classefd_1_1_universal_i_d_1ae4d1a33ac0b8b2f36b0d80691b4d3912"></a>
<p class=NDLRefHead2>efd::UniversalID::IdType</p>


<p class="NDLRefMemberDescription">NOTE: these are assigned specific and important values. </p>

<p class="NDLRefMemberDetailedDescription">Both <span class="NDLSystemFont"><a href="ChannelID.htm">ChannelID</a></span> and <span class="NDLSystemFont"><a href="EntityID.htm">EntityID</a></span> need the second bit <span class="NDLSystemFont"><a href="efd__set.htm">set</a></span> high and both <span class="NDLSystemFont"><a href="EventID.htm">EventID</a></span> and <span class="NDLSystemFont"><a href="EntityID.htm">EntityID</a></span> need the first bit high. </p>

<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">kIDT_UnknownType</span></td>
    <td>&nbsp;</td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kIDT_EventID</span></td>
    <td>&nbsp;</td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kIDT_ChannelID</span></td>
    <td>&nbsp;</td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kIDT_EntityID</span></td>
    <td>&nbsp;</td>
</tr>

  </tbody>
</table>
</div>

<a name="classefd_1_1_universal_i_d_1aee7a8d80b484a2f2f2936bc2c738156a"></a>
<p class=NDLRefHead2>efd::UniversalID::ExpectedChannelUsage</p>


<p class="NDLRefMemberDescription">A hint suggested how the channel will be used. </p>

<p class="NDLRefMemberDetailedDescription">This is only a hint and does not prevent other usage, but it can be used as a debugging aid to find potentially incorrect usage. </p>

<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">ECU_Any</span></td>
    <td>&nbsp;</td>
</tr>
<tr>
    <td><span class="NDLSystemFont">ECU_EventChannel</span></td>
    <td>Many subscribers, many producers. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">ECU_PrivateChannel</span></td>
    <td>Many subscribers, one producer. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">ECU_Point2Point</span></td>
    <td>One subscriber, many producers. </td>
</tr>

  </tbody>
</table>
</div>


<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classefd_1_1_universal_i_d_1a9816757bb2b39d00542e6bd4993ae654"></a>
<p class="NDLRefMemberFunction">UniversalID()</p>
<p class="NDLRefMemberDescription">Constructor. </p>

<a name="classefd_1_1_universal_i_d_1adf59fe340bc161e4d6629a8a8fa2f7a6"></a>
<p class="NDLRefMemberFunction">UniversalID(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a845df149ec80fc0bf36f875ece09ef9d">efd::UInt64</a></span> entityID)</p>
<p class="NDLRefMemberDescription">Constructor taking a UInt64. </p>

<a name="classefd_1_1_universal_i_d_1a41cc48567bc6e55466e914b4daf32124"></a>
<p class="NDLRefMemberFunction">UniversalID(const <span class="NDLSystemFont">UniversalID</span>& entityID)</p>
<p class="NDLRefMemberDescription">Copy Constructor. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_universal_i_d_1a77b462052b58ce47138dd58be6f746ee"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">UniversalID</span>&  operator=(const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a845df149ec80fc0bf36f875ece09ef9d">efd::UInt64</a></span>& other)</p>
<p class="NDLRefMemberDescription">Assignment operator taking a UInt64. </p>

<a name="classefd_1_1_universal_i_d_1a58b38e90dca2ed1d8e8867b779bf0ac0"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">UniversalID</span>&  operator=(const <span class="NDLSystemFont">UniversalID</span>& other)</p>
<p class="NDLRefMemberDescription">Assignment operator taking an <span class="NDLSystemFont"><a href="EntityID.htm">EntityID</a></span>. </p>

<a name="classefd_1_1_universal_i_d_1afd9f83c1ae0d4308a1af6a7692a5ebf0"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator==(const <span class="NDLSystemFont">UniversalID</span>& other) const</p>
<p class="NDLRefMemberDescription">Equality operator. </p>

<a name="classefd_1_1_universal_i_d_1ac048740f7676fa8d3df5daf5eb6885f5"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator!=(const <span class="NDLSystemFont">UniversalID</span>& other) const</p>
<p class="NDLRefMemberDescription">Inequality operator. </p>

<a name="classefd_1_1_universal_i_d_1aaf4f7317502857ea33150b6f1aec2525"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator&lt;(const <span class="NDLSystemFont">UniversalID</span>& rhs) const</p>
<p class="NDLRefMemberDescription">Greater Than operator. To support usage as the key in an <span class="NDLSystemFont"><a href="efd__map.htm">efd::map</a></span>. </p>

<a name="classefd_1_1_universal_i_d_1abc6fee8c917b03ca15e90bc38def2e3c"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator&gt;(const <span class="NDLSystemFont">UniversalID</span>& lhs) const</p>
<p class="NDLRefMemberDescription">Less Than operator. </p>

<a name="classefd_1_1_universal_i_d_1a233422451af45baffa87cd6c1ad6e703"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsValid() const</p>
<p class="NDLRefMemberDescription">Tests if the Id contains a valid (i.e. non-zero) value. </p>

<a name="classefd_1_1_universal_i_d_1a4c90d96062e5f3c843121682da05ac1f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator!() const</p>
<p class="NDLRefMemberDescription">logical not operator. Tests if the value is zero. </p>

<a name="classefd_1_1_universal_i_d_1a101f2b421a7a06eb27584287882125a0"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a845df149ec80fc0bf36f875ece09ef9d">efd::UInt64</a></span>  GetValue() const</p>
<p class="NDLRefMemberDescription">Gets the numeric representation of this entity ID. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>A UInt64 representing the value of the entity ID </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_universal_i_d_1acb859354fa6aa9302974c3848c5c3320"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>  ToString() const</p>
<p class="NDLRefMemberDescription">Creates a "pretty" format string splitting out the different components of the ID. </p>
<p class="NDLRefMemberDetailedDescription">Handy for logging.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>The string </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_universal_i_d_1a101f2e33d650cc49387cddd31559a0f6"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetSystem() const</p>
<p class="NDLRefMemberDescription">Gets the numeric representation of the reserved bits in the ID. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>Bool The value of the system bit. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_universal_i_d_1ab88171fdac6a4ec0f2237607189fd39f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  SetSystem(<span class="NDLSystemFont">efd::Bool</span> i_system)</p>
<p class="NDLRefMemberDescription">Sets the numeric representation of the reserved bits in the ID. </p>
<p class="NDLRefMemberDetailedDescription">The value will be ignored if it is outside of the valid range.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>bool true </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_universal_i_d_1a7cb25bd791084bcc94e0fdca6564639e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__UniversalID.htm#classefd_1_1_universal_i_d_1ae4d1a33ac0b8b2f36b0d80691b4d3912">IdType</a></span>  GetType() const</p>
<p class="NDLRefMemberDescription">Gets the type bits from the ID. </p>
<p class="NDLRefMemberDetailedDescription">Only valid if GetSystem is true.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>IdType The value of the type bits. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_universal_i_d_1a50c66d2f8e5548b9d42cb082efcb612f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  SetType(<span class="NDLSystemFont"><a href="efd__UniversalID.htm#classefd_1_1_universal_i_d_1ae4d1a33ac0b8b2f36b0d80691b4d3912">IdType</a></span> i_type)</p>
<p class="NDLRefMemberDescription">Sets the numeric representation of the type bits in the ID. </p>
<p class="NDLRefMemberDetailedDescription">The value will be ignored if it is outside of the valid range.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>bool true </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_universal_i_d_1a2ca8f7c48882be8b04a37a87fdf38fa9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__UniversalID.htm#classefd_1_1_universal_i_d_1aee7a8d80b484a2f2f2936bc2c738156a">ExpectedChannelUsage</a></span>  GetUsage() const</p>
<p class="NDLRefMemberDescription">Gets the bits from the ID. </p>
<p class="NDLRefMemberDetailedDescription">Only valid if GetSystem is true and GetType is either <span class="NDLSystemFont"><a href="ChannelID.htm">ChannelID</a></span> or <span class="NDLSystemFont"><a href="EntityID.htm">EntityID</a></span>.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>ChannelUsage The value of the usage bits. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_universal_i_d_1a1b996f0b0734e049ff88a2756cb8e7a5"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  SetUsage(<span class="NDLSystemFont"><a href="efd__UniversalID.htm#classefd_1_1_universal_i_d_1aee7a8d80b484a2f2f2936bc2c738156a">ExpectedChannelUsage</a></span> i_type)</p>
<p class="NDLRefMemberDescription">Sets the usage bits. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>bool true if the input is valid </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_universal_i_d_1ad12ce54b778bb460e9f110e96eee26d6"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetShardID() const</p>
<p class="NDLRefMemberDescription">Gets the numeric representation of the shard bits in the ID. </p>
<p class="NDLRefMemberDetailedDescription">Only valid if GetSystem is true and GetType is either <span class="NDLSystemFont"><a href="EventID.htm">EventID</a></span> or <span class="NDLSystemFont"><a href="EntityID.htm">EntityID</a></span>.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>UInt32 the value of the Shard ID that created this ID </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_universal_i_d_1ac50f42cbb752bacb9e78dfbe1cf52d6d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  SetShardID(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> )</p>
<p class="NDLRefMemberDescription">Sets the numeric representation of the shard bits in the ID. </p>
<p class="NDLRefMemberDetailedDescription">The value will be ignored if it is outside the valid range. You must <span class="NDLSystemFont"><a href="efd__set.htm">set</a></span> the System and Type values before you <span class="NDLSystemFont"><a href="efd__set.htm">set</a></span> the ShardID as the location of the ShardID bits varies.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>bool true if the input value is in range, false otherwise </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_universal_i_d_1a3f50248292b1b475b60197b05f5e9053"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetNetID() const</p>
<p class="NDLRefMemberDescription">Gets the numeric representation of the NetID bits in the ID. </p>
<p class="NDLRefMemberDetailedDescription">Only valid if GetSystem is true and GetType is either <span class="NDLSystemFont"><a href="ChannelID.htm">ChannelID</a></span>, <span class="NDLSystemFont"><a href="EventID.htm">EventID</a></span> or <span class="NDLSystemFont"><a href="EntityID.htm">EntityID</a></span>.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>UInt32 the value of the Net ID that created this ID </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_universal_i_d_1a09be1da4661f14925df0c98e7424c336"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  SetNetID(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> i_netID)</p>
<p class="NDLRefMemberDescription">Sets the numeric representation of the NetID bits in the ID. </p>
<p class="NDLRefMemberDetailedDescription">The value will be ignored if it is outside of the valid range. You must <span class="NDLSystemFont"><a href="efd__set.htm">set</a></span> the System and Type values before you <span class="NDLSystemFont"><a href="efd__set.htm">set</a></span> the NetID as the location of the NetID bits varies.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>bool true if the input value is in range, false otherwise </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_universal_i_d_1a68e87d004da578d302787af086b182db"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a845df149ec80fc0bf36f875ece09ef9d">efd::UInt64</a></span>  GetBaseID() const</p>
<p class="NDLRefMemberDescription">Gets the numeric representation of the base bits in the ID. </p>
<p class="NDLRefMemberDetailedDescription">The number of bits fetched depends on the System and Type values.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>UInt64 the value of the base ID without the extra info baked in </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_universal_i_d_1ad61830066622516e00dca337f5431759"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  SetBaseID(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a845df149ec80fc0bf36f875ece09ef9d">efd::UInt64</a></span> i_base)</p>
<p class="NDLRefMemberDescription">Sets the numeric representation of the base bits in the ID. </p>
<p class="NDLRefMemberDetailedDescription">The value will be ignored if it is outside of the valid range.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>bool true if the input value is in range, false otherwise </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_universal_i_d_1a1762f5d38cda9f86c66ced2f548d6534"></a>
<p class="NDLRefMemberFunction">void  Serialize(<span class="NDLSystemFont"><a href="efd__Archive.htm">efd::Archive</a></span>& ar)</p>
<p class="NDLRefMemberDescription">Serialization. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

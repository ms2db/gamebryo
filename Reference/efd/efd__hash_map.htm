<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::hash_map</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::hash_map</p>
<p class="NDLRefParentage">: public efd::stlport::hash_map< _key, _data, _HashFcn, _EqualKey, CustomAllocator< _data > ></p>


<p class="NDLRefHeaderFile">&lt;StdContainers.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1hash__map.gif" alt="Inheritance graph for efd::hash_map"/>
  <p class="FigureCaption">Inheritance graph for efd::hash_map</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">An STL <span class="NDLSystemFont">hash_map</span> that uses Emergent's memory allocator. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>


<a name="classefd_1_1hash__map_1a3021e6c732fcf31cd9f2d8e60970b31a"></a>
<p class="NDLRefMemberFunction">typedef efd::stlport::hash_map&lt;_key, _data, _HashFcn, _EqualKey, <span class="NDLSystemFont"><a href="efd__CustomAllocator.htm">CustomAllocator</a></span>&lt;_data&gt;&gt;  BaseClass</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1hash__map_1a5f509580c0ce1a86e14799e8b7ada70b"></a>
<p class="NDLRefMemberFunction">typedef BaseClass::iterator  iterator</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1hash__map_1a8665e27606effa4e4e6753fa38804d6e"></a>
<p class="NDLRefMemberFunction">typedef BaseClass::const_iterator  const_iterator</p>
<p class="NDLRefMemberFunction"></p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1hash__map_1aa2d964b91f7f108b860876102dd804f3"></a>
<p class="NDLRefMemberFunction">hash_map()</p>
<p class="NDLRefMemberDescription">Construct a <span class="NDLSystemFont">hash_map</span>. </p>
<p class="NDLRefMemberDetailedDescription">Semantics are identical to std::hash_map. </p>

<a name="classefd_1_1hash__map_1a8ef0e41fde019af598a5e7a92920f10d"></a>
<p class="NDLRefMemberFunction">hash_map(size_t __n)</p>
<p class="NDLRefMemberDescription">Construct a <span class="NDLSystemFont">hash_map</span>. </p>
<p class="NDLRefMemberDetailedDescription">Semantics are identical to std::hash_map. </p>

<a name="classefd_1_1hash__map_1ad39169f32dbb1b5f31df8fafed571ea6"></a>
<p class="NDLRefMemberFunction">hash_map(const <span class="NDLSystemFont">hash_map</span>& _Right)</p>
<p class="NDLRefMemberDescription">Construct a <span class="NDLSystemFont">hash_map</span>. </p>
<p class="NDLRefMemberDetailedDescription">Semantics are identical to std::hash_map. </p>

<a name="classefd_1_1hash__map_1acf5c68e718393799442757ee7c76ab04"></a>
<p class="NDLRefMemberFunction">hash_map(const <span class="NDLSystemFont"><a href="efd__hash_map.htm#classefd_1_1hash__map_1a3021e6c732fcf31cd9f2d8e60970b31a">BaseClass</a></span>& _Right)</p>
<p class="NDLRefMemberDescription">Construct a <span class="NDLSystemFont">hash_map</span>. </p>
<p class="NDLRefMemberDetailedDescription">Semantics are identical to std::hash_map. </p>

<a name="classefd_1_1hash__map_1a67f8a91ed02d95875023686b1bdc4339"></a>
<p class="NDLRefMemberFunction">template &lt;class InputIterator  &gt; hash_map(<br/>InputIterator _First, <br/>InputIterator _Last)</p>
<p class="NDLRefMemberDescription">Construct a <span class="NDLSystemFont">hash_map</span>. </p>
<p class="NDLRefMemberDetailedDescription">Semantics are identical to std::hash_map. </p>

<a name="classefd_1_1hash__map_1a1212c6dc7d72b5dfb7361cd1265a108e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  find(<br/>const _key& i_key, <br/>_data& o_data) const</p>
<p class="NDLRefMemberDescription">Find a key in the <span class="NDLSystemFont">hash_map</span>. </p>
<p class="NDLRefMemberDetailedDescription">If found, copy the key into an output parameter.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_key</span></td>
    <td>The key to search for. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_data</span></td>
    <td>If key is found, data is copied here. If key is not found, this value is guaranteed to remain unchanged from its initial value. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>bool True if the key was found, false if the key is not in the <span class="NDLSystemFont"><a href="efd__map.htm">map</a></span>. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

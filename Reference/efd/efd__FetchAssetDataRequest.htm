<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::FetchAssetDataRequest</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::FetchAssetDataRequest</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__AssetLocatorRequest.htm">efd::AssetLocatorRequest</a></span></p>


<p class="NDLRefHeaderFile">&lt;AssetLocatorRequest.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_fetch_asset_data_request.gif" alt="Inheritance graph for efd::FetchAssetDataRequest"/>
  <p class="FigureCaption">Inheritance graph for efd::FetchAssetDataRequest</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Message for requesting asset data from an AssetServer. </p>
<p class="NDLNormal">This request can either ask for the entire asset or a range of bytes. If the 'FullFetch' flag is true the request indicates the caller wants the entire asset. If this is false, the caller is requesting just a subset of the asset, as described by the offset and size parameters.</p>
<p class="NDLNormal">Fetch requests require a specific callback category to avoid broadcasting large assets. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_fetch_asset_data_request_1ab09173688e57c08b7b455cb416fc1146"></a>
<p class="NDLRefMemberFunction">FetchAssetDataRequest()</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_fetch_asset_data_request_1af26536a95be6ed42d681a4624fadfbe3"></a>
<p class="NDLRefMemberFunction">virtual void  Serialize(<span class="NDLSystemFont"><a href="efd__Archive.htm">efd::Archive</a></span>& io_ar)</p>
<p class="NDLRefMemberDescription">Serialize a polymorphic type to or from an <span class="NDLSystemFont"><a href="efd__Archive.htm">Archive</a></span>. </p>
<p class="NDLRefMemberDetailedDescription">This method must be overridden, but if your streamable object has no data the override can be an empty function. A typical implementation of this method will make one call to <span class="NDLSystemFont"><a href="../Namespaces/efd__Serializer.htm#namespaceefd_1_1_serializer_1a63e0b99047011bde53be44786ab9ee7b">efd::Serializer::SerializeObject</a></span> for each member of the class. If you are derived from another streamable class you should be sure to call to parent implementation of this method as well; it is recommended that the parent class be serialized first before adding the data for the derived class. If your class contains complex data such as STL-style contianers or pointers to allocated data then you can simplify the implementation of Serialize by using the templated helper functions in &lt;<span class="NDLSystemFont">efd/SerializeRoutines.h</span>&gt;; these can serialize even the most complex data structures with a single method call and will reduce the chance of making common mistakes (which could introduce security vulnerabilities if marshalling data from untrusted sources).</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">io_ar</span></td>
    <td>The <span class="NDLSystemFont"><a href="efd__Archive.htm">Archive</a></span> to serialize to or from. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_fetch_asset_data_request_1a07141d5ee62d892839a6d02d7a74accf"></a>
<p class="NDLRefMemberFunction">void  SetAssetWebInstanceId(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& val)</p>
<p class="NDLRefMemberDescription">Set the instance Id of the Asset Web used for the request. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<p class="NDLRefMemberDetailedDescription"><span class="NDLSystemFont"><a href="efd__AssetWeb.htm#classefd_1_1_asset_web_1a48103dd55037be4a54faa2d41f976c96">AssetWeb::getInstanceId</a></span>. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">val</span></td>
    <td><span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span> The Instance Id GUID value. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_fetch_asset_data_request_1a8f263b7ffaf357998217968c1dd5144e"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>&  GetAssetWebInstanceId() const</p>
<p class="NDLRefMemberDescription">Retrieve the instance Id of the Asset Web used for the request. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<p class="NDLRefMemberDetailedDescription"><span class="NDLSystemFont"><a href="efd__AssetWeb.htm#classefd_1_1_asset_web_1a48103dd55037be4a54faa2d41f976c96">AssetWeb::getInstanceId()</a></span></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span> The Instance Id GUID value. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_fetch_asset_data_request_1a621e3d6a4c0b2018d963d4aabfd3c5d6"></a>
<p class="NDLRefMemberFunction">void  SetFullFetch(<span class="NDLSystemFont">bool</span> val)</p>
<p class="NDLRefMemberDescription">Set whether the fetch request should retrieve the entire asset data. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<p class="NDLRefMemberDetailedDescription">StartOffset() </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">val</span></td>
    <td>True if a full fetch is desired, else False. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_fetch_asset_data_request_1a7bd50bb6e5e4879abcf9de55e7c6a2b3"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsFullFetch() const</p>
<p class="NDLRefMemberDescription">Get whether the fetch request should retrieve the entire asset data. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>bool True value indicates full fetch. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_fetch_asset_data_request_1affc90b3178736ccd5104e7acb8ef1d58"></a>
<p class="NDLRefMemberFunction">void  SetStartOffset(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> offset)</p>
<p class="NDLRefMemberDescription">Set byte offset for reading the asset when a partial fetch is required. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">offset</span></td>
    <td>The offset in bytes. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_fetch_asset_data_request_1ae42e585ddeb2d95336362bdd8bf41a00"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetStartOffset() const</p>
<p class="NDLRefMemberDescription">Get byte offset for reading the asset when a partial fetch is required. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>UInt32 The byte offset. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_fetch_asset_data_request_1ad3c550d9fe01e7f4ad170e537755f4d7"></a>
<p class="NDLRefMemberFunction">void  SetBytesToRead(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> size)</p>
<p class="NDLRefMemberDescription">Set byte count for reading the asset when a partial fetch is required. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">size</span></td>
    <td>The size in bytes. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_fetch_asset_data_request_1a73a9be24d66c94e211350f82fefd3777"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetBytesToRead() const</p>
<p class="NDLRefMemberDescription">Get byte count for reading the asset when a partial fetch is required. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>UInt32 The size in bytes. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

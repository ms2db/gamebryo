<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::AllocUnit</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::AllocUnit</p>


<p class="NDLRefHeaderFile">&lt;MemTracker.h&gt;</p>


<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class is designed to hold all information about a piece of allocated memory. </p>
<p class="NDLNormal">Since it does not persist beyond that piece of memory's deallocation, it holds no deallocation information. </p>

<a name="public_attributes"></a>
<p class="NDLRefHead1">Public Attributes</p>


<a name="classefd_1_1_alloc_unit_1a0e4d70fe40d7970b167181462fc1fa8e"></a>
<p class="NDLRefMemberFunction">size_t  m_stAllocationID</p>
<p class="NDLRefMemberDescription">A unique identifier for the allocation unit with respect to the m_stAccumulatedAllocationCount count. </p>

<a name="classefd_1_1_alloc_unit_1a31cf5909b86a061ae55f5bd1cceea959"></a>
<p class="NDLRefMemberFunction">void*  m_pvMem</p>
<p class="NDLRefMemberDescription">The address returned by the internal allocator. </p>
<p class="NDLRefMemberDetailedDescription">Depending on how the sub-allocator works, this address may or may not be the start of the full allocation. </p>

<a name="classefd_1_1_alloc_unit_1a1dfdc1799237e29de73cd06e84d876e0"></a>
<p class="NDLRefMemberFunction">size_t  m_stAlignment</p>
<p class="NDLRefMemberDescription">The alignment of the memory as requested at allocation time. </p>

<a name="classefd_1_1_alloc_unit_1a29f7f040138203d008912774b7e449ce"></a>
<p class="NDLRefMemberFunction">size_t  m_stSizeRequested</p>
<p class="NDLRefMemberDescription">The amount of memory that was requested at allocation time. </p>

<a name="classefd_1_1_alloc_unit_1a755fdc586fa1e68a35746ba938ed605b"></a>
<p class="NDLRefMemberFunction">size_t  m_stSizeAllocated</p>
<p class="NDLRefMemberDescription">The amount of memory that was actually allocated at allocation time. </p>
<p class="NDLRefMemberDetailedDescription">This number should be greater than or equal to m_stSizeRequested. </p>

<a name="classefd_1_1_alloc_unit_1a73375f12ded39a2bb50a57ca8051e816"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">AllocUnit</span>*  m_pkPrev</p>
<p class="NDLRefMemberDescription">The prior allocation unit in the active array. </p>

<a name="classefd_1_1_alloc_unit_1afe1fa9c469510e42c980475d4236bf1e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">AllocUnit</span>*  m_pkNext</p>
<p class="NDLRefMemberDescription">The next allocation unit in the active array. </p>

<a name="classefd_1_1_alloc_unit_1adb09290e3766e60247fc42fe382dc503"></a>
<p class="NDLRefMemberFunction">unsigned long  m_ulAllocThreadId</p>
<p class="NDLRefMemberDescription">The unique identifier for the thread that was used to allocate the memory. </p>

<a name="classefd_1_1_alloc_unit_1aeecd9e3c22472f9a9cdc5674b072306a"></a>
<p class="NDLRefMemberFunction">float  m_fAllocTime</p>
<p class="NDLRefMemberDescription">The time at which the allocation occurred, as reported by GetCurrentTimeInSec Note: This is stored as a float instead of double to save space. </p>

<a name="classefd_1_1_alloc_unit_1a4e478f82065bcee287b90c84c455c2c5"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ad9c81f78b405eb346c527c73002e5382">MemEventType</a></span>  m_eAllocType</p>
<p class="NDLRefMemberDescription">The MemEventType used to allocate the memory. </p>

<a name="classefd_1_1_alloc_unit_1ab2c07ae58b12f52fab577516a367e56f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__MemHint.htm">MemHint</a></span>  m_kAllocHint</p>
<p class="NDLRefMemberDescription">The <span class="NDLSystemFont"><a href="efd__MemHint.htm">MemHint</a></span> used to allocate the memory. </p>

<a name="classefd_1_1_alloc_unit_1a05f907348fe7862fbd914e4b21cfcee7"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__FLF.htm">FLF</a></span>  m_kFLF</p>
<p class="NDLRefMemberDescription">The <span class="NDLSystemFont"><a href="efd__FLF.htm">FLF</a></span> storing the file, line, and function information. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_alloc_unit_1aa577401f3a1680df8cbb36151814d7ba"></a>
<p class="NDLRefMemberFunction">void  Reset()</p>
<p class="NDLRefMemberFunction"></p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

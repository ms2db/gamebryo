<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::Point2</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::Point2</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__MemObject.htm">efd::MemObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;Point2.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_point2.gif" alt="Inheritance graph for efd::Point2"/>
  <p class="FigureCaption">Inheritance graph for efd::Point2</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This is a basic 2D point class. </p>
<p class="NDLNormal">The only data members are x and y, which are both declared as public 32-bit floating point values. This arrangement enables them to be accessed using structure-style notation (i.e. value = vector.x). </p>

<a name="friend_members"></a>
<p class="NDLRefHead1">Friend Members</p>


<a name="classefd_1_1_point2_1ab31f1b42694f2ec87827c5d10226655e"></a>
<p class="NDLRefMemberFunction">friend <span class="NDLSystemFont">Point2</span>  operator*(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> scalar, <br/>const <span class="NDLSystemFont">Point2</span>& pt)</p>
<p class="NDLRefMemberDescription">scalar multiplication operator. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">scalar</span></td>
    <td>The scalar value.. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pt</span></td>
    <td>The point with which to scale. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A newly constructed point containing the scaled version of the specified point. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_attributes"></a>
<p class="NDLRefHead1">Public Attributes</p>


<a name="classefd_1_1_point2_1a66f7d98a020fe78b45356abc7a4c1660"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  x</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_point2_1a5ba33a8e070cf1b1fd4fd8c4ec27bcc7"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  y</p>
<p class="NDLRefMemberFunction"></p>
<a name="public_static_attributes"></a>
<p class="NDLRefHead1">Public Static Attributes</p>


<a name="classefd_1_1_point2_1a0f99880e79bdd64e80d7c235ef3cde50"></a>
<p class="NDLRefMemberFunction">static const <span class="NDLSystemFont">Point2</span>  ZERO</p>
<p class="NDLRefMemberDescription">Convenience static 2D point for a zero <span class="NDLSystemFont"><a href="efd__vector.htm">vector</a></span>. </p>

<a name="classefd_1_1_point2_1a39138d7754011210c9a5cd7e5dad15a6"></a>
<p class="NDLRefMemberFunction">static const <span class="NDLSystemFont">Point2</span>  UNIT_X</p>
<p class="NDLRefMemberDescription">Convenience static 2D point for an x-axis unit <span class="NDLSystemFont"><a href="efd__vector.htm">vector</a></span> (1,0). </p>

<a name="classefd_1_1_point2_1a6d1b2470e5593133ed24de896df3a553"></a>
<p class="NDLRefMemberFunction">static const <span class="NDLSystemFont">Point2</span>  UNIT_Y</p>
<p class="NDLRefMemberDescription">Convenience static 2D point for a y-axis unit <span class="NDLSystemFont"><a href="efd__vector.htm">vector</a></span>. (0,1). </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classefd_1_1_point2_1ad8b38fd33b8578d14e167e923c89181c"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">Point2</span>  ComponentProduct(<br/>const <span class="NDLSystemFont">Point2</span>& p0, <br/>const <span class="NDLSystemFont">Point2</span>& p1)</p>
<p class="NDLRefMemberDescription">Performs a component wise multiplication of the two specified points. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">p0</span></td>
    <td>The first point. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">p1</span></td>
    <td>The second point. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The result of the first point multiplied by the second point in a component wise fashion. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_point2_1a8da0b1a297196979f1c655ea33222bcb"></a>
<p class="NDLRefMemberFunction">Point2()</p>
<p class="NDLRefMemberDescription">Constructs a new point but does not initialize the data members so that fast construction of arrays is possible in situations where the points will be filled in by application code. </p>

<a name="classefd_1_1_point2_1a1cfd4e81c3de25d68abf05b2e4ef4450"></a>
<p class="NDLRefMemberFunction">Point2(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> x0, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> y0)</p>
<p class="NDLRefMemberDescription">Constructs a point from the specified values. </p>

<a name="classefd_1_1_point2_1af07cca44e3475f4b09fbf54fc7ee31b1"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>&  operator[](<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span> i)</p>
<p class="NDLRefMemberDescription">Allows access to the point using array referencing. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">This method assumes the class member data is 4-byte aligned. </p></p>

<a name="classefd_1_1_point2_1abcf5ae2809d8488081d2fcaf777972ce"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>&  operator[](<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span> i) const</p>
<p class="NDLRefMemberDescription">Const version of the array reference operator. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">This method assumes the class member data is 4-byte aligned. </p></p>

<a name="classefd_1_1_point2_1a9d0d4e33ce3206a7ebaa7ce9704f0579"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator==(const <span class="NDLSystemFont">Point2</span>& pt) const</p>
<p class="NDLRefMemberDescription">Equality operator using an  comparison. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pt</span></td>
    <td>Point with which to compare to this point. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if exactly equal, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_point2_1aac2c634211dfd6e4dd34a039f64d0ea1"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator!=(const <span class="NDLSystemFont">Point2</span>& pt) const</p>
<p class="NDLRefMemberDescription">Inequality operator using an  comparison. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pt</span></td>
    <td>Point with which to compare to this point. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if not equal, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_point2_1af45321ac6e3e45db892b82793261013a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">Point2</span>  operator+(const <span class="NDLSystemFont">Point2</span>& pt) const</p>
<p class="NDLRefMemberDescription">Performs a component wise addition. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pt</span></td>
    <td>The point to add to this one. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A newly constructed point containing the sum of this point and the specified point. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_point2_1ad07ae7052c38f76742ee72a334cef6e2"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">Point2</span>  operator-(const <span class="NDLSystemFont">Point2</span>& pt) const</p>
<p class="NDLRefMemberDescription">Performs a component wise subtraction. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pt</span></td>
    <td>The point to subtract from this one. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A newly constructed point containing the difference of this point and the specified point. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_point2_1aa6bbc407d942d3f504240f6df6d60ab4"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  operator*(const <span class="NDLSystemFont">Point2</span>& pt) const</p>
<p class="NDLRefMemberDescription">Dot product operator. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pt</span></td>
    <td>The second point with which to calculate the dot product. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The dot product of this point with the specified point. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_point2_1af76014df583f733824414703b2fc79c1"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">Point2</span>  operator*(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> scalar) const</p>
<p class="NDLRefMemberDescription">Performs a scalar multiplication. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">scalar</span></td>
    <td>The value with which to scale this point. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A newly constructed point representing the scaled version of this point. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_point2_1a1d1f6ac03aac716a6327459b35f5d0b4"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">Point2</span>  operator/(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> scalar) const</p>
<p class="NDLRefMemberDescription">Performs a scalar division. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">scalar</span></td>
    <td>The value with which to scale this point. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A newly constructed point representing the scaled version of this point. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_point2_1a6066591972bea4a39f0b8afd014dc5a9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">Point2</span>  operator-() const</p>
<p class="NDLRefMemberDescription">Unary negation operator. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>A point containing the negated version of this point. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_point2_1a9d140b3503c8ce4eb68dd5d916d4a04d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">Point2</span>&  operator+=(const <span class="NDLSystemFont">Point2</span>& pt)</p>
<p class="NDLRefMemberDescription">Performs an in place component wise addition. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pt</span></td>
    <td>The point to add to this point. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A reference to this point plus the specified point. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_point2_1a39bfe9f80c1aeed7d55072580ac33d01"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">Point2</span>&  operator-=(const <span class="NDLSystemFont">Point2</span>& pt)</p>
<p class="NDLRefMemberDescription">Performs an in place component wise subtraction. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pt</span></td>
    <td>The point to subtract from this point. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A reference to this point subtracted by the specified point. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_point2_1a8113bf4c990fa0e33f9c57b213e2b763"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">Point2</span>&  operator*=(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> scalar)</p>
<p class="NDLRefMemberDescription">In place scalar multiplication of this point. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">scalar</span></td>
    <td>The scalar value. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A reference to this point scaled by the specified scalar. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_point2_1a2ac27ef4bc14e0b0c484af5b0930cf2d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">Point2</span>&  operator/=(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> scalar)</p>
<p class="NDLRefMemberDescription">In place division of this point. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">scalar</span></td>
    <td>The scalar value. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A reference to this point divided by the specified scalar. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_point2_1a00226ccdef03b494123fd6521ca03fae"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  Length() const</p>
<p class="NDLRefMemberDescription">Calculates the <span class="NDLSystemFont"><a href="efd__vector.htm">vector</a></span> length of this point. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>The <span class="NDLSystemFont"><a href="efd__vector.htm">vector</a></span> length. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_point2_1a09a9743cbc704ebe81baa3cd162d2d7f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  SqrLength() const</p>
<p class="NDLRefMemberDescription">Calculates the squared <span class="NDLSystemFont"><a href="efd__vector.htm">vector</a></span> length of this point. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>The squared <span class="NDLSystemFont"><a href="efd__vector.htm">vector</a></span> length. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_point2_1a11c4641d6a2dbe859c197eba81aac1cb"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  Dot(const <span class="NDLSystemFont">Point2</span>& pt) const</p>
<p class="NDLRefMemberDescription">Calculates the dot product. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pt</span></td>
    <td>The second point with which to calculate the dot product. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The dot product of this point with the specified point. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_point2_1a47343ae00205bf486de6eaff097f78ff"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  Unitize()</p>
<p class="NDLRefMemberDescription">Converts this <span class="NDLSystemFont"><a href="efd__vector.htm">vector</a></span> into a unit <span class="NDLSystemFont"><a href="efd__vector.htm">vector</a></span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<p class="NDLRefMemberDetailedDescription">If this method is called on a zero <span class="NDLSystemFont"><a href="efd__vector.htm">vector</a></span>, it remains unchanged and a value of zero is returned as the result. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>The original length of the <span class="NDLSystemFont"><a href="efd__vector.htm">vector</a></span> before it was normalized. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_point2_1a8f615bfd5113f199ca43536481c5c140"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  GetX() const</p>
<p class="NDLRefMemberDescription">Gets the x component of the quaternion. </p>

<a name="classefd_1_1_point2_1abd6cec8b476df3ea1e0f5148ba0bf61b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  GetY() const</p>
<p class="NDLRefMemberDescription">Gets the y component of the quaternion. </p>

<a name="classefd_1_1_point2_1a263abebc4591bbc01b8919df5abb3afe"></a>
<p class="NDLRefMemberFunction">void  Serialize(<span class="NDLSystemFont"><a href="efd__Archive.htm">efd::Archive</a></span>& ar)</p>
<p class="NDLRefMemberDescription">Serialization. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::AssetConfigurationMessage</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::AssetConfigurationMessage</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__IMessage.htm">efd::IMessage</a></span></p>


<p class="NDLRefHeaderFile">&lt;AssetLocatorRequest.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_asset_configuration_message.gif" alt="Inheritance graph for efd::AssetConfigurationMessage"/>
  <p class="FigureCaption">Inheritance graph for efd::AssetConfigurationMessage</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Request/confirm configuration change for AssetServer. </p>
<p class="NDLNormal">This request is used to ask the Asset Server to switch to a different asset-web path, and can also be used to ask the Asset Server to re-scan a sub-directory, or the entire asset-web.</p>
<p class="NDLNormal">This message is not sent directly. It is sent as one of several <span class="NDLSystemFont"><a href="efd__MessageWrapper.htm">MessageWrapper</a></span> subclasses. Message types used include:</p>
<p class="NDLNormal">
<ul>
<li>kMSGID_AssetConfigNotify</li>
<li>kMSGID_AssetConfigRequest</li>
<li>kMSGID_AssetConfigResponse</li>
<li>kMSGID_AssetFlushRequest</li>
<li>kMSGID_AssetFlushSuccess </li></ul></p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_asset_configuration_message_1ac1560bb204b3c9c1e1fb1f72baed8673"></a>
<p class="NDLRefMemberFunction">AssetConfigurationMessage()</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_asset_configuration_message_1a85d90796205415ba1b43cbffbf505e00"></a>
<p class="NDLRefMemberFunction">virtual void  Serialize(<span class="NDLSystemFont"><a href="efd__Archive.htm">efd::Archive</a></span>& io_ar)</p>
<p class="NDLRefMemberDescription">Serialize a polymorphic type to or from an <span class="NDLSystemFont"><a href="efd__Archive.htm">Archive</a></span>. </p>
<p class="NDLRefMemberDetailedDescription">This method must be overridden, but if your streamable object has no data the override can be an empty function. A typical implementation of this method will make one call to <span class="NDLSystemFont"><a href="../Namespaces/efd__Serializer.htm#namespaceefd_1_1_serializer_1a63e0b99047011bde53be44786ab9ee7b">efd::Serializer::SerializeObject</a></span> for each member of the class. If you are derived from another streamable class you should be sure to call to parent implementation of this method as well; it is recommended that the parent class be serialized first before adding the data for the derived class. If your class contains complex data such as STL-style contianers or pointers to allocated data then you can simplify the implementation of Serialize by using the templated helper functions in &lt;<span class="NDLSystemFont">efd/SerializeRoutines.h</span>&gt;; these can serialize even the most complex data structures with a single method call and will reduce the chance of making common mistakes (which could introduce security vulnerabilities if marshalling data from untrusted sources).</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">io_ar</span></td>
    <td>The <span class="NDLSystemFont"><a href="efd__Archive.htm">Archive</a></span> to serialize to or from. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_configuration_message_1a04be30b3e4a73d4f829c2995a159ca23"></a>
<p class="NDLRefMemberFunction">void  SetAssetWebPath(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& val)</p>
<p class="NDLRefMemberDescription">Set the path of the asset-web that is being requested. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">val</span></td>
    <td>The path to the asset-web. May be a relative path if the working directory of the server is known by the client. Otherwise, use an absolute path compliant with the server's file system. If you want to force a re-scan of a sub-directory for an already open asset-web, then use this method to <span class="NDLSystemFont"><a href="efd__set.htm">set</a></span> the full path to the sub-directory. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_configuration_message_1a79c899e426b4c8f43b0a03376d6e6b86"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>&  GetAssetWebPath() const</p>
<p class="NDLRefMemberDescription">Get the path for the asset-web that is being requested. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span> The path value. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_configuration_message_1a4d83684e51c35822f3b62e15d3a38e5e"></a>
<p class="NDLRefMemberFunction">void  SetRemoteConfigFlag(<span class="NDLSystemFont">bool</span> val)</p>
<p class="NDLRefMemberDescription">Set the message variant that indicates if the configuration is about the remote asset web or local. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">val</span></td>
    <td>true if the configuration is about the remote asset web, false if local. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_configuration_message_1a0138f7d29ebf3c4bcfc4fec84f9c1038"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsRemoteConfig() const</p>
<p class="NDLRefMemberDescription">Get the variant that indicates if the configuration is about the remote asset web or local. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>true if the message is about the remote asset web configuration. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_configuration_message_1a8bc77dd6768ac815dad5f4df7ad9f805"></a>
<p class="NDLRefMemberFunction">void  SetForceRescan(<span class="NDLSystemFont">bool</span> val)</p>
<p class="NDLRefMemberDescription">Set the message variant that indicates if the caller desires to trigger a re-scan of the path by the Asset Server. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">val</span></td>
    <td>true if a full directory re-scan is desired. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_configuration_message_1aa2e9454d621d3f64c66b71bb9bbabf6f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsForceRescan() const</p>
<p class="NDLRefMemberDescription">Get the variant that indicates if the caller desires a full re-scan of the path. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>true if the Asset Server should re-scan the path. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

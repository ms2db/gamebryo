<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::AssetWeb</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::AssetWeb</p>


<p class="NDLRefHeaderFile">&lt;AssetWeb.h&gt;</p>


<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class provides a storage and querying mechanism for the metadata that is associated with an asset-web. </p>
<p class="NDLNormal">The metadata is stored in the directory that is the asset-web inside a special sub-directory. This sub-directory is named 'asset-web- metadata', and it includes a number of text files in RDF NTriples format. Each file has a '.nt' extension. There are files that contain all the information associated with an asset, and there are index files that <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span> all the assets tagged with a given value. These files may be stored in an RCS system like Perforce or Subversion, and changes made by multiple developers can be merged back to a base version. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>
<a name="classefd_1_1_asset_web_1a712eadd38a0415584b5a054412419138"></a>
<p class=NDLRefHead2>efd::AssetWeb::AWebAccessMode</p>


<p class="NDLRefMemberDescription">The <span class="NDLSystemFont">AssetWeb</span> supports two access modes for the metadata - RO and RW. </p>


<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">AWEB_CLOSED</span></td>
    <td>&nbsp;</td>
</tr>
<tr>
    <td><span class="NDLSystemFont">AWEB_READ_ONLY</span></td>
    <td>&nbsp;</td>
</tr>
<tr>
    <td><span class="NDLSystemFont">AWEB_READ_WRITE</span></td>
    <td>&nbsp;</td>
</tr>

  </tbody>
</table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_asset_web_1a9dac0bdf90d8120246f434e3fdde6591"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span>  GetStandardizedAssetWebPath()</p>
<p class="NDLRefMemberDescription">Get the absolute standardized path to the <span class="NDLSystemFont">AssetWeb</span>. </p>
<a name="public_api"></a>
<p class="NDLRefHead1">Public API</p>


<a name="classefd_1_1_asset_web_1a7d6a1f7d2049c6c307074c5c2265be46"></a>
<p class="NDLRefMemberFunction">AssetWeb()</p>
<p class="NDLRefMemberDescription">Default constructor. </p>

<a name="classefd_1_1_asset_web_1a56230db1fbeab6ccc7c046046ad4e63c"></a>
<p class="NDLRefMemberFunction">~AssetWeb()</p>
<p class="NDLRefMemberDescription">Cleanup any open resources. </p>

<a name="classefd_1_1_asset_web_1a27c75af801dcc224d81841ae024538b9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  openWeb(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& root, <br/><span class="NDLSystemFont"><a href="efd__AssetWeb.htm#classefd_1_1_asset_web_1a712eadd38a0415584b5a054412419138">AWebAccessMode</a></span> mode)</p>
<p class="NDLRefMemberDescription">Open an <span class="NDLSystemFont">AssetWeb</span> at a certain file system location. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">root</span></td>
    <td>The root directory path </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">mode</span></td>
    <td>Specify read-only or read-write allowed </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1a8786f9db5e06f3b7f53d0dbfc3bee68f"></a>
<p class="NDLRefMemberFunction">void  closeWeb()</p>
<p class="NDLRefMemberDescription">Close an <span class="NDLSystemFont">AssetWeb</span> previously opened using <span class="NDLSystemFont"><a href="efd__AssetWeb.htm#classefd_1_1_asset_web_1a27c75af801dcc224d81841ae024538b9">openWeb()</a></span>. </p>
<p class="NDLRefMemberDetailedDescription">Cached metadata will be freed. </p>

<a name="classefd_1_1_asset_web_1a6b00ffe81727a56d887d09df80c86870"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  commit()</p>
<p class="NDLRefMemberDescription">Save all <span class="NDLSystemFont">AssetWeb</span> metadata to files. </p>

<a name="classefd_1_1_asset_web_1a4bed2369dd245edf0474342fc944102c"></a>
<p class="NDLRefMemberFunction">void  PersistAllProperties(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& predicate)</p>
<p class="NDLRefMemberDescription">Persists all metadata for the given property into source metadata files. </p>

<a name="classefd_1_1_asset_web_1afb274a5285dae0d86ec3d019c802f2b8"></a>
<p class="NDLRefMemberFunction">void  RegisterAssetImporter(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& name, <br/><span class="NDLSystemFont"><a href="efd__SmartPointer.htm">efd::AssetImporterPtr</a></span> import)</p>
<p class="NDLRefMemberDescription">Register an asset importer class. </p>
<p class="NDLRefMemberDetailedDescription">Used to provide custom import of assets as they are discovered by the server.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">name</span></td>
    <td>Name of the <span class="NDLSystemFont"><a href="efd__IAssetImporter.htm">IAssetImporter</a></span> derived class from its GetName() method. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">import</span></td>
    <td>Instance of an <span class="NDLSystemFont"><a href="efd__IAssetImporter.htm">IAssetImporter</a></span> derived class </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1ad20dab47269fc96719c28a3f1d2f094a"></a>
<p class="NDLRefMemberFunction">void  RegisterTagger(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& name, <br/><span class="NDLSystemFont"><a href="efd__SmartPointer.htm">efd::AssetTaggerPtr</a></span> tagger)</p>
<p class="NDLRefMemberDescription">Register an asset tagger class. </p>
<p class="NDLRefMemberDetailedDescription">Used to provide custom tagging of assets as they are discovered by the server.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">name</span></td>
    <td>Name of the <span class="NDLSystemFont"><a href="efd__IAssetTagger.htm">IAssetTagger</a></span> derived class from its GetName() method. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">tagger</span></td>
    <td>Instance of an <span class="NDLSystemFont"><a href="efd__IAssetTagger.htm">IAssetTagger</a></span> derived class </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1a7482786252745b765dbf95eaf086048b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  updateInstanceId()</p>
<p class="NDLRefMemberDescription">Update and persist the instance Id unique value. </p>
<p class="NDLRefMemberDetailedDescription">Any time the <span class="NDLSystemFont">AssetWeb</span> is opened in AWEB_READ_WRITE mode, a new unique ID is written into it whenever a new client connection is made. Clients that open the <span class="NDLSystemFont">AssetWeb</span> using AWEB_READ_ONLY can fetch the ID using <span class="NDLSystemFont"><a href="efd__AssetWeb.htm#classefd_1_1_asset_web_1a48103dd55037be4a54faa2d41f976c96">getInstanceId()</a></span>.</p>
<p class="NDLRefMemberDetailedDescription">The purpose here is to allow a client and server to ascertain that they are using an identical asset-web location, and should have shared access to all of the contained files.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if the ID value is successfully persisted </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1a48103dd55037be4a54faa2d41f976c96"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  getInstanceId(<span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& guid)</p>
<p class="NDLRefMemberDescription">Get the current instance Id unique value. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">guid</span></td>
    <td>The unique ID value </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if an ID is found and read from the asset-web </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1aa80414e068007c48d020b27aa8ee23d1"></a>
<p class="NDLRefMemberFunction">void  setWebAttribute(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& subj, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& prop, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& value)</p>
<p class="NDLRefMemberDescription">Set a property value in the asset web checkpoint file (awebckpt.nt). </p>

<a name="classefd_1_1_asset_web_1a60e52d390ba8ed7f2253b97d0d2279d5"></a>
<p class="NDLRefMemberFunction">void  getWebAttribute(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& subj, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& prop, <br/><span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& out_webAttribute)</p>
<p class="NDLRefMemberDescription">Retrieve a property value from the asset web checkpoint file (awebckpt.nt). </p>

<a name="classefd_1_1_asset_web_1aa4919604328093b1aeeab40df4443340"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  getAuthorId(<span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& guid)</p>
<p class="NDLRefMemberDescription">All asset web metadata is authored by a particular PC, whenever it opens an <span class="NDLSystemFont">AssetWeb</span> in AWEB_READ_WRITE mode. </p>
<p class="NDLRefMemberDetailedDescription">Each PC is assigned a unique GUID value. All asset web metadata that is authored by that PC is imprinted with the same unique value, so that the source of all asset webs can be ascertained.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">guid</span></td>
    <td>The unique ID value </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if an ID is found and read from the system-specific location </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1a2c5d4b4f16ae6eb2a8fab991b791047a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  getWebAuthorId(<span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& guid)</p>
<p class="NDLRefMemberDescription">Default constructor. </p>

<a name="classefd_1_1_asset_web_1a514e76f7ad063506b047a97426a60656"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  isWritable()</p>
<p class="NDLRefMemberDescription">Determine whether the <span class="NDLSystemFont">AssetWeb</span> was opened in AWEB_READ_WRITE mode. </p>

<a name="classefd_1_1_asset_web_1a079963f92cdcb0803469418334dbb6c3"></a>
<p class="NDLRefMemberFunction">void  findAllAssets(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& uri, <br/><span class="NDLSystemFont"><a href="efd__vector.htm">TripleSet</a></span>& triples)</p>
<p class="NDLRefMemberDescription">This is the main query method used to locate all assets that are matched to a particular URI. </p>
<p class="NDLRefMemberDetailedDescription">The URI always starts with 'urn', and can be either a colon separated <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span> of tags, a UUID value, or a urn that includes a path specification that must start with a '/' character.</p>
<p class="NDLRefMemberDetailedDescription">Examples:</p>
<ul>
<li>urn:tag1:tag2</li>
<li>urn:uuid:24270c23-77b3-434a-b31c-c301f4536e42</li>
<li>urn:/Level01:gamebryo-scenegraph</li></ul>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uri</span></td>
    <td>The URI value </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">triples</span></td>
    <td>List of <span class="NDLSystemFont"><a href="efd__Triple.htm">Triple</a></span> objects for matches. Each triple includes the asset id as the subject (first) value. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1a2da22f8688ca5ae2853a5c734ec8be02"></a>
<p class="NDLRefMemberFunction">void  incrementalFindAssets(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& prop, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& value, <br/><span class="NDLSystemFont"><a href="efd__vector.htm">TripleSet</a></span>& triples)</p>
<p class="NDLRefMemberDescription">Query method used for incremental searching. </p>
<p class="NDLRefMemberDetailedDescription">The existing search results in 'triples' are refined by the results of querying for assets that have a given property or tag value.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">prop</span></td>
    <td>The property name used in the search </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">value</span></td>
    <td>The value that the property must match </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">triples</span></td>
    <td>incremental search results </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1aabed17c11a0b567ed044b79ffba198e4"></a>
<p class="NDLRefMemberFunction">void  normalAssetList(<span class="NDLSystemFont"><a href="efd__vector.htm">TripleSet</a></span>& triples)</p>
<p class="NDLRefMemberDescription">Perform an in-place update on a <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span> of triples so that each triple will contain the tuple (Asset Id, GlobalNamespace("name"), Asset Name). </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">triples</span></td>
    <td>Set of triples where each subject is an Asset Id. The predicate will be replace with the "name" predicate and the object will be replaced with the asset's name value. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1a42c8986810d54e8f253faf37a14e7544"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  assetPropertyValue(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& uuri, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& predicateTag, <br/><span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& value)</p>
<p class="NDLRefMemberDescription">Retrieve a property value for a specific asset using its unique uuid. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uuri</span></td>
    <td>The unique Id for the asset using format urn:uuid:X </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">predicateTag</span></td>
    <td>The predicate for the property of interest </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">value</span></td>
    <td>Value of the requested property </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the asset/property is found </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1af22acbb8190fe7aa9147112700e59d96"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  assetHasTag(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& uuri, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& value)</p>
<p class="NDLRefMemberDescription">Determine whether an asset possesses a particular tag value. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uuri</span></td>
    <td>The unique Id for the asset using format urn:uuid:X </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">value</span></td>
    <td>The tag value to query </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1a401c55162d1ba94a0cd150767ee19baf"></a>
<p class="NDLRefMemberFunction">void  assetAddTag(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& uuri, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& value)</p>
<p class="NDLRefMemberDescription">Add a new tag for a specific asset using its unique uuid. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uuri</span></td>
    <td>The unique Id for the asset using format urn:uuid:X </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">value</span></td>
    <td>The tag value to add </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1ac6ce466f925da82cc0e385c227f6f149"></a>
<p class="NDLRefMemberFunction">void  assetAddProperty(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span>& uuri, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span>& prop, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span>& value)</p>
<p class="NDLRefMemberDescription">Add a new property for a specific asset using its unique uuid. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uuri</span></td>
    <td>The unique Id for the asset using format urn:uuid:X </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">prop</span></td>
    <td>The name of the property that is added </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">value</span></td>
    <td>The value for the new property </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1a3b5334323fdab688d4c55c1c03f90077"></a>
<p class="NDLRefMemberFunction">void  addTripleToGraph(<br/><span class="NDLSystemFont"><a href="efd__SimpleGraph.htm">SimpleGraph</a></span>& graph, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span>& subject, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span>& prop, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">utf8string</a></span>& value)</p>
<p class="NDLRefMemberDescription">Add a new triple to a <span class="NDLSystemFont"><a href="efd__SimpleGraph.htm">SimpleGraph</a></span> object. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">graph</span></td>
    <td>Instance of a <span class="NDLSystemFont"><a href="efd__SimpleGraph.htm">SimpleGraph</a></span>. New triple will be merged. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">subject</span></td>
    <td>The subject, normally a physical asset id value </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">prop</span></td>
    <td>The name of the property </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">value</span></td>
    <td>The value for the property </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1a176a2e8e10a8e41b8b8ef3172c629917"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  assetAllTags(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& uuri, <br/><span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& value)</p>
<p class="NDLRefMemberDescription">Retrieve all of the tags for a specific asset using its unique uuid. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uuri</span></td>
    <td>The unique Id for the asset using format urn:uuid:X </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">value</span></td>
    <td>URI containing all tags and the name property </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the asset is found </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1a594f22a75a26ca5ed04692b48859a930"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  assetLabelTags(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& uuri, <br/><span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& value)</p>
<p class="NDLRefMemberDescription">Retrieve all of the label tags for a specific asset using is unique uuid. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription"><span class="NDLSystemFont"><a href="efd__AssetWeb.htm#classefd_1_1_asset_web_1a176a2e8e10a8e41b8b8ef3172c629917">assetAllTags</a></span></p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uuri</span></td>
    <td>The unique Id for the asset using format urn:uuid:X </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">value</span></td>
    <td>URI containing all label tags </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the asset is found </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1aeb994b4100d5de140b2e781f7aa9742b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  assetEnumTags(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& uuri, <br/><span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& value, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>* count = 0)</p>
<p class="NDLRefMemberDescription">Retrieve all of the classification tags for a specific asset using is unique uuid. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription"><span class="NDLSystemFont"><a href="efd__AssetWeb.htm#classefd_1_1_asset_web_1a176a2e8e10a8e41b8b8ef3172c629917">assetAllTags</a></span></p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uuri</span></td>
    <td>The unique Id for the asset using format urn:uuid:X </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">value</span></td>
    <td>URI containing all enum tags </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">count</span></td>
    <td>Optional parameter that receives the number of tags </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1aa9252c5a65c633e1a9f839ed01b7e6b0"></a>
<p class="NDLRefMemberFunction">void  assetAbsolutePath(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& relative, <br/><span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& absolute)</p>
<p class="NDLRefMemberDescription">Simple conversion of relative path to absolute path for any path that falls within the asset-web. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">relative</span></td>
    <td>The relative path of a file in the asset-web </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">absolute</span></td>
    <td>[out] Absolute path to file </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1ad96c67c6791b1d429447c56e5f767e92"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  assetPathLookup(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& relativePath, <br/><span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& assetId)</p>
<p class="NDLRefMemberDescription">Lookup the unique Id for an asset that is stored at a certain location. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">relativePath</span></td>
    <td>The relative path location where asset is stored </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">assetId</span></td>
    <td>Asset Id for the asset </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the asset is known by the asset-web </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1a7c6809509822fe4b9d1cf0aab9facf25"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  assetWithPropertyValue(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& predicate, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& value, <br/><span class="NDLSystemFont"><a href="efd__vector.htm">TripleSet</a></span>& matches)</p>
<p class="NDLRefMemberDescription">Lookup the <span class="NDLSystemFont"><a href="efd__set.htm">set</a></span> of assets that all have a given property value. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">predicate</span></td>
    <td>The name of the property </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">value</span></td>
    <td>The value of the property to search for </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">matches</span></td>
    <td>Set of triples that match the criteria </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1ac95ae69d76a31e63483cfceff9a8a92d"></a>
<p class="NDLRefMemberFunction">void  assetLoadPersistentMetadata(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& uuri)</p>
<p class="NDLRefMemberDescription">Load persistent metadata file for an asset. </p>
<p class="NDLRefMemberDetailedDescription">The persistent metadata is stored next to the asset file, in a sub-directory, with an extension of "_.nt" appended to the name. If such a file exists for the asset, then it is loaded and that metadata is applied to the asset.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uuri</span></td>
    <td>The Asset Id for the asset </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1aa2368496656423c849a143427fc53f95"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  insertAsset(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& relativePath, <br/><span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& outAssetId)</p>
<p class="NDLRefMemberDescription">Insert a new asset into the asset-web's metadata. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">relativePath</span></td>
    <td>The relative location of the file in the asset-web directory </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">outAssetId</span></td>
    <td>The assetID that was inserted. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the asset is successfully inserted. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1aa8570f2b5de9d8262b89c2d206eb64ff"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  removeAsset(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& assetId)</p>
<p class="NDLRefMemberDescription">Remove an asset from the asset-web's metadata. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">assetId</span></td>
    <td>Asset Id of the asset that is to be removed </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the asset is found and successfully removed </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1a2dc8ae00191c418ec18363319025b21f"></a>
<p class="NDLRefMemberFunction">void  generateUUID(<span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& assetId)</p>
<p class="NDLRefMemberDescription">Generate a unique identifier which can be used as an asset Id. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">assetId</span></td>
    <td>The generated ID using the format urn:uuid:X </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_web_1aff9aea4ee71a3ac8d7efc07899e42f61"></a>
<p class="NDLRefMemberFunction">void  OpenAllGraphs()</p>
<p class="NDLRefMemberDescription">Opens all graphs based on all the tags found in the tag soup. </p>

<a name="classefd_1_1_asset_web_1a0e9b166b0b297d0757b8940e89cfa1d2"></a>
<p class="NDLRefMemberFunction">void  createGraph(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& name, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& predicate, <br/><span class="NDLSystemFont">bool</span> isIndexed)</p>
<p class="NDLRefMemberDescription">Creates, loads and parses metadata graphs on demand. </p>
<p class="NDLRefMemberDetailedDescription">Internal use only. </p>

<a name="classefd_1_1_asset_web_1a436236bd5299cbee0dc8412b22cafa3c"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__Graph.htm">Graph</a></span>*  openGraph(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& name)</p>
<p class="NDLRefMemberDescription">Default constructor. </p>

<a name="classefd_1_1_asset_web_1acc5c6d3c6d347ccb03b05d1afef98838"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__SimpleGraph.htm">SimpleGraph</a></span>*  openSimpleGraph(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& name)</p>
<p class="NDLRefMemberDescription">Default constructor. </p>

<a name="classefd_1_1_asset_web_1a28bff7dea847c535b2ebbb7b0dd546f2"></a>
<p class="NDLRefMemberFunction">void  closeGraph(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& name)</p>
<p class="NDLRefMemberDescription">Unloads graph data cached in memory Internal use only. </p>

<a name="classefd_1_1_asset_web_1afb6c5fdbd8b544e2b1eb369dde2268cd"></a>
<p class="NDLRefMemberFunction">void  getUserTags(<span class="NDLSystemFont"><a href="efd__vector.htm">efd::vector</a></span>&lt;<span class="NDLSystemFont"><a href="efd__AssetTagDescriptor.htm">AssetTagDescriptor</a></span>&gt;& tags)</p>
<p class="NDLRefMemberDescription">Retrieve all of the user-defined labels with their type& value. </p>

<a name="classefd_1_1_asset_web_1a12d87929aa394d2e69c4cbf854d0fd2d"></a>
<p class="NDLRefMemberFunction">void  getEnumTags(<span class="NDLSystemFont"><a href="efd__vector.htm">efd::vector</a></span>&lt;<span class="NDLSystemFont"><a href="efd__AssetTagDescriptor.htm">AssetTagDescriptor</a></span>&gt;& tags)</p>
<p class="NDLRefMemberDescription">Retrieve all of the user-defined classifications with their type& value. </p>

<a name="classefd_1_1_asset_web_1acb819cdeef937386e0c839253da27710"></a>
<p class="NDLRefMemberFunction">void  getStdTags(<span class="NDLSystemFont"><a href="efd__vector.htm">efd::vector</a></span>&lt;<span class="NDLSystemFont"><a href="efd__AssetTagDescriptor.htm">AssetTagDescriptor</a></span>&gt;& tags)</p>
<p class="NDLRefMemberDescription">Retrieve all of the standard tags (asset/media types) with their type& value. </p>

<a name="classefd_1_1_asset_web_1a5ec8c345a0f126d295c489df511969c2"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>&  GetAssetWebRoot() const</p>
<p class="NDLRefMemberDescription">Retrieves the Asset-Web Root path. </p>

<a name="classefd_1_1_asset_web_1ad05406534fb52d4cd6235a570747df28"></a>
<p class="NDLRefMemberFunction">void  registerAssetWebConfigFile(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& file)</p>
<p class="NDLRefMemberDescription">Add a file to be watched for changes that might invalidate the entire asset web. </p>

<a name="classefd_1_1_asset_web_1a3003b029dc6c66c52f08927ff6c13c4a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetPreloadGraphs()</p>
<p class="NDLRefMemberDescription">Gets a value indicating if we are pre-loading graphs. </p>

<a name="classefd_1_1_asset_web_1a2a0a576f6832cecff74fa361931e4a41"></a>
<p class="NDLRefMemberFunction">void  SetPreloadGraphs(<span class="NDLSystemFont">bool</span> bPreload)</p>
<p class="NDLRefMemberDescription">Sets a value indicating if we should pre-loading graphs. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

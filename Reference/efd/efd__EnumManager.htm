<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::EnumManager</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::EnumManager</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__ISystemService.htm">efd::ISystemService</a></span></p>


<p class="NDLRefHeaderFile">&lt;EnumManager.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_enum_manager.gif" alt="Inheritance graph for efd::EnumManager"/>
  <p class="FigureCaption">Inheritance graph for efd::EnumManager</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">The <span class="NDLSystemFont">EnumManager</span> is used to load data driven enumeration files that can <span class="NDLSystemFont"><a href="efd__map.htm">map</a></span> between string names and numerical values and vice versa. </p>
<p class="NDLNormal">Data driven enumerations also differ from C++ enumerations in that they can be extended. This allows code in foundation to reference a base enumeration but still be able to lookup a name-value pair defined in core runtime, game framework, or the final application. The Gamebryo code uses these enumerations to make log file output easier to read. There is also support to use these enumerations from scripted code so that friendly string names can be used in script. It is recommended that this service be used at least when log files are enabled.</p>
<p class="NDLNormal">
<p class="NDLNormal">All methods in <span class="NDLSystemFont">EnumManager</span> may be used as soon as <span class="NDLSystemFont"><a href="efd__EnumManager.htm#classefd_1_1_enum_manager_1a32f4996e4f1a0c9e46044a3ac3102e89">EnumManager::LoadConfigOptions</a></span> has been called. This call will happen automatically during <span class="NDLSystemFont"><a href="efd__EnumManager.htm#classefd_1_1_enum_manager_1ad37fd129fe6ba1b4c58d6cdb42f63614">EnumManager::OnPreInit</a></span> but this method can be called earlier in order to make the <span class="NDLSystemFont">EnumManager</span> available sooner. </p></p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_enum_manager_1adce3bfcf4df77d7502dfa3ad12a0e581"></a>
<p class="NDLRefMemberFunction">EnumManager()</p>
<p class="NDLRefMemberDetailedDescription">Constructor </p>

<a name="classefd_1_1_enum_manager_1a1b22331461462a691ab131dc3e78ead8"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__DataDrivenEnumBase.htm">efd::DataDrivenEnumBase</a></span>*  FindEnum(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& enumName)</p>
<p class="NDLRefMemberDescription">Find a data driven enumeration by its friendly name. </p>

<a name="classefd_1_1_enum_manager_1a07dc94e78f9a20ccb76d0653c080ce4f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__DataDrivenEnumBase.htm">efd::DataDrivenEnumBase</a></span>*  LoadEnum(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& enumName)</p>
<p class="NDLRefMemberDescription">Load a data driven enumeration by its friendly name. </p>

<a name="classefd_1_1_enum_manager_1a34390c343666177308727f7a70dd413b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__DataDrivenEnumBase.htm">efd::DataDrivenEnumBase</a></span>*  FindOrLoadEnum(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& enumName)</p>
<p class="NDLRefMemberDescription">Find or load a data driven enumeration by its friendly name. </p>

<a name="classefd_1_1_enum_manager_1afcf856988dd5af933c1ce53ab40763ae"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="efd__DataDrivenEnumBase.htm">efd::DataDrivenEnumBase</a></span>*  LoadFile(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& fileName)</p>
<p class="NDLRefMemberDescription">Load a data driven enumeration by its physical file name. </p>

<a name="classefd_1_1_enum_manager_1a0914bca0cc8250c762f18e7b7a826c80"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  AddEnum(<span class="NDLSystemFont"><a href="efd__DataDrivenEnumBase.htm">DataDrivenEnumBase</a></span>* pEnum)</p>
<p class="NDLRefMemberDescription">Add an enumeration to the manager. </p>

<a name="classefd_1_1_enum_manager_1ab3c13b76f087df1571162d28bd85e0b6"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; <span class="NDLSystemFont">bool</span>  FindEnumValue(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& i_enumName, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& i_itemName, <br/>T& o_value)</p>
<p class="NDLRefMemberDescription">Lookup the value for a given name in the specified enumeration. </p>

<a name="classefd_1_1_enum_manager_1a99dcf4264fb4de906dba6ed704e0cea3"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; <span class="NDLSystemFont">bool</span>  FindOrLoadEnumValue(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& i_enumName, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& i_itemName, <br/>T& o_value)</p>
<p class="NDLRefMemberDescription">Lookup the value for a given name in the specified enumeration, load the enum if not found. </p>

<a name="classefd_1_1_enum_manager_1a014ef9eecd04a963fb27dbef97bd0d38"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; <span class="NDLSystemFont">bool</span>  FindEnumName(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& i_enumName, <br/>const T& i_value, <br/><span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& o_itemName)</p>
<p class="NDLRefMemberDescription">Lookup the name for a given value in the specified enumeration. </p>

<a name="classefd_1_1_enum_manager_1a9214d047b70603269e22c56831d0bced"></a>
<p class="NDLRefMemberFunction">virtual const char*  GetDisplayName() const</p>
<p class="NDLRefMemberDescription">Returns the name of this service. </p>
<p class="NDLRefMemberDetailedDescription">This name is used mainly for improving the readability of various log statements and has no impact on functionality. Service names are not guaranteed to be unique.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>const char* Display name for the current service. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_enum_manager_1a1017501f3c82930768f1032809c60d70"></a>
<p class="NDLRefMemberFunction">void  SetHeaderGenerator(<span class="NDLSystemFont"><a href="efd__IDDEHeaderGenerator.htm">efd::IDDEHeaderGenerator</a></span>* pHeaderGen)</p>
<p class="NDLRefMemberDescription">Used during header generation. </p>
<p class="NDLRefMemberDetailedDescription">This plug-in object is responsible for parsing the "header" tag in enum files, when not present the header tag is ignored. During normal operation no <span class="NDLSystemFont"><a href="efd__IDDEHeaderGenerator.htm">IDDEHeaderGenerator</a></span> should be provided. </p>

<a name="classefd_1_1_enum_manager_1a32f4996e4f1a0c9e46044a3ac3102e89"></a>
<p class="NDLRefMemberFunction">void  LoadConfigOptions(<span class="NDLSystemFont"><a href="efd__IConfigManager.htm">efd::IConfigManager</a></span>* pConfig)</p>
<p class="NDLRefMemberDescription">Load enum manager configuration options. </p>
<p class="NDLRefMemberDetailedDescription">This is called during OnPreInit but can be called earlier in order to use enums prior to OnPreInit being called. Once this has been called enumerations can be loaded. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::AssetBrowseInfoResponse</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::AssetBrowseInfoResponse</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__AssetLocatorResponse.htm">efd::AssetLocatorResponse</a></span></p>


<p class="NDLRefHeaderFile">&lt;AssetLocatorResponse.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_asset_browse_info_response.gif" alt="Inheritance graph for efd::AssetBrowseInfoResponse"/>
  <p class="FigureCaption">Inheritance graph for efd::AssetBrowseInfoResponse</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Response to a BrowseInfo request. </p>
<p class="NDLNormal">Contains all the <span class="NDLSystemFont"><a href="efd__AssetLocatorResponse.htm">AssetLocatorResponse</a></span> data, plus an additional <span class="NDLSystemFont"><a href="efd__set.htm">set</a></span> of tag values that are used for browsing assets. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_asset_browse_info_response_1a71c824c9ce8b236390d931e3e30f111f"></a>
<p class="NDLRefMemberFunction">AssetBrowseInfoResponse()</p>
<p class="NDLRefMemberDescription">Constructor. </p>

<a name="classefd_1_1_asset_browse_info_response_1a1a3fca1f58a53ddc20435bdd8201bc5c"></a>
<p class="NDLRefMemberFunction">virtual void  Serialize(<span class="NDLSystemFont"><a href="efd__Archive.htm">efd::Archive</a></span>& io_ar)</p>
<p class="NDLRefMemberDescription">Serialize a polymorphic type to or from an <span class="NDLSystemFont"><a href="efd__Archive.htm">Archive</a></span>. </p>
<p class="NDLRefMemberDetailedDescription">This method must be overridden, but if your streamable object has no data the override can be an empty function. A typical implementation of this method will make one call to <span class="NDLSystemFont"><a href="../Namespaces/efd__Serializer.htm#namespaceefd_1_1_serializer_1a63e0b99047011bde53be44786ab9ee7b">efd::Serializer::SerializeObject</a></span> for each member of the class. If you are derived from another streamable class you should be sure to call to parent implementation of this method as well; it is recommended that the parent class be serialized first before adding the data for the derived class. If your class contains complex data such as STL-style contianers or pointers to allocated data then you can simplify the implementation of Serialize by using the templated helper functions in &lt;<span class="NDLSystemFont">efd/SerializeRoutines.h</span>&gt;; these can serialize even the most complex data structures with a single method call and will reduce the chance of making common mistakes (which could introduce security vulnerabilities if marshalling data from untrusted sources).</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">io_ar</span></td>
    <td>The <span class="NDLSystemFont"><a href="efd__Archive.htm">Archive</a></span> to serialize to or from. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_browse_info_response_1abae6a6b8432d9f7acc2d6f751639c7bd"></a>
<p class="NDLRefMemberFunction">virtual void  SetTagInfo(<br/>const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a96a7a9f084f0f3029a23435672da3a45">efd::AWebTagType</a></span>& tag_type, <br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& tag_value, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> count)</p>
<p class="NDLRefMemberDescription">Set asset tag browse information. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">tag_type</span></td>
    <td>The uri reference for the type of the tag </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">tag_value</span></td>
    <td>The literal value for the tag </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">count</span></td>
    <td>The count of assets in the result <span class="NDLSystemFont"><a href="efd__set.htm">set</a></span> with this tag </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_browse_info_response_1ac0db080d3056e9ac2d4f79b9e23debd5"></a>
<p class="NDLRefMemberFunction">virtual const <span class="NDLSystemFont"><a href="efd__vector.htm">efd::AssetBrowseInfo</a></span>&  GetAssetBrowseInfo() const</p>
<p class="NDLRefMemberDescription">Get the asset browse info for the requested URI. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>AssetBrowseInfo containing the asset browse info for the response. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_asset_browse_info_response_1ac17b80c89ccf3bf67553fca0394bafd5"></a>
<p class="NDLRefMemberFunction">virtual void  SetAssetWebRoot(const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& root)</p>
<p class="NDLRefMemberDescription">Set the root of the asset-web for the response. </p>

<a name="classefd_1_1_asset_browse_info_response_1a11e6f8b0ed237292e053460525d48512"></a>
<p class="NDLRefMemberFunction">virtual const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>&  GetAssetWebRoot() const</p>
<p class="NDLRefMemberDescription">Retrieves the asset-web root. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

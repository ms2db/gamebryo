<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::ParameterList</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::ParameterList</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__ParameterConverterManager.htm">efd::ParameterConverterManager</a></span></p>


<p class="NDLRefHeaderFile">&lt;ParameterList.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_parameter_list.gif" alt="Inheritance graph for efd::ParameterList"/>
  <p class="FigureCaption">Inheritance graph for efd::ParameterList</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">A <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span> of variable type parameters. </p>
<p class="NDLNormal">When using this class with custom parameter types, be sure to include the header files that define the <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a7585b02ecb37385365699a1497b3ba66">efd::GetClassIDFromType</a></span> and <span class="NDLSystemFont"><a href="../Namespaces/efd__Serializer.htm#namespaceefd_1_1_serializer_1a63e0b99047011bde53be44786ab9ee7b">efd::Serializer::SerializeObject</a></span> specializations for your data type. </p>

<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classefd_1_1_parameter_list_1ac6c1c9947855bdf49c579511bacc0bf0"></a>
<p class="NDLRefMemberFunction">static void  LeakDump(<br/>void* pMem, <br/>char* o_buffer, <br/>unsigned int i_cchBuffer)</p>
<p class="NDLRefMemberDescription">Helper for generating memory leak reports. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_parameter_list_1a4b0d8e0d07f6f9ad71234d2eb6dfe194"></a>
<p class="NDLRefMemberFunction">ParameterList()</p>
<p class="NDLRefMemberDetailedDescription">Constructor </p>

<a name="classefd_1_1_parameter_list_1a921a91968fb529a0dd7aee1e3b2bf6d0"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span>  AddParameter(const T& parameter)</p>
<p class="NDLRefMemberDescription">Adds a new unnamed parameter to the end of the parameter <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">parameter</span></td>
    <td>The data being added </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The index at which the data was added, or -1 on error </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_parameter_list_1ab213ef67d576baeb30ae56394880a060"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span>  AddParameter(<br/>const <span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>& name, <br/>const T& parameter)</p>
<p class="NDLRefMemberDescription">Adds a new named parameter to the end of the parameter <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">name</span></td>
    <td>The name of this data item </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">parameter</span></td>
    <td>The data being added </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The index at which the data was added, or -1 on error </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_parameter_list_1a6063beaba94fc239198503b128375026"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetSize() const</p>
<p class="NDLRefMemberDescription">Get the number of parameters in the <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span>. </p>

<a name="classefd_1_1_parameter_list_1a3f69621d98b441078a0619876f212818"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ad75e44853f2061ef232825176555761d">ParameterResult</a></span>  GetParameter(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span> i_index, <br/>T& o_result) const</p>
<p class="NDLRefMemberDescription">Read a parameter from the <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_index</span></td>
    <td>The parameter to read </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_result</span></td>
    <td>The resulting value </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A ParameterResult indicating the result </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_parameter_list_1a4636218bb87fbdd9f5f101db520ea8d4"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ad75e44853f2061ef232825176555761d">ParameterResult</a></span>  GetParameter(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> i_index, <br/>T& o_result) const</p>
<p class="NDLRefMemberDescription">Read a scalar parameter from the <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_index</span></td>
    <td>The parameter to read </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_result</span></td>
    <td>The resulting value </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A ParameterResult indicating the result </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_parameter_list_1a99c5aac5580e97efd5593e9c7353f2d2"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ad75e44853f2061ef232825176555761d">ParameterResult</a></span>  GetParameter(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> i_index, <br/><span class="NDLSystemFont"><a href="efd__list.htm">efd::list</a></span>&lt;T&gt;& o_result) const</p>
<p class="NDLRefMemberDescription">Read a list-style parameter from the <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_index</span></td>
    <td>The parameter to read </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_result</span></td>
    <td>The resulting value </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A ParameterResult indicating the result </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_parameter_list_1a24b3da41c02c97a78c1e0535c6f51254"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ad75e44853f2061ef232825176555761d">ParameterResult</a></span>  GetParameter(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> i_index, <br/><span class="NDLSystemFont"><a href="efd__map.htm">efd::map</a></span>&lt;<span class="NDLSystemFont"><a href="efd__utf8string.htm">efd::utf8string</a></span>, T&gt;& o_result) const</p>
<p class="NDLRefMemberDescription">Read a map-style parameter from the <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_index</span></td>
    <td>The parameter to read </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_result</span></td>
    <td>The resulting value </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A ParameterResult indicating the result </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_parameter_list_1a091bc496baecef36320c0c81b0b68d81"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ad75e44853f2061ef232825176555761d">ParameterResult</a></span>  GetParameter(<br/>const char* i_pszName, <br/>T& o_result) const</p>
<p class="NDLRefMemberDescription">Read a parameter from the <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span> by name. </p>
<p class="NDLRefMemberDetailedDescription">This method looks up the index for the given name and then calls the index version of GetParameter.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_pszName</span></td>
    <td>The parameter to read </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_result</span></td>
    <td>The resulting value </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A ParameterResult indicating the result </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_parameter_list_1aa408f29948cb20730c9785ad247716fa"></a>
<p class="NDLRefMemberFunction">template &lt;typename T  &gt; <span class="NDLSystemFont">bool</span>  IsExactKind(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> i_index)</p>
<p class="NDLRefMemberDescription">Checks the data type and container type of the given parameter against the templated type. </p>
<p class="NDLRefMemberDetailedDescription">The specified type T must either be a supported scalar type, an efd::list&lt;X&gt;, or an efd::map&lt;efd::utf8string, X&gt; (where X is a supported scalar type).</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">Attempting to pass any other container type will normally result is a compiler error since <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a7585b02ecb37385365699a1497b3ba66">efd::GetClassIDFromType<T></a></span> is unlikely to be defined for a container. </p></p>

<a name="classefd_1_1_parameter_list_1ac6f51e456a0c05094de5577216ebcf92"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a11b3d968bc96d7f04115a0aad3893469">efd::ClassID</a></span>  GetParameterDataType(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> i_index) const</p>
<p class="NDLRefMemberDescription">Check the data type of a parameter. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_index</span></td>
    <td>The parameter to read </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The type of the parameter, or kInvalidClassID if the index is out of range. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_parameter_list_1a81b22bbbf9d47f961d8bca16c13707fb"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a5dad109f66b30dca37c479525c41cefd">efd::ContainerType</a></span>  GetParameterContainerType(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> i_index) const</p>
<p class="NDLRefMemberDescription">Check the container type of a parameter. </p>
<p class="NDLRefMemberDetailedDescription">Parameters can either be a single scalar value, a <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span> of values or a <span class="NDLSystemFont"><a href="efd__map.htm">map</a></span> of strings to value. In all cases, the GetParameterDataType method describes the data type of the value.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_index</span></td>
    <td>The parameter to read </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The containter type of the parameter, or ct_Invalid if the index is out of range. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_parameter_list_1ab266a2802049678f1cccd703c2a302ed"></a>
<p class="NDLRefMemberFunction">const char*  GetParameterName(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> i_index) const</p>
<p class="NDLRefMemberDescription">Get the name of a parameter by index. </p>
<p class="NDLRefMemberDetailedDescription">Not all parameters have names in which case this method will return a NULL pointer. Do not cache the returned pointer as it can become invalid if new items are added to the parameter <span class="NDLSystemFont"><a href="efd__list.htm">list</a></span>.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_index</span></td>
    <td>The parameter to read </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The name of the parameter, or NULL if the index is out of range or unnamed. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_parameter_list_1a6423cc08cc3e2acb54e38b5ec9e2b4c2"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span>  GetIndexFromName(const char* pszName) const</p>
<p class="NDLRefMemberDescription">Get the index of the named parameter. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">This method is O(N).</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pszName</span></td>
    <td>The parameter name for which to find the index. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The parameter index, or -1 if the named parameter was not found. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_parameter_list_1a03669ed8ca5d52e88037a0dacfee5739"></a>
<p class="NDLRefMemberFunction">void  Serialize(<span class="NDLSystemFont"><a href="efd__Archive.htm">efd::Archive</a></span>& io_ar)</p>
<p class="NDLRefMemberDescription">Serialize method for marshaling <span class="NDLSystemFont">ParameterList</span> in or out of an <span class="NDLSystemFont"><a href="efd__Archive.htm">Archive</a></span>. </p>

<a name="classefd_1_1_parameter_list_1a036df82e4210f37ca2235a1dd5b07b9d"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="efd__SmartBuffer.htm">efd::SmartBuffer</a></span>  GetParameterStorage(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> index)</p>
<p class="NDLRefMemberDescription">Get the storage window into which the parameter was stored. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

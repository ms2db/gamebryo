<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Animation Service (AnimationService) Quick Reference</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Animation Service (AnimationService) Quick Reference</h1>

<p>For more information about this service, see the <span class="NDLSystemFont"><a href="../egmAnimation/egmAnimation__AnimationService.htm">egmAnimation::AnimationService</a></span> class reference documentation.</p>


<h4>Library/Namespace</h4>

<p>egmAnimation</p>

<!--Display Name is used to identify the service in logs and other situations
where a text string identifier is required. Each service should be linked to
its corresponding summary page.-->

<h4>Display Name</h4>

<p>AnimationService</p>

<!--Default Priority is the default priority suggested for this service. The priority should be linked to the page that lists all the priorities, and or the page describing priorities.-->

<h4>Default Priority</h4>

<p>1800</p>

<!--Required services must be present in the application in order for this
service to function. The service may assert, fail to initialize, or crash if
they are not present. Each service should be linked to its corresponding summary page.-->

<h4>Required Services</h4>

<ul>
  <li><span class="NDLSystemFont"><a href="svc_qckref_asset_factory_mgr.htm">AssetFactoryManager</a></span></li>
  <li><span class="NDLSystemFont"><a href="svc_qckref_entity_mgr.htm">EntityManager</a></span></li>
  <li><span class="NDLSystemFont"><a href="svc_qckref_asset_locator_svc.htm">AssetLocatorService</a></span></li> 
  <li><span class="NDLSystemFont"><a href="svc_qckref_msg_svc.htm">MessageService</a></span></li>    
  <li><span class="NDLSystemFont"><a href="svc_qckref_scene_graph_svc.htm">SceneGraphService</a></span></li>  
  <li><span class="NDLSystemFont"><a href="svc_qckref_scheduler.htm">Scheduler</a></span></li>
</ul>

<!--Supporting Services are services that the current service will use, if available, for additional functionality, and what that functionality is. They are not required in all situations. Each service should be linked to its corresponding summary page.-->

<h4>Supporting Services</h4>

<ul>
  <li><span class="NDLSystemFont"><a href="svc_qckref_reload_mgr_svc.htm">ReloadManager</a></span></li>  
</ul>

<!--Configuration options are all of the options that this service looks for in
a Config file, via the IConfigManager. Each Section should be linked to the
configuration reference pages corresponding section (which should have more
description of what each config option means).-->

<h4>Configuration</h4>

<ul>
<li>None</li>
</ul>

<!--Asset Changes Processed is the set of asset mime types for which this
service will process asset change messages. Each of these should be linked to
the list of mime types that the asset controller knows about, or to some other
doc about asset controller and asset change messages.-->

<h4>Asset Changes Processed</h4>

<ul>
  <li>gamebryo-animation</li>
  <li>gamebryo-sequence-file</li>
</ul>

<!--Entity Properties Recognized is the set of entity models that the service
recognizes and acts upon. Each of these properties should be linked to the
reference page for the property or the model that contains the property.-->

<h4>Entity Properties Recognized</h4>

<ul>
  <li><a href="../QuickRef_Models/StandardModelLibrary__Actor.htm">AccumulatesTransforms</a></li>
  <li><a href="../QuickRef_Models/StandardModelLibrary__Actor.htm">InitialSequence</a></li>
  <li><a href="../QuickRef_Models/StandardModelLibrary__Placeable.htm">Position</a></li>
  <li><a href="../QuickRef_Models/StandardModelLibrary__Placeable.htm">Rotation</a></li>
  <li><a href="../QuickRef_Models/StandardModelLibrary__Placeable.htm">Scale</a></li>
  <li><a href="../QuickRef_Models/StandardModelLibrary__Actor.htm">KfmAsset</a></li>
</ul>	

<!--Messages Sent is the set of messages that this service may send, and when.
Each message should be linked to the message class for the message.-->

<h4>Messages Sent</h4>
<table>
<thead><tr><th>Message</th><th>Handler Declaration</th><th>Sent To</th><th>Sent How</th><th>Details</th></tr></thead>
<tbody>
  <tr>
    <td><span class="NDLSystemFont"><a href="../egmAnimation/egmAnimation__ActorAddedMessage.htm">ActorAddedMessage</a></span></td>
    <td>
    <pre>EE_HANDLER(
    ClassName,
    HandlerFunction,
    egmAnimation::ActorAddedMessage)</pre></td>
    <td>egmAnimation::AnimationService::GetMessageCategory()</td>
    <td>SendLocal</td>
    <td>Sent when a KfmAsset is loaded and has a scene graph.</td>
  </tr>
  <tr>
    <td><span class="NDLSystemFont"><a href="../egmAnimation/egmAnimation__ActorRemovedMessage.htm">ActorRemovedMessage</a></span></td>
    <td>
    <pre>EE_HANDLER(
    ClassName, 
    HandlerFunction,
    egmAnimation::ActorRemovedMessage)</pre></td>
    <td>egmAnimation::AnimationService::GetMessageCategory()</td>
    <td>SendLocal</td>
    <td>Sent when a KfmAsset has its scene graph removed.</td>
  </tr>
  <tr>
    <td><span class="NDLSystemFont"><a href="../egmAnimation/egmAnimation__KFMCacheResponse.htm">KFMCacheResponse</a></span></td>
    <td><pre>EE_HANDLER(
    ClassName, 
    HandlerFunction, 
    egmAnimation::KFMCacheResponse)</pre></td>
    <td>Application specific</td>
    <td>SendLocal</td>
    <td>Sent when a cache request has completed.</td>
  </tr>
  <tr>
    <td><span class="NDLSystemFont"><a href="../egf/egf__EntityPreloadResponse.htm">EntityPreloadResponse</a></span></td>
    <td><pre>EE_HANDLER(
    ClassName, 
    HandlerFunction, 
    egf::EntityPreloadResponse)</pre></td>
    <td>Not public</td>
    <td>SendLocal</td>
    <td>Sent when a scene graph has been preloaded.</td>
  </tr>
</tbody>
</table>

<!--Behaviors invoked by this service. Each of these should be linked to the
reference page for the behavior.-->

<h4>Behaviors Invoked</h4>

<ul>
<li>Entity Text Key behaviors : These behaviors are registered using the AnimationService::ListenForTextKeyEvents 
method. They are called against registered entities in response to animation TextKey events.</li>
</ul>

<!--Built-ins provided by this service. Each of these should be linked to the
reference page for the built-in.-->

<h4>Related Built-ins</h4>

<ul>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#GetAnimationNameFromId">GetAnimationNameFromId</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#GetAnimationIdFromName">GetAnimationIdFromName</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#GetCurrentAnimationName">GetCurrentAnimationName</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#GetCurrentAnimationId">GetCurrentAnimationId</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#GetNextAnimationName">GetNextAnimationName</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#GetNextAnimationId">GetNextAnimationId</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#GetTargetAnimationName">GetTargetAnimationName</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#GetTargetAnimationId">GetTargetAnimationId</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#GetTransitionState">GetTransitionState</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#SetTargetAnimationByName">SetTargetAnimationByName</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#SetTargetAnimationById">SetTargetAnimationById</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#ActivateLayeredSequenceById">ActivateLayeredSequenceById</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#ActivateLayeredSequence">ActivateLayeredSequence</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#DeactivateLayeredSequenceById">DeactivateLayeredSequenceById</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#DeactivateLayeredSequence">DeactivateLayeredSequence</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#ListenForTextKeyEvents">ListenForTextKeyEvents</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#ClearRegisteredTextKeys">ClearRegisteredTextKeys</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#SetSequenceFrequencyById">SetSequenceFrequencyById</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#GetSequenceFrequencyById">GetSequenceFrequencyById</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#SetSequenceFrequency">SetSequenceFrequency</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#GetSequenceFrequency">GetSequenceFrequency</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#GetSequenceDurationById">GetSequenceDurationById</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#GetSequenceDuration">GetSequenceDuration</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#SetSequenceWeightById">SetSequenceWeightById</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#GetSequenceWeightById">GetSequenceWeightById</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#SetSequenceWeight">SetSequenceWeight</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#GetSequenceWeight">GetSequenceWeight</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#GetActiveSequences">GetActiveSequences</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#IsPaused">IsPaused</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#SetPaused">SetPaused</a></li>
</ul>

<h4>Related Built-in Constants</h4>

<ul>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#NoTransition">NoTransition</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#Blending">Blending</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#Morphing">Morphing</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#CrossFading">CrossFading</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#kInvalidSequence">kInvalidSequence</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#kSequenceDataFreq">kSequenceDataFreq</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_egmAnimation.htm#kSequenceNone">kSequenceNone</a></li>
</ul>


<h4>Notes</h4>

<ul>
    <li>The <a href="../egmAnimation/egmAnimation__AnimationService.htm">AnimationService</a> will also invoke the registered text key behavior anytime a 
        text key is encountered in an animation. The behavior that is invoked is specified 
        by the <span class="NDLSystemFont"><a href="../egmAnimation/egmAnimation__AnimationService.htm">AnimationService::ListenForTextKeyEvents</a></span> method.</li>
<li>Only the KfmAsset property can be rapidly iterated on.  To see the change
of other properties, the entity must be first deleted and then re-added.</li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Scene Graph Service (SceneGraphService) Quick Reference</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Scene Graph Service (SceneGraphService) Quick Reference</h1>

<p>For more information about this service, see the <a href="../ecr/ecr__SceneGraphService.htm">ecr::SceneGraphService</a> class reference documentation.</p>


<h4>Library/Namespace</h4>

<p>ecr</p>

<!--Display Name is used to identify the service in logs and other situations
where a text string identifier is required. Each service should be linked to
its corresponding summary page.-->

<h4>Display Name</h4>

<p>SceneGraphService</p>

<!--Default Priority is the default priority suggested for this service. The priority should be linked to the page that lists all the priorities, and or the page describing priorities.-->

<h4>Default Priority</h4>

<p>1500</p>

<!--Required services must be present in the application in order for this
service to function. The service may assert, fail to initialize, or crash if
they are not present. Each service should be linked to its corresponding summary page.-->

<h4>Required Services</h4>

<ul>
  <li><span class="NDLSystemFont"><a href="../efd/efd__AssetFactoryManager.htm">AssetFactoryManager</a></span></li>
  <li><span class="NDLSystemFont"><a href="../efd/efd__AssetLocatorService.htm">AssetLocatorService</a></span></li> 
  <li><span class="NDLSystemFont"><a href="../egf/egf__EntityManager.htm">EntityManager</a></span></li>
  <li><span class="NDLSystemFont"><a href="../egf/egf__FlatModelManager.htm">FlatModelManager</a></span></li>
  <li><span class="NDLSystemFont"><a href="../efd/efd__MessageService.htm">MessageService</a></span></li>
</ul>

<!--Supporting Services are services that the current service will use, if available, for additional functionality, and what that functionality is. They are not required in all situations. Each service should be linked to its corresponding summary page.-->

<h4>Supporting Services</h4>

<ul>
    <li><span class="NDLSystemFont"><a href="../ecr/ecr__RenderService.htm">RenderService</a></span></li>
    <li><span class="NDLSystemFont"><a href="../efd/efd__ReloadManager.htm">ReloadManager</a></span></li>
</ul>


<!--Configuration options are all of the options that this service looks for in
a Config file, via the IConfigManager. Each Section should be linked to the
configuration reference pages corresponding section (which should have more
description of what each config option means).-->

<h4>Configuration</h4>

<ul>
  <li>None</li>
</ul>

<!--Asset Changes Processed is the set of asset mime types for which this
service will process asset change messages. Each of these should be linked to
the list of mime types that the asset controller knows about, or to some other
doc about asset controller and asset change messages.-->

<h4>Asset Changes Processed</h4>

<ul>
  <li>application/gamebryo-scenegraph</li>
</ul>

<!--Entity Properties Recognized is the set of entity models that the service
recognizes and acts upon. Each of these properties should be linked to the
reference page for the property or the model that contains the property.-->

<h4>Entity Properties Recognized</h4>

<ul>
  <li>Model-independent:<ul>
      <li>AttachedNifAsset</li>
      <li>AssocAttachedNifAsset</li>
      </ul>
    </li>
    <li><a href="../QuickRef_Models/StandardModelLibrary__Mesh.htm">Mesh</a> model:
    <ul>
        <li>AttachedObjects</li>
        <li>IsVisible</li>
        <li>IsNifAssetShared</li>
        <li>IsStatic</li>
        <li>NifAsset</li>
        <li>Renderable</li>
        <li>Position</li>
        <li>Rotation</li>
        <li>Scale</li>
    </ul>
</ul>

<!--Messages Sent is the set of messages that this service may send, and when.
Each message should be linked to the message class for the message.-->

<h4>Messages Sent</h4>
<table>
<thead><tr><th>Message</th><th>Handler Declaration</th><th>Sent To</th><th>Sent How</th><th>Details</th></tr></thead>
<tbody>
  <tr>
    <td><span class="NDLSystemFont"><a href="../ecr/ecr__SceneGraphAddedMessage.htm">ecr::SceneGraphAddedMessage</a></span></td>
    
    <td><pre>EE_HANDLER(
    ClassName,
    HandlerName,
    ecr::SceneGraphAddedMessage)</pre></td>    
        
    <td>kCAT_LocalMessage</td>
    <td>SendImmediate</td>
    <td>Sent when a NIFAsset is loaded.</td>
  </tr>
  <tr>
    <td><span class="NDLSystemFont"><a href="../ecr/ecr__SceneGraphRemovedMessage.htm">ecr::SceneGraphRemovedMessage</a></span></td>
    
    <td><pre>EE_HANDLER(
    ClassName,
    HandlerName,
    ecr::SceneGraphRemovedMessage)</pre></td>    
    
    <td>kCAT_LocalMessage</td>
    <td>SendImmediate</td>
    <td>Sent when a NIFAsset is unloaded.</td>
  </tr>
  <tr>
    <td><span class="NDLSystemFont"><a href="../ecr/ecr__SceneGraphsUpdatedMessage.htm">ecr::SceneGraphsUpdatedMessage</a></span></td>
    
    <td><pre>EE_HANDLER(
    ClassName,
    HandlerName,
    ecr::SceneGraphsUpdatedMessage)</pre></td>    
    
    <td>kCAT_LocalMessage</td>
    <td>SendImmediate</td>
    <td>Sent when a NIFAsset is reloaded.</td>
  </tr>
  <tr>
    <td><span class="NDLSystemFont"><a href="../ecr/ecr__AttachmentMadeMessage.htm">ecr::AttachmentMadeMessage</a></span></td>
    
    <td><pre>EE_HANDLER(
    ClassName,
    HandlerName,
    ecr::AttachmentMadeMessage)</pre></td>    
    
    <td>kCAT_LocalMessage</td>
    <td>SendImmediate</td>
    <td>Sent when one scene graph is attached to another.</td>
  </tr>
  <tr>
    <td><span class="NDLSystemFont"><a href="../ecr/ecr__AttachmentBrokenMessage.htm">ecr::AttachmentBrokenMessage</a></span></td>

    <td><pre>EE_HANDLER(
    ClassName,
    HandlerName,
    ecr::AttachmentBrokenMessage)</pre></td>    
    
    <td>kCAT_LocalMessage</td>
    <td>SendImmediate</td>
    <td>Sent when one scene graph is detached from another.</td>
  </tr>
  <tr>
    <td><span class="NDLSystemFont"><a href="../ecr/ecr__SceneGraphCacheResponse.htm">ecr::SceneGraphCacheResponse</a></span></td>
    
    <td><pre>EE_HANDLER(
    ClassName,
    HandlerName,
    ecr::SceneGraphCacheResponse)</pre></td>    
    
    <td>Application Specific</td>
    <td>SendLocal</td>
    <td>Sent when a cache request has completed (or failed).</td>
  </tr>
  <tr>
    <td><span class="NDLSystemFont"><a href="../egf/egf__EntityPreloadResponse.htm">egf::EntityPreloadResponse</a></span></td>
    
    <td><pre>EE_HANDLER(
    ClassName,
    HandlerName,
    egf::EntityPreloadResponse)</pre></td>    
    
    <td>Not public</td>
    <td>SendLocal</td>
    <td>Sent when a scene graph has been preloaded.</td>
  </tr>
</tbody>
</table>

<!--Behaviors invoked by this service. Each of these should be linked to the
reference page for the behavior.-->

<h4>Behaviors Invoked</h4>

<ul>
<li>None</li>
</ul>

<!--Built-ins provided by this service. Each of these should be linked to the
reference page for the built-in.-->

<h4>Related Built-ins</h4>

<ul>
<li><a href="../../Programmer/Scripting/lua_lib_ecr.htm#AttachSceneGraph">AttachSceneGraph</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_ecr.htm#DetachSceneGraph">DetachSceneGraph</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_ecr.htm#GetAttachedSceneGraph">GetAttachedSceneGraph</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_ecr.htm#SetAttachmentOffset">SetAttachmentOffset</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_ecr.htm#SetAttachmentRotation">SetAttachmentRotation</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_ecr.htm#SetAttachmentScale">SetAttachmentScale</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_ecr.htm#GetAttachmentOffset">GetAttachmentOffset</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_ecr.htm#GetAttachmentRotation">GetAttachmentRotation</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_ecr.htm#GetAttachmentScale">GetAttachmentScale</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_ecr.htm#GetSceneGraphNodeTransform">GetSceneGraphNodeTransform</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_ecr.htm#ClosestObjectOnRay">ClosestObjectOnRay</a></li>
<li><a href="../../Programmer/Scripting/lua_lib_ecr.htm#DistanceToEntityAlongRay">DistanceToEntityAlongRay</a></li>
</ul>

<h4>Notes</h4>

<ul>
    <li>The SceneGraphService class provides access to an
        <a href="../NiFloodgate/NiSPWorkflowManager.htm"><span class="NDLSystemFont">NiSPWorkflowManager</span></a>
        object that is used to manage
        <a href="../../Programmer/NiFloodgate/Floodgate_Programming_Guide.htm">Floodgate</a>
        task submission across multiple services. Application-specific
        services should also use this workflow manager when one is required.
    </li>
    <li>The IsNifAssetShared property cannot be updated after entity discovery.
    </li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

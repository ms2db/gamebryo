<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Channel Manager Service (ChannelManagerService) Quick Reference</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Fresnel" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Channel Manager Service (ChannelManagerService) Quick Reference</h1>

<p>For more information about this service, see the <span class="NDLSystemFont"><a href=
"../efdNetwork/efd__ChannelManagerService.htm">efd::ChannelManagerService</a></span> class
reference documentation.</p>

<h4>Library/Namespace</h4>

<p><span class="NDLSystemFont">efdNetwork / efd</span></p>

<!--Display Name is used to identify the service in logs and other situations
where a text string identifier is required. Each service should be linked to
its corresponding summary page.-->

<h4>Display Name</h4>

<p><span class="NDLSystemFont">ChannelManagerService</span></p>

<!--Default Priority is the default priority suggested for this service. The priority should be linked to the page that lists all the priorities, and or the page describing priorities.-->

<h4>Default Priority</h4>

<p>5800</p>

<!--Required services must be present in the application in order for this
service to function. The service may assert, fail to initialize, or crash if
they are not present. Each service should be linked to its corresponding summary page.-->

<h4>Required Services</h4>

<ul>
    <li><span class="NDLSystemFont"><a href=
    "../efd/efd__ConfigManager.htm">ConfigManager</a></span></li>

    <li><span class="NDLSystemFont"><a href=
    "../efd/efd__MessageService.htm">MessageService</a></span></li>
</ul>

<!--Supporting Services are services that the current service will use, if available, for additional functionality, and what that functionality is. They are not required in all situations. Each service should be linked to its corresponding summary page.-->

<h4>Supporting Services</h4>

<ul>
    <li><span class="NDLSystemFont"><a href=
    "../efd/efd__EnumManager.htm">EnumManager</a></span></li>

    <li><span class="NDLSystemFont"><a href=
    "../efdNetwork/efd__NameResolutionService.htm">NameResolutionService</a> (Required if
    ChannelManagerService::AnnounceService is called)</span></li>
</ul>

<!--Configuration options are all of the options that this service looks for in
a Config file, via the IConfigManager. Each Section should be linked to the
configuration reference pages corresponding section (which should have more
description of what each config option means).-->

<h4>Configuration</h4>

<ul>
    <li><a href="../QuickRef_Config/config_qckref.htm#NetService">NetService.NetLibType</a></li>

    <li><a href=
    "../QuickRef_Config/config_qckref.htm#ChannelManager">ChannelManager.Hostname</a></li>

    <li><a href="../QuickRef_Config/config_qckref.htm#ChannelManager">ChannelManager.Port</a></li>

    <li><a href=
    "../QuickRef_Config/config_qckref.htm#ChannelManager">ChannelManager.QualityOfService</a></li>

    <li><a href=
    "../QuickRef_Config/config_qckref.htm#ChannelManager">ChannelManager.FailInUse</a></li>
</ul>

<!--Asset Changes Processed is the set of asset mime types for which this
service will process asset change messages. Each of these should be linked to
the list of mime types that the asset controller knows about, or to some other
doc about asset controller and asset change messages.-->

<h4>Asset Changes Processed</h4>

<ul>
    <li>none</li>
</ul>

<!--Entity Properties Recognized is the set of entity models that the service
recognizes and acts upon. Each of these properties should be linked to the
reference page for the property or the model that contains the property.-->

<h4>Entity Properties Recognized</h4>

<ul>
    <li>none</li>
</ul>

<!--Messages Sent is the set of messages that this service may send, and when.
Each message should be linked to the message class for the message.-->

<h4>Messages Sent</h4>

<table>
<thead><tr><th>Message</th><th>Handler Declaration</th><th>Sent To</th><th>Sent How</th><th>Details</th></tr></thead>

    <tbody>
    
    <tr>
    <td><span class="NDLSystemFont"><a href="../efd/efd__StreamMessage.htm">efd::MessageWrapper&lt;<br/>
    efd::StreamMessage,<br/>
    efd::kMSGID_ChannelManagerPortInUse&gt;</a></span></td>
    
    <td><pre>EE_HANDLER_WRAP(
    ClassName,
    HandlerName,
    efd::StreamMessage,
    efd::kMSGID_ChannelManagerPortInUse)</pre></td>
    
    <td>efd:: MessageService:: GetServicePublicCategory( ChannelManagerService::CLASS_ID)</td>
    
    <td>SendImmediate</td>
    
    <td>Sent when we fail to bind to a configured port
    and FailInUse is set to true for that ChannelManager#
    entry.</td>
    </tr>
    
    <tr>
    <td><span class="NDLSystemFont"><a href="../efd/efd__StreamMessage.htm">MessageWrapper&lt; StreamMessage,
    kMSGID_ChannelManagerConnectionAccepted &gt;</a></span></td>
    
    <td><pre>EE_HANDLER_WRAP(
    ClassName,
    HandlerName,
    efd::StreamMessage,
    efd::kMSGID_ChannelManagerConnectionAccepted)</pre></td>

    <td>kCAT_LocalMessage</td>

    <td>SendLocal</td>

    <td>Sent when an incoming connection is accepted.
    Stream message payload contains the ConnectionID of
    the newly established connection, followed by the
    NetID (UInt32).</td>
    </tr>
    
    <tr>
    <td><span class="NDLSystemFont"><a href="../efd/efd__StreamMessage.htm">MessageWrapper&lt;<br/>
    StreamMessage,<br/>
    kMSGID_ChannelManagerConnectionClosed &gt;</a></span></td>
    
    <td><pre>EE_HANDLER_WRAP(
    ClassName,
    HandlerName,
    efd::StreamMessage,
    efd::kMSGID_ChannelManagerConnectionClosed)</pre></td>

    <td>kCAT_LocalMessage</td>

    <td>SendLocal</td>

    <td>Sent when a incoming connection disconnects.
    Stream message payload contains the ConnectionID of
    the disconnected connection, followed by the NetID
    (UInt32).</td>
    </tr>
    
    <tr>
    <td><span class="NDLSystemFont"><a href="../efd/efd__IMessage.htm">efd::MessageWrapper&lt;<br/>
    efd::IMessage,<br/>
    efd::kMSGID_ResubscribeComplete&gt;</a></span></td>
    
    <td><pre>EE_HANDLER_WRAP(
    ClassName,
    HandlerName,
    efd::IMessage,
    efd::kMSGID_ResubscribeComplete)</pre></td>
    
    <td>kCAT_NetSystem</td>
    
    <td>SendRemote</td>
    
    <td>Message indicating a ChannelManager resubscribe request is complete.</td>
    
    </tr>
    
    <tr>
    <td><span class="NDLSystemFont"><a href="../efd/efd__AssignNetIDMessage.htm">efd::MessageWrapper&lt;<br/>
    efd::AssignNetIDMessage,<br/>
    efd::kMSGID_ChannelManagerClientJoin&gt;</a></span></td>
    
    <td><pre>EE_HANDLER_WRAP(
    ClassName,
    HandlerName,
    efd::AssignNetIDMessage,
    efd::kMSGID_ChannelMnagerClientJoin)</pre></td>
    
    <td>kCAT_NetSystem</td>
    
    <td>SendRemote</td>
    
    <td>Message indicating a client has joined the ChannelManager.</td>
    
    </tr>
    
    <tr>
    <td><span class="NDLSystemFont"><a href="../efd/efd__AnnounceNetIDMessage.htm">efd::MessageWrapper&lt;<br/>
    efd::AnnounceNetIDMessage,<br/>
    efd::kMSGID_AckNetID&gt;</a></span></td>
    
    <td><pre>EE_HANDLER_WRAP(
    ClassName,
    HandlerName,
    efd::AnnounceNetIDMessage,
    efd::kMSGID_AckNetID)</pre></td>
    
    <td>kCAT_NetSystem</td>
    
    <td>SendRemote</td>
    
    <td>Acknowledgement that we've received our net ID.</td>
    
    </tr>
    
    <tr>
    <td><span class="NDLSystemFont"><a href="../efd/efd__AssignNetIDMessage.htm">efd::AssignNetIDMessage</a></span></td>
    
    <td><pre>EE_HANDLER(
    ClassName,
    HandlerName,
    efd::AssignNetIDMessage)</pre></td>
    
    <td>The response category provided in the original Request message, 
    or kCAT_NetSystem when explicitly adding a new connection.</td>
    
    <td>SendRemote</td>
    
    <td>Response message sent when a client requests a net ID.</td>
    
    </tr>
    
    <tr>
    <td><span class="NDLSystemFont"><a href="../efd/efd__IMessage.htm">efd::MessageWrapper&lt;<br/>
    efd::IMessage,<br/>
    efd::kMSGID_ResubscribeComplete&gt;</a></span></td>
    
    <td><pre>EE_HANDLER_WRAP(
    ClassName,
    HandlerName,
    efd::IMessage,
    efd::kMSGID_ResubscribeComplete)</pre></td>
    
    <td>kCAT_NetSystem</td>
    
    <td>SendRemote</td>
    
    <td>Message sent when a new process connects / reconnects to the
    channel manager.</td>
        
    <tr>
    <td><span class="NDLSystemFont"><a href="../efd/efd__AssignNetIDMessage.htm">MessageWrapper&lt;<br/>
    efd::AssignNetIDMessage,</br>
    efd::kMSGID_ChannelManagerClientLeave&gt;</a></span></td>
    
    <td><pre>EE_HANDLER_WRAP(
    ClassName,
    HandlerName,
    efd::AssignNetIDMessage,
    efd::kMSGID_ChannelManagerClientLeave)</pre></td>
    
    <td>kCAT_NetSystem</td>
    
    <td>SendRemote</td>
    
    <td>Indicates the client with the provided NetID is no longer connected.</td>
    </tr>
    
    </tbody>
</table>

<!--Behaviors invoked by this service. Each of these should be linked to the
reference page for the behavior.-->

<h4>Behaviors Invoked</h4>

<ul>
    <li>None</li>
</ul>

<!--Built-ins provided by this service. Each of these should be linked to the
reference page for the built-in.-->

<h4>Related Built-ins</h4>

<ul>
    <li>None</li>
</ul>

<h4>Notes</h4>

<ul>
    <li>The ChannelManagerService is run as part of AssetController and in a multiplayer game host
    to perform channel management and message routing.</li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egf::LuaResumeWaiterTask</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egf::LuaResumeWaiterTask</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="egf__LuaResumeCoroutineTask.htm">egf::LuaResumeCoroutineTask</a></span></p>


<p class="NDLRefHeaderFile">&lt;LuaResumeWaiterTask.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegf_1_1_lua_resume_waiter_task.gif" alt="Inheritance graph for egf::LuaResumeWaiterTask"/>
  <p class="FigureCaption">Inheritance graph for egf::LuaResumeWaiterTask</p>
</div>
</p>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegf_1_1_lua_resume_waiter_task_1a926a6efd52adba6641a02f8dcbe5ee4d"></a>
<p class="NDLRefMemberFunction">LuaResumeWaiterTask(<span class="NDLSystemFont"><a href="../egf/egf__PendingBehavior.htm">PendingBehavior</a></span>* what)</p>
<p class="NDLRefMemberFunction"></p>

<a name="classegf_1_1_lua_resume_waiter_task_1ab1fd93964709f9e82581fe1f9a32d272"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  SetResult(<br/><span class="NDLSystemFont"><a href="../egf/egf__Scheduler.htm">egf::Scheduler</a></span>* pScheduler, <br/>const <span class="NDLSystemFont"><a href="../egf/egf__EventMessage.htm">egf::EventMessage</a></span>* pMessage)</p>
<p class="NDLRefMemberDescription">Set the resulting event message which unblocked a waiting task. </p>
<p class="NDLRefMemberDetailedDescription">This is only called for tasks that were added to the wait queue via <span class="NDLSystemFont"><a href="../egf/egf__Scheduler.htm#classegf_1_1_scheduler_1a75e6a1f06af2f9e326137a7f93dba1b7">Scheduler::QueueTaskOnEvent</a></span>. The <span class="NDLSystemFont"><a href="../egf/egf__EventMessage.htm">EventMessage</a></span> passed in is the message with the <span class="NDLSystemFont"><a href="../egf/egf__EventID.htm">EventID</a></span> that was passed to <span class="NDLSystemFont"><a href="../egf/egf__Scheduler.htm#classegf_1_1_scheduler_1a75e6a1f06af2f9e326137a7f93dba1b7">Scheduler::QueueTaskOnEvent</a></span>. If this method returns true then this task will be added to the schedulers global queue at time_Now for execution on the next tick of the scheduler. If you return false from this method then the task will be aborted via the AbortTask method instead.</p>
<p class="NDLRefMemberDetailedDescription">The default implementation simply returns true.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pScheduler</span></td>
    <td>The scheduler to set the resulting event message for. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The <span class="NDLSystemFont"><a href="../egf/egf__EventMessage.htm">EventMessage</a></span> this task was waiting for. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if your task is now ready to be queued, false if your task should be aborted instead. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_lua_resume_waiter_task_1af6fb698e1997e9a7c5a05732181426dd"></a>
<p class="NDLRefMemberFunction">virtual void  DoTask(<span class="NDLSystemFont"><a href="../egf/egf__Scheduler.htm">egf::Scheduler</a></span>* pScheduler)</p>
<p class="NDLRefMemberDescription">Called to perform the work associated with this task. </p>
<p class="NDLRefMemberDetailedDescription">Override this method to perform whatever actions are required by your task.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pScheduler</span></td>
    <td>The <span class="NDLSystemFont"><a href="../egf/egf__Scheduler.htm">Scheduler</a></span> handling this task </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_lua_resume_waiter_task_1ab761941974fdf19bee1b03a4346ce08c"></a>
<p class="NDLRefMemberFunction">virtual int  PrepareResumeArguments()</p>
<p class="NDLRefMemberDescription">If you wish to return arguments during the resume call then you must override this method and push the arguments onto the m_luaThread stack. </p>
<p class="NDLRefMemberDetailedDescription">You must return the number of arguments pushed onto the stack. The default implementation simply returns zero. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>The number of arguments pushed onto the coroutine's stack </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

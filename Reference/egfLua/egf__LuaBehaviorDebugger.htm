<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egf::LuaBehaviorDebugger</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egf::LuaBehaviorDebugger</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__IBase.htm">efd::IBase</a></span></p>


<p class="NDLRefHeaderFile">&lt;LuaBehaviorDebugger.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegf_1_1_lua_behavior_debugger.gif" alt="Inheritance graph for egf::LuaBehaviorDebugger"/>
  <p class="FigureCaption">Inheritance graph for egf::LuaBehaviorDebugger</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This singleton implements the engine-side logic of a remote behavior debugger for Lua scripted behaviors. </p>
<p class="NDLNormal">It uses a language-independent communication protocol, receiving tool requests and sending responses via the MessageService. The Lua Debug API is used to hook the execution of behavior scripts and allow interactive debugging. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>


<a name="classegf_1_1_lua_behavior_debugger_1a621d2f2638c318d44c7dd70247360fb6"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont">bool</span>(  UserDataInterpreter)(lua_State *L, int pos, efd::utf8string &value)</p>
<p class="NDLRefMemberDescription">Function type for a userdata interpreter. </p>
<p class="NDLRefMemberDetailedDescription">This function attempts to create a human-readable string suitable for display in the debugger from the userdata value at position pos. Returns true if this interpreter generated a user-friendly string. Returns false if the value at pos is not a userdata value, or this interpreter is unable to construct a string for the userdata.</p>
<p class="NDLRefMemberDetailedDescription">The interpreter function is responsible for verify the value at pos is userdata and this userdata is of the appropriate type.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">L</span></td>
    <td>lua_State to examine. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pos</span></td>
    <td>Position on the Lua stack. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">value</span></td>
    <td>Resulting user-friendly string. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if the conversion was successful, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classegf_1_1_lua_behavior_debugger_1a6e345c5178de79f34f4f478a07b5eb7c"></a>
<p class="NDLRefMemberFunction">LuaBehaviorDebugger()</p>
<p class="NDLRefMemberDescription">default constructor. </p>

<a name="classegf_1_1_lua_behavior_debugger_1aa01d18b908861df895e91f70bd4f80e5"></a>
<p class="NDLRefMemberFunction">virtual ~LuaBehaviorDebugger()</p>
<p class="NDLRefMemberDescription">virtual destructor allows for subclasses. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classegf_1_1_lua_behavior_debugger_1ad19a99474d1a7d2bcef8ae11cdd07466"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">LuaBehaviorDebugger</span>*  Instance()</p>
<p class="NDLRefMemberDescription">Accessor method for the debugger object. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>Pointer to the debugger. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegf_1_1_lua_behavior_debugger_1a6e191ea7b185f40629bfe1e9046498d1"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  Initialize(<span class="NDLSystemFont"><a href="../efd/efd__ServiceManager.htm">efd::ServiceManager</a></span>* pServiceMgr)</p>
<p class="NDLRefMemberDescription">Initialization routine to enable interactive debugger messaging. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pServiceMgr</span></td>
    <td>The ServiceManager for this process. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True on successful startup. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_lua_behavior_debugger_1aae2c78fe43bc08c40d32633cfe36cf8e"></a>
<p class="NDLRefMemberFunction">void  Shutdown()</p>
<p class="NDLRefMemberDescription">Shuts the behavior debugger down (unregisters from it's messages). </p>

<a name="classegf_1_1_lua_behavior_debugger_1a76a948835a054294df3387c97c342080"></a>
<p class="NDLRefMemberFunction">void  OnCall()</p>
<p class="NDLRefMemberDescription">Entry point for the Lua debug hook for function call events. </p>

<a name="classegf_1_1_lua_behavior_debugger_1a7382099812894625cd9a56dcdbf6cf3a"></a>
<p class="NDLRefMemberFunction">void  OnReturn()</p>
<p class="NDLRefMemberDescription">Entry point for the Lua debug hook for function return events. </p>

<a name="classegf_1_1_lua_behavior_debugger_1a7253e8b0c6d16bdaab33b1ddf0f24c58"></a>
<p class="NDLRefMemberFunction">void  OnLine(<br/>lua_State* pLuaState, <br/>lua_Debug* pLuaDebug)</p>
<p class="NDLRefMemberDescription">Entry point for the Lua debug hook for execution line events. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pLuaState</span></td>
    <td>The active Lua state object. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pLuaDebug</span></td>
    <td>The active Lua debug object. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_lua_behavior_debugger_1ae3308d03cb6e283250bcb986fe245ab6"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  ActiveSession()</p>
<p class="NDLRefMemberDescription">Determine if an active debugging session is in progress. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if a debugging session is in progress. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_lua_behavior_debugger_1a1a12a03caa08461dad4b4dd67c8989fc"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  BreakAllowed()</p>
<p class="NDLRefMemberDescription">Determine if breakpoints are enabled. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if breakpoints are enabled. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_lua_behavior_debugger_1ad2c356c4696caa43d37123c97ec21b30"></a>
<p class="NDLRefMemberFunction">void  UpdateDebugHooks(<br/><span class="NDLSystemFont">bool</span> enable, <br/>lua_State* pLuaState)</p>
<p class="NDLRefMemberDescription">Sets or clears Lua debug hooks to allow interactive script debugging. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">enable</span></td>
    <td>True to set Lua debug hooks, False to clear them. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pLuaState</span></td>
    <td>Lua state for the coroutine being debugged. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_lua_behavior_debugger_1a90a0a091bb1924eb271afdc6334aef2d"></a>
<p class="NDLRefMemberFunction">void  StopStepping()</p>
<p class="NDLRefMemberDescription">Cancels a pending step request when a behavior finishes or sleeps. </p>

<a name="classegf_1_1_lua_behavior_debugger_1a21d166ed7b781576657a7671368093ca"></a>
<p class="NDLRefMemberFunction">void  ForceBreak()</p>
<p class="NDLRefMemberDescription">Attempts to break into execution. </p>

<a name="classegf_1_1_lua_behavior_debugger_1adebc26b240c0d448f59118739d832e07"></a>
<p class="NDLRefMemberFunction">void  RegisterUserDataInterpreter(<br/>const char* type, <br/><span class="NDLSystemFont"><a href="egf__LuaBehaviorDebugger.htm#classegf_1_1_lua_behavior_debugger_1a621d2f2638c318d44c7dd70247360fb6">UserDataInterpreter</a></span>* interpreter)</p>
<p class="NDLRefMemberDescription">Registers a Userdata interpreter that can generate a human-readable string for userdata values of 'type'. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">type</span></td>
    <td>Typename supported by this interpreter. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">interpreter</span></td>
    <td>pointer to the UserDataInterpreter function for this type. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_lua_behavior_debugger_1a5075b281d75e49f800c5119c21dd4024"></a>
<p class="NDLRefMemberFunction">void  HandleScriptDebuggerCommand(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__StreamMessage.htm">efd::StreamMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">Handle incoming script commands coming in from the message service. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The message delivered from the MessageService. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">targetChannel</span></td>
    <td>The category the message was delivered to. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_lua_behavior_debugger_1a9f3f4b365503bd06b4bafb7ae5e83758"></a>
<p class="NDLRefMemberFunction">void  HandleWorldResetBegin(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__IMessage.htm">efd::IMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">Handle the message that is sent before the world gets reset. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The message delivered from the MessageService. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">targetChannel</span></td>
    <td>The category the message was delivered to. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_lua_behavior_debugger_1aa042793294b29c052179457702e7c369"></a>
<p class="NDLRefMemberFunction">void  HandleWorldResetEnd(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__IMessage.htm">efd::IMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">Handle the message that is sent after the world has been reset. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The message delivered from the MessageService. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">targetChannel</span></td>
    <td>The category the message was delivered to. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

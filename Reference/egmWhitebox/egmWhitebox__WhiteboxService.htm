<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egmWhitebox::WhiteboxService</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egmWhitebox::WhiteboxService</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__ISystemService.htm">efd::ISystemService</a></span></p>


<p class="NDLRefHeaderFile">&lt;WhiteboxService.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegm_whitebox_1_1_whitebox_service.gif" alt="Inheritance graph for egmWhitebox::WhiteboxService"/>
  <p class="FigureCaption">Inheritance graph for egmWhitebox::WhiteboxService</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">The Whitebox Service generates geometry that matches the properties of any discovered entities that mix in the Whitebox model. </p>
<p class="NDLNormal">The geometry, how it is diplayed, and how the scene is structured is determined by the following properties: ShapeDimensions, Diffuse, RuntimeRender, Walkable, and SnapPoints.</p>
<p class="NDLNormal">The service is used simply by registering it; there is no relevant public interface. Any control over whiteboxes during the simulation is done through property changes on whitebox entities. </p>

<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classegm_whitebox_1_1_whitebox_service_1a9dc7a3633e6b3e8d0f5833284412187c"></a>
<p class="NDLRefMemberFunction">WhiteboxService()</p>
<p class="NDLRefMemberDescription">Default constructor. </p>

<a name="classegm_whitebox_1_1_whitebox_service_1acb199cadd192246def222d93a69142cd"></a>
<p class="NDLRefMemberFunction">virtual ~WhiteboxService()</p>
<p class="NDLRefMemberDescription">Virtual destructor. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegm_whitebox_1_1_whitebox_service_1a319a428a52bd6a56cec8d3f5e423e7a3"></a>
<p class="NDLRefMemberFunction">void  HandleEntityDiscoverMessage(<br/>const <span class="NDLSystemFont"><a href="../egf/egf__EntityChangeMessage.htm">egf::EntityChangeMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">This message handler is called when a new entity is discovered. </p>
<p class="NDLRefMemberDetailedDescription">If the entity inherits from Whitebox, the service creates geometry for it </p>

<a name="classegm_whitebox_1_1_whitebox_service_1a931ac2bbebffdd34d24095e6db45a3e5"></a>
<p class="NDLRefMemberFunction">void  HandleEntityRemovedMessage(<br/>const <span class="NDLSystemFont"><a href="../egf/egf__EntityChangeMessage.htm">egf::EntityChangeMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">This message handler is called when an entity has been removed from the EntityManager. </p>
<p class="NDLRefMemberDetailedDescription">So the service knows to un-register its geometry. </p>

<a name="classegm_whitebox_1_1_whitebox_service_1a5289fa43136ae9d4a72e4f63e67d2065"></a>
<p class="NDLRefMemberFunction">void  HandleEntityUpdatedMessage(<br/>const <span class="NDLSystemFont"><a href="../egf/egf__EntityChangeMessage.htm">egf::EntityChangeMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">This message handler is called when properties of an entity change. </p>
<p class="NDLRefMemberDetailedDescription">So the service can modify the geometry. </p>

<a name="classegm_whitebox_1_1_whitebox_service_1a8e911b3c8d9d28827f27d257fe0733d2"></a>
<p class="NDLRefMemberFunction">void  SetInToolMode(<span class="NDLSystemFont">bool</span> inToolMode)</p>
<p class="NDLRefMemberDescription">Tell the service whether it is being run within World Builder or in game. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

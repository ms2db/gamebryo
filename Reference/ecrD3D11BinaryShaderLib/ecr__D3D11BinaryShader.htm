<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ecr::D3D11BinaryShader</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">ecr::D3D11BinaryShader</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../ecrD3D11Renderer/ecr__D3D11ShaderCore.htm">ecr::D3D11ShaderCore</a></span></p>


<p class="NDLRefHeaderFile">&lt;D3D11BinaryShader.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classecr_1_1_d3_d11_binary_shader.gif" alt="Inheritance graph for ecr::D3D11BinaryShader"/>
  <p class="FigureCaption">Inheritance graph for ecr::D3D11BinaryShader</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal"><span class="NDLSystemFont">D3D11BinaryShader</span> is the D3D11-specific shader that represents NSB shaders. </p>
<p class="NDLNormal">This D3D11ShaderCore-derived class that provides a completely data-driven model for shader usage. All functions, even those considered 'internal', are documented to provide a model for developing your own shader classes. </p>

<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classecr_1_1_d3_d11_binary_shader_1a32d43ea4e51fd5fb4acf2bf50a8b914d"></a>
<p class="NDLRefMemberFunction">D3D11BinaryShader()</p>
<p class="NDLRefMemberDescription">Constructor. </p>

<a name="classecr_1_1_d3_d11_binary_shader_1a85545a854d92369e2bd3aa96427c7ce1"></a>
<p class="NDLRefMemberFunction">virtual ~D3D11BinaryShader()</p>
<p class="NDLRefMemberDescription">Destructor. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classecr_1_1_d3_d11_binary_shader_1ab13031009f3bef1d7baf035e3a6ad03a"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">efd::Bool</span>  Initialize()</p>
<p class="NDLRefMemberDescription">Initialize the shader by loading all shader programs from each pass. </p>

<a name="classecr_1_1_d3_d11_binary_shader_1a4e9cae16d4b609026cdf24bf1574f1c1"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  UpdatePipeline(const <span class="NDLSystemFont"><a href="../NiMain/NiRenderCallContext.htm">NiRenderCallContext</a></span>& callContext)</p>
<p class="NDLRefMemberDescription">Prepare each pass by ensuring all shader resources have been uploaded to the D3D11 device. </p>

<a name="classecr_1_1_d3_d11_binary_shader_1a2d8b62660ddd13acc13640e770d02880"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NSBShaderLib/NSBUserDefinedDataSet.htm">NSBUserDefinedDataSet</a></span>*  GetShaderUserDefinedDataSet()</p>
<p class="NDLRefMemberDescription">Return a pointer to the shader's <span class="NDLSystemFont"><a href="../NSBShaderLib/NSBUserDefinedDataSet.htm">NSBUserDefinedDataSet</a></span>. </p>

<a name="classecr_1_1_d3_d11_binary_shader_1add023e36f77d3ba774427339824d9a16"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NSBShaderLib/NSBUserDefinedDataSet.htm">NSBUserDefinedDataSet</a></span>*  GetImplementationUserDefinedDataSet()</p>
<p class="NDLRefMemberDescription">Return a pointer to the implementation's <span class="NDLSystemFont"><a href="../NSBShaderLib/NSBUserDefinedDataSet.htm">NSBUserDefinedDataSet</a></span>. </p>

<a name="classecr_1_1_d3_d11_binary_shader_1a424b2bcf957b89852e0db4906d737c10"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NSBShaderLib/NSBUserDefinedDataSet.htm">NSBUserDefinedDataSet</a></span>*  GetPassUserDefinedDataSet(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> passID)</p>
<p class="NDLRefMemberDescription">Return a pointer to the pass's <span class="NDLSystemFont"><a href="../NSBShaderLib/NSBUserDefinedDataSet.htm">NSBUserDefinedDataSet</a></span>. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

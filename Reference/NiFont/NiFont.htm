<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiFont</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiFont</p>

<p class="NDLRefParentage">: public <span><a href=
"../../Reference/NiMain/NiRefObject.htm">NiRefObject</a></span></p>

<p class="NDLRefHeaderFile">&lt;NiFont.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>The <span class="NDLSystemFont">NiFont</span> class
encapsulates an ASCII or Unicode Windows font. It includes both
the utility functions for font generation, and the run-time
functions for displaying the font in an application.</p>

<p class="NDLRefHead1">Constructors</p>

<p>To create an <span class="NDLSystemFont">NiFont</span> object
from an NFF file at run-time, the following static <span class=
"NDLSystemFont">NiFont</span> function is used, rather than an
<span class="NDLSystemFont">NiFont</span> constructor.</p>

<p class="NDLRefMemberFunction">static NiFont* Create(<a href=
"../../Reference/NiMain/NiRenderer.htm">NiRenderer</a>*
pkRenderer, const char* pcFontFile)</p>

<p class="NDLRefMemberDescription"><span class=
"NDLSystemFont">pkRenderer</span> points to the renderer that
will be used to render objects that use the font. <span class=
"NDLSystemFont">pcFontFile</span> is the name of the NFF file.
The return value is a pointer to a newly created <span class=
"NDLSystemFont">NiFont</span> object. The return value is
<span class="NDLSystemFont">NULL</span> in case of failure.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">static NiWChar*
AsciiToUnicode(const char* pcBuffer, unsigned int
uiBufferSize)</p>

<p class="NDLRefMemberDescription">Convert the ASCII string to
Unicode using the static internal buffer. <em>This function is not
thread safe, and multiple calls to this function are
destructive.</em> In other words, if you call this function again
before using the returned NiWChar*, then the buffer will be
overwritten by the second call.</p>

<p class="NDLRefMemberFunction">static void AsciiToUnicode(const
char* pcBuffer, unsigned int uiBufferSize, NiWChar*
pkUnicodeBuffer, unsigned int uiUnicodebufferSize)</p>

<p class="NDLRefMemberDescription">Convert the ASCII string to
Unicode. This version is thread safe and non-destructive. The
characters from pcBuffer are converted and copied to
pkUnicodeBuffer. For any reason, if the pkUnicodeBuffer will
overflow, or if pcBuffer is longer than pkUnicodeBuffer, or if
the string in pcBuffer is longer than pkUnicodeBuffer, then the
string in pkUnicodeBuffer will be automatically truncated.</p>

<p class="NDLRefMemberFunction"><span class=
"NDLSystemFont">b</span>ool IsBold() const</p>

<p class="NDLRefMemberFunction">bool IsItalic() const</p>

<p class="NDLRefMemberFunction">bool IsStrikeOut() const</p>

<p class="NDLRefMemberFunction">bool IsUnderline() const</p>

<p class="NDLRefMemberFunction">bool IsAntiAliased() const</p>

<p class="NDLRefMemberDescription">These functions return
attributes of the font determined at the time the font was
created. See <span class="NDLSystemFont"><a href="../../Tools/NiFontCreator/NiFontCreator_Intro.htm">NiFontCreator</a></span>.</p>

<p class="NDLRefMemberFunction">void GetTextExtent(const char*
pcText, float&amp; fWidth, float&amp; fHeight, unsigned char
ucDirection = NIFONT_LEFT_TO_RIGHT) const</p>

<p class="NDLRefMemberFunction">void GetTextExtent(const NiWChar*
pkText, float&amp; fWidth, float&amp; fHeight, unsigned char
ucDirection = NIFONT_LEFT_TO_RIGHT) const</p>

<p class="NDLRefMemberDescription">Returns the width and height,
in pixels, of the string pointed to by <span class=
"NDLSystemFont">pcText</span>. The ucDirection defines the
orientation used to draw the glyphs.</p>

<p class="NDLRefMemberFunction">void GetTextLineExtent(const
char* pcText, float&amp; fWidth, float&amp; fHeight, unsigned
char ucDirection = NIFONT_LEFT_TO_RIGHT) const</p>

<p class="NDLRefMemberFunction">void GetTextLineExtent(const
NiWChar* pkText, float&amp; fWidth, float&amp; fHeight, unsigned
char ucDirection = NIFONT_LEFT_TO_RIGHT) const</p>

<p class="NDLRefMemberDescription">Returns the width and height,
in pixels, of the subset of the string pointed to by pcText,
ending with the first newline or string termination. The
ucDirection defines the orientation used to draw the glyphs.</p>

<p class="NDLRefMemberFunction">void GetTextRangeExtent(const
char* pcText, unsigned int uiNumChars, float&amp; fWidth,
float&amp; fHeight, unsigned char ucDirection =
NIFONT_LEFT_TO_RIGHT) const</p>

<p class="NDLRefMemberFunction">void GetTextRangeExtent(const
NiWChar* pkText, unsigned int uiNumChars, float&amp; fWidth,
float&amp; fHeight, unsigned char ucDirection =
NIFONT_LEFT_TO_RIGHT) const</p>

<p class="NDLRefMemberDescription">Returns the width and height,
in pixels, of the subset of the string pointed to by pcText,
ending at the specified character count or string termination.
The ucDirection defines the orientation used to draw the
glyphs.</p>

<p class="NDLRefMemberFunction">void GetCharExtent(char cChar,
float&amp; fWidth, float&amp; fHeight) const</p>

<p class="NDLRefMemberFunction">void GetCharExtent(NiWChar kChar,
float&amp; fWidth, float&amp; fHeight) const</p>

<p class="NDLRefMemberDescription">Returns the width and height,
in pixels, of the character <span class=
"NDLSystemFont">cChar</span> (or <span class=
"NDLSystemFont">kChar</span>).</p>

<p class="NDLRefMemberFunction">int FitTextRangeExtent(const
char* pcText, unsigned int uiNumChars, float fMaxSize, unsigned
char ucDirection = NIFONT_LEFT_TO_RIGHT) const</p>

<p class="NDLRefMemberFunction">int FitTextRangeExtent(const
NiWChar* pkText, unsigned int uiNumChars, float fMaxSize,
unsigned char ucDirection = NIFONT_LEFT_TO_RIGHT) const</p>

<p class="NDLRefMemberDescription">Returns the length, in
characters, of the longest substring of the input that will fit
in <span class="NDLSystemFont">fMaxSize</span> pixels (width or
height as appropriate for direction), or -1 on error.</p>

<p class="NDLRefMemberFunction">const char* GetName() const</p>

<p class="NDLRefMemberDescription">Returns the name of the font.
The name is the font you chose in the <span class=
"NDLSystemFont"><a href=
"../../Tools/NiFontCreator/NiFontCreator_Intro.htm">NiFontCreator</a></span>
.</p>

<p class="NDLRefMemberFunction">unsigned int GetHeight()
const</p>

<p class="NDLRefMemberDescription">Returns the font size. If
<span class="NDLSystemFont"><a href=
"../../Tools/NiFontCreator/NiFontCreator_Intro.htm">NiFontCreator</a></span>
was used to create the font, it is the size that was chosen on
the Windows Font dialog box.</p>

<p class="NDLRefMemberFunction">unsigned int GetCharHeight()
const</p>

<p class="NDLRefMemberDescription">Returns the height, in pixels,
of the "X" character.</p>

<p class="NDLRefMemberFunction">unsigned int GetNumTextures()
const</p>

<p class="NDLRefMemberDescription">Return the number of textures
required to represent this font.</p>

<p class="NDLRefMemberFunction">NiSourceTexture*
GetTexture(NiWChar kChar = 0) const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont"><a href=
"../../Reference/NiMain/NiSourceTexture.htm">NiSourceTexture</a></span>
that contains the specified character. If no character is
provided, the first texture is returned.</p>

<p class="NDLRefMemberFunction">unsigned char
GetTextureIndex(NiWChar kChar = 0) const</p>

<p class="NDLRefMemberDescription">Returns the texture index that
contains the specified character. If no character is provided, it
returns index 0, which represents the first texture.</p>

<p class="NDLRefMemberFunction">NiSourceTexture*
GetTextureAtIndex(unsigned char ucIndex) const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont"><a href=
"../../Reference/NiMain/NiSourceTexture.htm">NiSourceTexture</a></span>
for the provided texture index. If there is no texture
corresponding to that index, NULL is returned.</p>

<p class="NDLRefMemberFunction">unsigned int
GetTextureWidth(NiWChar kChar = 0) const</p>

<p class="NDLRefMemberFunction">unsigned int
GetTextureHeight(NiWChar kChar = 0) const</p>

<p class="NDLRefMemberDescription">Returns the dimensions of the
texture associated with the specified character. If no character
is provided, dimensions for the first texture are returned.</p>

<p class="NDLRefMemberFunction">int GetRightOverhang(char cChar)
const</p>

<p class="NDLRefMemberFunction">int GetRightOverhang(NiWChar
kChar) const</p>

<p class="NDLRefMemberFunction">int GetLeftOverhang(char cChar)
const</p>

<p class="NDLRefMemberFunction">int GetLeftOverhang(NiWChar
kChar) const</p>

<p class="NDLRefMemberFunction">int GetTopOverhang() const</p>

<p class="NDLRefMemberFunction">int GetBottomOverhang() const</p>

<p class="NDLRefMemberDescription">Returns the overhang of this
character or this font. Following convention, overhang is
negative, and includes both the "A width" or "C width" from the
TrueType font specification and any padding added to the texture
atlas in <a href=
"../../Tools/NiFontCreator/NiFontCreator_Intro.htm">NiFontCreator</a>
for art effects. Measured in pixels at the font default point
size.</p>

<p class=NDLRefMemberFunction>unsigned int GetAtlasPadRight() const</p>

<p class=NDLRefMemberFunction>unsigned int GetAtlasPadLeft() const</p>

<p class=NDLRefMemberFunction>unsigned int GetAtlasPadTop() const</p>

<p class=NDLRefMemberFunction>unsigned int GetAtlasPadBottom() const</p>

<p class=NDLRefMemberDescription>Returns the amount of padding added to the texture atlas in <a href="../../Tools/NiFontCreator/NiFontCreator_Intro.htm">NiFontCreator</a> 
 for art effects, if any. Measured in pixels at the font default point size.
 Returns 0 for fonts that do not have an external texture atlas.</p>

<p class="NDLRefMemberFunction">NiFont::Error GetLastError()</p>

<p class="NDLRefMemberDescription">Returns an enumerated value
that indicates the last error encountered. The error code has one
of the following values.</p>
<!--(Table)=========================================================-->

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>NiFont::Error value</th>

                <th>Meaning</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class=
                "NDLSystemFont">NiFont::ERR_OK</span></td>

                <td>No error has occurred.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NiFont::ERR_BADFILE</span></td>

                <td>The specified file could not be opened or was
                not a Gamebryo font file.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NiFont::ERR_INVALIDVERSION</span></td>

                <td>The font file had an invalid version
                number.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NiFont::ERR_INVALIDFONT</span></td>

                <td>The Windows font creation function,
                <span class="NDLSystemFont">CreateFont</span>,
                failed.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NiFont::ERR_CREATEFAILED</span></td>

                <td>Some aspect of the requested font was not
                supported by <span class=
                "NDLSystemFont">NiFont</span>.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NiFont::ERR_PIXELDATAFAILED</span></td>

                <td>Attempt to create <span class=
                "NDLSystemFont">NiPixelData</span> failed.</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction">const NiPixelData*
GetPixelData(unsigned char ucIndex = 0) const</p>

<p class="NDLRefMemberFunction">void SetPixelData(NiPixeldata*
pkPixelData)</p>

<p class="NDLRefMemberDescription">These functions have been
deprecated and exist for legacy reasons only. <span class=
"NDLSystemFont">GetPixelData</span> returns the pixel data from
the texture, but <span class="NDLSystemFont">SetPixelData</span>
has been fully deprecated.</p>
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

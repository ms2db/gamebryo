<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiUIGroup</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiUIGroup</p>

<p class="NDLRefParentage">: public <a href="NiUIRenderGroup.htm">NiUIRenderGroup</a></p>

<p class="NDLRefHeaderFile">&lt;NiUIGroup.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiUIGroup</span> calls UI focus and mouse events for all child
elements. Although UI elements may be seen when added as children of NiUIRenderGroups, only UI
elements which are part of a NiUIGroup will receive non-hotkey UI input (such as mouse enter/leave
and focus events).</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiUIGroup(const char* pcGroupName, float fHeaderHeight, bool
bExpanded = true)</p>

<p class="NDLRefMemberDescription">This constructor initializes all variables to their proper
values. <span class="NDLSystemFont">fHeaderHeight</span> defines how tall to make the header of the
group and its button (which are both always visible).</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual void AddChild(NiUIBaseElement* pkChild)</p>

<p class="NDLRefMemberFunction">virtual void RemoveChild(NiUIBaseElement* pkChild)</p>

<p class="NDLRefMemberDescription">These functions update the AABB for the entire UI group so that
it is always tight. That AABB is used to speed up mouse location queries (see <span class=
"NDLSystemFont"><a href="#IsInside">IsInside</a></span>). Only one instance of a child may be
added.</p>

<p class="NDLRefMemberFunction">virtual bool AdvanceFocus()</p>

<p class="NDLRefMemberFunction">virtual bool RegressFocus()</p>

<p class="NDLRefMemberDescription">These functions advance/regress the focus throughout their child
elements. This progression of focus is controlled by TAB and CTRL+TAB on the keyboard or the up and
down buttons on the left d-pad of a GamePad. These functions return false when all elements have
been visited.</p>

<p class="NDLRefMemberFunction">virtual bool SetFocus(bool bFocus)</p>

<p class="NDLRefMemberDescription">This function passes the focus message to currently focused
child (where applicable). When <span class="NDLSystemFont">bFocus</span> is false, it also resets
the "next child to be focused" to be the first element.</p>

<p class="NDLRefMemberFunction">virtual NiUIBaseElement* GetFocusedElement()</p>

<p class="NDLRefMemberDescription">Returns the currently selected UI element if this UI group is
selected. Otherwise, the return value is NULL.</p><a name="IsInside" id="IsInside"></a>

<p class="NDLRefMemberFunction">virtual bool IsInside(unsigned int uiMouseX, unsigned int
uiMouseY)</p>

<p class="NDLRefMemberDescription">This function checks to see if the mouse pointer is inside the
AABB of the whole group. When this is true, it then passes this message to all children and returns
true only if the mouse is inside an element which receives mouse events.</p>

<p class="NDLRefMemberFunction">virtual void EnterPressed(unsigned char ucButtonState)</p>

<p class="NDLRefMemberFunction">virtual void LeftMouseButton(unsigned char ucButtonState)</p>

<p class="NDLRefMemberDescription">If there is a currently focused child, this passes the message
to the focused child.</p>

<p class="NDLRefMemberFunction">void SubscribeToExpandToggleEvent(NiUIBaseSlot1&lt; bool &gt;*
pkSlot)</p>

<p class="NDLRefMemberDescription">If there is a currently focused child, this passes the message
to the focused child.</p>

<p class="NDLRefMemberFunction">void SetExpandState(bool bExpand)</p>

<p class="NDLRefMemberDescription">Hides or shows all children. The Hide/Show button is always
shown</p>

<p class="NDLRefMemberFunction">virtual void SetVisible(bool bVisible)</p>

<p class="NDLRefMemberDescription">Hides or shows the group box and all children.</p>

<p class="NDLRefMemberFunction">virtual unsigned int GetChildElementCount() const</p>

<p class="NDLRefMemberFunction">virtual NiUIBaseElement* GetChildElement(unsigned int uiElement)
const</p>

<p class="NDLRefMemberDescription">These functions allow access to child elements. They are used
during initialization. Since the type of <span class="NDLSystemFont"><a href=
"NiUIBaseElement.htm">NiUIBaseElement</a></span> stored at any location may change, it is suggested
that only functions belonging to <span class="NDLSystemFont"><a href=
"NiUIBaseElement.htm">NiUIBaseElement</a></span> be called on the returned value.</p>

<p class="NDLRefMemberFunction">virtual void Draw(NiRenderer* pkRenderer)</p>

<p class="NDLRefMemberDescription">Render this element.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

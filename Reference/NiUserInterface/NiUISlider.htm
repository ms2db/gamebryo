<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiUISlider</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiUISlider</p>

<p class="NDLRefParentage">: public <a HREF="NiUIBaseElement.htm">NiUIBaseElement</a></p>

<p class="NDLRefHeaderFile">&lt;NiUISlider.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiUISlider</span> 
 implements a digital slider with application programmer definable minimum, 
 maximum, and step size. </p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiSlider(const char* pcText = &quot;&quot;, 
 float fValue = 0.0f, float fMin = 0.0f, float fMax = 100.0f, unsigned 
 int uiNumSteps = 101, unsigned int uiDecimalPlaces = 2)</p>

<p class="NDLRefMemberDescription">This initializes all variables to valid 
 values.</p>

<p class="NDLRefHead1">Supported Enumerations</p>

<p class="NDLRefMemberFunction"><a name=actions>NiUISlider::InputAction</a></p>

<p class="NDLRefMemberDescription">These are used to map hotkeys to actions. 
 The following values are supplied:</p>

<ul> 
<li>INPUT_INCREMENT</li>
<li>INPUT_DECREMENT</li>
<li>INPUT_MAX</li>
</ul> 

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual void Draw(<a href="../../Reference/NiMain/NiRenderer.htm">NiRenderer</a>* 
 pkRenderer)</p>

<p class="NDLRefMemberDescription">This function must be called once per 
 frame for proper rendering.</p>

<p class="NDLRefMemberFunction">virtual void EnterPressed(unsigned char ucButtonState)</p>

<p class="NDLRefMemberFunction">virtual void LeftMouseButton(unsigned char 
 ucButtonState)</p>

<p class="NDLRefMemberFunction">virtual bool MouseLocation(unsigned int uiMouseX, 
 unsigned int uiMouseY)</p>

<p class="NDLRefMemberFunction">void SetPressed(bool bPressed = true)</p>

<p class="NDLRefMemberFunction">bool IsPressed() const</p>

<p class="NDLRefMemberDescription">These functions serve to ensure that the 
 UI element is drawn with the correct highlighting when applicable (beyond 
 their functions served by the <a HREF="NiUIBaseElement.htm">parent</a> 
 implementations)</p>

<p class="NDLRefMemberFunction">virtual bool SetFocus(bool bFocus)</p>

<p class="NDLRefMemberDescription">This function binds the specified hotkeys 
 when given focus and releases them when focus leaves.</p>

<p class="NDLRefMemberFunction">bool SetFocusKeyboardHotkey(<a href="NiUISlider.htm#actions">NiUISlider::InputAction</a> 
 eAction, <a href="../../Reference/NiInput/NiInputKeyboard.htm#NiInputKeyboard::KeyCode">NiInputKeyboard::KeyCode</a> 
 kKey, <a href="../../Reference/NiInput/NiInputKeyboard.htm#NiInputKeyboard::Modifiers">NiInputKeyboard::Modifiers</a> 
 kModifier = NiInputKeyboard::KMOD_NONE)</p>

<p class="NDLRefMemberFunction">bool SetFocusGamepadHotkey(<a href="NiUISlider.htm#actions">NiUISlider::InputAction</a> 
 eAction, <a href="../../Reference/NiInput/NiInputGamePad.htm#NiInputGamePad::Button">NiInputGamePad::Button</a> 
 kButton, <a href="../../Reference/NiInput/NiInputGamePad.htm#NiInputGamePad::ButtonMask">NiInputGamePad::ButtonMask</a> 
 kModifier = NiInputGamePad::NIGP_MASK_NONE)</p>

<p class="NDLRefMemberDescription">These functions set the hotkeys which 
 will be bound in order to move the slider left and right when it receives 
 focus.</p>

<p class="NDLRefMemberFunction">void SubscribeToValueChangedEvent(<a HREF="NiUIBaseSlot.htm">NiUIBaseSlot1</a>&lt;float&gt;* 
 kSlot)</p>

<p class="NDLRefMemberDescription">This allows application programmers easy 
 access to the value changed event.</p>

<p class="NDLRefMemberFunction">virtual void SetVisible(bool bVisible)</p>

<p class="NDLRefMemberDescription">Sets whether or not this element is drawn.</p>

<p class="NDLRefMemberFunction">void SetText(const char* pcText)</p>

<p class="NDLRefMemberDescription">Sets the text for this element.</p>

<p class="NDLRefMemberFunction">void SetValue(float fValue)</p>

<p class="NDLRefMemberDescription">Set the value for this element. The value 
 will be clamped to range and steps associated with this element.</p>

<p class="NDLRefMemberFunction">void SetStep(int iValue)</p>

<p class="NDLRefMemberDescription">Set the number of steps between the start 
 and end of the range.</p>

<p class="NDLRefMemberFunction">void SetRange(float fMin, float fMax, unsigned 
 int uiNumSteps, bool bUpdateValue)</p>

<p class="NDLRefMemberDescription">Set the maximum and minimum values of 
 the slider as well as the number of steps in between. The boolean indicates 
 whether or not the value should be updated.</p>

<p class="NDLRefMemberFunction">virtual unsigned int GetChildElementCount() 
 const</p>

<p class="NDLRefMemberFunction">virtual <a HREF="NiUIBaseElement.htm">NiUIBaseElement</a>* 
 GetChildElement(unsigned int uiElement) const</p>

<p class="NDLRefMemberDescription">These functions allow access to child 
 elements. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->They 
 are used during initialization. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Since 
 the type of <span class="NDLSystemFont"><a href="NiUIBaseElement.htm">NiUIBaseElement</a></span> 
 stored at any location may change, it is suggested that only functions 
 belonging to <span class="NDLSystemFont"><a href="NiUIBaseElement.htm">NiUIBaseElement</a></span> 
 be called on the returned value.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiNavInterpToController</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiNavInterpToController</p>

<p class="NDLRefParentage">: public <a href="NiNavBaseController.htm">NiNavBaseController</a></p>

<p class="NDLRefHeaderFile">&lt;NiNavOrbitController.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiNavInterpToController</span> 
 allows an object to be transitioned to a target transform. That reference 
 object can be updated every frame, and the controlled object will continue 
 to track it. The transition to following the reference object is a smoothed 
 interpolation for a specified tween time. </p>

<p>The position tracking occurs in world space.</p>

<p>This controller does not make use of user input via 
 mouse, keyboard, or gamepad.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiNavInterpToController(</p>

<p class="NDLRefMemberFunction"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="../../Reference/NiMain/NiAVObject.htm"><!--kadov_tag{{</spaces>}}-->NiAVObject</a>* 
 pkInterpToObject, </p>

<p class="NDLRefMemberFunction"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="../../Reference/NiMain/NiAVObject.htm"><!--kadov_tag{{</spaces>}}-->NiAVObject</a>* 
 pkControlledObject,</p>

<p class="NDLRefMemberFunction"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->const 
 char* pcName,</p>

<p class="NDLRefMemberFunction"><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->float 
 fInterpTime)</p>

<p class="NDLRefMemberDescription">This initializes all member variables. 
 pkInterpToObject specifies the object who's transform will be mimicked. 
 pkControlledObject is the object that will be moved to match the pkInterpToObject. 
 fInterpTime specifies the amount of time to spend gradually interpolating 
 from pkControlledObject's previous location to the target location.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual bool SetActive(bool bActive, <a href="NiNavBaseController.htm#NiNavBaseController::NavState">NiNavBaseController::NavState</a>&amp; 
 kCurState)</p>

<p class="NDLRefMemberDescription">This function sets <span class="NDLSystemFont">kCurState</span> 
 (if <span class="NDLSystemFont">bActive</span> is false) or reads from it 
 (if <span class="NDLSystemFont">bActive</span> is true) as well as calling 
 the <a href="NiNavBaseController.htm#SetActive">parent function</a>.</p>

<p class="NDLRefMemberFunction">virtual const char* GetControlName(unsigned 
 int uiControlId) const;</p>

<p class="NDLRefMemberDescription">Always returns NULL, there are no controls.</p>

<p class="NDLRefMemberFunction">void SetInterpToObject(NiAVObject* pkInterpToObject)</p>

<p class="NDLRefMemberDescription">Changes the object used as a destination.</p>

<p class="NDLRefMemberFunction">void SetControlledObject(NiAVObject* pkControlledObject)</p>

<p class="NDLRefMemberDescription">Changes the object updated by this controller.</p>

<p class="NDLRefMemberFunction">void RestartInterpolation()</p>

<p class="NDLRefMemberDescription">Restarts interpolation, storing the current 
 location of the controlled object, and interpolating it to the InterpTo 
 object.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

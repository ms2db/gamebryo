<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiUIHotkeyImage</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiUIHotkeyImage</p>

<p class="NDLRefParentage">: public <a href=
"NiUIBaseElement.htm">NiUIBaseElement</a></p>

<p class="NDLRefHeaderFile">&lt;NiUIHotkeyImage.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiUIHotkeyImage</span> serves to
translate from the enumerated values used by <span class=
"NDLSystemFont"><a href=
"../../Reference/NiInput/Introduction_To_NiInput.htm">NiInput</a></span>
to describe keyboard keys, mouse keys, mouse axes, gamepad keys,
and gamepad buttons and the images read in by the <a href=
"NiUIAtlasMap.htm"><span class=
"NDLSystemFont">NiUIAtlasMap</span></a>.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiUIHotkeyImage()</p>

<p class="NDLRefMemberDescription">Initializes all elements to an
initial value.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">void SetKeyboardHotkey(<a href=
"../../Reference/NiInput/NiInputKeyboard.htm#NiInputKeyboard::KeyCode">
NiInputKeyboard::KeyCode</a> eKey, <a href=
"../../Reference/NiInput/NiInputKeyboard.htm#NiInputKeyboard::Modifiers">
NiInputKeyboard::Modifiers</a> eModifier =
NiInputKeyboard::KMOD_NONE)</p>

<p class="NDLRefMemberFunction">void SetGamePadAxis(<a href=
"../../Reference/NiInput/NiInputGamePad.htm#NiInputGamePad::DefaultAxis">
NiInputGamePad::DefaultAxis</a> eAxis, bool bUseBothDirs =
false)</p>

<p class="NDLRefMemberFunction">void SetGamePadHotkey(<a href=
"../../Reference/NiInput/NiInputGamePad.htm#NiInputGamePad::Button">
NiInputGamePad::Button</a> eButton, <a href=
"../../Reference/NiInput/NiInputGamePad.htm#NiInputGamePad::ButtonMask">
NiInputGamePad::ButtonMask</a> eModifier =
NiInputGamePad::NIGP_MASK_NONE)</p>

<p class="NDLRefMemberFunction">void SetMouseHotkey(<a href=
"../../Reference/NiInput/NiInputMouse.htm#NiInputMouse::Button">NiInputMouse::Button</a>
eButton, <a href=
"../../Reference/NiInput/NiInputMouse.htm#NiInputMouse::Modifiers">
NiInputMouse::Modifiers eModifier</a> =
NiInputMouse::MMOD_NONE)</p>

<p class="NDLRefMemberFunction">void SetMouseMotion()</p>

<p class="NDLRefMemberDescription">These functions translate
between the enumerations from <span class=
"NDLSystemFont"><a href="../../Reference/NiInput/Introduction_To_NiInput.htm">
NiInput</a></span> to images from <span class=
"NDLSystemFont"><a href=
"NiUIAtlasMap.htm">NiUIAtlasMap</a></span> where possible. Note
that while the enumerated modifiers do allow for multiple buttons
(CTRL+ALT+hotkey), <span class=
"NDLSystemFont">NiUIHotkeyImage</span> only functions properly
when there is one button.</p>

<p class="NDLRefMemberFunction">virtual void Draw(NiRenderer*
pkRenderer)</p>

<p class="NDLRefMemberDescription">This must be called every
frame for the letters to show up correctly on the keys.</p>

<p class="NDLRefMemberFunction">virtual void SetVisible(bool
bVisible)</p>

<p class="NDLRefMemberDescription">Sets whether or not this
element is shown.</p>

<p class="NDLRefMemberFunction">virtual void
EnterPressed(unsigned char ucButtonState)</p>

<p class="NDLRefMemberFunction">virtual void
LeftMouseButton(unsigned char ucButtonState)</p>

<p class="NDLRefMemberDescription">These properly handle input
from the user.</p>

<p class="NDLRefMemberFunction">float GetTotalWidth()</p>

<p class="NDLRefMemberDescription">This function returns the sum
width of all hotkey images. A standard square image (such as a
normal keyboard key) counts as "1" wide, while wider images (such
as the space bar or CTRL) count as "2" wide. A small buffer is
placed between separate hotkey image sets (i.e. there is a space
between the keyboard hotkey set and the mouse hotkey images).</p>

<p class="NDLRefMemberFunction">virtual unsigned int
GetChildElementCount() const</p>

<p class="NDLRefMemberFunction">virtual NiUIBaseElement*
GetChildElement(unsigned int uiElement) const</p>

<p class="NDLRefMemberDescription">These functions allow access
to child elements. They are used during initialization. Since the
type of <span class="NDLSystemFont"><a href=
"NiUIBaseElement.htm">NiUIBaseElement</a></span> stored at any
location may change, it is suggested that only functions
belonging to <span class="NDLSystemFont"><a href=
"NiUIBaseElement.htm">NiUIBaseElement</a></span> be called on the
returned value.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Reference Counting Macros</title>

<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Fresnel" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>
  
<!--(Body)==========================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">Reference Counting Macros</p>
<p class="NDLRefMemberDescription">These macros provide implementations for common reference
    counting styles. They are intended mainly for use inside of efd::IBase derived classes. If you
    have a non-IBase derived class for which you want to implement reference counting, consider
    using the helper classes in efd/RefCount.h instead, although these macros can also be used in
    other classes.
</p>

<p class="NDLRefMemberFunction">#define EE_DECLARE_ABSTRACT_REFCOUNT</p>

<p class="NDLRefMemberDescription">A macro for defining abstract classes that support reference
    counting.</p>

<p class="NDLRefMemberDetailedDescription">This will add pure virtual methods to the class that are
    compatible with the other reference counting implementation macros and also with classes such
    as efd::IBase and efd::RefCountObject. Place this macro inside the class definition.</p>

<p class="NDLRefMemberFunction">#define EE_DECLARE_CONCRETE_ATOMIC_REFCOUNT</p>

<p class="NDLRefMemberDescription">A macro for adding an atomic reference counting implementation
    to a class. Most often used in final classes that derive from efd::IBase. Place this macro
    inside the class definition.</p>

<p class="NDLRefMemberFunction">#define EE_DECLARE_CONCRETE_REFCOUNT</p>

<p class="NDLRefMemberDescription">A macro for adding a non-atomic reference counting implementation
    to a class. Most often used in final classes that derive from efd::IBase. Place this macro
    inside the class definition.</p>

<p class="NDLRefMemberFunction">#define
EE_DECLARE_CONCRETE_REFCOUNT_EX(ReferenceCountType)</p>

<p class="NDLRefMemberDescription">A helper macro that implements a reference count using the
    specified helper class.</p>

<p class="NDLRefMemberDetailedDescription">The helper class must support operator++(), operator--(),
    and operator efd::UInt32(). The classes efd::AtomicRefCount and efd::NonAtomicRefCount are
    designed for use with this macro. This is most often used in final classes that derive from
    efd::IBase. Place this macro inside the class definition.
</p>

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class="NDLSystemFont">ReferenceCountType</span></td>

                <td>A class for storage of the reference count value.</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction">#define
EE_DECLARE_FORWARDED_CONCRETE_REFCOUNT(forwardClass)</p>

<p class="NDLRefMemberDescription">Forwards the implementation of the reference
count to a parent class.</p>

<p class="NDLRefMemberDetailedDescription">Use in classes that use multiple inheritance from
    efd::IBase or compatible classes (for example, efd::RefCountObject or any class using the
    EE_DECLARE_ABSTRACT_REFCOUNT macro) where at least one base class already has a concrete
    reference count. Place this macro inside the class definition.</p>

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class="NDLSystemFont">forwardClass</span></td>

                <td>The base class with a concrete reference count to which we should delegate
                    our reference count implementation.</td>
            </tr>
        </tbody>
    </table>
</div>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

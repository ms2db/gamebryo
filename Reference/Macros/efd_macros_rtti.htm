<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>RTTI Macros</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Fresnel" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">RTTI Macros</p>

<div class="ReferenceTable">
    <table class="NDLNoteContainer" width="100%">
        <tr align="left">
            <td class="NDLNoteContainerTD">
                <p class="NDLHeadingNoteContainer">Note</p>

                <div class="NDLNote">
                    These macros are used inside IBase derived classes in order to provide all the
                    meta data needed by the Emergent Foundation RTTI system.<br/>
                    <br/>
                    The app writer is responsible for generating the system-wide unique classID to
                    pass to these macros. No two classes can use the same classID. The Data Driven
                    Enum system is the recommended approach for generating IDs that will not collide
                    and is used throughout the Emergent code base.
                </div>
            </td>
        </tr>
    </table>
</div>

<p class="NDLRefMemberFunction">#define <span class=
"NDLSystemFont">EE_BEGIN_DECLARE_CLASS</span>(classname, idvalue)</p>

<p class="NDLRefMemberDescription">Macro used to declare the required methods for the Foundation
    RTTI system for a class.</p>

<p class="NDLRefMemberDescription">This macro begins a block that can contain zero or more
    EE_INCLUDE_CLASS macros and must be terminated using the EE_END_DECLARE_CLASS macro. This macro
    should be invoked inside the class definition for the class that will use Foundation RTTI. As a
    side effect, this macro will enter a public access level so it is recommend that this macro be
    followed by a specific setting of the desired access level. Use this macro with final concrete
    classes, for interface classes use the EE_BEGIN_DECLARE_INTERFACE macro instead.</p>

<div class="ReferenceTable">
    <table class="NDLNoteContainer" width="100%">
        <tr align="left">
            <td class="NDLNoteContainerTD">
                <p class="NDLHeadingNoteContainer">Note</p>

                <div class="NDLNote">
                    This macro adds a static member to the class which must be declared in a .cpp
                    file by using a corresponding EE_IMPLEMENT_CONCRETE_CLASS_INFO call.
                </div>
            </td>
        </tr>
    </table>
</div>

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class="NDLSystemFont">classname</span></td>

                <td>The classname to declare</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">idvalue</span></td>

                <td>The id value to use</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction">#define <span class=
"NDLSystemFont">EE_BEGIN_DECLARE_INTERFACE</span>(classname, idvalue)</p>

<p class="NDLRefMemberDescription">Macro used to declare the required methods for the Foundation
    RTTI system for an interface class.</p>

<p class="NDLRefMemberDescription">This macro begins a block that can contain zero or more
    EE_INCLUDE_INTERFACE macros and must be terminated using the EE_END_DECLARE_INTERFACE macro.
    This macro should be invoked inside the class definition for the interface that will use
    Foundation RTTI. As a side effect, this macro block will enter a public access level so it is
    recommend that this macro be followed by a specific setting of the desired access level. Use
    this macro with interface classes that must be derived from before using, for concrete final
    classes use the EE_BEGIN_DECLARE_CLASS macro instead.</p>

<div class="ReferenceTable">
    <table class="NDLNoteContainer" width="100%">
        <tr align="left">
            <td class="NDLNoteContainerTD">
                <p class="NDLHeadingNoteContainer">Note</p>

                <div class="NDLNote">
                    This macro does not allocate any static data so it does not require a matching
                    EE_IMPLEMENT_CONCRETE_CLASS_INFO call.
                </div>
            </td>
        </tr>
    </table>
</div><!--(Table)=========================================================-->

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class="NDLSystemFont">classname</span></td>

                <td>The classname to declare</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">idvalue</span></td>

                <td>The id value to use</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction">#define <span class=
"NDLSystemFont">EE_DECLARE_CLASS</span>(classname, idvalue)</p>

<p class="NDLRefMemberDescription">Macro used as a shortcut to declare an EE_BEGIN_DECLARE_CLASS
    block with no parent interfaces.</p>

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class="NDLSystemFont">classname</span></td>

                <td>The classname to declare</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">idvalue</span></td>

                <td>The id value to use</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction">#define <span class=
"NDLSystemFont">EE_DECLARE_CLASS1</span>(classname, idvalue, parentname)</p>

<p class="NDLRefMemberDescription">Macro used as a shortcut to declare an EE_BEGIN_DECLARE_CLASS
    block with 1 parent interface or class.</p>

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class="NDLSystemFont">classname</span></td>

                <td>The classname to declare</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">idvalue</span></td>

                <td>The id value to use</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">parentname</span></td>

                <td>The parent interface or class</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction">#define <span class=
"NDLSystemFont">EE_DECLARE_CLASS2</span>(classname, idvalue, parent1name,
parent2name)</p>

<p class="NDLRefMemberDescription">Macro used as a shortcut to declare an EE_BEGIN_DECLARE_CLASS
    block with 2 parent interfaces or classes.</p>

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class="NDLSystemFont">classname</span></td>

                <td>The classname to declare</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">idvalue</span></td>

                <td>The id value to use</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">parent1name</span></td>

                <td>The first parent interface or class</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">parent2name</span></td>

                <td>The second parent interface or class</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction">#define <span class=
"NDLSystemFont">EE_DECLARE_CLASS3</span>(classname, idvalue, parent1name, parent2name,
    parent3name)</p>

<p class="NDLRefMemberDescription">Macro used as a shortcut to declare an EE_BEGIN_DECLARE_CLASS
    block with 3 parent interfaces or classes.</p>

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class="NDLSystemFont">classname</span></td>

                <td>The classname to declare</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">idvalue</span></td>

                <td>The id value to use</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">parent1name</span></td>

                <td>The first parent interface or class</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">parent2name</span></td>

                <td>The second parent interface or class</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">parent3name</span></td>

                <td>The third parent interface or class</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction">#define <span class=
"NDLSystemFont">EE_DECLARE_INTERFACE</span>(classname, idvalue)</p>

<p class="NDLRefMemberDescription">Macro used as a shortcut to declare an EE_BEGIN_DECLARE_INTERFACE
    block with no parent interfaces.</p>

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class="NDLSystemFont">classname</span></td>

                <td>The classname to declare</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">idvalue</span></td>

                <td>The id value to use</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction">#define <span class=
"NDLSystemFont">EE_DECLARE_INTERFACE1</span>(classname, idvalue,
parentInterface)</p>

<p class="NDLRefMemberDescription">Macro used as a shortcut to declare an EE_BEGIN_DECLARE_INTERFACE
    block with 1 parent interface.</p>

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class="NDLSystemFont">classname</span></td>

                <td>The classname to declare</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">idvalue</span></td>

                <td>The id value to use</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">parentInterface</span></td>

                <td>The parent interface</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction">#define <span class=
"NDLSystemFont">EE_END_DECLARE_CLASS</span>()</p>

<p class="NDLRefMemberDescription">Macro used to terminate an EE_BEGIN_DECLARE_CLASS block.</p>

<p class="NDLRefMemberFunction">#define <span class=
"NDLSystemFont">EE_END_DECLARE_INTERFACE</span></p>

<p class="NDLRefMemberDescription">Macro used to terminate an EE_BEGIN_DECLARE_INTERFACE block.</p>

<p class="NDLRefMemberFunction">#define <span class=
"NDLSystemFont">EE_IMPLEMENT_CONCRETE_CLASS_INFO</span>(classname)</p>

<p class="NDLRefMemberDescription">Macro used to implement a static instance of
a ClassInfo in a cpp file.</p>

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class="NDLSystemFont">classname</span></td>

                <td>The name of the class being implemented</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction">#define <span class=
"NDLSystemFont">EE_IMPLEMENT_CONCRETE_TEMPLATE_CLASS_INFO</span>(classname, T)</p>

<p class="NDLRefMemberDescription">Macro used to implement a static instance of a ClassInfo in a
    .cpp file; this macro is used if classname is a template.</p>

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class="NDLSystemFont">classname</span></td>

                <td>The name of the class being implemented</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">T</span></td>

                <td>The type if the class is a template class</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction">#define <span class=
"NDLSystemFont">EE_INCLUDE_CLASS</span>(parentname)</p>

<p class="NDLRefMemberDescription">Macro used inside a EE_BEGIN_DECLARE_CLASS block to include the
    RTTI information for a base interface class. One EE_INCLUDE_CLASS call should be used for each
    RTTI enabled base class.</p>

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class="NDLSystemFont">parentname</span></td>

                <td>The parent class name to include for RTTI information</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction">#define <span class=
"NDLSystemFont">EE_INCLUDE_INTERFACE</span>(parentname)</p>

<p class="NDLRefMemberDescription">Macro used inside a EE_BEGIN_DECLARE_INTERFACE block to include
    the RTTI information for a base class. One EE_INCLUDE_INTERFACE call should be used for each
    RTTI enabled base class.</p>

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class="NDLSystemFont">parentname</span></td>

                <td>The parent name to include for RTTI information</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction">#define <span class=
"NDLSystemFont">EE_IS_EXACT_KIND_OF</span>(classname,
pObject)</p>

<p class="NDLRefMemberDescription">Macro used to test if an object is an instance of a known
    class.</p>

<p class="NDLRefMemberDescription">The classname must specify an RTTI enabled class. If the object's
    type exactly matches the classname's type this will evaluate to true.</p>

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class="NDLSystemFont">classname</span></td>

                <td>The class name to test for</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">pObject</span></td>

                <td>A pointer to the object to test the type of</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction">#define EE_IS_KIND_OF(classname, pObject)</p>

<p class="NDLRefMemberDescription">Macro used to test if an object can be cast to a known class.</p>

<p class="NDLRefMemberDescription">The classname must specify an RTTI enabled class. If the object
    is or derives from the specified class type this will evaluate to true.</p>

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class="NDLSystemFont">classname</span></td>

                <td>The class name to test for</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">pObject</span></td>

                <td>A pointer to the object to test the type of</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction">#define EE_OFFSET_OF_CLASS(base, derived)</p>

<p class="NDLRefMemberDescription">Macro used to determine the offset of a
given class relative to a derived class.</p>

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class="NDLSystemFont">base</span></td>

                <td>The base class</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">derived</span></td>

                <td>The derived class</td>
            </tr>
        </tbody>
    </table>
</div>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

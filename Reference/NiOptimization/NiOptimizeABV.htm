<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiOptimizeABV</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<p class="NDLRefHeadClassTitle">NiOptimizeABV</p>

<p class="NDLRefHeaderFile">&lt;NiOptimizeABV.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiOptimizeABV</span> 
 contains static functions for use when creating and using alternate bounding 
 volumes (ABVs). Some of these functions are called from the <span class="NDLSystemFont">NiOptimize::Optimize</span> 
 function.</p>

<p class="NDLRefHead1">Static Member Functions</p>

<p class="NDLRefMemberFunction">static void CreateABVFromProxy(NiAVObject*&nbsp;pkObject, 
 NiTPointerList&lt;char*&gt;* pkErrors = NULL)</p>

<p class="NDLRefMemberDescription">Searches recursively through the scene 
 graph rooted at <span class="NDLSystemFont">pkObject</span> 
 for specially named nodes with which to generate ABVs. Description of 
 this functionality and the naming requirements is contained in the <a 
 HREF="../../Art/Max/Collision_Detection_and_3ds_Max.htm">3ds 
 max collision documentation</a>. <a href="../../Art/Maya/Create_Collision_Attributes.htm">Setting 
 up ABVs in Maya</a> is done using Extra Attributes in the scene graph..</p>

<p class="NDLRefMemberFunction">static void CreateWireABV(NiAVObject*&nbsp;pkObject, 
 const&nbsp;NiColor&amp;&nbsp;kColor, float&nbsp;fMult, const&nbsp;char*&nbsp;pcName, 
 bool&nbsp;bCreateOBB)</p>

<p class="NDLRefMemberDescription">Searches recursively through the scene 
 graph rooted at <span class="NDLSystemFont">pkObject</span> 
 for specially named nodes with which to generate wireframe depictions 
 of ABVs. These will be created with the color specified by <span class="NDLSystemFont">kColor</span> and will be enlarged 
 by the <span class="NDLSystemFont">fMult</span> 
 factor, so that they can be distinguished from the geometry they are enclosing. 
 The wireframes will be attached to the nodes containing the ABVs so that 
 they will inherit the proper transformations as the parent moves. All 
 nodes thus created will be given the name <span class="NDLSystemFont">pcName</span>, for later retrieval, 
 if necessary. <span class="NDLSystemFont">bCreateOBB</span> 
 allows the NiBoxBVs automatically created for OBB meshes to be represented.</p>

<p class="NDLRefMemberFunction">static void CreateWireABVProxy(NiAVObject*&nbsp;pkObject, 
 const&nbsp;NiColor&amp;&nbsp;kColor, float&nbsp;fMult, const&nbsp;char*&nbsp;pcName)</p>

<p class="NDLRefMemberDescription">Similar to <span class="NDLSystemFont">CreateWireABV</span> in all 
 regards except that the wireframes are depictions of the boxes that define 
 the ABVs, not the ABVs themselves.</p>

<p class="NDLRefMemberFunction">static void RemoveByFirstToken(NiAVObject*&nbsp;pkObject, 
 const&nbsp;char*&nbsp;pcName)</p>

<p class="NDLRefMemberDescription">Used for removing ABV proxy nodes (or 
 any other node) from the scene graph rooted at <span class="NDLSystemFont">pkObject</span>. To remove 
 the proxy geometry, <span class="NDLSystemFont">pcName</span> 
 must be &quot;<span class="NDLSystemFont">ABV</span>&quot;.</p>

<p class="NDLRefMemberFunction">static NiNode* GetNodeByFirstToken(NiNode*&nbsp;pkNode, 
 const&nbsp;char*&nbsp;pcToken)</p>

<p class="NDLRefMemberDescription">Used to find the first node in the scene 
 graph rooted at <span class="NDLSystemFont">pkNode</span> 
 that has a name whose first token is <span class="NDLSystemFont">pcToken</span>.</p>

<p class="NDLRefMemberFunction">static void CountByName(NiAVObject*&nbsp;pkObject, 
 const&nbsp;char*&nbsp;pcName, unsigned&nbsp;int&amp;&nbsp;uiCount)</p>

<p class="NDLRefMemberDescription">Used for counting the number of nodes 
 in the scene graph rooted at <span class="NDLSystemFont">pkObject</span> 
 that are named <span class="NDLSystemFont">pcName</span>. 
 This is useful when combined with <span class="NDLSystemFont">StoreNodesWithName</span>. 
 The count is returned in <span class="NDLSystemFont">uiCount</span>.</p>

<p class="NDLRefMemberFunction">static void StoreNodesWithName(NiAVObject*&nbsp;pkObject, 
 const&nbsp;char*&nbsp;pcName, NiNode**&nbsp;ppkArray, unsigned&nbsp;int&amp;&nbsp;uiIndex)</p>

<p class="NDLRefMemberDescription">Used to gather pointers to all the nodes 
 in the scene graph rooted at <span class="NDLSystemFont">pkObject</span> 
 that share the name <span class="NDLSystemFont">pcName</span>. 
 The nodes are stored in <span class="NDLSystemFont">ppkArray</span> 
 (which was likely allocated using the count determined by <span class="NDLSystemFont">CountByName</span>). <span class="NDLSystemFont">uiIndex</span> 
 is used for the recursion and must be set to 0 by the original caller.</p>

<p class="NDLRefMemberFunction">static void GroupNoTestNodes(NiNode*&nbsp;pkNode)</p>

<p class="NDLRefMemberDescription">This routine creates a node that groups 
 nodes with the <span class="NDLSystemFont">NO_TEST</span> 
 propagation flag. Collision will not try to test such nodes nor any children 
 of such nodes, so it is more efficient to have these nodes grouped. In 
 practice, the benefits are marginal since the nodes underneath <span class="NDLSystemFont">NO_TEST</span> are still updated.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiToolPipelineCloneHelper</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiToolPipelineCloneHelper</p>

<p class="NDLRefHeaderFile">
&lt;NiToolPipelineCloneHelper.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>Provides a set of helper functions to aid adding, removing,
and replacing tool data-streams shared between mesh within the
context of the tool pipeline. The class assumes that all
data-streams are single element data-streams and that the
data-streams are not shared between multiple <a href=
"../../Reference/NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a>
objects on the same mesh.</p>

<p class="NDLRefHead1">Constructor</p>

<p class="NDLRefMemberFunction">NiToolPipelineCloneHelper()</p>

<p class="NDLRefMemberDescription">The default constructor
creates the helper without any initialization. The helper may
later be initialized by using the <span class=
"NDLSystemFont">InitializeCloneSetMaps</span> method.</p>

<p class="NDLRefMemberFunction">
NiToolPipelineCloneHelper(<a href="../../Reference/NiMain/NiAVObject.htm">
NiAVObject</a>* pkObject)</p>

<p class="NDLRefMemberDescription">Constructor initializes the
helper with all <span class="NDLSystemFont"><a href=
"../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span> objects
that can be found by recursively iterating over <span class=
"NDLSystemFont">pkObject</span>.</p>

<p class="NDLRefMemberFunction">
NiToolPipelineCloneHelper(NiTLargeObjectArray&lt;<a href=
"../../Reference/NiMain/NiObject.htm">NiObjectPtr</a>&gt;&amp;
kTopObjects)</p>

<p class="NDLRefMemberDescription">Constructor initializes the
helper with all <span class="NDLSystemFont"><a href=
"../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span> objects
that can be found by recursively iterating over each array
element in <span class="NDLSystemFont">kTopObjects</span>.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">bool
ReleaseAllStreamRefs(<a href="#NiToolPipelineCloneHelper__CloneSet">
CloneSetPtr</a>&amp; spCloneSet)</p>

<p class="NDLRefMemberDescription">Removes all data-streams from
the set of mesh in the clone-set.</p>

<p class="NDLRefMemberFunction">bool ReplaceStreamRef(<a href=
"#NiToolPipelineCloneHelper__CloneSet">CloneSetPtr</a>&amp;
spCloneSet, const <a href=
"../../Reference/NiMain/NiFixedString.htm">NiFixedString</a>&amp;
kSemantic, NiUInt8 uiIndex, <a href=
"../../Reference/NiMesh/NiDataStreamElement.htm#Public_Types">NiDataStreamElement::Format</a>
eFormat, <a href=
"../../Reference/NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a>*
pkNewStreamRef)</p>

<p class="NDLRefMemberDescription">Replaces the stream-ref for
all mesh in the clone-set, provided that the semantic, index, and
format can be matched. If the semantic, index, and format can not
be matched, then the method returns false and no replacement
occurs.</p>

<p class="NDLRefMemberFunction">bool ReplaceStreamRef(<a href=
"../../Reference/NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a>*
pkOldStreamRef, <a href=
"../../Reference/NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a>*
pkNewStreamRef)</p>

<p class="NDLRefMemberDescription">The method looks to the old
stream-ref in order to determine the data stream that is used and
finds the set of mesh (clone-set) that share this data stream.
Afterwards, the method replaces the stream-ref for all mesh in
the clone-set. If the semantic, index, and format could not be
matched, then the method returns false and no replacement
occurs.</p>

<p class="NDLRefMemberFunction">bool AddStreamRef(<a href=
"#NiToolPipelineCloneHelper__CloneSet">CloneSetPtr</a>&amp;
spCloneSet, <a href=
"../../Reference/NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a>*
pkStreamRef)</p>

<p class="NDLRefMemberDescription">Adds the stream-ref to the set
of mesh specified by the clone-set. The underlying data-stream
used by the stream-ref should not have previously been used by
any mesh. Once the stream-ref has been successfully added to the
clone-set, the helper will create a mapping from the data-stream
to the clone-set for any future operations.</p>

<p class="NDLRefMemberFunction">bool ReleaseStreamRef(<a href=
"../../Reference/NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a>*
pkStreamRef)</p>

<p class="NDLRefMemberDescription">Finds the set of mesh sharing
the same data-stream as the stream-ref and then removes from
those mesh all stream-refs that use that data-stream.</p>

<p class="NDLRefMemberFunction">bool ReleaseStreamRef(<a href=
"#NiToolPipelineCloneHelper__CloneSet">CloneSetPtr</a>&amp;
spCloneSet, const <a href=
"../../Reference/NiMain/NiFixedString.htm">NiFixedString</a>&amp;
kSemantic, NiUInt8 uiIndex, <a href=
"../../Reference/NiMesh/NiDataStreamElement.htm#Public_Types">NiDataStreamElement::Format</a>
eFormat)</p>

<p class="NDLRefMemberDescription">Removes the stream-refs from
the set of mesh specified by the clone-set that match the
semantic, index, and format. Once the stream-ref has been
successfully removed from the clone-set, the helper will remove
its internal mapping from the underlying data-stream to the
clone-set.</p>

<p class="NDLRefMemberFunction">bool ReplaceDataStream(<a href=
"../../Reference/NiMesh/NiDataStream.htm">NiDataStream</a>* pkDS,
<a href=
"../../Reference/NiMesh/NiDataStream.htm">NiDataStream</a>*
pkReplacement)</p>

<p class="NDLRefMemberDescription">Replaces an existing
data-stream with another. This method will use the helpers
internal data-stream to clone-set mapping to find the set of mesh
that are affected.</p>

<p class="NDLRefMemberFunction">bool GetCloneSet(<a href=
"../../Reference/NiMesh/NiDataStream.htm">NiDataStream</a>*
pkDataStream, <a href=
"#NiToolPipelineCloneHelper__CloneSet">CloneSetPtr</a>&amp;
spCloneMap)</p>

<p class="NDLRefMemberDescription">Retrieves a clone-set by
data-stream. If the data-stream to clone-set mapping doesn't
exist, false is returned.</p>

<p class="NDLRefMemberFunction">void
GetDataStreams(NiTPrimitiveSet&lt;<a href=
"../../Reference/NiMesh/NiDataStream.htm">NiDataStream</a>*&gt;&amp;
kDataStreamSet, <a href=
"#NiToolPipelineCloneHelper__CloneSet">CloneSet</a>* pkCloneSet =
NULL)</p>

<p class="NDLRefMemberDescription">Retrieves all registered
data-streams from the helper if the clone-set parameter is NULL.
Otherwise, the clone-set parameter acts as a filter and only data
streams of the specified clone-set will be retrieved.</p>

<p class="NDLRefMemberFunction">void
InitializeCloneSetMaps(<a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObject</a>*
pkObject)</p>

<p class="NDLRefMemberDescription">Initializes the helper with
all <span class="NDLSystemFont"><a href=
"../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span> objects
that can be found by recursively iterating over pkObject.</p>

<p class="NDLRefMemberFunction">void
InitializeCloneSetMaps(NiTLargeObjectArray&lt;<a href=
"../../Reference/NiMain/NiObject.htm">NiObjectPtr</a>&gt;&amp;
kTopObjects)</p>

<p class="NDLRefMemberDescription">Initializes the helper with
all <span class="NDLSystemFont"><a href=
"../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span> objects
that can be found by recursively iterating over each array
element in kTopObjects.</p>

<p class="NDLRefMemberFunction">NiTPrimitiveSet&lt;<span class=
"NDLSystemFont"><a href=
"../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span>*&gt;&amp;
GetCompleteMeshSet()</p>

<p class="NDLRefMemberDescription">Retrieve the set of all
registered <span class="NDLSystemFont"><a href=
"../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span>
objects.</p>

<p class="NDLRefMemberFunction">void
RetrieveAllCloneSets(NiTPrimitiveSet&lt;<a href=
"#NiToolPipelineCloneHelper__CloneSet">CloneSet</a>*&gt;&amp;
kAllCloneSets)</p>

<p class="NDLRefMemberDescription">Retrieve the set of all
registered <span class="NDLSystemFont"><a href=
"../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span>
objects.</p>

<p class="NDLRefMemberFunction">void
GetCloneSetsThatIncludeMesh(NiTObjectSet&lt;<a href=
"#NiToolPipelineCloneHelper__CloneSet">CloneSetPtr</a>&gt;&amp;
kCloneSets, <span class="NDLSystemFont"><a href=
"../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span>*
pkMesh)</p>

<p class="NDLRefMemberDescription">Retrieve all registered
clone-sets that contain the specified mesh.</p>

<p class="NDLRefMemberFunction">ClearMaps()</p>

<p class="NDLRefMemberDescription">Clears the clone maps. This
effectively re-initializes the helper.</p>

<p class="NDLRefHead1">Nested Classes</p>

<p>The following nested class is used internally by <span class=
"NDLSystemFont">NiToolPipelineCloneHelper</span> as well as by
several of its public methods.</p>

<a name="NiToolPipelineCloneHelper__CloneSet" id="NiToolPipelineCloneHelper__CloneSet"></a><h2>NiToolPipelineCloneHelper::CloneSet</h2>

<p>The <span class="NDLSystemFont">CloneSet</span> class of
<span class="NDLSystemFont">NiToolPipelineCloneHelper</span>
records a set of mesh that share a common data-stream. Various
methods of <span class=
"NDLSystemFont">NiToolPipelineCloneHelper</span> use this type as
a parameter for determining what set of mesh to operate on.</p>

<p class="NDLRefMemberFunction">CloneSet()</p>

<p class="NDLRefMemberDescription">The default constructor
creates an empty clone-set.</p>

<p class="NDLRefMemberFunction">NiUInt32 GetSize()</p>

<p class="NDLRefMemberDescription">Returns the number of mesh
contained by the set.</p>

<p class="NDLRefMemberFunction">NiUInt32 Add(<span class=
"NDLSystemFont"><a href=
"../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span>*
pkMesh)</p>

<p class="NDLRefMemberDescription">Adds a mesh object to the
clone-set.</p>

<p class="NDLRefMemberFunction">NiMesh* GetAt(NiUInt32
uiItem)</p>

<p class="NDLRefMemberDescription">Returns a pointer to the mesh
at location specified.</p>

<p class="NDLRefMemberFunction">bool Contains(<span class=
"NDLSystemFont"><a href=
"../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span>*
pkMesh)</p>

<p class="NDLRefMemberDescription">Returns true if the clone-set
contains the specified mesh and false otherwise.</p>

<p class="NDLRefMemberFunction">NiTPrimitiveArray&lt;<span class=
"NDLSystemFont"><a href=
"../../Reference/NiMesh/NiMesh.htm">NiMesh</a></span>*&gt;&amp;
GetMeshSet()</p>

<p class="NDLRefMemberDescription">Returns a reference to an
array of all mesh contained by the set.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

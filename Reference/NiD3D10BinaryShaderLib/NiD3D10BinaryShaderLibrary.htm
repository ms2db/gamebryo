<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiD3D10BinaryShaderLibrary</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiD3D10BinaryShaderLibrary</p>

<p class="NDLRefParentage">: public <span><a href=
"../../Reference/NiDX9Renderer/NiD3DShaderLibrary.htm">NiD3DShaderLibrary</a></span></p>

<p class="NDLRefHeaderFile">&lt;NiD3D10BinaryShaderLibrary.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiD3D10BinaryShaderLibrary</span> is the
derived <span class="NDLSystemFont">NiD3D10ShaderLibrary</span>
class that provides applications with an access point to binary
shader (NSB) files. The library will create <span class="NDLSystemFont"><a href="NiD3D10BinaryShader.htm">NiD3D10BinaryShader</a></span> objects
for shaders found from the 
<span class="NDLSystemFont"><a href="../../Reference/NSBShaderLib/NSBShader.htm">NSBShader</a></span> objects returned 
<span class="NDLSystemFont"><a href="../../Reference/NSBShaderLib/NSBLoader.htm">NSBLoader</a></span> component of <span class="NDLSystemFont">NSBShaderLib</span>.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberDescription">The constructor is protected
the access point for <span class=
"NDLSystemFont">NiD3D10BinaryShaderLibrary</span> instances is the static
<span class="NDLSystemFont">Create</span> function. </p>

<p class="NDLRefHead1">Member Typedefs</p>

<p class="NDLRefMemberFunction">typedef <a HREF="NiD3D10BinaryShader.htm">NiD3D10BinaryShader</a>* 
 (*CREATENID3D10BINARYSHADER)(const char* pcClassName)</p>

<p class="NDLRefMemberDescription">This is the prototype for the callback 
 function that is made when the <span class="NDLSystemFont">NiD3D10BinaryShaderLib</span> 
 library is creating an <span class="NDLSystemFont"><a HREF="NiD3D10BinaryShader.htm">NiD3D10BinaryShader</a></span> 
 instance. The callback receives the class name, <span class="NDLSystemFont">pcClassName</span>, 
 which was associated with the implementation that is being converted into 
 a run-time shader. A registered callback should use the name to determine 
 whether an <span class="NDLSystemFont"><a href="NiD3D10BinaryShader.htm">NiD3D10BinaryShader</a></span>-derived 
 class is required and if so create and return it. Otherwise, they should 
 return <span class="NDLSystemFont">NULL</span> and the system will create 
 a standard <span class="NDLSystemFont"><a href="NiD3D10BinaryShader.htm">NiD3D10BinaryShader</a></span>instance. 
 </p>

<p class="NDLRefHead1">Supported Static Functions</p>

<p class="NDLRefMemberFunction">static NiD3D10BinaryShaderLibrary*
Create(int iDirectoryCount, char* apcDirectories[], bool
bRecurseSubFolders)</p>

<p class="NDLRefMemberDescription">This function will create an
instance of the <span class=
"NDLSystemFont">NiD3D10BinaryShaderLibrary</span>. The function
<span class="NDLSystemFont">LoadNSBShaders</span> is then called,
which passes the parameters to the library's 
<span class="NDLSystemFont"><a href="../../Reference/NSBShaderLib/NSBLoader.htm">NSBLoader</a></span> object so
it can load the NSB files it finds. The <span class="NDLSystemFont">NSBLoader</span> will search for all NSB
files, loading them and adding them to the library's list of
available shaders. If
the load function fails, the instance is deleted and <span class=
"NDLSystemFont">NULL</span> is returned, otherwise the library
instance is returned. </p>

<p class="NDLRefMemberFunction">static void Shutdown()</p>

<p class="NDLRefMemberDescription">This function will shut down
the static instance of the <span class=
"NDLSystemFont">NiD3D10BinaryShaderLibrary</span>.</p>

<p class="NDLRefMemberFunction">static NiD3D10BinaryShaderLibrary*
GetLibrary()</p>

<p class="NDLRefMemberDescription">Retrieve the static instance
of the <span class="NDLSystemFont">NiD3D10BinaryShaderLibrary</span>.</p>

<p class="NDLRefMemberFunction">static CREATENID3D10BINARYSHADER SetCreateNiD3D10BinaryShaderCallback(CREATENID3D10BINARYSHADER 
 pfnCallback)</p>

<p class="NDLRefMemberDescription">This function is used to set the <span 
 class="NDLSystemFont">CreateNiD3D10BinaryShader</span> callback the application 
 wishes to use. This MUST be set prior to loading any NSB shaders. Passing 
 in NULL will result in the default callback function, <span class="NDLSystemFont">NSBShader::DefaultCreateNiD3D10BinaryShader</span>, 
 being set as the callback.</p>

<p class="NDLRefMemberFunction">static CREATENID3D10BINARYSHADER GetCreateNiD3D10BinaryShaderCallback()</p>

<p class="NDLRefMemberDescription">This function returns the currently set 
 <span class="NDLSystemFont">CreateNiD3D10BinaryShader</span> callback.</p>

<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="NiD3D10BinaryShader.htm">NiD3D10BinaryShader</a></span>* 
 DefaultCreateNiD3D10BinaryShader(const char* pcClassName)</p>

<p class="NDLRefMemberDescription">This is the default implementation of 
 the <span class="NDLSystemFont">CreateNiD3D10BinaryShader</span> callback. If 
 a valid class name is passed to it, it simply reports the occurrence through 
 the <span class="NDLSystemFont"><a href="../../Reference/NiD3D10Renderer/NiD3D10Renderer.htm">NiD3D10Renderer</a>::Warning</span> 
 function.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual NiShaderLibraryDesc*
GetShaderLibraryDesc()</p>

<p class="NDLRefMemberDescription">Returns the shader library
description for the library. Used for the tool-chain to access
the available shader list.</p>

<p class="NDLRefMemberFunction">virtual NiShader*
GetShader(NiRenderer* pkRenderer, const char* pcName, unsigned
int uiImplementation)</p>

<p class="NDLRefMemberDescription">Retrieves the shader of the
given name, <span class="NDLSystemFont">pcName</span>, and
implementation, <span class=
"NDLSystemFont">uiImplementation</span>. Returns <span class=
"NDLSystemFont">NULL</span> if the shader was not found.</p>

<p class="NDLRefMemberFunction">virtual bool LoadShader(const
char* pcFile)</p>

<p class="NDLRefMemberDescription">Loads a <span class=
"NDLSystemFont">NSBShader</span> from <span class=
"NDLSystemFont">pcFile</span>.
Returns true when successful.</p>

<p class="NDLRefMemberFunction">virtual unsigned int
GetNumSupportedMimeTypes()</p>

<p class="NDLRefMemberDescription">Return the number of supported
mime types.</p>

<p class="NDLRefMemberFunction">virtual const char*
GetSupportedMimeType(unsigned int uiIdx)</p>

<p class="NDLRefMemberDescription">Returns one of the supported
mime types.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

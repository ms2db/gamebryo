<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>MmCharacter</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">MmCharacter</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../egf/egf__IBuiltinModelImpl.htm">egf::IBuiltinModelImpl</a></span></p>


<p class="NDLRefHeaderFile">&lt;MmCharacter.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_mm_character.gif" alt="Inheritance graph for MmCharacter"/>
  <p class="FigureCaption">Inheritance graph for MmCharacter</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal"><span class="NDLSystemFont">MmCharacter</span> class - handle moving characters (players, enemies). </p>

<a name="public_static_attributes"></a>
<p class="NDLRefHead1">Public Static Attributes</p>


<a name="class_mm_character_1a36b328b083fcf336beea822c5c2d9c05"></a>
<p class="NDLRefMemberFunction">static const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm">efd::Float32</a></span>  kEaseInTime</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_mm_character_1a3d4584d42843d69efdcb3a5d33b92a97"></a>
<p class="NDLRefMemberFunction">static const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm">efd::Float32</a></span>  kEaseOutTime</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_mm_character_1a50dd0d4d5aba01d81acd412b80b17420"></a>
<p class="NDLRefMemberFunction">static const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm">efd::Float32</a></span>  kDeadZone</p>
<p class="NDLRefMemberFunction"></p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_mm_character_1a89ab60230ccca58e4ea896523fcc1366"></a>
<p class="NDLRefMemberFunction">MmCharacter(<br/><span class="NDLSystemFont"><a href="MmICharacterService.htm#class_mm_i_character_service_1aff0b64840a28807700d51843b9aaf39b">MmICharacterService::Handle</a></span> handle, <br/><span class="NDLSystemFont"><a href="../egf/egf__Scheduler.htm">egf::Scheduler</a></span>* pScheduler, <br/><span class="NDLSystemFont"><a href="MmICharacterService.htm">MmICharacterService</a></span>* pMmCharacterService, <br/><span class="NDLSystemFont"><a href="MmCameraService.htm">MmCameraService</a></span>* pMmCameraService, <br/><span class="NDLSystemFont"><a href="MmWorldService.htm">MmWorldService</a></span>* pMmWorldService, <br/><span class="NDLSystemFont"><a href="../egmAnimation/egmAnimation__AnimationService.htm">egmAnimation::AnimationService</a></span>* pAnimationService, <br/><span class="NDLSystemFont"><a href="../ecr/ecr__SceneGraphService.htm">ecr::SceneGraphService</a></span>* pSceneGraphService)</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_mm_character_1ab152b2dea0caa84fa641adfdd02c1cdc"></a>
<p class="NDLRefMemberFunction">virtual ~MmCharacter()</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_mm_character_1a181762737059a4d5e3b2a42508e3ed81"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">efd::Bool</span>  Initialize(<br/><span class="NDLSystemFont"><a href="../egf/egf__Entity.htm">egf::Entity</a></span>* i_pOwner, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__list.htm">egf::PropertyDescriptorList</a></span>& i_Defaults)</p>
<p class="NDLRefMemberDescription">After the built-in model is "factoried", this method is called to associate the built-in model with its owning entity. </p>
<p class="NDLRefMemberDetailedDescription">This is effectively part of the construction of the entity in question, as a result the owning entity is not yet fully constructed. This means it is not yet valid to call most methods (for example, property and behavior related methods) on the owning entity during Initialize.</p>
<p class="NDLRefMemberDetailedDescription">It is possible that the owning entity might fail to be fully constructed even after you have successfully completed your initialization. If this happens then the entity and your built-in model may be deleted with no further method calls. As such you should avoid caching references to your built-in model implementation until the OnAdded method is invoked. Otherwise a memory leak may result if the entity fails construction.</p>
<p class="NDLRefMemberDetailedDescription">The base class version of this method must be called if the method is overridden. The return value of the IBuiltinModel implementation should be ignored (see below).</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_pOwner</span></td>
    <td>Owning entity. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_Defaults</span></td>
    <td>Default property descriptor list. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if initialization was successful, false otherwise. The default implementation will fail if there are built-in properties; override to handle setting the defaults. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_mm_character_1a43d429b7fcacae28fe93faf2820130f2"></a>
<p class="NDLRefMemberFunction">virtual void  OnAdded()</p>
<p class="NDLRefMemberDescription">This method is called during the addition of the owning entity to the EntityManager. </p>
<p class="NDLRefMemberDetailedDescription">This is the first method called on the IBuiltinModel where you can be assured your owning entity has been fully constructed. As such this is the earliest opportunity where it is safe for your built-in model implementation to interact with other services.</p>
<p class="NDLRefMemberDetailedDescription">The default implementation does nothing.</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">If other services hold direct references to your built-in model then those references should be released in or before OnRemoved is called. </p></p>

<a name="class_mm_character_1a3dab6f8d625eb995caf4e58043ad0123"></a>
<p class="NDLRefMemberFunction">virtual void  OnEndLifecycle(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm">efd::UInt32</a></span> lifecycle)</p>
<p class="NDLRefMemberDescription">Called when an entity lifecycle has completed. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">lifecycle</span></td>
    <td>The lifecycle that is ending. See the Entity::LifeCycles enum for some default lifecycle values. Other sources may define additional lifecycles. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_mm_character_1a2adce89455105a41a26308bf31d5582e"></a>
<p class="NDLRefMemberFunction">virtual void  OnRemoved()</p>
<p class="NDLRefMemberDescription">This method is called during the removal of the owning entity from the EntityManager. </p>
<p class="NDLRefMemberDetailedDescription">After this method is called, you can no longer rely on accessing the owning entity (the default implementation sets the m_pOwningEntity member to NULL). Anything holding a reference to your built-in model should be asked to release those references when this method is called.</p>
<p class="NDLRefMemberDetailedDescription">The base class version of this method must be called if the method is overridden, at the end of the overriding method. The default implementation clears the owning entity, which makes the service manager unavailable. </p>

<a name="class_mm_character_1ad3b350667c40046c0585554a940066ba"></a>
<p class="NDLRefMemberFunction">virtual void  SetLongitudinalMovement(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm">efd::Float32</a></span> magnitude)</p>
<p class="NDLRefMemberDescription">Set the longitudinal movement magnitude of a control delegate. </p>
<p class="NDLRefMemberDetailedDescription">This is movement forward or backward relative to the gameplay camera's orientation.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">magnitude</span></td>
    <td>Magnitude value </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_mm_character_1a2d4f8b7bfb8e897a8dd1a7c7640806b6"></a>
<p class="NDLRefMemberFunction">virtual void  SetLateralMovement(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm">efd::Float32</a></span> magnitude)</p>
<p class="NDLRefMemberDescription">Set the lateral movement magnitude of a control delegate. </p>
<p class="NDLRefMemberDetailedDescription">This is movement sideways relative to the gameplay camera's orientation.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">magnitude</span></td>
    <td>Magnitude value </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_mm_character_1a93f4be18dc053314dcb1c662a7264403"></a>
<p class="NDLRefMemberFunction">virtual void  DoAttack()</p>
<p class="NDLRefMemberDescription">Perform an "attack" action. </p>
<p class="NDLRefMemberDetailedDescription">Applies only to character control delegates. </p>

<a name="class_mm_character_1a80e8940aad4bbfae133137cf3f3c8a8c"></a>
<p class="NDLRefMemberFunction">virtual void  DoHeavyAttack()</p>
<p class="NDLRefMemberDescription">Perform a "heavy attack" action. </p>
<p class="NDLRefMemberDetailedDescription">Applies only to character control delegates. </p>

<a name="class_mm_character_1a9fffd76291ab5271c0485dfb102fbb12"></a>
<p class="NDLRefMemberFunction">virtual void  DoSpell()</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_mm_character_1aac0099f71ffde22577ca3ce711c617b3"></a>
<p class="NDLRefMemberFunction">virtual void  OnTick(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm">efd::Float64</a></span> deltaTime)</p>
<p class="NDLRefMemberDescription">Called each tick that the service is active. </p>

<a name="class_mm_character_1a131c8b84d558e434303d6260ac7d79bc"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../egf/egf__Entity.htm">egf::Entity</a></span>*  GetEntity() const</p>
<p class="NDLRefMemberDescription">Get the Entity associated with this character. </p>

<a name="class_mm_character_1abd34ff9e85fb5efb2f0c061d71f354dd"></a>
<p class="NDLRefMemberFunction">virtual void  AssetsLoaded()</p>
<p class="NDLRefMemberDescription">Called by the CharacterService when a new character is loaded. </p>

<a name="class_mm_character_1af92de1ff1309604d453ad5835e8c3261"></a>
<p class="NDLRefMemberFunction">virtual void  AssetsUnloaded()</p>
<p class="NDLRefMemberDescription">Called by the CharacterService when a character is unloaded. </p>

<a name="class_mm_character_1acdb4924a4e4db01e5a953076f761cd4f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  isTickable()</p>
<p class="NDLRefMemberDescription">Returns a bool whether the character is ready to start ticking or not. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>MmControlService</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">MmControlService</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__ISystemService.htm">efd::ISystemService</a></span></p>


<p class="NDLRefHeaderFile">&lt;MmControlService.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_mm_control_service.gif" alt="Inheritance graph for MmControlService"/>
  <p class="FigureCaption">Inheritance graph for MmControlService</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">The <span class="NDLSystemFont">MmControlService</span> class is responsible for mapping messages from the input service to registered control delegates and other game state management logic. </p>
<p class="NDLNormal">Currently there are only two kinds of delegates, the main gameplay camera and the player character. However the class could be easily extended to control multiple cameras and/or multiple characters using simple delegate aggregation patterns. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_mm_control_service_1a811690526fccebf3016298af8150c1bd"></a>
<p class="NDLRefMemberFunction">MmControlService()</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_mm_control_service_1a4de8780052fa80ade76bf09c2807368c"></a>
<p class="NDLRefMemberFunction">virtual ~MmControlService()</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_mm_control_service_1a39ebe134dbe0568259cfee4b8beba314"></a>
<p class="NDLRefMemberFunction">virtual const char*  GetDisplayName() const</p>
<p class="NDLRefMemberDescription">Returns the name of this service. </p>
<p class="NDLRefMemberDetailedDescription">This name is used mainly for improving the readability of various log statements and has no impact on functionality. Service names are not guaranteed to be unique.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>const char* Display name for the current service. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_mm_control_service_1a3b271b24b27fe5aec5bbdfd08ccef707"></a>
<p class="NDLRefMemberFunction">void  HandleInputActionMessage(<br/>const <span class="NDLSystemFont"><a href="../ecrInput/ecrInput__InputActionMessage.htm">ecrInput::InputActionMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> category)</p>
<p class="NDLRefMemberDescription">Function that serves as the handler for Input Action messages from the InputService. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>Pointer to an incoming Input Action message </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">category</span></td>
    <td>Category of the message </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_mm_control_service_1a15948e80f3e79b0b9fde84c30c3a4ca0"></a>
<p class="NDLRefMemberFunction">void  HandleInputStickMessage(<br/>const <span class="NDLSystemFont"><a href="../ecrInput/ecrInput__InputStickMessage.htm">ecrInput::InputStickMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> category)</p>
<p class="NDLRefMemberDescription">Function that serves as the handler for Input Stick messages from the InputService. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>Pointer to an incoming Input Action message </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">category</span></td>
    <td>Category of the message </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_mm_control_service_1a08fdc04f001d67079691f161abc77511"></a>
<p class="NDLRefMemberFunction">void  SetCameraControlDelegate(<span class="NDLSystemFont"><a href="MmIControlDelegate.htm">MmIControlDelegate</a></span>& cameraDelegate)</p>
<p class="NDLRefMemberDescription">Set the active camera control delegate. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">cameraDelegate</span></td>
    <td>Reference to the new camera control delegate </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_mm_control_service_1a6cc9e30fc5c612100df6a8f9ee562cbc"></a>
<p class="NDLRefMemberFunction">void  ClearCameraControlDelegate()</p>
<p class="NDLRefMemberDescription">Clear the active camera control delegate. </p>

<a name="class_mm_control_service_1ade9bf2589921a5eafbb9c3a305181f0a"></a>
<p class="NDLRefMemberFunction">void  SetCharacterControlDelegate(<span class="NDLSystemFont"><a href="MmIControlDelegate.htm">MmIControlDelegate</a></span>& characterDelegate)</p>
<p class="NDLRefMemberDescription">Set the active character control delegate. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">characterDelegate</span></td>
    <td>Reference to the new character control delegate </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_mm_control_service_1a1d186d3dc2b2b4d4388ac53d1d4aeeaa"></a>
<p class="NDLRefMemberFunction">void  ClearCharacterControlDelegate()</p>
<p class="NDLRefMemberDescription">Clear the active character control delegate. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

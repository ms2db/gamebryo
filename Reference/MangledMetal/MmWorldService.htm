<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>MmWorldService</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">MmWorldService</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__ISystemService.htm">efd::ISystemService</a></span></p>


<p class="NDLRefHeaderFile">&lt;MmWorldService.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_mm_world_service.gif" alt="Inheritance graph for MmWorldService"/>
  <p class="FigureCaption">Inheritance graph for MmWorldService</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Responsible for deciding when to load the block file, dynamically adding Mangled Metal specific entities to the world, and providing utility functions and built-ins for querying for entities in the world. </p>
<p class="NDLNormal">The World Service internally maintains a list of dynamic entities to make the built-in functions it provides more efficient. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_mm_world_service_1a28e079b2a3679afa979a68a253330e82"></a>
<p class="NDLRefMemberFunction">MmWorldService()</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_mm_world_service_1a0b87a9cc0ecfa437efef943182f8f1cb"></a>
<p class="NDLRefMemberFunction">virtual ~MmWorldService()</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_mm_world_service_1aa63aab1d98b8589a20981095ccb8ea94"></a>
<p class="NDLRefMemberFunction">virtual const char*  GetDisplayName() const</p>
<p class="NDLRefMemberDescription">Returns the name of this service. </p>
<p class="NDLRefMemberDetailedDescription">This name is used mainly for improving the readability of various log statements and has no impact on functionality. Service names are not guaranteed to be unique.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>const char* Display name for the current service. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_mm_world_service_1af465989893406f10066f459f45e5a1b0"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span>  SpawnEntity(const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& modelName)</p>
<p class="NDLRefMemberDescription">Utility function for factorying a new entity of the given model and adding it to the Entity Manager. </p>

<a name="class_mm_world_service_1a4e6002c168237189f2fd0f459a8c82ff"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span>  SpawnEntityAt(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& modelName, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& position, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& rotation = efd::Point3::ZERO)</p>
<p class="NDLRefMemberDescription">Utility function for factorying a new entity of the given model, adding it to the Entity Manager, and setting its initial transformation. </p>

<a name="class_mm_world_service_1a44a222bfc197d0027ae04f5a88b07744"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetDynamicEntitiesByProximity(<br/><span class="NDLSystemFont"><a href="../egf/egf__Entity.htm">egf::Entity</a></span>* pBaseEntity, <br/>float radius, <br/><span class="NDLSystemFont"><a href="../efd/efd__list.htm">efd::list</a></span>&lt;<span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span>&gt;& foundEntityList)</p>
<p class="NDLRefMemberDescription">Retrieve all entities that do not have a boolean property called "IsStatic" set to true within a given radius of a source entity. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pBaseEntity</span></td>
    <td>The entity at the center of the proximity check </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">radius</span></td>
    <td>The distance from the base entity to check for other entities </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">foundEntityList</span></td>
    <td>Returns a list of entities within the radius </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the function completed successfully </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_mm_world_service_1a405132f37994b13cd5846c4a8cb7505b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetDynamicEntitiesInArc(<br/><span class="NDLSystemFont"><a href="../egf/egf__Entity.htm">egf::Entity</a></span>* pBaseEntity, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm">efd::Float32</a></span> radius, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm">efd::Float32</a></span> arc, <br/><span class="NDLSystemFont"><a href="../efd/efd__list.htm">efd::list</a></span>&lt;<span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span>&gt;& foundEntityList)</p>
<p class="NDLRefMemberDescription">Retrieve all entities that have a float property called "Radius", do not have a boolean property called "IsStatic" set to true, and touch an arc defined by the given arguments. </p>
<p class="NDLRefMemberDetailedDescription">The arc originates from the base entity and goes along the entity's negative y axis. The distance computation considers depth, but the arc computation does not, resulting in an orange slice shaped volume of influence.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pBaseEntity</span></td>
    <td>the origin of the query arc. This entity is excluded from the returned results </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">radius</span></td>
    <td>The distance from the base entity to consider other entities </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">arc</span></td>
    <td>The size of the arc to search for entities in degrees </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">foundEntityList</span></td>
    <td>Returns the list of entities whose radius came within the arc volume </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the function completed successfully </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_mm_world_service_1afdd095b8120936d7048b972d537784d2"></a>
<p class="NDLRefMemberFunction">void  SetDataPath(<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span> path)</p>
<p class="NDLRefMemberDescription">Sets the path the service uses to locate the xblock file to load. </p>

<a name="class_mm_world_service_1a5b9aec3d99708d41da23f999c13a426c"></a>
<p class="NDLRefMemberFunction">void  SetBlockFile(<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span> blockFile)</p>
<p class="NDLRefMemberDescription">Sets the filename of the xblock file to load. </p>

<a name="class_mm_world_service_1a948acf0019de79f9517aa4955642a142"></a>
<p class="NDLRefMemberFunction">virtual void  HandleAddedMessage(<br/>const <span class="NDLSystemFont"><a href="../egf/egf__EntityChangeMessage.htm">egf::EntityChangeMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_mm_world_service_1a5b7140d6a282c4afab0a52df15b94fc8"></a>
<p class="NDLRefMemberFunction">virtual void  HandleRemovedMessage(<br/>const <span class="NDLSystemFont"><a href="../egf/egf__EntityChangeMessage.htm">egf::EntityChangeMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_mm_world_service_1a7c338ea6eb202e166795633550b9ca65"></a>
<p class="NDLRefMemberFunction">void  HandleWorldLoadedMessage(<br/>const <span class="NDLSystemFont"><a href="../egf/egf__EntityLoadResult.htm">egf::EntityLoadResult</a></span>* pWorldMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_mm_world_service_1a15f0a51ba740560dbea7d3fbec5511bc"></a>
<p class="NDLRefMemberFunction">void  HandleSchedulerClearedMessage(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__IMessage.htm">efd::IMessage</a></span>* pWorldClearedMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_mm_world_service_1ab47ec01463585f3f2cfdf5822dee3b2b"></a>
<p class="NDLRefMemberFunction">void  HandleNetServiceConnectionEstablished(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__StreamMessage.htm">efd::StreamMessage</a></span>* pNetMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_mm_world_service_1aaf18bd8af1dd6d090c02d9ed16afb110"></a>
<p class="NDLRefMemberFunction">void  HandleAssetLoadResponse(<br/>const <span class="NDLSystemFont"><a href="../egf/egf__EntityFactoryResponse.htm">egf::EntityFactoryResponse</a></span>* pResponse, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberFunction"></p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiSceneGraphUpdateSettings</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiSceneGraphUpdateSettings</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiRefObject.htm">NiRefObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiSceneGraphUpdateSettings.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_scene_graph_update_settings.gif" alt="Inheritance graph for NiSceneGraphUpdateSettings"/>
  <p class="FigureCaption">Inheritance graph for NiSceneGraphUpdateSettings</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class is used to store <span class="NDLSystemFont"><a href="NiSceneGraphUpdate.htm">NiSceneGraphUpdate</a></span> config settings and send the settings from the editor to the viewer. </p>
<p class="NDLNormal">The settings in this class are used to control the way the viewer handles starting, restarting, and stopping animations in the scene graph. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>
<a name="class_ni_scene_graph_update_settings_1ac1c0982b70226bf45a3e5aa94f0be998"></a>
<p class=NDLRefHead2>NiSceneGraphUpdateSettings::PlaybackMode</p>


<p class="NDLRefMemberDescription">This enum is used to map to values in the Maya UI. </p>

<p class="NDLRefMemberDetailedDescription">Update NiMayaParticleCommand::GetViewerOptionsFromMaya() if this data type is changed. </p>

<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">SGU_PLAYBACK_ONCE</span></td>
    <td>Play animations once. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">SGU_PLAYBACK_LOOP</span></td>
    <td>Loop animations continuously. </td>
</tr>

  </tbody>
</table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_scene_graph_update_settings_1a99d47ce5ea85b0a251149599c682dbf8"></a>
<p class="NDLRefMemberFunction">float  GetPlaybackStartTimeInSec() const</p>
<p class="NDLRefMemberDetailedDescription">Start time of the playback timeline </p>

<a name="class_ni_scene_graph_update_settings_1a07f3cfb6d39ddcb2a45ff4bd7e50de49"></a>
<p class="NDLRefMemberFunction">void  SetPlaybackStartTimeInSec(float fStartTime)</p>
<p class="NDLRefMemberDetailedDescription">Start time of the playback timeline </p>

<a name="class_ni_scene_graph_update_settings_1a9dd1e4445d90806be718ae5b32fb4e5d"></a>
<p class="NDLRefMemberFunction">float  GetPlaybackStopTimeInSec() const</p>
<p class="NDLRefMemberDetailedDescription">Stop time of the playback timeline </p>

<a name="class_ni_scene_graph_update_settings_1a081cdab12ef79269e4b431da137cf26f"></a>
<p class="NDLRefMemberFunction">void  SetPlaybackStopTimeInSec(float fStopTime)</p>
<p class="NDLRefMemberDetailedDescription">Start time of the playback timeline </p>

<a name="class_ni_scene_graph_update_settings_1a402836b5de3bf118f3ab91948ee48158"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiSceneGraphUpdateSettings.htm#class_ni_scene_graph_update_settings_1ac1c0982b70226bf45a3e5aa94f0be998">PlaybackMode</a></span>  GetPlaybackMode() const</p>
<p class="NDLRefMemberDetailedDescription">Controls whether animations loop or play once </p>

<a name="class_ni_scene_graph_update_settings_1a9985b654f727f3f54223e30b26ffbf68"></a>
<p class="NDLRefMemberFunction">void  SetPlaybackMode(<span class="NDLSystemFont"><a href="NiSceneGraphUpdateSettings.htm#class_ni_scene_graph_update_settings_1ac1c0982b70226bf45a3e5aa94f0be998">PlaybackMode</a></span> ePlaybackMode)</p>
<p class="NDLRefMemberDetailedDescription">Start time of the playback timeline </p>

<a name="class_ni_scene_graph_update_settings_1adec8d4b8d45603feab0c71317cfd8b88"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetRestartPlaybackAfterEdit() const</p>
<p class="NDLRefMemberDetailedDescription">Restart animations after any change is made on the editor </p>

<a name="class_ni_scene_graph_update_settings_1ae5df1e32b4c4fbd48cca6025b0844017"></a>
<p class="NDLRefMemberFunction">void  SetRestartPlaybackAfterEdit(<span class="NDLSystemFont">bool</span> bEnabled)</p>
<p class="NDLRefMemberDetailedDescription">Start time of the playback timeline </p>

<a name="class_ni_scene_graph_update_settings_1ad1d8b8ff12ae3e649f40efbf4d5cc64d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetSimulatePastEndTime() const</p>
<p class="NDLRefMemberDetailedDescription">Continue simulating particles past the end time (when playing animations once) </p>

<a name="class_ni_scene_graph_update_settings_1a53109caa60304f74edb0187f4a5d8ad6"></a>
<p class="NDLRefMemberFunction">void  SetSimulatePastEndTime(<span class="NDLSystemFont">bool</span> bEnabled)</p>
<p class="NDLRefMemberDetailedDescription">Start time of the playback timeline </p>

<a name="class_ni_scene_graph_update_settings_1a0917790a57a85bb66ad9ab560c612fc2"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetRunUpParticlesAfterEdit() const</p>
<p class="NDLRefMemberDetailedDescription">Simulate particles after edit to create the appearance of continuous particle streams </p>

<a name="class_ni_scene_graph_update_settings_1abb060551d730886dff4575dd7b1acb3c"></a>
<p class="NDLRefMemberFunction">void  SetRunUpParticlesAfterEdit(<span class="NDLSystemFont">bool</span> bEnabled)</p>
<p class="NDLRefMemberDetailedDescription">Start time of the playback timeline </p>

<a name="class_ni_scene_graph_update_settings_1a73ea5890d38f487d9b7caade1897ae74"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetAddDefaultLights() const</p>
<p class="NDLRefMemberDetailedDescription">Insert default lights into the scene on the viewer </p>

<a name="class_ni_scene_graph_update_settings_1acbd492f96fc62dfbf586a485093114ff"></a>
<p class="NDLRefMemberFunction">void  SetAddDefaultLights(<span class="NDLSystemFont">bool</span> bEnabled)</p>
<p class="NDLRefMemberDetailedDescription">Start time of the playback timeline </p>

<a name="class_ni_scene_graph_update_settings_1a0efe9c07e352262535107446915aa470"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetViewerHideUI() const</p>
<p class="NDLRefMemberDetailedDescription">Hide viewer UI </p>

<a name="class_ni_scene_graph_update_settings_1a5980ddc0ff6641e11e40f24838324b2c"></a>
<p class="NDLRefMemberFunction">void  SetViewerHideUI(<span class="NDLSystemFont">bool</span> bEnabled)</p>
<p class="NDLRefMemberDetailedDescription">Start time of the playback timeline </p>

<a name="class_ni_scene_graph_update_settings_1a882e78b05d721dc642573414eb51a9a5"></a>
<p class="NDLRefMemberFunction">NiSceneGraphUpdateSettings()</p>
<p class="NDLRefMemberDescription">Initialize object. </p>

<a name="class_ni_scene_graph_update_settings_1a1e2dc65d88794e67ad8f034dfc49958c"></a>
<p class="NDLRefMemberFunction">virtual ~NiSceneGraphUpdateSettings()</p>
<p class="NDLRefMemberDescription">Destroy object. </p>

<a name="class_ni_scene_graph_update_settings_1a1e2d0c959478d70e6a9ef117a51f20a5"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsPlaybackStopTimeValid()</p>
<p class="NDLRefMemberDescription">Is start time less than stop and is stop time greater than 0? </p>

<a name="class_ni_scene_graph_update_settings_1a76beddf0f4cec17c895ce0a8b59a1538"></a>
<p class="NDLRefMemberFunction">void  Load(<br/>const <span class="NDLSystemFont">NiUInt32</span> uiBufferSize, <br/>const char* pcBuffer)</p>
<p class="NDLRefMemberDescription">Unserialize object from buffer. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiBufferSize</span></td>
    <td>Size in bytes </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pcBuffer</span></td>
    <td>Pointer to buffer containing serialized object </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_scene_graph_update_settings_1acfdad4747db9f28ce10f8b39a71aff09"></a>
<p class="NDLRefMemberFunction">void  Save(<br/><span class="NDLSystemFont">NiUInt32</span>& uiBufferSize, <br/>char *& pcBuffer)</p>
<p class="NDLRefMemberDescription">Serialize object to array of bytes. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiBufferSize</span></td>
    <td>Returns size of buffer in bytes </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pcBuffer</span></td>
    <td>Returns allocated buffer containing object. It is the caller's responsibility to free this buffer using <span class="NDLSystemFont">NiFree()</span>. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

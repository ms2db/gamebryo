<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Shared Data</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Shared Data</h1>

<p>With the plug-in architecture, it is necessary for plug-ins to
share a single copy of the current data. The framework needs some
system for maintaining and referencing this data blindly, since
there is no way for the framework to know what the data is. For
example, customers could create their own custom data for their
plug-ins to handle.</p>

<p>To achieve this goal of data sharing, plug-ins use real-time
typing information (RTTI) to uniquely identify a shared data
object and add it to a singleton shared data list owned by the
framework. Plug-ins are able to gain access to a shared data
object by querying the shared data list using the RTTI of the
desired shared data object. This approach is the primary method
of sharing and passing data between plug-ins.</p>

<p>This technique of shared data is used extensively to
communicate between the Max and Maya exporters and the other
Gamebryo plug-ins. To best understand the uses of shared data, it
would be useful to describe some of the standard shared data
examples already found in Gamebryo:</p>

<ul>
    <li><span class=
    "NDLSystemFont">NiSceneGraphSharedData</span>: Holds the
    scene graph the plug-ins will use.</li>

    <li><span class="NDLSystemFont">NiTimerSharedData</span>:
    Holds timing information about the scene graph.</li>

    <li><span class=
    "NDLSystemFont">NiExportOptionsSharedData</span>: Holds
    viewer information.</li>

    <li><span class=
    "NDLSystemFont">NiExtraObjectsSharedData</span>: Holds a
    collection of NiObjects that live outside the scene
    graph.</li>
</ul>

<p>When a plug-in executes, it is passed the current shared data
list. The plug-in will use shared data objects in the list to
perform its task. No references to shared data are maintained
between executions of the plug-in.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

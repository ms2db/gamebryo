<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPluginInfo</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiPluginInfo</p>

<p class="NDLRefParentage">: public <a href="../../Reference/NiMain/NiRefObject.htm">NiRefObject</a></p>

<p class="NDLRefHeaderFile">&lt;NiPluginInfo.h&gt;</p>

<div class="NDLFigureContainer">
    <img src="./images/image23.gif" width="380" height="80" />
    <p class="NDLFigureCaption">Inheritance graph for NiPluginInfo</p>
</div>

<p class="NDLRefHead1">Description</p>

<p>This class is the container for all script-relevant information about 
 a specific plug-in. It contains all the possible parameters for 
 the plug-in as well as specifying which plug-in is to be used.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">const&nbsp;NiString&amp; GetName() const</p>

<p class="NDLRefMemberFunction">void SetName(const&nbsp;char*&nbsp;pcPluginName)</p>

<p class="NDLRefMemberDescription">Get and set the name of the plug-in to 
 which this <span class="NDLSystemFont">NiPluginInfo</span> refers.</p>

<p class="NDLRefMemberFunction">const&nbsp;NiString&amp; GetVersion() const</p>

<p class="NDLRefMemberFunction">void SetVersion(const&nbsp;char*&nbsp;pcPluginVersion)</p>

<p class="NDLRefMemberDescription">Get and set the version of the plug-in 
 to which this <span class="NDLSystemFont">NiPluginInfo</span> 
 refers.</p>

<p class="NDLRefMemberFunction">const&nbsp;NiString&amp; GetType() const</p>

<p class="NDLRefMemberFunction">void SetType(const&nbsp;char*&nbsp;pcPluginType)</p>

<p class="NDLRefMemberDescription">Get and set the type of the plug-in to 
 which this <span class="NDLSystemFont">NiPluginInfo</span> 
 refers.</p>

<p class="NDLRefMemberFunction">const&nbsp;NiString&amp; GetClassName() const</p>

<p class="NDLRefMemberFunction">void SetClassName(const&nbsp;char*&nbsp;pcClassName)</p>

<p class="NDLRefMemberDescription">Get and set the class name of the plug-in 
 to which this <span class="NDLSystemFont">NiPluginInfo</span> 
 refers.</p>

<p class="NDLRefMemberFunction">unsigned&nbsp;int GetParameterCount() const</p>

<p class="NDLRefMemberDescription">Get the parameter count of this <span 
 class="NDLSystemFont">NiPluginInfo</span>.</p>

<p class="NDLRefMemberFunction">unsigned&nbsp;int GetParameterIndex(const&nbsp;char*&nbsp;pcKey, 
 unsigned&nbsp;int&nbsp;uiStartIdx&nbsp;=&nbsp;0) const</p>

<p class="NDLRefMemberDescription">Get the index of the <span class="NDLSystemFont">NiParameterInfo</span> object 
 using the input key in the internal array from the starting index in the 
 array.</p>

<p class="NDLRefMemberFunction">NiParameterInfo* GetParameterAt(unsigned&nbsp;int&nbsp;ui) 
 const</p>

<p class="NDLRefMemberDescription">Get the <span class="NDLSystemFont">NiParameterInfo</span> at the 
 specified index in the internal array.</p>

<p class="NDLRefMemberFunction">NiString GetValue(const&nbsp;char*&nbsp;pcKey, 
 unsigned&nbsp;int&nbsp;uiStartIdx&nbsp;=&nbsp;0) const</p>

<p class="NDLRefMemberFunction">bool GetBool(const&nbsp;char*&nbsp;pcKey, 
 unsigned&nbsp;int&nbsp;uiStartIdx&nbsp;=&nbsp;0) const</p>

<p class="NDLRefMemberFunction">int GetInt(const&nbsp;char*&nbsp;pcKey, unsigned&nbsp;int&nbsp;uiStartIdx&nbsp;=&nbsp;0) 
 const</p>

<p class="NDLRefMemberFunction">float GetFloat(const&nbsp;char*&nbsp;pcKey, 
 unsigned&nbsp;int&nbsp;uiStartIdx&nbsp;=&nbsp;0) const</p>

<p class="NDLRefMemberFunction">bool SetValue(const&nbsp;char*&nbsp;pcKey, 
 const&nbsp;char*&nbsp;pcValue, unsigned&nbsp;int&nbsp;uiStartIdx&nbsp;=&nbsp;0)</p>

<p class="NDLRefMemberFunction">bool SetBool(const&nbsp;char*&nbsp;pcKey, 
 bool&nbsp;bValue, unsigned&nbsp;int&nbsp;uiStartIdx&nbsp;=&nbsp;0)</p>

<p class="NDLRefMemberFunction">bool SetInt(const&nbsp;char*&nbsp;pcKey, 
 int&nbsp;iValue, unsigned&nbsp;int&nbsp;uiStartIdx&nbsp;=&nbsp;0)</p>

<p class="NDLRefMemberFunction">bool SetFloat(const&nbsp;char*&nbsp;pcKey, 
 float&nbsp;fValue, unsigned&nbsp;int&nbsp;uiStartIdx&nbsp;=&nbsp;0)</p>

<p class="NDLRefMemberDescription">Get and set the value of a given key in 
 the internal <span class="NDLSystemFont">NiParameterInfo</span> array.</p>

<p class="NDLRefMemberFunction">void AddParameter(NiParameterInfo*&nbsp;pkParam)</p>

<p class="NDLRefMemberFunction">void AddParameter(const&nbsp;char*&nbsp;pcKey, 
 const&nbsp;char*&nbsp;pcValue)</p>

<p class="NDLRefMemberDescription">Add a parameter to the internal parameter 
 array.</p>

<p class="NDLRefMemberFunction">void RemoveParameterAt(unsigned&nbsp;int&nbsp;ui)</p>

<p class="NDLRefMemberDescription">Remove a parameter at the specified index 
 from the internal parameter array.</p>

<p class="NDLRefMemberFunction">void RemoveParameter(const&nbsp;char*&nbsp;pcKey)</p>

<p class="NDLRefMemberDescription">Remove the first parameter in the internal 
 array that uses the specified key.</p>

<p class="NDLRefMemberFunction">void RemoveAllParameters()</p>

<p class="NDLRefMemberDescription">Empty the internal parameter array.</p>

<p class="NDLRefMemberFunction">NiPluginInfo* Clone(NiPluginInfo*&nbsp;pkClone&nbsp;=&nbsp;NULL)</p>

<p class="NDLRefMemberDescription">This method duplicates the values of this 
 <span class="NDLSystemFont">NiPluginInfo</span> object onto the input clone object. If the input <span class="NDLSystemFont">NiPluginInfo</span> object 
 is <span class="NDLSystemFont">NULL</span>, then a new <span class="NDLSystemFont">NiPluginInfo</span> is created.</p>

<p class="NDLRefMemberFunction">bool Equals(NiPluginInfo*&nbsp;pkInfo)</p>

<p class="NDLRefMemberDescription">Determines whether these two <span class="NDLSystemFont">NiPluginInfo</span> objects contain exactly the same information.</p>

<p class="NDLRefMemberFunction">bool IsDirty()</p>

<p class="NDLRefMemberDescription">Determines whether this <span class="NDLSystemFont">NiPluginInfo</span> object has been altered.</p>

<p class="NDLRefMemberFunction">void MarkAsDirty(bool&nbsp;bDirty)</p>

<p class="NDLRefMemberDescription">Toggle whether or not this <span class="NDLSystemFont">NiPluginInfo</span> object has been altered.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPluginHelpers</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiPluginHelpers</p>

<p class="NDLRefHeaderFile">&lt;NiPluginHelpers.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This class contains helper functions that may be useful to
plug-ins in the system. These helper functions include functions
to bring up file dialogs and to parse directory path strings.</p>

<p class="NDLRefHead1">Static Member Functions</p>

<p class="NDLRefMemberFunction">static bool
DoFileDialog(NiPlugin* pkPlugin, NiString&amp; strDirectory,
NiString&amp; strFile, NiString&amp; strExtension, NiWindowRef
hOwner = NULL, const char* pcStartLocation = NULL)</p>

<p class="NDLRefMemberDescription">This function brings up the
standard Windows file selection dialog box. It uses <span class=
"NDLSystemFont">pkPlugin</span> to determine whether the dialog
box is an import or an export dialog box. <span class=
"NDLSystemFont">strDirectory</span>, <span class=
"NDLSystemFont">strFile</span>, and <span class=
"NDLSystemFont">strExtension</span> are filled with the path
information for the selected file. An optional window owner may
be specified with <span class="NDLSystemFont">hOwner</span>,
along with an optional start location for the dialog box with
<span class="NDLSystemFont">pcStartLocation</span>.</p>

<p class="NDLRefMemberFunction">static bool
DoImportFileDialog(NiString&amp; strDirectory, NiString&amp;
strFile, NiString&amp; strExtension, NiWindowRef hOwner = NULL,
const char* pcStartLocation = NULL)</p>

<p class="NDLRefMemberDescription">This function brings up the
standard Windows file selection dialog box for use when importing
files. <span class="NDLSystemFont">strDirectory</span>,
<span class="NDLSystemFont">strFile</span>, and <span class=
"NDLSystemFont">strExtension</span> are filled with the path
information for the selected file. An optional window owner may
be specified with <span class="NDLSystemFont">hOwner</span>,
along with an optional start location for the dialog box with
<span class="NDLSystemFont">pcStartLocation</span>.</p>

<p class="NDLRefMemberFunction">static bool
DoExportFileDialog(NiString&amp; strDirectory, NiString&amp;
strFile, NiString&amp; strExtension, NiWindowRef hOwner = NULL,
const char* pcStartLocation = NULL)</p>

<p class="NDLRefMemberDescription">This function brings up the
standard Windows file selection dialog box for use when exporting
files. <span class="NDLSystemFont">strDirectory</span>,
<span class="NDLSystemFont">strFile</span>, and <span class=
"NDLSystemFont">strExtension</span> are filled with the path
information for the selected file. An optional window owner may
be specified with <span class="NDLSystemFont">hOwner</span>,
along with an optional start location for the dialog box with
<span class="NDLSystemFont">pcStartLocation</span>.</p>

<p class="NDLRefMemberFunction">static NiString ImportAndExecute(
NiImportPluginInfo::ImportType eType =
NiImportPluginInfo::REPLACE, const char* pcFullPath = NULL)</p>

<p class="NDLRefMemberDescription">This function displays an
import file dialog with file types listed for all available
import plug-ins. It then executes a script to import the selected
file with the appropriate import plug-in. If <span class=
"NDLSystemFont">pcFullPath</span> is provided, the file selection
dialog box is not displayed.</p>

<p class="NDLRefMemberFunction">static NiString
ExportAndExecute(const char* pcFullPath = NULL)</p>

<p class="NDLRefMemberDescription">This function displays an
export file dialog with file types listed for all available
export plug-ins. It then executes a script to export the selected
file with the appropriate export plug-in. If <span class=
"NDLSystemFont">pcFullPath</span> is provided, the file selection
dialog box is not displayed.</p>

<p class="NDLRefMemberFunction">static void
ParseFullPath(NiString strFullPath, NiString&amp; strDirectory,
NiString&amp; strFile, NiString&amp; strExtension)</p>

<p class="NDLRefMemberDescription">This function takes
<span class="NDLSystemFont">strFullPath</span> as input and
parses the path string, placing the directory (with the
terminating slash) in <span class=
"NDLSystemFont">strDirectory</span>, the file name without
extension in <span class="NDLSystemFont">strFile</span>, and the
file extension (including the period) in <span class=
"NDLSystemFont">strExtension</span>.</p>

<p class="NDLRefMemberFunction">static unsigned int
GetVersionFromString(const char* pcVersionString)</p>

<p class="NDLRefMemberDescription">This function will return an
unsigned integer that accurately represents the version string
provided. Version strings must be of the format <span class=
"NDLSystemFont">"w.x.y.z"</span>, where <span class=
"NDLSystemFont">w</span>, <span class="NDLSystemFont">x</span>,
<span class="NDLSystemFont">y</span>, and <span class=
"NDLSystemFont">z</span> are integers. A higher integer will be
returned from a higher version string, so greater than/less than
comparisons of the return value from this function are valid.</p>

<p class="NDLRefMemberFunction">static const char*
GetLastImportDir()</p>

<p class="NDLRefMemberDescription">This function returns the last
import directory chosen with an import file selection dialog. The
file selection dialog will use this path, if it exists, as a
default location in the absence of one being provided.</p>

<p class="NDLRefMemberFunction">static const char*
GetLastExportDir()</p>

<p class="NDLRefMemberDescription">This function returns the last
import directory chosen with an import file selection dialog. The
file selection dialog will use this path, if it exists, as a
default location in the absence of one being provided.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Introduction to Creating Custom Tool Plug-ins</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Introduction to Creating Custom Tool Plug-ins</h1>

<p>The <span class="NDLSystemFont">NiPluginToolkit</span> system
was designed to enable developers to create their own custom tool
plug-ins, which can be scripted and inserted into the art
pipeline with a minimum of effort. To that end, Gamebryo includes
a project called <span class=
"NDLSystemFont">SamplePluginsDLL,</span> which contains one of
each type of plug-in. These sample files are heavily commented
and are intended as a springboard for creating your own custom
tool plug-ins. You may want to modify the source code for these
projects, using it as a base to add your own custom
functionality.</p>

<p>To further assist in creating custom tool plug-ins, Gamebryo
also includes a testbed application in the Tools folder called
<span class="NDLSystemFont">ToolPluginTestbed</span>. This small
MFC application allows you to specify import and export filenames
and process, viewer, and export scripts and run those scripts
from a simple dialog box interface. This application is perfect
for debugging your own tool plug-ins and for creating custom
scripts. See <a href=
"../../Tools/Tool_Plug_in_Testbed/Introduction_to_the_Gamebryo_Tool_Plug_in_Testbed.htm">
Gamebryo Tool Plug-in Testbed</a> for more information about this
application.</p>

<p>The possibilities for custom plug-ins are endless. In addition
to writing post-processing plug-ins that verify certain things
about the art that are needed for your game, you could also
process your own custom extra data, that artists add to the scene
in the art package, to add functionality to or change the scene
graph upon export.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

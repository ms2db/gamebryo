<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiScriptInfoSet</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiScriptInfoSet</p>

<p class="NDLRefParentage">: public <a href="NiPluginInfo.htm">NiPluginInfo</a></p>

<p class="NDLRefHeaderFile">&lt;NiScriptInfoSet.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This class contains a collection of <span class="NDLSystemFont">NiScriptInfo</span> objects.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiScriptInfoSet(bool&nbsp;bIgnoreMissingPlugins&nbsp;=&nbsp;true)</p>

<p class="NDLRefMemberDescription">Default constructor. Set <span class="NDLSystemFont">bIgnoreMissingPlugins</span>
to <span class="NDLSystemFont">false</span>
to allow scripts that reference plugins that the <span class="NDLSystemFont">NiPluginManager</span> knows nothing
about.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">void
IgnorePluginClass(const&nbsp;NiRTTI*&nbsp;pkRTTI)</p>

<p class="NDLRefMemberFunction">void
IgnorePluginClass(const&nbsp;char*&nbsp;pcClassName)</p>

<p class="NDLRefMemberDescription">Add an <span class="NDLSystemFont">NiPlugin</span> class to the ignore
list. This is useful for not adding scripts using a particular class and its
derived classes to the list.</p>

<p class="NDLRefMemberFunction">void
IgnoreMissingPlugins(bool&nbsp;bIgnore&nbsp;=&nbsp;true)</p>

<p class="NDLRefMemberFunction">bool IsIgnoringMissingPlugins()</p>

<p class="NDLRefMemberDescription">Get and set the ignore missing plug-ins
functions flag.</p>

<p class="NDLRefMemberFunction">ReturnCode AddScript(NiScriptInfo*&nbsp;pkInfo,
bool&nbsp;bTemplate&nbsp;=&nbsp;false,
bool&nbsp;bVerboseErrors&nbsp;=&nbsp;true)</p>

<p class="NDLRefMemberDescription">Add a script to the set and marks whether or
not it is a template.</p>

<p class="NDLRefMemberFunction">NiScriptInfoPtr
RemoveScript(const&nbsp;char*&nbsp;pcScript)</p>

<p class="NDLRefMemberDescription">Remove the specified script from the set. It
is returned in a smart pointer and will be deleted unless it is stored in
another smart pointer.</p>

<p class="NDLRefMemberFunction">void RemoveAllScripts()</p>

<p class="NDLRefMemberDescription">Remove all scripts from this set.</p>

<p class="NDLRefMemberFunction">NiScriptInfo*
GetScript(const&nbsp;char*&nbsp;pcName)</p>

<p class="NDLRefMemberDescription">Get a script info object by name.</p>

<p class="NDLRefMemberFunction">unsigned&nbsp;int GetScriptCount()</p>

<p class="NDLRefMemberDescription">Get the total number of scripts in this set.</p>

<p class="NDLRefMemberFunction">NiScriptInfo*
GetScriptAt(unsigned&nbsp;int&nbsp;ui)</p>

<p class="NDLRefMemberDescription">Get the script at position <span class="NDLSystemFont">ui</span> in
the set.</p>

<p class="NDLRefMemberFunction">unsigned&nbsp;int
GetScriptIndex(const&nbsp;char*&nbsp;pcName)</p>

<p class="NDLRefMemberDescription">Get the index of the script with the given
name. Returns <span class="NDLSystemFont">NIPT_INVALID_INDEX</span>
if a match is not found.</p>

<p class="NDLRefMemberFunction">void Copy(NiScriptInfoSet*&nbsp;pkSet)</p>

<p class="NDLRefMemberDescription">Copy all scripts into the input set.</p>

<p class="NDLRefMemberFunction">NiScriptInfoSet* Clone()</p>

<p class="NDLRefMemberDescription">Make a deep copy of this set.</p>

<p class="NDLRefMemberFunction">bool IsTemplate(NiScriptInfo*&nbsp;pkInfo)</p>

<p class="NDLRefMemberDescription">Returns <span class="NDLSystemFont">true</span> if the input script is a
template from a file and <span class="NDLSystemFont">false</span> if it was created in memory.</p>

<p class="NDLRefMemberFunction">void SetTemplate(NiScriptInfo*&nbsp;pkInfo,
bool&nbsp;bTemplate)</p>

<p class="NDLRefMemberDescription">Sets the template flag for the input script.</p>

<p class="NDLRefMemberFunction">NiScriptInfoPtr
ReplaceScript(NiScriptInfo*&nbsp;pkNewScript)</p>

<p class="NDLRefMemberDescription">This method uses the name of the input script
to locate the script it needs to replace. If a script of the same name is not
present, it adds to the end of this set. Otherwise, it copies over the script
in the set.</p>

<p class="NDLRefMemberFunction">bool IgnoreScript(NiScriptInfo*&nbsp;pkInfo)</p>

<p class="NDLRefMemberDescription">Determines whether or not this script contains
plug-ins that force it to be ignored.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

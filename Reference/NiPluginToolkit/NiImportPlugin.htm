<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiImportPlugin</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiImportPlugin</p>

<p class="NDLRefParentage">: public <a href="NiPlugin.htm">NiPlugin</a></p>

<p class="NDLRefHeaderFile">&lt;NiImportPlugin.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This class is an extension of <span class="NDLSystemFont">NiPlugin</span>. Is is designed to support importing files.</p>

<p class="NDLRefHead1">Constructions</p>

<p class="NDLRefMemberFunction">NiImportPlugin(const char* pcName,
const char* pcVersion, const char* pcShortDescription,
const char* pcLongDescription)</p>

<p class="NDLRefMemberDescription">The constructor takes the same inputs as the <span class="NDLSystemFont">NiPlugin</span>
constructor: the display name of the
plug-in, its version, a short description, and a long description.</p>

<p class="NDLRefHead1">Overridden Virtual Functions</p>

<p class="NDLRefMemberFunction">virtual bool
CanExecute(NiPluginInfo* pkInfo)</p>

<p class="NDLRefMemberDescription">This function is overridden from <span class="NDLSystemFont">NiPlugin</span>
to check if <span class="NDLSystemFont">pkInfo</span>
is an <span class="NDLSystemFont">NiImportPluginInfo</span>
object. If it is, the function returns
the result of <span class="NDLSystemFont">CanImport</span>. Otherwise, the function returns <span class="NDLSystemFont">false</span>.</p>

<p class="NDLRefMemberFunction">virtual NiExecutionResultPtr
Execute(const NiPluginInfo* pkInfo)</p>

<p class="NDLRefMemberDescription">This function is overridden from <span class="NDLSystemFont">NiPlugin</span>
to check if <span class="NDLSystemFont">pkInfo</span>
is an <span class="NDLSystemFont">NiImportPluginInfo</span>
object. If it is, the function returns the result of <span class="NDLSystemFont">Import</span>. Otherwise, the function
returns a <span class="NDLSystemFont">NiExecutionResult</span>
indicating failure.</p>

<p class="NDLRefHead1">Pure Virtual Functions</p>

<p>The following virtual functions must be overridden in any <span class="NDLSystemFont">NiImportPlugin</span>-derived
class:</p>

<p class="NDLRefMemberFunction">virtual bool
CanImport(NiImportPluginInfo* pkInfo) = 0</p>

<p class="NDLRefMemberDescription">This function takes an <span class="NDLSystemFont">NiImportPluginInfo</span>
script and returns whether or not the plug-in can execute that script.</p>

<p class="NDLRefMemberFunction">virtual NiExecutionResultPtr Import(
const NiImportPluginInfo* pkInfo) = 0</p>

<p class="NDLRefMemberDescription">This function executes the provided <span class="NDLSystemFont">NiImportPluginInfo</span>
script and returns a <span class="NDLSystemFont">NiExecutionResult</span>
indicating success or failure.</p>

<p class="NDLRefMemberFunction">virtual const char*
GetFileDescriptorString() = 0</p>

<p class="NDLRefMemberDescription">This function returns a string describing the
file type that the plug-in supports (for example, &quot;<span class="NDLSystemFont">Gamebryo Files (*.nif)</span>&quot;).</p>

<p class="NDLRefMemberFunction">virtual const char* GetFileTypeString() = 0</p>

<p class="NDLRefMemberDescription">This function returns a string indicating the
file extension that the plug-in supports (for example, &quot;<span class="NDLSystemFont">*.nif</span>&quot;).</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiFramework</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type=
"text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiFramework</p>

<p class="NDLRefParentage">: public <a href=
"../../Reference/NiSystem/NiMemObject.htm">NiMemObject</a></p>

<p class="NDLRefHeaderFile">&lt;NiFramework.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiFramework</span> is the scaffolding of the
tools plug-in framework.</p>

<p class="NDLRefHead1">Constructors</p>

<p>There are no public constructors for this class to ensure that one and only
one instance exists at any given time. Use the static functions <span class=
"NDLSystemFont">InitFramework</span>, <span class=
"NDLSystemFont">ShutdownFramework</span>, and <span class=
"NDLSystemFont">GetFramework</span> to access the single <span class=
"NDLSystemFont">NiFramework</span> instance.</p>

<p class="NDLRefHead1">Static Member Functions</p>

<p class="NDLRefMemberFunction">void InitFramework(const char* pcAppPath, const
char* pcAppName, const char* pcAppVersion)</p>

<p class="NDLRefMemberDescription">Creates the framework. This constructor is
called by the host application prior to loading any of the plug-ins.</p>

<p class="NDLRefMemberFunction">NiFramework&amp; GetFramework()</p>

<p class="NDLRefMemberDescription">Retrieves the framework.</p>

<p class="NDLRefMemberFunction">void ShutdownFramework()</p>

<p class="NDLRefMemberDescription">Destroys the framework. This is called prior
to the host application exiting.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">const NiString&amp; GetAppPath()</p>

<p class="NDLRefMemberDescription">Returns the application's active directory
for the framework system.</p>

<p class="NDLRefMemberFunction">const NiString&amp; GetAppName()</p>

<p class="NDLRefMemberDescription">Returns the application's name. This
function can be used by plug-ins in their <span class=
"NDLSystemFont">CanExecute</span> call to ensure compatibility.</p>

<p class="NDLRefMemberFunction">const NiString&amp; GetAppVersion()</p>

<p class="NDLRefMemberDescription">Returns the application's version number.
This function can be used by plug-ins in their <span class=
"NDLSystemFont">CanExecute</span> call to ensure compatibility.</p>

<p class="NDLRefMemberFunction">const char* GetNiVersion()</p>

<p class="NDLRefMemberDescription">Returns the version of the Gamebryo class
libraries used by the host application.</p>

<p class="NDLRefMemberFunction">NiSharedDataList&amp; GetSharedDataList()
const</p>

<p class="NDLRefMemberDescription">Returns a reference to the shared data
list</p>

<p class="NDLRefMemberFunction">NiBatchExecutionResultPtr
ExecuteScript(NiScriptInfo* pkScript)</p>

<p class="NDLRefMemberDescription">Executes plug-ins using the specified
script. This function simply calls the <span class=
"NDLSystemFont">NiPluginManager</span>'s <span class=
"NDLSystemFont">ExecuteScript</span> method.</p>

<p class="NDLRefHead1">Notes</p>

<p class="NDLRefHead2">NiPlugins</p>

<p>The framework is designed to provide information about the host application.
The methods <span class="NDLSystemFont">GetAppPath</span>, <span class=
"NDLSystemFont">GetAppName</span>, <span class=
"NDLSystemFont">GetNiVersion</span>, and <span class=
"NDLSystemFont">GetAppVersion</span> may be used to selectively execute a
plug-in.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

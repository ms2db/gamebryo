<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiDialog</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiDialog</p>

<p class="NDLRefParentage">: public <a href="../../Reference/NiMain/NiRefObject.htm">NiRefObject</a></p>

<p class="NDLRefHeaderFile">&lt;NiDialog.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This class is a simple base class for writing Win32 
 based dialogs. It is modeled very closely to the corresponding MFC CDialog 
 class, but with considerably less functionality. It is merely meant as 
 a think Object Oriented wrapper around the base Win32 API calls.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">NiDialog(WORD wResourceId, NiModuleRef hInstance, NiWindowRef hWndParent)</p>

<p class="NDLRefMemberDescription">This is the standard constructor for an 
 NiDialog. The first parameter is the resource ID for the dialog. The second 
 parameter is the module from which that resource ID is to be loaded. For 
 instance, if you are loading a resource from a DLL, then the HINSTANCE 
 passed into the DLL main of that DLL should be the module reference. If 
 you are loading from the resources in your executable, then the HINSTANCE 
 for your application should be the module reference. The final parameter, 
 hWndParent, is the HANDLE to the parent window. The final parameter is 
 allowed to be NULL.</p>

<p class="NDLRefMemberFunction">virtual int DoModal()</p>

<p class="NDLRefMemberDescription">This method creates and shows the NiDialog 
 as a modal dialog. The return value is the value returned by the user's 
 interaction with the dialog. </p>

<p class="NDLRefMemberFunction">void Create()</p>

<p class="NDLRefMemberDescription">This method creates a non-modal dialog 
 from the NiDialog. The window is then shown.</p>

<p class="NDLRefMemberFunction">void Destroy()</p>

<p class="NDLRefMemberDescription">This method will hide the current non-modal 
 dialog and destroy it.</p>

<p class="NDLRefMemberFunction">NiWindowRef GetWindowRef()</p>

<p class="NDLRefMemberDescription">This method returns the HWND of the created 
 dialog.</p>

<p class="NDLRefMemberFunction">virtual void InitDialog()</p>

<p class="NDLRefMemberDescription">This method is called shortly after the 
 dialog is created. It is the handler for the windows WM_INITDIALOG message.</p>

<p class="NDLRefMemberFunction">virtual BOOL OnCommand(int iWParamLow, int 
 iWParamHigh, long lParam)</p>

<p class="NDLRefMemberDescription">This is the WM_COMMAND message handler. 
 Derived classes will likely want to overload this method.</p>

<p class="NDLRefMemberFunction">virtual BOOL OnMessage(unsigned int uiMessage, 
 int iWParamLow, int iWParamHigh, long lParam)</p>

<p class="NDLRefMemberDescription">This is the generic message handler. Derived 
 classes will likely want to overload this method. This method is called 
 by the dialog's window proc when the message is not WM_CLOSE, WM_INITDIALOG, 
 WM_COMMAND, or WM_DESTROY.</p>

<p class="NDLRefMemberFunction">virtual void OnClose()</p>

<p class="NDLRefMemberDescription">This method is called when a WM_CLOSE 
 message is dispatched to the dialog.</p>

<p class="NDLRefMemberFunction">virtual void OnDestroy()</p>

<p class="NDLRefMemberDescription">This method is called when a WM_DESTROY 
 message is dispatched to the dialog.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

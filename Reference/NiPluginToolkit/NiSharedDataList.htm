<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiSharedDataList</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiSharedDataList</p>

<p class="NDLRefParentage">: public <a href=
"../../Reference/NiSystem/NiMemObject.htm"><span>NiMemObject</span></a></p>

<p class="NDLRefHeaderFile">&lt;NiSharedDataList.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This class manages the currently available shared data.</p>

<p class="NDLRefHead1">Static Member Functions</p>

<p class="NDLRefMemberFunction">Static void CreateInstance()</p>

<p class="NDLRefMemberDescription">Public singleton creator.</p>

<p class="NDLRefMemberFunction">Static void DestroyInstance()</p>

<p class="NDLRefMemberDescription">Public singleton
destructor.</p>

<p class="NDLRefMemberFunction">static NiSharedDataList*
GetInstance()</p>

<p class="NDLRefMemberDescription">Public singleton accessor.</p>

<p class="NDLRefMemberFunction">static void LockSharedData()</p>

<p class="NDLRefMemberDescription">Static helper function that
locks the shared data list. Asserts if the shared data list does
not exist.</p>

<p class="NDLRefMemberFunction">static void
UnlockSharedData()</p>

<p class="NDLRefMemberDescription">Locks shared data to provide
thread-safe access. All threads spawned from plug-ins must call
this before accessing shared data.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">void Lock()</p>

<p class="NDLRefMemberDescription">Locks shared data to provide
thread-safe access. All threads spawned from plug-ins must call
this before accessing shared data.</p>

<p class="NDLRefMemberFunction">void Unlock()</p>

<p class="NDLRefMemberDescription">Unlocks shared data to provide
thread-safe access. All threads spawned from plug-ins must call
this when done accessing shared data.</p>

<p class="NDLRefMemberFunction">ErrorCode Insert(NiSharedData*
pkNewData)</p>

<p class="NDLRefMemberDescription">Inserts a shared data object
into the list<b>.</b></p>

<p class="NDLRefMemberFunction">ErrorCode Delete(NiSharedDataType
pkType)</p>

<p class="NDLRefMemberDescription">Removes the shared data object
specified by the given type from the list.</p>

<p class="NDLRefMemberFunction">ErrorCode DeleteAll()</p>

<p class="NDLRefMemberDescription">Removes all the shared data
objects from the list.</p>

<p class="NDLRefMemberFunction">NiSharedData*
Get(NiSharedDataType pkType)</p>

<p class="NDLRefMemberDescription">Gets the shared data object
specified by the RTTI object from the list. If the returned value
is NULL, call GetLastError to find out what went wrong.</p>

<p class="NDLRefMemberFunction">ErrorCode GetLastError()</p>

<p class="NDLRefMemberDescription">Returns the last error code
generated by this object.</p>

<p class="NDLRefMemberFunction">unsigned int
GetSharedDataCount()</p>

<p class="NDLRefMemberDescription">Get the total number of shared
data pieces</p>

<p class="NDLRefMemberFunction">NiSharedData*
GetSharedDataAt(unsigned int uiWhichData)</p>

<p class="NDLRefMemberDescription">Get the piece of shared data
at a particular location</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

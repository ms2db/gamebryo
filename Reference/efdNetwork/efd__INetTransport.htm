<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::INetTransport</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::INetTransport</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__MemObject.htm">efd::MemObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;INetTransport.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_i_net_transport.gif" alt="Inheritance graph for efd::INetTransport"/>
  <p class="FigureCaption">Inheritance graph for efd::INetTransport</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Interface class for the network transport used by <span class="NDLSystemFont"><a href="efd__NetLib.htm">NetLib</a></span>. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_i_net_transport_1ab2eef2cbbe39eefa083d36c00700b520"></a>
<p class="NDLRefMemberFunction">virtual ~INetTransport()</p>
<p class="NDLRefMemberDetailedDescription">Virtual destructor </p>

<a name="classefd_1_1_i_net_transport_1a7ad82910811c748a3d6bba31f5c0d296"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  Send(<span class="NDLSystemFont"><a href="../efd/efd__EnvelopeMessage.htm">EnvelopeMessage</a></span>* pMessage) = 0</p>
<p class="NDLRefMemberDescription">Accept a message for sending to our connection. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The outgoing message </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>: True if the message was sent </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_transport_1af8b05a1b2c3e4d67099f83ddb4015c55"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  Send(<br/><span class="NDLSystemFont"><a href="../efd/efd__EnvelopeMessage.htm">EnvelopeMessage</a></span>* pMessage, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__ConnectionID.htm">ConnectionID</a></span>& cid) = 0</p>
<p class="NDLRefMemberDescription">Accept a message for sending to a specific connection. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The envelope message to send. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">cid</span></td>
    <td>the id of the connection to send the message on </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>: True if the message was sent </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_transport_1a0e70cc0c95df02cccec8ef87b9b57675"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../efd/efd__ConnectionID.htm">efd::ConnectionID</a></span>  Listen(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a2ed07576a2c351e88e18847f247b5705">efd::UInt16</a></span> portListen, <br/><span class="NDLSystemFont"><a href="../efd/efd__INetCallback.htm">INetCallback</a></span>* pCallback) = 0</p>
<p class="NDLRefMemberDescription">Creates a socket and starts listening on the specified port. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">portListen</span></td>
    <td>The port to listen of incoming connections on </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pCallback</span></td>
    <td>incoming connections will send notifications to this callback </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>: returns true if the connection succeeded. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_transport_1a953d67d3dfc980c4cd32523fe71ed8e6"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../efd/efd__ConnectionID.htm">ConnectionID</a></span>  Connect(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& strServerAddress, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a2ed07576a2c351e88e18847f247b5705">efd::UInt16</a></span> portServer, <br/><span class="NDLSystemFont"><a href="../efd/efd__INetCallback.htm">INetCallback</a></span>* pCallback) = 0</p>
<p class="NDLRefMemberDescription">Creates a new connection outgoing connection and listens for incoming messages. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">strServerAddress</span></td>
    <td>The server address to connect to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">portServer</span></td>
    <td>The server port to connect to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pCallback</span></td>
    <td>data that arrives on this connection will be sent to this callback</td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>NetTransportTCPData* : The transport data for the connection </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_transport_1a8e969cfe8339b45f50065aa612331a0d"></a>
<p class="NDLRefMemberFunction">virtual void  CloseConnection(const <span class="NDLSystemFont"><a href="../efd/efd__ConnectionID.htm">ConnectionID</a></span>& cid) = 0</p>
<p class="NDLRefMemberDescription">Close a connection by ID. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">cid</span></td>
    <td><span class="NDLSystemFont"><a href="../efd/efd__ConnectionID.htm">ConnectionID</a></span> of the connection to close. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_transport_1a55b013c738e4497a18574815ca142656"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="efd__IConnection.htm">IConnection</a></span>*  GetTransportData(const <span class="NDLSystemFont"><a href="../efd/efd__ConnectionID.htm">ConnectionID</a></span>& cid) = 0</p>
<p class="NDLRefMemberDescription">Get transport data by ID. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">cid</span></td>
    <td><span class="NDLSystemFont"><a href="../efd/efd__ConnectionID.htm">ConnectionID</a></span> of the transport data (connection) get </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_transport_1a7cb7352d851c266881f0fb5ffeeb26c7"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  Send(<br/><span class="NDLSystemFont"><a href="../efd/efd__EnvelopeMessage.htm">EnvelopeMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__RefCountedMemObj.htm">ConnectionIDSet</a></span>* pListenerSet) = 0</p>
<p class="NDLRefMemberDescription">Accept a message for sending to our connection. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The outgoing message </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pListenerSet</span></td>
    <td>The <span class="NDLSystemFont"><a href="../efd/efd__set.htm">set</a></span> of listeners for this message </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>: True if the message was sent </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_transport_1a45a03bff1c6c7e90b3cf75f78ab24694"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  QueryOutgoingQueueSize() = 0</p>
<p class="NDLRefMemberDescription">Query the total size of all outgoing queues in this transport. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>The total size of all outgoing queues in this transport. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_transport_1a2a072019d159f1b2377e925c71180951"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a3f46b06120f84d47e33a25e39034ed8e">efd::QualityOfService</a></span>  GetTransportType() = 0</p>
<p class="NDLRefMemberDescription">Returns the transport type for this transport. </p>

<a name="classefd_1_1_i_net_transport_1a400fd4a4ce92688b9daec2fc1953ef75"></a>
<p class="NDLRefMemberFunction">virtual void  SetMessageCallback(<span class="NDLSystemFont"><a href="../efd/efd__INetCallback.htm">INetCallback</a></span>* pMessageCallback) = 0</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_i_net_transport_1a520fae9c8aac9876591046cb60483f7d"></a>
<p class="NDLRefMemberFunction">virtual void  RemoveCallback(<br/><span class="NDLSystemFont"><a href="../efd/efd__INetCallback.htm">INetCallback</a></span>* pCallbackToRemove, <br/><span class="NDLSystemFont"><a href="../efd/efd__INetCallback.htm">INetCallback</a></span>* pReplacementCallback) = 0</p>
<p class="NDLRefMemberDescription">Remove the specified callback from all connections. </p>

<a name="classefd_1_1_i_net_transport_1a77622a83a50ba66ced9299e7be53e3be"></a>
<p class="NDLRefMemberFunction">virtual void  CloseAllConnections() = 0</p>
<p class="NDLRefMemberDescription">Closes all outstanding connections. </p>

<a name="classefd_1_1_i_net_transport_1a155a227c0df246b20131f5119a369929"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ad81d366c75ea1e1119513a730f79910d">efd::AsyncResult</a></span>  OnTick() = 0</p>
<p class="NDLRefMemberDescription">Called once per frame. </p>

<a name="classefd_1_1_i_net_transport_1a8c0ea3c7092083d157692e1f731311c2"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ad81d366c75ea1e1119513a730f79910d">efd::AsyncResult</a></span>  OnInit() = 0</p>
<p class="NDLRefMemberDescription">Called once before OnTick is called. </p>

<a name="classefd_1_1_i_net_transport_1a378baa65047b98ee84487642a9975055"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ad81d366c75ea1e1119513a730f79910d">efd::AsyncResult</a></span>  OnShutdown() = 0</p>
<p class="NDLRefMemberDescription">Called once before the network shuts down. </p>

<a name="classefd_1_1_i_net_transport_1a0e237e3644506a53380f7e002c48f0f5"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  GetLastResult() = 0</p>
<p class="NDLRefMemberDescription">Used to check the last result of a send was for this transport. </p>
<p class="NDLRefMemberDetailedDescription">It is mainly used to keep track of whether a failure notice has been sent to the client.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if the last send was successful. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_transport_1af1e4b38f05de3aa7bd9bb594dc131aad"></a>
<p class="NDLRefMemberFunction">virtual void  SetLastResult(<span class="NDLSystemFont">bool</span> result) = 0</p>
<p class="NDLRefMemberDescription">Used to save the last result of a send for this transport. </p>
<p class="NDLRefMemberDetailedDescription">It is mainly used to keep track of whether a failure notice has been sent to the client.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">result</span></td>
    <td>True if the last send was successful. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_transport_1a9a029e10f35c2cb8a2b56794d6156c8c"></a>
<p class="NDLRefMemberFunction">virtual void  ReportError(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__ConnectionID.htm">ConnectionID</a></span>& cid, <br/><span class="NDLSystemFont"><a href="efd__IConnection.htm">IConnection</a></span>* pConnection) = 0</p>
<p class="NDLRefMemberDescription">Called when a connection function call returns an error. </p>
<p class="NDLRefMemberDetailedDescription">Forwards the error information to the category kCAT_NetErrorMessage, so interested parties can subscribe for notifications.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">cid</span></td>
    <td>The connection ID </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pConnection</span></td>
    <td>Pointer to the connection that reported the error </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_transport_1ac4e48e97f827ed2ba8c0991db1e44dc4"></a>
<p class="NDLRefMemberFunction">virtual void  ReportError(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__ConnectionID.htm">ConnectionID</a></span>& cid, <br/><span class="NDLSystemFont"><a href="../efd/efd__INetCallback.htm">INetCallback</a></span>* pCallback, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">SInt32</a></span> error, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">utf8string</a></span>& errorString) = 0</p>
<p class="NDLRefMemberDescription">An override of ReportError that takes an <span class="NDLSystemFont"><a href="../efd/efd__INetCallback.htm">INetCallback</a></span> for cases where the <span class="NDLSystemFont"><a href="efd__IConnection.htm">IConnection</a></span> is invalid. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">cid</span></td>
    <td>The connection ID </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pCallback</span></td>
    <td>The callback to forward the net message to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">error</span></td>
    <td>The EE_SOCKET_ERROR value </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">errorString</span></td>
    <td>String representation of the error. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_i_net_transport_1a233c362523be2aff50378ec67667750e"></a>
<p class="NDLRefMemberFunction">virtual void  Configure(<span class="NDLSystemFont"><a href="../efd/efd__ISection.htm">ISection</a></span>* pISection) = 0</p>
<p class="NDLRefMemberDescription">Used to configure this <span class="NDLSystemFont">INetTransport</span> instance. </p>
<p class="NDLRefMemberDetailedDescription">A derived class can read any configuration information needed out of the passed in <span class="NDLSystemFont"><a href="../efd/efd__ISection.htm">ISection</a></span>.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pISection</span></td>
    <td>The section of configuration information to use to read configuration information out of. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

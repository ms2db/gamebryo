<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::HostInfo</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::HostInfo</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__MemObject.htm">efd::MemObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;HostInfo.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_host_info.gif" alt="Inheritance graph for efd::HostInfo"/>
  <p class="FigureCaption">Inheritance graph for efd::HostInfo</p>
</div>
</p>


<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classefd_1_1_host_info_1a6daa06449c3f18c008903f6d4acb6508"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>  NetworkOrderIPToString(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> networkOrderIP)</p>
<p class="NDLRefMemberDescription">Takes a UInt32 in network order and returns a <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">utf8string</a></span> of the ip address. </p>

<a name="classefd_1_1_host_info_1a72f6981b22bbe83f8f766e4190d14e50"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>  IPToString(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> ip)</p>
<p class="NDLRefMemberDescription">Takes a UInt32 in host order and returns a <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">utf8string</a></span> of the ip address. </p>

<a name="classefd_1_1_host_info_1a8069c6ca6086a2380c519125ba33e758"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  ResolveNameOrIP(const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& nameOrIP)</p>
<p class="NDLRefMemberDescription">Blocks the first time it is called with a specific string. </p>
<p class="NDLRefMemberDetailedDescription">Subsequent times this function is called with the exact same string the result from the cache will be returned. </p>
<p class="NDLRefMemberDetailedDescription">: The cache has no timeout, if the ip address changes the cache will never know. FlushCache can be periodically called to force re-looking up of all names.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">nameOrIP</span></td>
    <td>The host name or ip address to look up </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_host_info_1a7da7afeb7d160e248ab084d53b65d8c4"></a>
<p class="NDLRefMemberFunction">static void  ResolveNameOrIP(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& nameOrIP, <br/><span class="NDLSystemFont">HostInfo</span> *& pResultHostInfo)</p>
<p class="NDLRefMemberDescription">Blocks the first time it is called with a specific string. </p>
<p class="NDLRefMemberDetailedDescription">Subsequent times this function is called with the exact same string the result from the cache will be returned. </p>
<p class="NDLRefMemberDetailedDescription">: The cache has no timeout, if the ip address changes the cache will never know. FlushCache can be periodically called to force re-looking up of all names.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">nameOrIP</span></td>
    <td>The host name or ip address to look up </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pResultHostInfo</span></td>
    <td>[out] Filled in <span class="NDLSystemFont">HostInfo</span> for the looked up host. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classefd_1_1_host_info_1aaf677223ffdfd86d03f8d35e28d0f62d"></a>
<p class="NDLRefMemberFunction">static void  FlushCache()</p>
<p class="NDLRefMemberDescription">Removes all cached names from DNS cache. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_host_info_1a705c7355e9553556f50a875d2705ce47"></a>
<p class="NDLRefMemberFunction">void  IncRefCount() const</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_host_info_1a625e9eaa10d8f98543a383a409ca399b"></a>
<p class="NDLRefMemberFunction">void  DecRefCount() const</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_host_info_1aebc2f9c3fd93169cfb343abfcb7b23c8"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetRefCount() const</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_host_info_1a4a9e462583a4815f76604dd020e368b2"></a>
<p class="NDLRefMemberFunction">HostInfo()</p>
<p class="NDLRefMemberDescription">Default constructor. </p>

<a name="classefd_1_1_host_info_1a4f5a6a27de797fba5fee242cff3512e7"></a>
<p class="NDLRefMemberFunction">HostInfo(const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& hostName)</p>
<p class="NDLRefMemberDescription">Retrieves the host entry based on the host name or address. </p>

<a name="classefd_1_1_host_info_1a9770d6e0ea94940ffeeef7143b737f53"></a>
<p class="NDLRefMemberFunction">~HostInfo()</p>
<p class="NDLRefMemberDescription">Destructor. Closes the host entry database. </p>

<a name="classefd_1_1_host_info_1a0701b704648669868ab735778c1e31c6"></a>
<p class="NDLRefMemberFunction">const char*  GetHostIPAddressStr()</p>
<p class="NDLRefMemberDescription">Retrieves the hosts IP address. </p>

<a name="classefd_1_1_host_info_1a852be54d00ae241652ebde60a8710554"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetHostIPAddressNum()</p>
<p class="NDLRefMemberDescription">Retrieves the hosts IP address. </p>

<a name="classefd_1_1_host_info_1a2b1b41fb69f9d461fc18ec17ec32d041"></a>
<p class="NDLRefMemberFunction">const char*  GetHostName()</p>
<p class="NDLRefMemberDescription">Retrieves the hosts name. </p>

<a name="classefd_1_1_host_info_1a0d5d9b648886c15a2c230ab5e2820315"></a>
<p class="NDLRefMemberFunction">const char*  GetErrorMessage()</p>
<p class="NDLRefMemberDescription">Get last error message. If empty string, there was no error. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

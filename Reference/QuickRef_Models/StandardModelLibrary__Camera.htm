<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Camera Model</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Toolbench" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->

<!--(Begin Links)===================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)==========================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript">
</script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>
<h1>Camera Model</h1>
<p>Found in project: <a href="StandardModelLibrary__ProjectIntro.htm">StandardModelLibrary</a></p>
<p>Traits: Active</p>
<p>Mixes In: <a href="StandardModelLibrary__3DProxy.htm">3DProxy</a></p>
<h4>Description</h4>
<p>Entity model used to represent a camera in a world.</p>
<h4>Properties</h4>
<table>
<thead>
<tr><th>Name</th> <th>Type</th>  <th>Source Model</th> <th>Default Value</th> <th>Traits</th> <th>Description</th></tr>
</thead>
<tbody>
	<tr>
		<td>FOV</td>
		<td>Degree</td>
		<td><a href="StandardModelLibrary__Camera.htm">Camera</a></td>
		<td>60</td>
		<td></td>
		<td>The field-of-view for the camera. This cone defines the shape of the view frustum.</td>
	</tr>
	<tr>
		<td>NearPlane</td>
		<td>Float32</td>
		<td><a href="StandardModelLibrary__Camera.htm">Camera</a></td>
		<td>1</td>
		<td></td>
		<td>Distance of the near plane from the camera origin.</td>
	</tr>
	<tr>
		<td>FarPlane</td>
		<td>Float32</td>
		<td><a href="StandardModelLibrary__Camera.htm">Camera</a></td>
		<td>10000</td>
		<td></td>
		<td>Distance of the far plane from the camera origin.</td>
	</tr>
	<tr>
		<td>MinimumNearPlane</td>
		<td>Float32</td>
		<td><a href="StandardModelLibrary__Camera.htm">Camera</a></td>
		<td>0.1</td>
		<td></td>
		<td>The minimum view frustum near plane distance.</td>
	</tr>
	<tr>
		<td>MaximumFarToNearRatio</td>
		<td>Float32</td>
		<td><a href="StandardModelLibrary__Camera.htm">Camera</a></td>
		<td>65536</td>
		<td></td>
		<td>Maximum ratio between near and far planes.</td>
	</tr>
	<tr>
		<td>IsOrthographic</td>
		<td>Boolean</td>
		<td><a href="StandardModelLibrary__Camera.htm">Camera</a></td>
		<td>False</td>
		<td></td>
		<td>Ortho projection view frustums are created with the same six values that the general perspective camera model employs. However, the planes created from these values do not pass through a single, shared center of projection. Instead, the left, right, top and bottom planes are all perpendicular to the view plane (note that this means that oblique parallel projections are not supported).

Ortho projections (sometimes referred to as parallel projections) are often used in modeling tools for displaying side, front, top renderings and other situations where perspective rendering is not appropriate.</td>
	</tr>
	<tr>
		<td>LODAdjust</td>
		<td>SInt32</td>
		<td><a href="StandardModelLibrary__Camera.htm">Camera</a></td>
		<td>1</td>
		<td></td>
		<td>The Level-of-Detail adjustment value for the camera. This value is used by NiLODNode objects to multiply the distance between the object whose LOD is being computed and the camera. A higher value for this setting will tend to lower the LOD of the objects drawn by the camera.</td>
	</tr>
	<tr>
		<td>ProxyNifAsset</td>
		<td>Asset</td>
		<td><a href="StandardModelLibrary__Camera.htm">Camera</a></td>
		<td>urn:llid:9760c049-0000-0000-0000-000000000000</td>
		<td></td>
		<td>Asset reference of the NIF file that should be the proxy for this entity.</td>
	</tr>
	<tr>
		<td>ProxyScale</td>
		<td>Float32</td>
		<td><a href="StandardModelLibrary__Camera.htm">Camera</a></td>
		<td>0.25</td>
		<td></td>
		<td>Proxy Scale is the actual scale to render the geometry at.  For proxies this scale always overrides the &quot;Scale&quot; property for rendering in the editor because that property may have another meaning that is not visual (for the proxy).  This property can also be used to correct art authored at a different scale from the rest of the world.  The Proxy Scale will be multiplied by the World Scale setting in a block to arrive at the actual rendered scale of the proxy.  The Proxy Scale value should represent the scale to apply to an object inserted into a meter scale world to make it look correct relative to other meter scale objects.  So if your proxy art were authored in centimeters, this value would be 0.01.</td>
	</tr>
	<tr>
		<td>IsVisible</td>
		<td>Boolean</td>
		<td><a href="StandardModelLibrary__Renderable.htm">Renderable</a></td>
		<td>True</td>
		<td></td>
		<td>Determines whether or not the entity is going to be rendered.</td>
	</tr>
	<tr>
		<td>Position</td>
		<td>Point3</td>
		<td><a href="StandardModelLibrary__Placeable.htm">Placeable</a></td>
		<td>0, 0, 0</td>
		<td></td>
		<td>The world-space position of the entity.</td>
	</tr>
	<tr>
		<td>Rotation</td>
		<td>Rotator</td>
		<td><a href="StandardModelLibrary__Camera.htm">Camera</a></td>
		<td>90, 0, 0</td>
		<td></td>
		<td>The world-space rotation of the entity.</td>
	</tr>
	<tr>
		<td>Scale</td>
		<td>Float32</td>
		<td><a href="StandardModelLibrary__Placeable.htm">Placeable</a></td>
		<td>1</td>
		<td></td>
		<td>The world-space scale of the entity.</td>
	</tr>
</tbody>
</table>
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

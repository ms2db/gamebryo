<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPhysXFluidSimulatorStep</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiPhysXFluidSimulatorStep</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiParticle/NiPSSimulatorStep.htm">NiPSSimulatorStep</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiPhysXFluidSimulatorStep.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_phys_x_fluid_simulator_step.gif" alt="Inheritance graph for NiPhysXFluidSimulatorStep"/>
  <p class="FigureCaption">Inheritance graph for NiPhysXFluidSimulatorStep</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">The <span class="NDLSystemFont">NiPhysXFluidSimulatorStep</span> class manages the work required to push PhysX fluid data into a Gamebryo particle system. </p>
<p class="NDLNormal">Applications should not need to explicitly create or manage one of these objects - they are created when a <span class="NDLSystemFont"><a href="NiPhysXPSFluidSystem.htm">NiPhysXPSFluidSystem</a></span> object or <span class="NDLSystemFont"><a href="NiPhysXPSMeshFluidSystem.htm">NiPhysXPSMeshFluidSystem</a></span> object is created. Along with an NiPSSimuatorGeneralStep, this step should be the only step applied to a fluid-based particle system. It transforms particles from PhysX to Gamebryo coordinates and updates other PhysX fluid data required by the particle system. Most of the work is done by a <span class="NDLSystemFont"><a href="NiPhysXFluidSimulatorKernel.htm">NiPhysXFluidSimulatorKernel</a></span> object that is managed by the object. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_phys_x_fluid_simulator_step_1a21a19e8f9e70a64e52a10aa6085288af"></a>
<p class="NDLRefMemberFunction">NiPhysXFluidSimulatorStep()</p>
<p class="NDLRefMemberDetailedDescription">Constructor. </p>

<a name="class_ni_phys_x_fluid_simulator_step_1ae25d9e06a6ba6c8536e8b8a2eb157b38"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../NiFloodgate/NiSPKernel.htm">NiSPKernel</a></span>*  GetKernel()</p>
<p class="NDLRefMemberDescription">Obtain the kernel that is owned by this step. </p>

<a name="class_ni_phys_x_fluid_simulator_step_1a8ac4080e2a933e7018c28b1816ae3ffc"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">NiUInt16</span>  GetLargestInputStride()</p>
<p class="NDLRefMemberDescription">Obtain the maximum stride for any input or output stream owned by this object. </p>

<a name="class_ni_phys_x_fluid_simulator_step_1a0b93831950ab5504f0078757d62a96c5"></a>
<p class="NDLRefMemberFunction">virtual void  PrepareInputStream(<br/><span class="NDLSystemFont"><a href="../NiParticle/NiPSParticleSystem.htm">NiPSParticleSystem</a></span>* pkParticleSystem, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kSemantic, <br/><span class="NDLSystemFont"><a href="../NiFloodgate/NiSPStream.htm">NiSPStream</a></span>* pkStream)</p>
<p class="NDLRefMemberDescription">Called by NiSPSimulator::Prepare, this function should do any work required to prepare an input stream for execution. </p>

<a name="class_ni_phys_x_fluid_simulator_step_1a73e8637ed203c9e62213d70e30904067"></a>
<p class="NDLRefMemberFunction">virtual void  PrepareOutputStream(<br/><span class="NDLSystemFont"><a href="../NiParticle/NiPSParticleSystem.htm">NiPSParticleSystem</a></span>* pkParticleSystem, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kSemantic, <br/><span class="NDLSystemFont"><a href="../NiFloodgate/NiSPStream.htm">NiSPStream</a></span>* pkStream)</p>
<p class="NDLRefMemberDescription">Called by NiSPSimulator::Prepare, this function should do any work required to prepare an output stream for execution. </p>

<a name="class_ni_phys_x_fluid_simulator_step_1aa5e826a4b3ccab2741224bffdefecbcd"></a>
<p class="NDLRefMemberFunction">virtual NiSPTaskPtr  Attach(<span class="NDLSystemFont"><a href="../NiParticle/NiPSParticleSystem.htm">NiPSParticleSystem</a></span>* pkParticleSystem)</p>
<p class="NDLRefMemberDescription">This function creates a Floodgate task for fluid updating and defines the appropriate data streams. </p>

<a name="class_ni_phys_x_fluid_simulator_step_1a8c0ec913f46bc4060b131b808edd73d5"></a>
<p class="NDLRefMemberFunction">virtual void  Detach(<span class="NDLSystemFont"><a href="../NiParticle/NiPSParticleSystem.htm">NiPSParticleSystem</a></span>* pkParticleSystem)</p>
<p class="NDLRefMemberDescription">This function releases any data stream resources. </p>

<a name="class_ni_phys_x_fluid_simulator_step_1a049949b1a4b4ac7306cccc137970a785"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  Update(<br/><span class="NDLSystemFont"><a href="../NiParticle/NiPSParticleSystem.htm">NiPSParticleSystem</a></span>* pkParticleSystem, <br/>float fTime)</p>
<p class="NDLRefMemberDescription">Called on each particle system update step, this function does per-frame set-up for the Floodgate task. </p>

<a name="class_ni_phys_x_fluid_simulator_step_1a1e09d6aa5b7e4f2c0fa6a0a6e72931af"></a>
<p class="NDLRefMemberFunction">void  SetUpdateNecessary(const <span class="NDLSystemFont">bool</span> bUpdateNecessary)</p>
<p class="NDLRefMemberDescription">Set the flag indicating whether or not an update is necessary. </p>
<p class="NDLRefMemberDetailedDescription">This flag is set by the particle system's <span class="NDLSystemFont"><a href="NiPhysXFluidDest.htm">NiPhysXFluidDest</a></span> object when a simulation step has finished and particles have been created or removed. The flag is cleared every time the Update method executes.</p>
<p class="NDLRefMemberDetailedDescription">The flag is used to verify that the particle system consumes information about newly added and removed particles before that information is lost to another physics simulation step. </p>

<a name="class_ni_phys_x_fluid_simulator_step_1a167f6983002096a48e73087920bb99ce"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetUpdateNecessary() const</p>
<p class="NDLRefMemberDescription">Get the flag indicating whether or not an update is necessary. </p>

<a name="class_ni_phys_x_fluid_simulator_step_1ad2ea103631289961704fddf0cea52b75"></a>
<p class="NDLRefMemberFunction">void  SetUpdateUseful(const <span class="NDLSystemFont">bool</span> bUpdateUseful)</p>
<p class="NDLRefMemberDescription">Set the flag indicating whether or not an update is useful. </p>
<p class="NDLRefMemberDetailedDescription">This flag is set by the particle system's <span class="NDLSystemFont"><a href="NiPhysXFluidDest.htm">NiPhysXFluidDest</a></span> object when a simulation step has finished and new particle positions are available. The flag is cleared every time the Update method executes. The particle system will only update if this flag is true. </p>

<a name="class_ni_phys_x_fluid_simulator_step_1a9b4cf4cbf341df9d6491ce04ccd375e9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetUpdateUseful() const</p>
<p class="NDLRefMemberDescription">Get the flag indicating whether or not an update is useful. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

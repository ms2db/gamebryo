<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPhysXFluidDest</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiPhysXFluidDest</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXDest.htm">NiPhysXDest</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiPhysXFluidDest.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_phys_x_fluid_dest.gif" alt="Inheritance graph for NiPhysXFluidDest"/>
  <p class="FigureCaption">Inheritance graph for NiPhysXFluidDest</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal"><span class="NDLSystemFont">NiPhysXFluidDest</span> objects are responsible for interfacing between the state from the PhysX particles and the Gamebryo particle system that is rendering the fluid. </p>
<p class="NDLNormal">As a destination object, its update function is called upon NiPhysXScene::FetchResult when a simulation step completes (assuming is it active). The particle system must be updated at least once for every simulation step so that the actions performed by this object will be processed by the particle system update.</p>
<p class="NDLNormal">An object of this type is created and stored by <span class="NDLSystemFont"><a href="NiPhysXPSFluidSystem.htm">NiPhysXPSFluidSystem</a></span> and <span class="NDLSystemFont"><a href="NiPhysXPSMeshFluidSystem.htm">NiPhysXPSMeshFluidSystem</a></span> objects when they are created or their physics scene is changed. Applications never should need to create one of these. Documentation is provided for cases where the class must be extended. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_phys_x_fluid_dest_1a691cac9476eef7b078fb684ccd92b62d"></a>
<p class="NDLRefMemberFunction">NiPhysXFluidDest(<br/><span class="NDLSystemFont"><a href="../NiParticle/NiPSParticleSystem.htm">NiPSParticleSystem</a></span>* pkTarget, <br/><span class="NDLSystemFont"><a href="NiPhysXPSFluidEmitter.htm">NiPhysXPSFluidEmitter</a></span>* pkEmitter)</p>
<p class="NDLRefMemberDescription">Constructor. </p>
<p class="NDLRefMemberDetailedDescription">The particle system provided as the target of this destination must be either a NiPhysXFluidSystem or NiPhysXMeshFluidSystem. The emitter should be the sole emitter attached to the particle system. </p>

<a name="class_ni_phys_x_fluid_dest_1a5de016c01a84c1f2247997eab527feb6"></a>
<p class="NDLRefMemberFunction">~NiPhysXFluidDest()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_phys_x_fluid_dest_1ab04f435842d0572562961d99215cabfc"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiParticle/NiPSParticleSystem.htm">NiPSParticleSystem</a></span>*  GetTarget()</p>
<p class="NDLRefMemberDescription">Access the particle system we are driving. </p>

<a name="class_ni_phys_x_fluid_dest_1aab408a35bd71fa81ccbcef86c907e15e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiMain/NiTransform.htm">NiTransform</a></span>&  GetPhysXToFluid()</p>
<p class="NDLRefMemberDescription">Return a reference to the transformation from PhysX space to the Gamebryo particle system's space. </p>
<p class="NDLRefMemberDetailedDescription">Use this function in particle simulation steps that might need to know it, such as the <span class="NDLSystemFont"><a href="NiPhysXFluidSimulatorStep.htm">NiPhysXFluidSimulatorStep</a></span> class. </p>

<a name="class_ni_phys_x_fluid_dest_1ac26ff15f00ecbc63d0f2d5279dcfda14"></a>
<p class="NDLRefMemberFunction">float  GetScalePtoW()</p>
<p class="NDLRefMemberDescription">Obtain the most recently cached PhysX scale factor. </p>

<a name="class_ni_phys_x_fluid_dest_1ac72fac416d0425aa11d569e113b7dd88"></a>
<p class="NDLRefMemberFunction">virtual void  UpdateFromActors(<br/>const float fT, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiTransform.htm">NiTransform</a></span>& kRootTransform, <br/>const float fScalePToW, <br/>const <span class="NDLSystemFont">bool</span> bForce)</p>
<p class="NDLRefMemberDescription">Update the fluid particle system after a simulation step. </p>
<p class="NDLRefMemberDetailedDescription">This function caches its arguments for use during particle system update. It also emits any newly created fluid particles. </p>

<a name="class_ni_phys_x_fluid_dest_1a28bb0b52639cdf03dfbf4a2cd9492aea"></a>
<p class="NDLRefMemberFunction">virtual void  UpdateSceneGraph(<br/>const float fT, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiTransform.htm">NiTransform</a></span>& kRootTransform, <br/>const float fScalePToW, <br/>const <span class="NDLSystemFont">bool</span> bForce)</p>
<p class="NDLRefMemberDescription">Required by <span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXDest.htm">NiPhysXDest</a></span>, this function does nothing in this class. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

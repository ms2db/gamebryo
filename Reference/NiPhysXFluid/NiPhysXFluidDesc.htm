<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPhysXFluidDesc</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiPhysXFluidDesc</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiObject.htm">NiObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiPhysXFluidDesc.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_phys_x_fluid_desc.gif" alt="Inheritance graph for NiPhysXFluidDesc"/>
  <p class="FigureCaption">Inheritance graph for NiPhysXFluidDesc</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal"><span class="NDLSystemFont">NiPhysXFluidDesc</span> objects are the Gamebryo descriptor objects for a PhysX NxFluid object. </p>
<p class="NDLNormal">They store a NxFluidDesc object, a pointer to the NxFluid we are describing (after it has been instantiated) and additional data required to attach a fluid to a Gamebryo scene graph. Streaming and cloning is supported.</p>
<p class="NDLNormal">An object of this type is created and streamed when a fluid particle system is exported from the art tools. The most common application usage of this class will be to modify parameters between the loading of a <span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXScene.htm">NiPhysXScene</a></span> and the instantiation of PhysX content using <span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXScene.htm#class_ni_phys_x_scene_1a7f2083d5e5a1c4cec3d1252f4dc18b20">NiPhysXScene::CreateSceneFromSnapshot()</a></span>. See the PhysXFluids demo for an example of using this class.</p>
<p class="NDLNormal">This class may also be used to clone fluid data in tandem with the scene graph that is rendering the fluid.</p>
<p class="NDLNormal">This class does not stream userData stored in the NxFluid. Applications should derive from this class if explicit handling of userData is required. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_phys_x_fluid_desc_1aa4740d7b852299161af9243628bbc78b"></a>
<p class="NDLRefMemberFunction">NiPhysXFluidDesc()</p>
<p class="NDLRefMemberDescription">Constructor. </p>
<p class="NDLRefMemberDetailedDescription">The fluid description after construction is identical to the PhysX default NxFluidDesc. </p>

<a name="class_ni_phys_x_fluid_desc_1a8ccf8700f104f049b92e1769e39537f4"></a>
<p class="NDLRefMemberFunction">virtual ~NiPhysXFluidDesc()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_phys_x_fluid_desc_1abbe74700f99fdbc559eb121bca653787"></a>
<p class="NDLRefMemberFunction">virtual NxFluidDesc  GetNxFluidDesc() const</p>
<p class="NDLRefMemberDescription">Get the PhysX descriptor for the fluid. </p>
<p class="NDLRefMemberDetailedDescription">The emitters in the descriptor are not valid; use the functions below to access emitters. </p>

<a name="class_ni_phys_x_fluid_desc_1a04c5d91783e763a4c48ce4b7b0a2308d"></a>
<p class="NDLRefMemberFunction">virtual void  SetNxFluidDesc(const NxFluidDesc& kFluidDesc)</p>
<p class="NDLRefMemberDescription">Extract data from the PhysX descriptor for the fluid. </p>
<p class="NDLRefMemberDetailedDescription">The emitters in the descriptor are not extracted; use the functions below to access emitters. The name member is internally copied and accessed through functions described below.</p>
<p class="NDLRefMemberDetailedDescription">This function has no effect on the emitters or the internal pointer to the NxFluid object. Hence, using this function will have no effect on a fluid that has already been instantiated. Use GetFluid to get a pointer to the NxFluid directly, and then modify that if you would like to modify properties on an existing fluid object. </p>

<a name="class_ni_phys_x_fluid_desc_1a96927b96bec64b1e232cf32acef4f7ba"></a>
<p class="NDLRefMemberFunction">NxFluid*  GetFluid() const</p>
<p class="NDLRefMemberDescription">Obtain a pointer to the fluid that this descriptor controls. </p>
<p class="NDLRefMemberDetailedDescription">This pointer will be NULL before the scene has been instantiated. </p>

<a name="class_ni_phys_x_fluid_desc_1a70c97556433ae6ea647fef70ea519731"></a>
<p class="NDLRefMemberFunction">virtual void  SetFluid(<br/>NxFluid* pkFluid, <br/>const NxMat34& kXform, <br/><span class="NDLSystemFont"><a href="../NiMain/NiTMap.htm">NiTMap</a></span>&lt;NxShape *, <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">NiPhysXShapeDescPtr</a></span>&gt;& kShapeMap)</p>
<p class="NDLRefMemberDescription">Given an existing fluid system, this creates all the necessary information to recreate it. </p>
<p class="NDLRefMemberDetailedDescription">This function does more than NxFluid::saveToDesc. It also captures all the emitters and correctly ties them to shapes. The transformation kXform is applied to global pose information to enable saving in different coordinate systems. The map of NxShape objects to <span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXShapeDesc.htm">NiPhysXShapeDesc</a></span> objects is used to find the Gamebryo descriptors corresponding to shapes. </p>

<a name="class_ni_phys_x_fluid_desc_1ae45a4240c0d717409422e220fa1d287a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiMain/NiTObjectArray.htm">NiTObjectArray</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">NiPhysXFluidEmitterDescPtr</a></span>&gt;&  GetEmitters()</p>
<p class="NDLRefMemberDescription">Get the emitter array for this fluid. </p>
<p class="NDLRefMemberDetailedDescription">Returns a reference to the internal array. </p>

<a name="class_ni_phys_x_fluid_desc_1ae47d131a26a2c30732cda89b2c93ba32"></a>
<p class="NDLRefMemberFunction">void  SetEmitters(const <span class="NDLSystemFont"><a href="../NiMain/NiTObjectArray.htm">NiTObjectArray</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">NiPhysXFluidEmitterDescPtr</a></span>&gt;& kEmitters)</p>
<p class="NDLRefMemberDescription">Set the emitter array for this fluid. </p>
<p class="NDLRefMemberDetailedDescription">Copies the given array of smart pointers.</p>
<p class="NDLRefMemberDetailedDescription">This function has no effect on the emitters of an existing NxFluid object. Use GetFluid to get a pointer to the NxFluid directly, and then modify that if you would like to modify properties on an existing fluid object. </p>

<a name="class_ni_phys_x_fluid_desc_1a4c317a481ebb76147daacb59f879a90b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>  GetName() const</p>
<p class="NDLRefMemberDescription">Get the name of this fluid. </p>

<a name="class_ni_phys_x_fluid_desc_1ae805be37bc9db49c2fe4b96a418bc1c3"></a>
<p class="NDLRefMemberFunction">void  SetName(const <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kName)</p>
<p class="NDLRefMemberDescription">Set the name of this fluid. </p>
<p class="NDLRefMemberDetailedDescription">The name is also set when SetNxFluidDesc or SetFluid are called. </p>

<a name="class_ni_phys_x_fluid_desc_1a311f71e2f1f795060e50d1176a398bda"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">NiPSParticleSystemPtr</a></span>  GetParticleSystem() const</p>
<p class="NDLRefMemberDescription">Get the particle system that is to be used to render this fluid. </p>

<a name="class_ni_phys_x_fluid_desc_1ae3e088df81e59cf861e64ba4638df209"></a>
<p class="NDLRefMemberFunction">void  SetParticleSystem(<span class="NDLSystemFont"><a href="../NiParticle/NiPSParticleSystem.htm">NiPSParticleSystem</a></span>* pkPSys)</p>
<p class="NDLRefMemberDescription">Set the particle system that is being used to render this fluid. </p>
<p class="NDLRefMemberDetailedDescription">The system must be of type <span class="NDLSystemFont"><a href="NiPhysXPSFluidSystem.htm">NiPhysXPSFluidSystem</a></span> or <span class="NDLSystemFont"><a href="NiPhysXPSMeshFluidSystem.htm">NiPhysXPSMeshFluidSystem</a></span>. The particle system pointer is used to find the NxParticleData for this fluid. If the particle system's particle data contains a non-zero number of particles at the time the PhysX fluid is instantiated, then the fluid will be instantiated with those particle positions. After initialization, this particle system will receive the particle positions for rendering. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPhysXPSFluidSystem</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiPhysXPSFluidSystem</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiParticle/NiPSParticleSystem.htm">NiPSParticleSystem</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiPhysXPSFluidSystem.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_phys_x_p_s_fluid_system.gif" alt="Inheritance graph for NiPhysXPSFluidSystem"/>
  <p class="FigureCaption">Inheritance graph for NiPhysXPSFluidSystem</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal"><span class="NDLSystemFont">NiPhysXPSFluidSystem</span> objects are the scene graph objects for a fluid particle system rendered with sprites. </p>
<p class="NDLNormal">The class is derived from, and borrows almost all functionality from, the <span class="NDLSystemFont"><a href="../NiParticle/NiPSParticleSystem.htm">NiPSParticleSystem</a></span> class.</p>
<p class="NDLNormal">PhysX fluid particle systems can make use of all particle system functionality except that the emission, positions and life spans of particles are determined entirely by the PhysX fluid simulation. </p>

<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="class_ni_phys_x_p_s_fluid_system_1add12c6477542d444c9bb0db70e30a8a6"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">NiPhysXPSFluidSystem</span>*  Create(<br/><span class="NDLSystemFont"><a href="NiPhysXPSFluidEmitter.htm">NiPhysXPSFluidEmitter</a></span>* pkEmitter, <br/><span class="NDLSystemFont">NiUInt32</span> uiMaxNumParticles, <br/><span class="NDLSystemFont"><a href="../NiParticle/NiPSParticleSystem.htm#class_ni_p_s_particle_system_1a8d4c132118f58b76d54cd2a7264c78c8">AlignMethod</a></span> eNormalMethod = ALIGN_CAMERA, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kNormalDirection = NiPoint3::ZERO, <br/><span class="NDLSystemFont"><a href="../NiParticle/NiPSParticleSystem.htm#class_ni_p_s_particle_system_1a8d4c132118f58b76d54cd2a7264c78c8">AlignMethod</a></span> eUpMethod = ALIGN_CAMERA, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kUpDirection = NiPoint3::ZERO, <br/><span class="NDLSystemFont">bool</span> bHasLivingSpawner = false, <br/><span class="NDLSystemFont">bool</span> bHasColors = false, <br/><span class="NDLSystemFont">bool</span> bHasRotations = false, <br/><span class="NDLSystemFont">bool</span> bAnimatedTextures = false, <br/><span class="NDLSystemFont">bool</span> bWorldSpace = true, <br/><span class="NDLSystemFont">bool</span> bDynamicBounds = true, <br/><span class="NDLSystemFont">bool</span> bCreateDefaultGenerator = true, <br/><span class="NDLSystemFont">bool</span> bAttachMeshModifiers = true, <br/><span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXProp.htm">NiPhysXProp</a></span>* pkProp = 0, <br/><span class="NDLSystemFont">bool</span> bPhysXSpace = false, <br/>float fExpansionFactor = 2.0f)</p>
<p class="NDLRefMemberDescription">Construct a fluid particle system and return the new object. </p>
<p class="NDLRefMemberDetailedDescription">The constructed object uses smart pointers for all of the arguments passed by pointer, so applications should not explicitly delete that data.</p>
<p class="NDLRefMemberDetailedDescription">The function returns NULL if, for some reason, construction fails.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkEmitter</span></td>
    <td>The emitter to use for this system. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiMaxNumParticles</span></td>
    <td>The maximum number of particles supported by the PhysX particle system. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">eNormalMethod</span></td>
    <td>The method to use for the normal direction when orienting particles. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kNormalDirection</span></td>
    <td>The fixed direction vector to use for the normal direction when orienting particles with a fixed direction method. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">eUpMethod</span></td>
    <td>The method to use for the "up" direction when orienting particles. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kUpDirection</span></td>
    <td>The fixed direction vector to use for the "up" direction when orienting particles with a fixed direction method. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bHasLivingSpawner</span></td>
    <td>True if living spawner data will be allocated. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bHasColors</span></td>
    <td>True if this particle system has per-particle colors. See <span class="NDLSystemFont"><a href="../NiParticle/NiPSParticleSystem.htm">NiPSParticleSystem</a></span> for details. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bHasRotations</span></td>
    <td>True if this particle system supports particle rotation. See <span class="NDLSystemFont"><a href="../NiParticle/NiPSParticleSystem.htm">NiPSParticleSystem</a></span> for details. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bAnimatedTextures</span></td>
    <td>True if this particle system has per-particle animated textures applied to the particles. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bWorldSpace</span></td>
    <td>True if the particles should be considered in world space once emitted. See <span class="NDLSystemFont"><a href="../NiParticle/NiPSParticleSystem.htm">NiPSParticleSystem</a></span> for details. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bDynamicBounds</span></td>
    <td>True if the particle system should dynamically update the bounds per-frame. This can be expensive, so static bounds are recommended for systems with many particles. See <span class="NDLSystemFont"><a href="../NiParticle/NiPSParticleSystem.htm">NiPSParticleSystem</a></span> for details. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bCreateDefaultGenerator</span></td>
    <td>If true, a default particle quad generator is created for use in rendering the particles. See <span class="NDLSystemFont"><a href="../NiParticle/NiPSParticleSystem.htm">NiPSParticleSystem</a></span> for details. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bAttachMeshModifiers</span></td>
    <td>If true, any mesh modifiers associated with the particle system will be attached. See <span class="NDLSystemFont"><a href="../NiParticle/NiPSParticleSystem.htm">NiPSParticleSystem</a></span> for details. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkProp</span></td>
    <td>The <span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXProp.htm">NiPhysXProp</a></span> object that this system is associated with. That is, the prop that is managing the PhysX fluid system. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bPhysXSpace</span></td>
    <td>If true, the Gamebryo and PhysX particles are considered to be in the same coordinate system, so only the <span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXScene.htm">NiPhysXScene</a></span> object's scale factor is applied (no translation or rotation of the particles from PhysX to Gamebryo). This is more efficient but should only be used when the systems really are in the same coordinate system. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fExpansionFactor</span></td>
    <td>On any given frame, new fluid particles are created before dead ones are removed, so the Gamebryo system must have enough extra particles to cover the maximum number of particles that might be emitted on a frame. This multiplier is applied to the uiMaxNumParticles value to set the maximum number of Gamebryo particles. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_phys_x_p_s_fluid_system_1a18e7f020860746446d89b2f1c1e12ed8"></a>
<p class="NDLRefMemberFunction">virtual ~NiPhysXPSFluidSystem()</p>
<p class="NDLRefMemberDetailedDescription">Destructor. </p>

<a name="class_ni_phys_x_p_s_fluid_system_1a4a77e5a7f842f7c5c3102724d7babd99"></a>
<p class="NDLRefMemberFunction">NxParticleData&  GetFluidData()</p>
<p class="NDLRefMemberDescription">Obtain the PhysX fluid data used by this object. </p>
<p class="NDLRefMemberDetailedDescription">The data object returned must be used by the NxFluid system that is providing the particle data. The buffers in the data are owned by this object and are set at construction. </p>

<a name="class_ni_phys_x_p_s_fluid_system_1a9bea860717160291ba4e71e53944f75b"></a>
<p class="NDLRefMemberFunction">NxParticleIdData&  GetParticleCreationData()</p>
<p class="NDLRefMemberDescription">Get the particle creation data, which is used to notify the system of newly created PhysX particles. </p>
<p class="NDLRefMemberDetailedDescription">The data object returned must be used by the NxFluid system that is providing the particle data. The buffers in the data are owned by this object and are set at construction. </p>

<a name="class_ni_phys_x_p_s_fluid_system_1aa49a27574ced0d616193c2df09de45de"></a>
<p class="NDLRefMemberFunction">NxParticleIdData&  GetParticleDeletionData()</p>
<p class="NDLRefMemberDescription">Get the particle deletion data, which is used to notify the system of recently deleted PhysX particles. </p>
<p class="NDLRefMemberDetailedDescription">The data object returned must be used by the NxFluid system that is providing the particle data. The buffers in the data are owned by this object and are set at construction. </p>

<a name="class_ni_phys_x_p_s_fluid_system_1ac97ea78fc0f5a0e02c34fe158dd126fe"></a>
<p class="NDLRefMemberFunction">void  AttachToProp(<span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXProp.htm">NiPhysXProp</a></span>* pkProp)</p>
<p class="NDLRefMemberDescription">Associate this particle system with a <span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXProp.htm">NiPhysXProp</a></span> object that will be used to interface between Gamebryo and PhysX. </p>
<p class="NDLRefMemberDetailedDescription">Call this function only when creating a fluid particle system in code, or when a system is cloned but the prop it is part of is not cloned.</p>
<p class="NDLRefMemberDetailedDescription">Particle systems created using the Gamebryo art tools will already be associated with a prop, so this function does not need to be called. Also, the function does not need to be called if an entire prop containing fluid systems is cloned. </p>

<a name="class_ni_phys_x_p_s_fluid_system_1a31a71fc042b4d164275fddd93a060ecc"></a>
<p class="NDLRefMemberFunction">void  DetachFromProp(<span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXProp.htm">NiPhysXProp</a></span>* pkProp)</p>
<p class="NDLRefMemberDescription">Disassociate this particle system from its <span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXProp.htm">NiPhysXProp</a></span> object. </p>
<p class="NDLRefMemberDetailedDescription">The given prop must be the same one that was used with AttachToProp. </p>

<a name="class_ni_phys_x_p_s_fluid_system_1a022fb3429575e4c02150b6f38394fa29"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetUsesPhysXSpace()</p>
<p class="NDLRefMemberDescription">Return the flag indicating whether or not this particle system uses the same coordinate system as the PhysX simulation. </p>

<a name="class_ni_phys_x_p_s_fluid_system_1af3b2191dfbe366ca49648ca2ab671a25"></a>
<p class="NDLRefMemberFunction">void  SetUsesPhysXSpace(const <span class="NDLSystemFont">bool</span> bPhysXSpace)</p>
<p class="NDLRefMemberDescription">Set the flag indicating whether or not this particle system uses the same coordinate system as the PhysX simulation. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiSkyMaterial</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiSkyMaterial</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiFragmentMaterial.htm">NiFragmentMaterial</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiSkyMaterial.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_sky_material.gif" alt="Inheritance graph for NiSkyMaterial"/>
  <p class="FigureCaption">Inheritance graph for NiSkyMaterial</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This is an <span class="NDLSystemFont"><a href="../NiMain/NiFragmentMaterial.htm">NiFragmentMaterial</a></span> based material used for rendering a sky dome. </p>
<p class="NDLNormal">This material will automatically generate the required shader based on the specified extra data parameters. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>
<a name="class_ni_sky_material_1abe9aca996fa1185c1f2ef4a41ce33570"></a>
<p class=NDLRefHead2>anonymous enum</p>



<p class="NDLRefMemberDetailedDescription">Used for tracking the version of the environment material. </p>

<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">VERTEX_VERSION</span></td>
    <td>Specifies the vertex shader version. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">PIXEL_VERSION</span></td>
    <td>Specifies the pixel shader version. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">GEOMETRY_VERSION</span></td>
    <td>Specifies the geometry shader version. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">NUM_BLEND_STAGES</span></td>
    <td>Specifies the maximum number of blend stages. </td>
</tr>

  </tbody>
</table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_sky_material_1a86e6c62f5c727d37119ccfa9df86caaf"></a>
<p class="NDLRefMemberFunction">virtual ~NiSkyMaterial()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_sky_material_1af595687158c203a49f1775f9686462c3"></a>
<p class="NDLRefMemberFunction">virtual void  AddDefaultFallbacks()</p>
<p class="NDLRefMemberDescription">Inherited from <span class="NDLSystemFont"><a href="../NiMain/NiFragmentMaterial.htm">NiFragmentMaterial</a></span>. </p>
<p class="NDLRefMemberDetailedDescription">Creates the default fallback functions. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="class_ni_sky_material_1ae62a148f706c0cd1f56b1dd942ceccf4"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">NiSkyMaterial</span>*  Create()</p>
<p class="NDLRefMemberDescription">Static method allowing for the creation of the sky material. </p>
<a name="blend_stage_configuration"></a>
<p class="NDLRefHead1">Blend Stage Configuration</p>


<a name="class_ni_sky_material_1a517d7e00edc07958b5fdeac6bf1d7ba7"></a>
<p class="NDLRefMemberFunction">void  SetBlendStageConfiguration(<br/><span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkObject, <br/><span class="NDLSystemFont">NiUInt32</span> uiStageIndex, <br/><span class="NDLSystemFont">NiUInt32</span> uiColorMap, <br/><span class="NDLSystemFont">NiUInt32</span> uiModifierSource, <br/><span class="NDLSystemFont">NiUInt32</span> uiBlendMethod) const</p>
<p class="NDLRefMemberDescription">Configure a particular blend stage of the material by applying an extra data constant to the object. </p>
<p class="NDLRefMemberDetailedDescription">There are presently 5 blend stages, with each one configurable through 3 categories of selections <span class="NDLSystemFont"><a href="NiSkyMaterial__ColorMap.htm">ColorMap</a></span> - Specifies how a color is chosen to be blended <span class="NDLSystemFont"><a href="NiSkyMaterial__BlendMethod.htm">BlendMethod</a></span> - Specifies how to blend the colors <span class="NDLSystemFont"><a href="NiSkyMaterial__ModifierSource.htm">ModifierSource</a></span> - Specifies how to calculate a modifier value for the blend method.</p>
<p class="NDLRefMemberDetailedDescription">The color used to begin with is the outcome of the Atmospheric scattering calculations. In the event that atmospheric scattering is not used, the initial color of the sky is black.</p>
<p class="NDLRefMemberDetailedDescription">Available blend methods include the following (each method's equation is described as well) ADD = InitialValue + <span class="NDLSystemFont"><a href="NiSkyMaterial__ColorMap.htm">ColorMap</a></span>* Modifier MULTIPLY = InitialValue* <span class="NDLSystemFont"><a href="NiSkyMaterial__ColorMap.htm">ColorMap</a></span>* Modifier INTERPOLATE = lerp(InitialValue, ColorMap, Modifier)</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkObject</span></td>
    <td>the object to apply the blend stage to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiStageIndex</span></td>
    <td>the stage to set the configuration of </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiColorMap</span></td>
    <td>The blending color choosing method to be used </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiModifierSource</span></td>
    <td>The modifier calculation method to be used </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiBlendMethod</span></td>
    <td>the color blending method to use </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_sky_material_1a55f1c155f0c3b2f1acdd05b265a4c0a4"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetBlendStageConfiguration(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkObject, <br/><span class="NDLSystemFont">NiUInt32</span> uiStageIndex, <br/><span class="NDLSystemFont">NiUInt32</span>& uiColorMap, <br/><span class="NDLSystemFont">NiUInt32</span>& uiModifierSource, <br/><span class="NDLSystemFont">NiUInt32</span>& uiBlendMethod) const</p>
<p class="NDLRefMemberDescription">Configure a particular blend stage of the material by applying an extra data constant to the object. </p>
<p class="NDLRefMemberDetailedDescription">There are presently 5 blend stages, with each one configurable through 3 categories of selections <span class="NDLSystemFont"><a href="NiSkyMaterial__ColorMap.htm">ColorMap</a></span> - Specifies how a color is chosen to be blended <span class="NDLSystemFont"><a href="NiSkyMaterial__BlendMethod.htm">BlendMethod</a></span> - Specifies how to blend the colors <span class="NDLSystemFont"><a href="NiSkyMaterial__ModifierSource.htm">ModifierSource</a></span> - Specifies how to calculate a modifier value for the blend method.</p>
<p class="NDLRefMemberDetailedDescription">The color used to begin with is the outcome of the Atmospheric scattering calculations. In the event that atmospheric scattering is not used, the initial color of the sky is black.</p>
<p class="NDLRefMemberDetailedDescription">Available blend methods include the following (each method's equation is described as well) ADD = InitialValue + <span class="NDLSystemFont"><a href="NiSkyMaterial__ColorMap.htm">ColorMap</a></span>* Modifier MULTIPLY = InitialValue* <span class="NDLSystemFont"><a href="NiSkyMaterial__ColorMap.htm">ColorMap</a></span>* Modifier INTERPOLATE = lerp(InitialValue, ColorMap, Modifier)</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkObject</span></td>
    <td>the object to apply the blend stage to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiStageIndex</span></td>
    <td>the stage to set the configuration of </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiColorMap</span></td>
    <td>The blending color choosing method to be used </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiModifierSource</span></td>
    <td>The modifier calculation method to be used </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiBlendMethod</span></td>
    <td>the color blending method to use </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_sky_material_1a44c8671d101644210f5118f6f9a6b9d3"></a>
<p class="NDLRefMemberFunction">void  DisableBlendStage(<br/><span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkObject, <br/><span class="NDLSystemFont">NiUInt32</span> uiStageIndex)</p>
<p class="NDLRefMemberDescription">Disable a specific blend stage. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkObject</span></td>
    <td>the object to apply the configuration to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiStageIndex</span></td>
    <td>the stage to disable </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_sky_material_1a9b993ca33bc7df18995a8f0e743f0ee0"></a>
<p class="NDLRefMemberFunction">void  SetAtmosphericCalcMode(<br/><span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkObject, <br/><span class="NDLSystemFont">NiUInt32</span> uiCalcMode)</p>
<p class="NDLRefMemberDescription">Specify the method of calculating the atmospheric coloring of the sky by applying a special extra data constant value to the object. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkObject</span></td>
    <td>the object to apply the calculation to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiCalcMode</span></td>
    <td>the method of calculating the scattering values either NONE, GPU_VS, or GPU_PS </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_sky_material_1a009ff4cd14e653c43d5dd224d73d8653"></a>
<p class="NDLRefMemberFunction">void  SetModifierHorizonBiasValues(<br/><span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkObject, <br/><span class="NDLSystemFont">NiUInt32</span> uiStageIndex, <br/>float fExponent, <br/>float fHorizonBias)</p>
<p class="NDLRefMemberDescription">Specify the parameters to the calculation of the horizon bias modifier. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkObject</span></td>
    <td>the object to apply the configuration to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiStageIndex</span></td>
    <td>the stage to set the configuration of </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fExponent</span></td>
    <td>the power to apply to the linear value </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fHorizonBias</span></td>
    <td>a value to interpolate between linear and the power value </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_sky_material_1a713be5415aa4f8dc97747c8d00e5a2b7"></a>
<p class="NDLRefMemberFunction">void  SetModifierValue(<br/><span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkObject, <br/><span class="NDLSystemFont">NiUInt32</span> uiStageIndex, <br/>float fModifier)</p>
<p class="NDLRefMemberDescription">Set the modifier value to use in a particular blend stage. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkObject</span></td>
    <td>the object to apply the configuration to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiStageIndex</span></td>
    <td>the stage to set the configuration of </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fModifier</span></td>
    <td>the value to use in the blend calculation </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_sky_material_1a52aeab66ee0f9a6ae42c9ab091964e71"></a>
<p class="NDLRefMemberFunction">void  SetGradientValues(<br/><span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkObject, <br/><span class="NDLSystemFont">NiUInt32</span> uiStageIndex, <br/>float fExponent, <br/>float fHorizonBias, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiColorA.htm">NiColorA</a></span>& kHorizonColor, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiColorA.htm">NiColorA</a></span>& kZenithColor)</p>
<p class="NDLRefMemberDescription">Specify the parameters to the calculation of the gradient color map. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkObject</span></td>
    <td>the object to apply the configuration to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiStageIndex</span></td>
    <td>the stage to set the configuration of </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fExponent</span></td>
    <td>the power to apply to the linear interpolator </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fHorizonBias</span></td>
    <td>a value to interpolate between linear and the power value for interpolation </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kHorizonColor</span></td>
    <td>the color close to the horizon </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kZenithColor</span></td>
    <td>the color close to the summit of the dome </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_sky_material_1aab15eeae5da6a8b214dacd62ba494001"></a>
<p class="NDLRefMemberFunction">void  SetOrientedSkyboxValues(<br/><span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkObject, <br/><span class="NDLSystemFont">NiUInt32</span> uiStageIndex, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiMatrix3.htm">NiMatrix3</a></span>& kOrientation)</p>
<p class="NDLRefMemberDescription">Specify the orientation of the skybox used in a particular blend stage. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkObject</span></td>
    <td>the object to apply the configuration to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiStageIndex</span></td>
    <td>the stage to set the configuration of </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kOrientation</span></td>
    <td>the matrix representing the orientation of the skybox </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

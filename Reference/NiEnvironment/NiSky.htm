<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiSky</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiSky</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiNode.htm">NiNode</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiSky.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_sky.gif" alt="Inheritance graph for NiSky"/>
  <p class="FigureCaption">Inheritance graph for NiSky</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This abstract class is used to represent a Sky mesh. </p>
<p class="NDLNormal">Subclasses are responsible for implementing the actual mesh geometry, whilst this class takes care of the application of the <span class="NDLSystemFont"><a href="NiSkyMaterial.htm">NiSkyMaterial</a></span> and the relevant configuration required for the <span class="NDLSystemFont"><a href="NiSkyMaterial.htm">NiSkyMaterial</a></span>. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>
<a name="class_ni_sky_1ac0a968e802c8c18886c456f020b34665"></a>
<p class=NDLRefHead2>NiSky::Constraints</p>


<p class="NDLRefMemberDescription">Replicate the number of blend stages available. </p>


<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">NUM_BLEND_STAGES</span></td>
    <td>The maximum number of blend stages supported by the Sky Material. </td>
</tr>

  </tbody>
</table>
</div>



<a name="class_ni_sky_1a8708246cb234874a2d8587e149eb6526"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="NiSkyMaterial__AtmosphericCalcMode.htm">NiSkyMaterial::AtmosphericCalcMode</a></span>  AtmosphericCalcMode</p>
<p class="NDLRefMemberDescription">Expose the <span class="NDLSystemFont"><a href="NiSkyMaterial.htm">NiSkyMaterial</a></span> atmosphere calculation mode. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_sky_1aeb590438c181390cab28ec95c0411543"></a>
<p class="NDLRefMemberFunction">NiSky()</p>
<p class="NDLRefMemberDescription">Constructor. </p>

<a name="class_ni_sky_1a94d46f09236245f33e9a4122f09961b6"></a>
<p class="NDLRefMemberFunction">virtual ~NiSky()</p>
<p class="NDLRefMemberDescription">Virtual Destructor. </p>

<a name="class_ni_sky_1a10eab6b758166cd7d3e41e3bb8a58507"></a>
<p class="NDLRefMemberFunction">virtual void  SetAtmosphere(<span class="NDLSystemFont"><a href="NiAtmosphere.htm">NiAtmosphere</a></span>* pkAtmosphere)</p>
<p class="NDLRefMemberDescription">Set the Atmosphere object to use when calculating atmospheric colors for the sky. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkAtmosphere</span></td>
    <td>a configured <span class="NDLSystemFont"><a href="NiAtmosphere.htm">NiAtmosphere</a></span> object </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_sky_1ad3c6f9ddd2ce8e81e6c2d484dc54a36b"></a>
<p class="NDLRefMemberFunction">virtual void  SetSun(<span class="NDLSystemFont"><a href="../NiMain/NiDirectionalLight.htm">NiDirectionalLight</a></span>* pkSun)</p>
<p class="NDLRefMemberDescription">Set the directional light to be used as the sun in all atmospheric calculations on the sky. </p>
<p class="NDLRefMemberDetailedDescription">Only the direction is used in calculations. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkSun</span></td>
    <td>a directional light object configured to be the sun </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_sky_1a579d5300f935a73a424d685bf5c6509c"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiAtmosphere.htm">NiAtmosphere</a></span>*  GetAtmosphere()</p>
<p class="NDLRefMemberDescription">Get the atmosphere object in use. </p>

<a name="class_ni_sky_1a4359d137a2fb6de54837e7755db775a3"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiMain/NiDirectionalLight.htm">NiDirectionalLight</a></span>*  GetSun()</p>
<p class="NDLRefMemberDescription">Get the sun light object in use. </p>

<a name="class_ni_sky_1a5fc5f803aa91b75e284509c47c49abe8"></a>
<p class="NDLRefMemberFunction">void  SetAtmosphericCalcMode(<span class="NDLSystemFont"><a href="NiSkyMaterial__AtmosphericCalcMode.htm#struct_ni_sky_material_1_1_atmospheric_calc_mode_1ab675f294293b885f53134ddafb0e2ed8">AtmosphericCalcMode::Value</a></span> eCalcMode)</p>
<p class="NDLRefMemberDescription">Set the atmospheric calculation mode. </p>
<p class="NDLRefMemberDetailedDescription">This allows the designer to select from 3 options, and in future versions, 4 options. NONE - No atmospheric calculations GPU_VS - Vertex shader calculations GPU_PS - Pixel shader calculations and in future, CPU calculations. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">eCalcMode</span></td>
    <td>the selected calculation mode. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_sky_1af2bd449892ccd6cd4026766102fc701c"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiSkyMaterial__AtmosphericCalcMode.htm#struct_ni_sky_material_1_1_atmospheric_calc_mode_1ab675f294293b885f53134ddafb0e2ed8">AtmosphericCalcMode::Value</a></span>  GetAtmosphericCalcMode()</p>
<p class="NDLRefMemberDescription">Get the atmospheric calculation mode in use. </p>

<a name="class_ni_sky_1a7ec322b7e7df04b72791532f3e28f9e3"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiSkyBlendStage.htm">NiSkyBlendStage</a></span>*  GetBlendStage(<span class="NDLSystemFont">NiUInt32</span> uiStage)</p>
<p class="NDLRefMemberDescription">Get a pointer to the blend parameters for the given stage. </p>

<a name="class_ni_sky_1a1caac664f2bc2c1855c25c4f3a9ddf30"></a>
<p class="NDLRefMemberFunction">void  InsertBlendStage(<br/><span class="NDLSystemFont">NiUInt32</span> uiStage, <br/><span class="NDLSystemFont"><a href="NiSkyBlendStage.htm">NiSkyBlendStage</a></span>* pkStage)</p>
<p class="NDLRefMemberDescription">Insert a set of stage parameters at the given point, moving any existing stages down backwards in position. </p>

<a name="class_ni_sky_1a594706841e881ad84f45e1ef8270992a"></a>
<p class="NDLRefMemberFunction">void  SetBlendStage(<br/><span class="NDLSystemFont">NiUInt32</span> uiStage, <br/><span class="NDLSystemFont"><a href="NiSkyBlendStage.htm">NiSkyBlendStage</a></span>* pkStage)</p>
<p class="NDLRefMemberDescription">Set the parameters for the given stage. </p>

<a name="class_ni_sky_1a81d10900089d96d65ae3d0c15f63173f"></a>
<p class="NDLRefMemberFunction">void  MarkBlendStagesChanged()</p>
<p class="NDLRefMemberDescription">Notify the skydome that it needs to update the material with up to date shader constants. </p>
<p class="NDLRefMemberDetailedDescription">Should be called whenever the stages are modifies </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

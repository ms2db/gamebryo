<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiTimeOfDay</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiTimeOfDay</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiTimeOfDay.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_time_of_day.gif" alt="Inheritance graph for NiTimeOfDay"/>
  <p class="FigureCaption">Inheritance graph for NiTimeOfDay</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class is the main management class for the <span class="NDLSystemFont">NiTimeOfDay</span> animation system. </p>
<p class="NDLNormal">It allows almost any variable within a scene to be animated by animations described in an XML file. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_time_of_day_1afdecc3d13343c1fa99a76367d9c1bfe7"></a>
<p class="NDLRefMemberFunction">void  Start(float fTime = 0.0f)</p>
<p class="NDLRefMemberDescription">Calling this function will set the animation to active and set the current animation time to the specified time. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">fTime</span></td>
    <td>the animation time to set </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1a2c26524f0c4b008ab69c457d0616371e"></a>
<p class="NDLRefMemberFunction">void  SetActive(<span class="NDLSystemFont">bool</span> bActive)</p>
<p class="NDLRefMemberDescription">Sets a flag allowing animation when bActive is true. </p>
<p class="NDLRefMemberDetailedDescription">Animation will pause when bActive is false.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">bActive</span></td>
    <td>Whether the <span class="NDLSystemFont">NiTimeOfDay</span> should be active or not </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1a72f26fd6ae75a2091bc84a68102923e5"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetActive() const</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>true if the TimeOfDay system is currently animating </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1af774dc9909646f1068bb00e6f03becdd"></a>
<p class="NDLRefMemberFunction">void  SetTime(float fTime)</p>
<p class="NDLRefMemberDescription">Set the time of the animation directly. </p>
<p class="NDLRefMemberDetailedDescription">This allows seeking to a specific point in time in the animation.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">fTime</span></td>
    <td>the animation time to set </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1a624d83671c8c85a9c2b7a5efc7849b06"></a>
<p class="NDLRefMemberFunction">float  GetTime() const</p>
<p class="NDLRefMemberDescription">Gets the time of day according to the TimeOfDay system in seconds. </p>
<p class="NDLRefMemberDetailedDescription">This value is usually calculated in Update and should only be called after an Update has been executed.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>the current time of day </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1afa3b941105cb53b81b811c1a339f1ce9"></a>
<p class="NDLRefMemberFunction">float  GetDuration() const</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>the duration of the time of day sequence, in seconds. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1adc7bfa1428a0ca246713b66f58e0887b"></a>
<p class="NDLRefMemberFunction">void  SetDuration(float fDuration)</p>
<p class="NDLRefMemberDescription">Sets the length of a day. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">fDuration</span></td>
    <td>the length of the day </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1aecde9cf95484ed255323d41234550d93"></a>
<p class="NDLRefMemberFunction">void  SetTimeMultiplier(float fScale)</p>
<p class="NDLRefMemberDescription">Set a time scale multiplier to speedup/slow/reverse the progression of time in the animation. </p>
<p class="NDLRefMemberDetailedDescription">Set this value to 1 for normal animation.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">fScale</span></td>
    <td>The time multiplier to set </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1a23aecaf22f705f770f27c4169525408d"></a>
<p class="NDLRefMemberFunction">float  GetTimeMultiplier() const</p>
<p class="NDLRefMemberDescription">Get the time scale multiplier. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>the time multiplier in use </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1aa80e6f5d44c295c994d0ceab3a4efab2"></a>
<p class="NDLRefMemberFunction">void  GetPropertyNames(<span class="NDLSystemFont"><a href="../NiMain/NiTObjectSet.htm">NiTObjectSet</a></span>&lt;<span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>&gt;& kPropertyNames) const</p>
<p class="NDLRefMemberDescription">Generates a set of property names that can be animated by the current instance of the TimeOfDay system. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kPropertyNames</span></td>
    <td>List of name for the currently animating properties </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1af2cbae28f1de46ddb7b5bc5c51c17a83"></a>
<p class="NDLRefMemberFunction">void  GetPropertyNamesAndTypes(<br/><span class="NDLSystemFont"><a href="../NiMain/NiTObjectSet.htm">NiTObjectSet</a></span>&lt;<span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>&gt;& kPropertyNames, <br/><span class="NDLSystemFont"><a href="../NiMain/NiTObjectSet.htm">NiTObjectSet</a></span>&lt;<span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>&gt;& kPropertyTypes) const</p>
<p class="NDLRefMemberDescription">Generates a set of property names that can be animated by the current instance of the TimeOfDay system. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kPropertyNames</span></td>
    <td>List of names for the currently animating properties </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kPropertyTypes</span></td>
    <td>List of Types for the currently animating properties </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1af1bfedfbee4eb5fa0b7ffcf7c1b080e1"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsPropertyBound(const <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kPropertyName) const</p>
<p class="NDLRefMemberDescription">Returns true if the queried property is being animated by this system. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kPropertyName</span></td>
    <td>the name of the property to query </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>whether the property is bound or not </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1a471754fff2151031b99781d16a4c3851"></a>
<p class="NDLRefMemberFunction">template &lt;class T  , typename V  &gt; <span class="NDLSystemFont">bool</span>  BindProperty(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kPropertyName, <br/>const T& pkTarget)</p>
<p class="NDLRefMemberDescription">Registers a property in the scene that can be animated. </p>
<p class="NDLRefMemberDetailedDescription">This function is templated to allow the correct controller to be generated according to what type the property is.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kPropertyName</span></td>
    <td>the name of the property being registered </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkTarget</span></td>
    <td>the object that manages the value </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if successful </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1a63d6209982bd0a568683a19ecf84c3ca"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  LoadAnimation(const <span class="NDLSystemFont"><a href="../NiMain/NiString.htm">NiString</a></span>& kFileName)</p>
<p class="NDLRefMemberDescription">Load the animation tracks from an XML file. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kFileName</span></td>
    <td>the name of the file to load the animations from </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if successful </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1ac0fc7e88d7515da48efdfb78caa41a29"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  LoadAnimation(efd::TiXmlElement* pkAnimationElement)</p>
<p class="NDLRefMemberDescription">Load the animation tracks from an XML file. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkAnimationElement</span></td>
    <td>Pointer to the next xml element to load </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if successful </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1ad0247852a9714d8752ca45a3daedf1c2"></a>
<p class="NDLRefMemberFunction">void  RegisterEnvironment(<span class="NDLSystemFont"><a href="NiEnvironment.htm">NiEnvironment</a></span>* pkEnvironment)</p>
<p class="NDLRefMemberDescription">Register all the variables available in the <span class="NDLSystemFont"><a href="NiEnvironment.htm">NiEnvironment</a></span> interface as possible properties for animations. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkEnvironment</span></td>
    <td>Pointer to the environment object to register </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1a5711729da62189093015ab22401e7428"></a>
<p class="NDLRefMemberFunction">void  UnregisterEnvironment(<span class="NDLSystemFont"><a href="NiEnvironment.htm">NiEnvironment</a></span>* pkEnvironment)</p>
<p class="NDLRefMemberDescription">Removes all the variables available in the <span class="NDLSystemFont"><a href="NiEnvironment.htm">NiEnvironment</a></span> interface from the associated animation properties . </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkEnvironment</span></td>
    <td>Pointer to the environment object to unregister </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1a6b44595f66ddc291ad6831fef747f10c"></a>
<p class="NDLRefMemberFunction">void  RegisterAtmosphere(<span class="NDLSystemFont"><a href="NiAtmosphere.htm">NiAtmosphere</a></span>* pkAtmosphere)</p>
<p class="NDLRefMemberDescription">Register all the variables available in the <span class="NDLSystemFont"><a href="NiAtmosphere.htm">NiAtmosphere</a></span> interface as possible properties for animations. </p>
<p class="NDLRefMemberDetailedDescription">This function is automatically called by the RegisterEnvironment function.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkAtmosphere</span></td>
    <td>Pointer to the atmosphere object to register </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1aafad9d9e8e2b6a127b2663f82a283065"></a>
<p class="NDLRefMemberFunction">void  UnregisterAtmosphere(<span class="NDLSystemFont"><a href="NiAtmosphere.htm">NiAtmosphere</a></span>* pkAtmosphere)</p>
<p class="NDLRefMemberDescription">Removes all the variables available in the <span class="NDLSystemFont"><a href="NiAtmosphere.htm">NiAtmosphere</a></span> interface from the associated animation properties . </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkAtmosphere</span></td>
    <td>Pointer to the atmosphere object to unregister </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1a2415b1eeb6dc1d969206bc221bfa16d9"></a>
<p class="NDLRefMemberFunction">void  RegisterSkyDome(<span class="NDLSystemFont"><a href="NiSkyDome.htm">NiSkyDome</a></span>* pkSky)</p>
<p class="NDLRefMemberDescription">Register all the variables available in the <span class="NDLSystemFont"><a href="NiSky.htm">NiSky</a></span> interface as possible properties for animations. </p>
<p class="NDLRefMemberDetailedDescription">This function is automatically called by the RegisterEnvironment function.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkSky</span></td>
    <td>Pointer to the sky dome object to register </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1aeffcba1a3fe2e410bb407ec6a2a0456b"></a>
<p class="NDLRefMemberFunction">void  UnregisterSkyDome(<span class="NDLSystemFont"><a href="NiSkyDome.htm">NiSkyDome</a></span>* pkSky)</p>
<p class="NDLRefMemberDescription">Removes all the variables available in the <span class="NDLSystemFont"><a href="NiSkyDome.htm">NiSkyDome</a></span> interface from the associated animation properties . </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkSky</span></td>
    <td>Pointer to the sky dome object to unregister </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1aa07ea906db70a9ea2efcec1daa2b3e75"></a>
<p class="NDLRefMemberFunction">void  UpdatePropertySequence(<br/><span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span> kPropertyName, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiNumKeyframes, <br/><span class="NDLSystemFont"><a href="../efd/efd__vector.htm">efd::vector</a></span>&lt;float&gt; kTimes, <br/><span class="NDLSystemFont"><a href="../efd/efd__vector.htm">efd::vector</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&gt; kValues)</p>
<p class="NDLRefMemberDescription">Updates a given property's sequence with the keyframes given in parameter. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kPropertyName</span></td>
    <td>The name of the property to update </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiNumKeyframes</span></td>
    <td>Total number of keyframes to be set to the property sequence </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kTimes</span></td>
    <td>list of individual keyframe times </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kValues</span></td>
    <td>list of individual keyframe values </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1a8c99e31a5ef76252b1b28bda7171821b"></a>
<p class="NDLRefMemberFunction">void  UpdatePropertySequence(<br/><span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span> kPropertyName, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiNumKeyframes, <br/><span class="NDLSystemFont"><a href="../efd/efd__vector.htm">efd::vector</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&gt; kTimes, <br/><span class="NDLSystemFont"><a href="../efd/efd__vector.htm">efd::vector</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&gt; kValues)</p>
<p class="NDLRefMemberDescription">Updates a given property's sequence with the keyframes given in parameter. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kPropertyName</span></td>
    <td>The name of the property to update </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiNumKeyframes</span></td>
    <td>Total number of keyframes to be set to the property sequence </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kTimes</span></td>
    <td>list of individual keyframe times </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kValues</span></td>
    <td>list of individual keyframe values </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1a11dac1922dcb6092fe239efca70a8b66"></a>
<p class="NDLRefMemberFunction">void  GetPropertySequence(<br/><span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span> kPropertyName, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& uiNumKeyframes, <br/><span class="NDLSystemFont"><a href="../efd/efd__vector.htm">efd::vector</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&gt;& kTimes, <br/><span class="NDLSystemFont"><a href="../efd/efd__vector.htm">efd::vector</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&gt;& kValues)</p>
<p class="NDLRefMemberDescription">Retrieves a given property's sequence. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kPropertyName</span></td>
    <td>The name of the property to get data from </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiNumKeyframes</span></td>
    <td>Total number of keyframes held in the property's sequence </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kTimes</span></td>
    <td>list of individual keyframe times </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kValues</span></td>
    <td>list of individual keyframe values </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1af7f2f4e8c0feea25dfd2fa58fee025c5"></a>
<p class="NDLRefMemberFunction">void  RemoveToDProperties(<span class="NDLSystemFont"><a href="../efd/efd__vector.htm">efd::vector</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&gt; kToRemoveList)</p>
<p class="NDLRefMemberDescription">Removes the properties from the given list. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kToRemoveList</span></td>
    <td>list of property names to remove </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1a5f1431b783ec2b293c662a5adaf71410"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiMain/NiString.htm">NiString</a></span>  ConvertValueToString(<span class="NDLSystemFont"><a href="../efd/efd__ColorA.htm">efd::ColorA</a></span> kValue)</p>
<p class="NDLRefMemberDescription">Helper functions that convert a color into a string. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kValue</span></td>
    <td>the color to convert </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>the resulting string. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_time_of_day_1a47ecf27d328ace465200bdef2a27194a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiMain/NiString.htm">NiString</a></span>  ConvertValueToString(float fValue)</p>
<p class="NDLRefMemberDescription">Helper functions that convert a float into a string. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">fValue</span></td>
    <td>the float to convert </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>the resulting string. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="constructor/destructor"></a>
<p class="NDLRefHead1">Constructor/Destructor</p>


<a name="class_ni_time_of_day_1a921ba93620afcf86fea7b0cb7394565f"></a>
<p class="NDLRefMemberFunction">NiTimeOfDay()</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_ni_time_of_day_1a203e8adb3a00bf817acd30579dc45b95"></a>
<p class="NDLRefMemberFunction">virtual ~NiTimeOfDay()</p>
<p class="NDLRefMemberFunction"></p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiCubeMapRenderStep</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiCubeMapRenderStep</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiRenderStep.htm">NiRenderStep</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiCubeMapRenderStep.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_cube_map_render_step.gif" alt="Inheritance graph for NiCubeMapRenderStep"/>
  <p class="FigureCaption">Inheritance graph for NiCubeMapRenderStep</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class implements a render step that is capable of rendering a scene from 6 different camera angles into the 6 camera faces of a supplied <span class="NDLSystemFont"><a href="../NiMain/NiRenderedCubeMap.htm">NiRenderedCubeMap</a></span> object. </p>
<p class="NDLNormal">It also supports functionality to pull the rendered faces back to system memory for export to files if necessary. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_cube_map_render_step_1ac725391889f942352f4bab821cafa4b7"></a>
<p class="NDLRefMemberFunction">~NiCubeMapRenderStep()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_cube_map_render_step_1a39fa3b955644e41b68631ccf5788adee"></a>
<p class="NDLRefMemberFunction">unsigned int  GetCamerasPerUpdate()</p>
<p class="NDLRefMemberDescription">Get the number of faces updated per frame. </p>

<a name="class_ni_cube_map_render_step_1aee17e0adbf124c943c957104acafdafa"></a>
<p class="NDLRefMemberFunction">void  SetCamerasPerUpdate(unsigned int uiNum)</p>
<p class="NDLRefMemberDescription">Set the number of faces updated per frame. </p>

<a name="class_ni_cube_map_render_step_1a31408c35a69ce96c578c74767467620d"></a>
<p class="NDLRefMemberFunction">void  SetSwapLeftRight(<span class="NDLSystemFont">bool</span> bSwapLeftRight)</p>
<p class="NDLRefMemberDescription">Set whether or not to swap left and right when rendering the cubemap. </p>
<p class="NDLRefMemberDetailedDescription">When rendering a reflection cubemap left and right should be swapped. </p>

<a name="class_ni_cube_map_render_step_1a39e8b10ec505f44b4787152da07c492d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetSwapLeftRight()</p>
<p class="NDLRefMemberDescription">Get whether or not left and right will be swapped when rendering. </p>

<a name="class_ni_cube_map_render_step_1a79eeef1c597619c882c61a26aa05897d"></a>
<p class="NDLRefMemberFunction">void  SetBackgroundColor(const <span class="NDLSystemFont"><a href="../NiMain/NiColorA.htm">NiColorA</a></span>& kColor)</p>
<p class="NDLRefMemberDescription">Set the background color to clear to when rendering a face. </p>

<a name="class_ni_cube_map_render_step_1a6279b4e2d5519999ac49162f76207997"></a>
<p class="NDLRefMemberFunction">void  GetBackgroundColor(<span class="NDLSystemFont"><a href="../NiMain/NiColorA.htm">NiColorA</a></span>& kColor)</p>
<p class="NDLRefMemberDescription">Get the background color to clear the cubemap to. </p>

<a name="class_ni_cube_map_render_step_1a605ca552cb4557d534d65fc3e9f36feb"></a>
<p class="NDLRefMemberFunction">void  SetUseRendererBackgroundColor(<span class="NDLSystemFont">bool</span> bUseRendererBG)</p>
<p class="NDLRefMemberDescription">Set whether or not the renderer's background color should be used. </p>

<a name="class_ni_cube_map_render_step_1a5cfe06fab3950698a040b4d0f778b52a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetUseRendererBackgroundColor()</p>
<p class="NDLRefMemberDescription">Get whether or not the renderer's background color should be used. </p>

<a name="class_ni_cube_map_render_step_1aca513a402b451d741e892f43f0f0d554"></a>
<p class="NDLRefMemberFunction">void  SetPersistBackgroundColorToRenderer(<span class="NDLSystemFont">bool</span> bPersist)</p>
<p class="NDLRefMemberDescription">Set whether or not the render step's background color should persist after execution. </p>

<a name="class_ni_cube_map_render_step_1ab2112455bce184497b13d5b169c8d0b8"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetPersistBackgroundColorToRenderer()</p>
<p class="NDLRefMemberDescription">Get whether or not the render step's background color should persist. </p>
<p class="NDLRefMemberDetailedDescription">after execution. </p>

<a name="class_ni_cube_map_render_step_1a460f523cf13d0dbf20bf98a2dc39772e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiMain/NiPixelData.htm">NiPixelData</a></span>*  TakeScreenshot(<span class="NDLSystemFont"><a href="../NiMain/NiRenderedCubeMap.htm">NiRenderedCubeMap::FaceID</a></span> uiFaceID)</p>
<p class="NDLRefMemberDescription">Generate a <span class="NDLSystemFont"><a href="../NiMain/NiPixelData.htm">NiPixelData</a></span> object from one of the faces of the rendered cube map. </p>
<p class="NDLRefMemberDetailedDescription">Useful for exporting a rendered image to disk.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiFaceID</span></td>
    <td>The face ID of the face to generate a <span class="NDLSystemFont"><a href="../NiMain/NiPixelData.htm">NiPixelData</a></span> for </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_cube_map_render_step_1ac3fc9e81961b66daafbec912b33a63a7"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  SetOutputRenderTargetGroup(<span class="NDLSystemFont"><a href="../NiMain/NiRenderTargetGroup.htm">NiRenderTargetGroup</a></span>* pkOutputRenderTargetGroup)</p>
<p class="NDLRefMemberDescription">Function for setting the render target group that will contain the final output for this render step. </p>

<a name="class_ni_cube_map_render_step_1a399a6556d5ffd66cab77fa1745408714"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../NiMain/NiRenderTargetGroup.htm">NiRenderTargetGroup</a></span>*  GetOutputRenderTargetGroup()</p>
<p class="NDLRefMemberDescription">Function for getting the render target group that will contain the final output for this render step. </p>

<a name="class_ni_cube_map_render_step_1a5c9cd82989de2ab91910b619c7470007"></a>
<p class="NDLRefMemberFunction">virtual unsigned int  GetNumObjectsDrawn() const</p>
<p class="NDLRefMemberDescription">Reports the number of objects drawn in the most recent frame. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription"><span class="NDLSystemFont"><a href="../NiMain/NiRenderStep.htm">NiRenderStep</a></span></p></p>

<a name="class_ni_cube_map_render_step_1ac41763124242d0c6d95df134fbef0520"></a>
<p class="NDLRefMemberFunction">virtual float  GetCullTime() const</p>
<p class="NDLRefMemberDescription">Reports the amount of time spent culling in the most recent frame. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription"><span class="NDLSystemFont"><a href="../NiMain/NiRenderStep.htm">NiRenderStep</a></span></p></p>

<a name="class_ni_cube_map_render_step_1aad11eef8e46d64b716fafee55f1abc59"></a>
<p class="NDLRefMemberFunction">virtual float  GetRenderTime() const</p>
<p class="NDLRefMemberDescription">Reports the amount of time spent rendering the most recent frame. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription"><span class="NDLSystemFont"><a href="../NiMain/NiRenderStep.htm">NiRenderStep</a></span></p></p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="class_ni_cube_map_render_step_1a28bf5cd204e0bdd4dc9209b89ed5c554"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">NiCubeMapRenderStep</span>*  Create(<br/><span class="NDLSystemFont"><a href="../NiMain/NiRenderedCubeMap.htm">NiRenderedCubeMap</a></span>* pkMap, <br/><span class="NDLSystemFont"><a href="../NiMain/NiRenderer.htm">NiRenderer</a></span>* pkRenderer, <br/><span class="NDLSystemFont"><a href="../NiMain/NiNode.htm">NiNode</a></span>* pkScene, <br/><span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkReference)</p>
<p class="NDLRefMemberDescription">Method for constructing a <span class="NDLSystemFont">NiCubeMapRenderStep</span>. </p>
<p class="NDLRefMemberDetailedDescription">The render step will render the scene from 6 different camera angles to the 6 camera faces of the supplied CubeMap. This rendering will take place from the position of the reference object.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkMap</span></td>
    <td>The cube map to render to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkRenderer</span></td>
    <td>The renderer to use when rendering the scene </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkScene</span></td>
    <td>The scene to render to the cubemap </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkReference</span></td>
    <td>The object to have at the center of the scene </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

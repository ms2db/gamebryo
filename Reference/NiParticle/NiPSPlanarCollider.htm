<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPSPlanarCollider</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiPSPlanarCollider</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="NiPSCollider.htm">NiPSCollider</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiPSPlanarCollider.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_p_s_planar_collider.gif" alt="Inheritance graph for NiPSPlanarCollider"/>
  <p class="FigureCaption">Inheritance graph for NiPSPlanarCollider</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">A planar collider for particles. </p>
<p class="NDLNormal">The planar collider is defined by several parameters. A position in space, defined by the world translation of a collider object in the scene graph, sits at the center of the collider. An x-axis and y-axis, defined in the collider object's model space, define a plane at that point. The normal of the plane is the cross product of the x-axis and the y-axis. A width and a height determine how far along the x-axis and y-axis the collider extends. </p>

<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="class_ni_p_s_planar_collider_1aa3b97a4dbdd61a1e1e35f5035ef3a8d2"></a>
<p class="NDLRefMemberFunction">NiPSPlanarCollider(<br/>float fBounce = 1.0f, <br/><span class="NDLSystemFont">bool</span> bSpawnOnCollide = false, <br/><span class="NDLSystemFont">bool</span> bDieOnCollide = false, <br/><span class="NDLSystemFont"><a href="NiPSSpawner.htm">NiPSSpawner</a></span>* pkSpawner = NULL, <br/><span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkColliderObj = NULL, <br/>float fWidth = 1.0f, <br/>float fHeight = 1.0f, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kXAxis = NiPoint3::UNIT_X, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kYAxis = NiPoint3::UNIT_Y)</p>
<p class="NDLRefMemberDescription">Main constructor. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">fBounce</span></td>
    <td>The bounce value for the collider. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bSpawnOnCollide</span></td>
    <td>Whether or not new particles should be spawned upon collision. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bDieOnCollide</span></td>
    <td>Whether or not particles should immediately die upon collision. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkSpawner</span></td>
    <td>The spawner object to use for the collider. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkColliderObj</span></td>
    <td>An object in the scene graph whose world-space transformation will be used to represent the position and orientation of the collider. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fWidth</span></td>
    <td>The width of the collider, measured along kXAxis. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fHeight</span></td>
    <td>The height of the collider, measured along kYAxis. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kXAxis</span></td>
    <td>A unit vector in the model space of pkColliderObj that represents one axis defining a plane. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kYAxis</span></td>
    <td>A unit vector in the model space of pkColliderObj that represents one axis defining a plane. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="base_class_overrides"></a>
<p class="NDLRefHead1">Base Class Overrides</p>


<a name="class_ni_p_s_planar_collider_1a3584eac93bfce0ce1e345d44c3509211"></a>
<p class="NDLRefMemberFunction">virtual size_t  GetDataSize() const</p>
<p class="NDLRefMemberDescription">Returns the size in bytes of the data block provided by the collider. </p>

<a name="class_ni_p_s_planar_collider_1ab83a6563e93d990a8e6644a356a0fc99"></a>
<p class="NDLRefMemberFunction">virtual void*  GetData() const</p>
<p class="NDLRefMemberDescription">Returns a pointer to the data block provided by the collider. </p>

<a name="class_ni_p_s_planar_collider_1a52d089469f366b17018b3d4ce064e4d7"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  Update(<br/><span class="NDLSystemFont"><a href="NiPSParticleSystem.htm">NiPSParticleSystem</a></span>* pkParticleSystem, <br/>float fTime)</p>
<p class="NDLRefMemberDescription">Updates the data for the collider. </p>
<a name="protected_attributes"></a>
<p class="NDLRefHead1">Protected Attributes</p>


<a name="class_ni_p_s_planar_collider_1a033ff8ebb57ef5dfd1ac386b1f1323c9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiMain/NiTransform.htm">NiTransform</a></span>  m_kLastColliderTransform</p>
<p class="NDLRefMemberDescription">Caching variable used to reduce unnecessary per-frame computations. </p>

<a name="class_ni_p_s_planar_collider_1ad633093adffd707332de9a88b8d0d7e3"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiMain/NiTransform.htm">NiTransform</a></span>  m_kLastPSysTransform</p>
<p class="NDLRefMemberDescription">Caching variable used to reduce unnecessary per-frame computations. </p>

<a name="class_ni_p_s_planar_collider_1a0bf8b42f351d1dd2608a94d8bcc6056c"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>*  GetColliderObj() const</p>
<p class="NDLRefMemberDescription">Accesses the object in the scene graph whose world-space transformation will represent the position and orientation of the collider. </p>

<a name="class_ni_p_s_planar_collider_1ab56a8db3af91837bb35963462b56a123"></a>
<p class="NDLRefMemberFunction">void  SetColliderObj(<span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkColliderObj)</p>
<p class="NDLRefMemberDescription">Caching variable used to reduce unnecessary per-frame computations. </p>

<a name="class_ni_p_s_planar_collider_1af4d703e4921d5e347d650084b04aaf8f"></a>
<p class="NDLRefMemberFunction">float  GetWidth() const</p>
<p class="NDLRefMemberDescription">Accesses the width of the collider, measured along the plane's x-axis. </p>

<a name="class_ni_p_s_planar_collider_1a27f2e5a13e4033927c24e360bfacc9ca"></a>
<p class="NDLRefMemberFunction">void  SetWidth(float fWidth)</p>
<p class="NDLRefMemberDescription">Caching variable used to reduce unnecessary per-frame computations. </p>

<a name="class_ni_p_s_planar_collider_1a510c40a3a5f816d9cf32f7abaec1121e"></a>
<p class="NDLRefMemberFunction">float  GetHeight() const</p>
<p class="NDLRefMemberDescription">Accesses the height of the collider, measured along the plane's y-axis. </p>

<a name="class_ni_p_s_planar_collider_1a2155df73b84a1b1326258d514146c99c"></a>
<p class="NDLRefMemberFunction">void  SetHeight(float fHeight)</p>
<p class="NDLRefMemberDescription">Caching variable used to reduce unnecessary per-frame computations. </p>

<a name="class_ni_p_s_planar_collider_1acaa69fe04073811dc47720ffd18690a2"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>&  GetXAxis() const</p>
<p class="NDLRefMemberDescription">Accesses one of the unit vectors defining the plane, specified in the model space of the collider object. </p>

<a name="class_ni_p_s_planar_collider_1a3a0d2e63371bdffc457b3eb7cb59edfe"></a>
<p class="NDLRefMemberFunction">void  SetXAxis(const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kXAxis)</p>
<p class="NDLRefMemberDescription">Caching variable used to reduce unnecessary per-frame computations. </p>

<a name="class_ni_p_s_planar_collider_1af640032f6a9dac955b6b039724a2e015"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>&  GetYAxis() const</p>
<p class="NDLRefMemberDescription">Accesses one of the unit vectors defining the plane, specified in the model space of the collider object. </p>

<a name="class_ni_p_s_planar_collider_1a1f1dd1efe1e80874337860e24d1fa7a4"></a>
<p class="NDLRefMemberFunction">void  SetYAxis(const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kYAxis)</p>
<p class="NDLRefMemberDescription">Caching variable used to reduce unnecessary per-frame computations. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

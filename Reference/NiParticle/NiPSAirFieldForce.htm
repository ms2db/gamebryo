<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPSAirFieldForce</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiPSAirFieldForce</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="NiPSFieldForce.htm">NiPSFieldForce</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiPSAirFieldForce.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_p_s_air_field_force.gif" alt="Inheritance graph for NiPSAirFieldForce"/>
  <p class="FigureCaption">Inheritance graph for NiPSAirFieldForce</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Updates the particle velocity to simulate the effects of air movements like wind, fans, or wake. </p>
<p class="NDLNormal">The field object, direction, and inherit rotation define the location and orientation of the air field. The magnitude defines the maximum velocity in particle space. Inherit velocity describes how much of the air field's velocity is added to the magnitude and direction of the air field.</p>
<p class="NDLNormal">It is important to remember that this class dynamically computes the velocity of the air field from frame to frame. Radically changing the position of the field object can cause large instantaneous velocities, so ClearLastFieldPosition should be called in such a case.</p>
<p class="NDLNormal">Here are some settings to define typical effects:</p>
<p class="NDLNormal">
<ul>
<li>Wind
<ul>
<li>Magnitude = wind speed</li>
<li>Inherit Velocity = 0.0</li>
<li>Inherit Rotation = false</li>
<li>Use Spread = false</li></ul></li>
<li>Fan
<ul>
<li>Magnitude = air speed</li>
<li>Inherit Velocity = 0.5</li>
<li>Inherit Rotation = true</li>
<li>Use Spread = true</li></ul></li>
<li>Wake
<ul>
<li>Magnitude = 0.0</li>
<li>Inherit Velocity = 1.0</li>
<li>Inherit Rotation = true</li>
<li>Use Spread = false </li></ul></li></ul></p>

<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="class_ni_p_s_air_field_force_1a1f5b2090123a6985c89df4ce5218c48b"></a>
<p class="NDLRefMemberFunction">NiPSAirFieldForce(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kName, <br/><span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkFieldObj, <br/>float fMagnitude, <br/>float fAttenuation, <br/><span class="NDLSystemFont">bool</span> bUseMaxDistance, <br/>float fMaxDistance, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kDirection, <br/>float fAirFriction, <br/>float fInheritedVelocity, <br/><span class="NDLSystemFont">bool</span> bInheritRotation, <br/><span class="NDLSystemFont">bool</span> bEnableSpread, <br/>float fSpread)</p>
<p class="NDLRefMemberDescription">Main constructor. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kName</span></td>
    <td>The name of the force. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkFieldObj</span></td>
    <td>The object in the scene graph whose world-space transformations will be used to represent the position and orientation of the field. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fMagnitude</span></td>
    <td>The magnitude of the force. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fAttenuation</span></td>
    <td>How the magnitude of the force diminishes with distance from the field object. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bUseMaxDistance</span></td>
    <td>Whether or not to use a maximum distance from the field object after which the force has no effect. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fMaxDistance</span></td>
    <td>The maximum distance from the field object at which the force has any effect. This distance is only used if bUseMaxDistance is true. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kDirection</span></td>
    <td>The direction of the air flow. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fAirFriction</span></td>
    <td>How quickly particles will accelerate to the magnitude of the air field. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fInheritedVelocity</span></td>
    <td>How much of the air field's velocity will be added to the magnitude and direction. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bInheritRotation</span></td>
    <td>Whether or not changes in the rotation of the field object will be reflected in the final direction of the air field. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bEnableSpread</span></td>
    <td>Whether or not the air flow is cone-shaped relative to the direction of the air field. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fSpread</span></td>
    <td>The angle of the air field cone if bEnableSpread is true. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_p_s_air_field_force_1a1e238d3ab0da93b32266ca14bc10ac0e"></a>
<p class="NDLRefMemberFunction">NiPSAirFieldForce()</p>
<p class="NDLRefMemberDescription">Protected default constructor for cloning and streaming only. </p>
<a name="base_class_overrides"></a>
<p class="NDLRefHead1">Base Class Overrides</p>


<a name="class_ni_p_s_air_field_force_1a056251f886893257b420fbf074d09d8b"></a>
<p class="NDLRefMemberFunction">virtual size_t  GetDataSize() const</p>
<p class="NDLRefMemberDescription">Returns the size in bytes of the data block provided by the force. </p>

<a name="class_ni_p_s_air_field_force_1abde8fefd6b6b155afb887b481a6edd82"></a>
<p class="NDLRefMemberFunction">virtual void*  GetData() const</p>
<p class="NDLRefMemberDescription">Returns a pointer to the data block provided by the force. </p>

<a name="class_ni_p_s_air_field_force_1a224f38ea213c2d440fbad3a5d6fffc00"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  Update(<br/><span class="NDLSystemFont"><a href="NiPSParticleSystem.htm">NiPSParticleSystem</a></span>* pkParticleSystem, <br/>float fTime)</p>
<p class="NDLRefMemberDescription">Updates the data for the force. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_p_s_air_field_force_1aaec08d1b6d617370030fc49297ceca8b"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>&  GetLastFieldPosition() const</p>
<p class="NDLRefMemberDescription">Accesses the last position of the air field object in particle space. </p>
<p class="NDLRefMemberDetailedDescription">The field's velocity is computed using the last updated position of the field. Radically changing the position of the field object can cause large instantaneous velocities. In this case, ClearLastFieldPosition should be called. </p>

<a name="class_ni_p_s_air_field_force_1aa69a2cf7d749f6b047a1597342d24c05"></a>
<p class="NDLRefMemberFunction">void  SetLastFieldPosition(const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kLastFieldPosition)</p>
<p class="NDLRefMemberDescription">Accesses the last position of the air field object in particle space. </p>
<p class="NDLRefMemberDetailedDescription">The field's velocity is computed using the last updated position of the field. Radically changing the position of the field object can cause large instantaneous velocities. In this case, ClearLastFieldPosition should be called. </p>

<a name="class_ni_p_s_air_field_force_1a898bb25aee7d1514e881ea3c2fd85f2f"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>&  GetDirection() const</p>
<p class="NDLRefMemberDescription">Accesses the direction of the air flow. </p>
<p class="NDLRefMemberDetailedDescription">This direction vector will either be in particle space or in the space of the air field object, depending on the value of GetInheritRotation. </p>

<a name="class_ni_p_s_air_field_force_1a2a4da00526fd80792677a368d13788f0"></a>
<p class="NDLRefMemberFunction">void  SetDirection(const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kDirection)</p>
<p class="NDLRefMemberDescription">Accesses the last position of the air field object in particle space. </p>
<p class="NDLRefMemberDetailedDescription">The field's velocity is computed using the last updated position of the field. Radically changing the position of the field object can cause large instantaneous velocities. In this case, ClearLastFieldPosition should be called. </p>

<a name="class_ni_p_s_air_field_force_1a901c98cef29cdcb6fe146dbec7efc9c9"></a>
<p class="NDLRefMemberFunction">float  GetAirFriction() const</p>
<p class="NDLRefMemberDescription">Accesses how quickly particles will accelerate to the magnitude of the air field. </p>
<p class="NDLRefMemberDetailedDescription">Valid air friction values range from 0.0 to 1.0. An air friction of 0.0 indicates that particles are not affected by air at all. A value of 1.0 means that particles almost instantaneously accelerate to the magnitude of the air field. </p>

<a name="class_ni_p_s_air_field_force_1a9510ee3f56eda63c06d6ac7c214e18cf"></a>
<p class="NDLRefMemberFunction">void  SetAirFriction(float fAirFriction)</p>
<p class="NDLRefMemberDescription">Accesses the last position of the air field object in particle space. </p>
<p class="NDLRefMemberDetailedDescription">The field's velocity is computed using the last updated position of the field. Radically changing the position of the field object can cause large instantaneous velocities. In this case, ClearLastFieldPosition should be called. </p>

<a name="class_ni_p_s_air_field_force_1a4d1514d95191424f28737ace06456e01"></a>
<p class="NDLRefMemberFunction">float  GetInheritedVelocity() const</p>
<p class="NDLRefMemberDescription">Accesses how much of the air field's velocity will be added to the magnitude and direction. </p>
<p class="NDLRefMemberDetailedDescription">Valid values range from 0.0 to 1.0. </p>

<a name="class_ni_p_s_air_field_force_1a22b07ff99a6bf96d6618a522480546d2"></a>
<p class="NDLRefMemberFunction">void  SetInheritedVelocity(float fInheritedVelocity)</p>
<p class="NDLRefMemberDescription">Accesses the last position of the air field object in particle space. </p>
<p class="NDLRefMemberDetailedDescription">The field's velocity is computed using the last updated position of the field. Radically changing the position of the field object can cause large instantaneous velocities. In this case, ClearLastFieldPosition should be called. </p>

<a name="class_ni_p_s_air_field_force_1aa50fee2bf0774fdb1bf64952df400211"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetInheritRotation() const</p>
<p class="NDLRefMemberDescription">Accesses whether or not changes in the rotation of the field object will be reflected in the final direction of the air field. </p>
<p class="NDLRefMemberDetailedDescription">If this value is true, the direction of the air field is in the space of the field object. Any changes to the rotation of the field object will be reflected in the final direction of the air field. If this value is false, the direction of the air field is in particle space. </p>

<a name="class_ni_p_s_air_field_force_1a6091a1b1fa025242a7004d192ea745e0"></a>
<p class="NDLRefMemberFunction">void  SetInheritRotation(<span class="NDLSystemFont">bool</span> bInheritRotation)</p>
<p class="NDLRefMemberDescription">Accesses the last position of the air field object in particle space. </p>
<p class="NDLRefMemberDetailedDescription">The field's velocity is computed using the last updated position of the field. Radically changing the position of the field object can cause large instantaneous velocities. In this case, ClearLastFieldPosition should be called. </p>

<a name="class_ni_p_s_air_field_force_1ade7ab37a5b56440f337df22e15cd8f90"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetEnableSpread() const</p>
<p class="NDLRefMemberDescription">Accesses whether or not the air flow is cone-shaped relative to the direction of the air field. </p>
<p class="NDLRefMemberDetailedDescription">If this value is false, the air flow is parallel to the direction of the air field. If this value is true, the air flow is a cone shaped from the field object. The angle of the cone is specified by SetSpread. An example of an air field with this option enabled would be the air patter created by a fan. </p>

<a name="class_ni_p_s_air_field_force_1a2b5998e387a0c4d39c26d381f7df4b09"></a>
<p class="NDLRefMemberFunction">void  SetEnableSpread(<span class="NDLSystemFont">bool</span> bEnableSpread)</p>
<p class="NDLRefMemberDescription">Accesses the last position of the air field object in particle space. </p>
<p class="NDLRefMemberDetailedDescription">The field's velocity is computed using the last updated position of the field. Radically changing the position of the field object can cause large instantaneous velocities. In this case, ClearLastFieldPosition should be called. </p>

<a name="class_ni_p_s_air_field_force_1acbc46c61459f60af8c6bf89c2763a704"></a>
<p class="NDLRefMemberFunction">float  GetSpread() const</p>
<p class="NDLRefMemberDescription">Accesses the angle of the air field cone if GetEnableSpread returns true. </p>
<p class="NDLRefMemberDetailedDescription">Valid spread values range from 0.0 to 1.0, where 0.0 is a line and 1.0 is the 180-degree half-sphere. </p>

<a name="class_ni_p_s_air_field_force_1a162989c5f2f05870fcc14781baaf6d00"></a>
<p class="NDLRefMemberFunction">void  SetSpread(float fSpread)</p>
<p class="NDLRefMemberDescription">Accesses the last position of the air field object in particle space. </p>
<p class="NDLRefMemberDetailedDescription">The field's velocity is computed using the last updated position of the field. Radically changing the position of the field object can cause large instantaneous velocities. In this case, ClearLastFieldPosition should be called. </p>

<a name="class_ni_p_s_air_field_force_1a28a69e0a8adf0e43a794eb23e255014b"></a>
<p class="NDLRefMemberFunction">void  ClearLastFieldPosition()</p>
<p class="NDLRefMemberDescription">Clears the stored last position of the air field object. </p>
<p class="NDLRefMemberDetailedDescription">This is useful when the air field object's position will be radically changed so as to avoid large instantaneous velocities. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPSEmitter</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiPSEmitter</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiObject.htm">NiObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiPSEmitter.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_p_s_emitter.gif" alt="Inheritance graph for NiPSEmitter"/>
  <p class="FigureCaption">Inheritance graph for NiPSEmitter</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">The abstract base class for all particle emitters. </p>
<p class="NDLNormal">This class contains an EmitParticles function that does the work of emitting new particles using a bunch of initial parameters that are stored as member variables in the class.</p>
<p class="NDLNormal">Emitter classes that derive from <span class="NDLSystemFont">NiPSEmitter</span> have the option of overriding the protected ComputeInitialPositionAndVelocity function and using the base class EmitParticles function if the only thing they are customizing is the position and velocity of new particles as they are emitted. They also have the option to override EmitParticles entirely to fully customize new particle creation. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_p_s_emitter_1a13eeb51f70edbb0b04291b21fe53828f"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>&  GetName() const</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1a4d56490b5b99770e40a46d2fcb00bb13"></a>
<p class="NDLRefMemberFunction">void  SetName(const <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kName)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1a7c20de7f831ca894061f2616095873b8"></a>
<p class="NDLRefMemberFunction">float  GetSpeed() const</p>
<p class="NDLRefMemberDescription">Accesses the speed assigned to new particles. </p>

<a name="class_ni_p_s_emitter_1a9c529ad10e4a5147faab9a8b311d0eca"></a>
<p class="NDLRefMemberFunction">void  SetSpeed(float fSpeed)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1a375a831366cba7f6ceae60576709e927"></a>
<p class="NDLRefMemberFunction">float  GetSpeedVar() const</p>
<p class="NDLRefMemberDescription">Accesses the speed variation for new particles. </p>
<p class="NDLRefMemberDetailedDescription">The resulting speed values assigned to new particles will be evenly distributed over the range [fSpeed - fSpeedVar/2, fSpeed + fSpeedVar/2]. </p>

<a name="class_ni_p_s_emitter_1a325bfa693200d67265687ae7c9c21164"></a>
<p class="NDLRefMemberFunction">void  SetSpeedVar(float fSpeedVar)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1a7486315c35d48b7817020a998b69813f"></a>
<p class="NDLRefMemberFunction">float  GetSpeedFlipRatio() const</p>
<p class="NDLRefMemberDescription">Accesses the speed flip ratio. </p>
<p class="NDLRefMemberDetailedDescription">The speed flip ratio controls the proportion of particles that have their velocity direction flipped upon emission. A value of 0 means that all particles maintain the velocity given by other parameters. A value of 1 means that all particles will have their velocity negated from that given by the other emisster properties. A value of 0.75 means that 75% of particles will be flipped.</p>
<p class="NDLRefMemberDetailedDescription">Speed flipping is done after the ComputeInitialPositionAndVelocity function is called. </p>

<a name="class_ni_p_s_emitter_1a12a73700ad039caffb9bf735bd26cc25"></a>
<p class="NDLRefMemberFunction">void  SetSpeedFlipRatio(float fFlipRatio)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1ab8b37b5d2874ca1e64f74d3091d24c2d"></a>
<p class="NDLRefMemberFunction">float  GetDeclination() const</p>
<p class="NDLRefMemberDescription">Accesses the declination angle in radians from the positive z-axis for the velocity vector of newly created particles. </p>
<p class="NDLRefMemberDetailedDescription">The expected range of declination is from 0.0, which will set the velocity vector to [0,0,1], to NI_PI, which will set the velocity vector to [0,0,-1]. </p>

<a name="class_ni_p_s_emitter_1a05feb2619c43a2f5f7ff14a4b9b70013"></a>
<p class="NDLRefMemberFunction">void  SetDeclination(float fDeclination)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1a64acfaab3de55cb9c0d24a9d20f46272"></a>
<p class="NDLRefMemberFunction">float  GetDeclinationVar() const</p>
<p class="NDLRefMemberDescription">Accesses the declination variation in radians for new particles. </p>
<p class="NDLRefMemberDetailedDescription">The resulting declination values assigned to new particles will be evenly distributed over the range [fDeclination - fDeclinationVar, fDeclination + fDeclinationVar]. </p>

<a name="class_ni_p_s_emitter_1a3e4eb77e9dc2114eade5cc8e816ef6f0"></a>
<p class="NDLRefMemberFunction">void  SetDeclinationVar(float fDeclinationVar)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1a31b712b5e77b9216cc55334932037d11"></a>
<p class="NDLRefMemberFunction">float  GetPlanarAngle() const</p>
<p class="NDLRefMemberDescription">Accesses the planar angle in radians about the z-axis from the positive x-axis that will serve as the plane in which the declination will occur. </p>
<p class="NDLRefMemberDetailedDescription">The expected range of the planar angle is [0, 2*NI_PI). </p>

<a name="class_ni_p_s_emitter_1a57fe77fed68ba0bc59cadf43cb851f3f"></a>
<p class="NDLRefMemberFunction">void  SetPlanarAngle(float fPlanarAngle)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1a621ad679d4c6c00bcdc6543d63e6d0ca"></a>
<p class="NDLRefMemberFunction">float  GetPlanarAngleVar() const</p>
<p class="NDLRefMemberDescription">Accesses the planar angle variation in radians for new particles. </p>
<p class="NDLRefMemberDetailedDescription">The resulting planar angle values assigned to new particles will be evenly distributed over the range [fPlanarAngle - fPlanarAngleVar, fPlanarAngle + fPlanarAngleVar]. </p>

<a name="class_ni_p_s_emitter_1aa78ecbdeab4b30a338831d32ca8a47b7"></a>
<p class="NDLRefMemberFunction">void  SetPlanarAngleVar(float fPlanarAngleVar)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1aa584941d320ca629e69310968af6e9a9"></a>
<p class="NDLRefMemberFunction">float  GetSize() const</p>
<p class="NDLRefMemberDescription">Accesses the size assigned to new particles. </p>

<a name="class_ni_p_s_emitter_1a1b706029425441cdabf26da8ad339bd5"></a>
<p class="NDLRefMemberFunction">void  SetSize(float fSize)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1aab70cd15af5301e1a4aa66797023fd6e"></a>
<p class="NDLRefMemberFunction">float  GetSizeVar() const</p>
<p class="NDLRefMemberDescription">Accesses the radius variation for new particles. </p>
<p class="NDLRefMemberDetailedDescription">The resulting radius values assigned to new particles will be evenly distributed over the range [fSize - fSizeVar, fSize + fSizeVar].</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">If fSizeVar is larger than fSize, it is possible that the radius will be set to a negative value. In this case, the particle will be flipped, and the bounding volume may be computed incorrectly. Thus, it is recommended that fSizeVar be less than or equal to fSize. </p></p>

<a name="class_ni_p_s_emitter_1af6283005861557b657ef00778ba75097"></a>
<p class="NDLRefMemberFunction">void  SetSizeVar(float fSizeVar)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1a3692a6f580ce2c2765ba3a8db3627791"></a>
<p class="NDLRefMemberFunction">float  GetLifeSpan() const</p>
<p class="NDLRefMemberDescription">Accesses the life span in seconds assigned to new particles. </p>

<a name="class_ni_p_s_emitter_1a1b3f1dfadcf394faa4188f1a0fdcf566"></a>
<p class="NDLRefMemberFunction">void  SetLifeSpan(float fLifeSpan)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1a2a1a3e2e67cb2c7b3de870c8314d71d8"></a>
<p class="NDLRefMemberFunction">float  GetLifeSpanVar() const</p>
<p class="NDLRefMemberDescription">Accesses the life span variation for new particles. </p>
<p class="NDLRefMemberDetailedDescription">The resulting life span values assigned to new particles will be evenly distributed over the range [fLifeSpan - fLifeSpanVar/2, fLifeSpan + fLifeSpanVar/2]. </p>

<a name="class_ni_p_s_emitter_1a64dbc796737574c5566bf85d0464eb90"></a>
<p class="NDLRefMemberFunction">void  SetLifeSpanVar(float fLifeSpanVar)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1a440b94eb75bbc31f58454bc5d4c53487"></a>
<p class="NDLRefMemberFunction">float  GetRotAngle() const</p>
<p class="NDLRefMemberDescription">Accesses the rotation angle in radians assigned to new particles. </p>

<a name="class_ni_p_s_emitter_1a6f3972c6e657b05fffa598556ec6f284"></a>
<p class="NDLRefMemberFunction">void  SetRotAngle(float fRotAngle)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1af8d3f3edcd2a41f81a71abcc2579ed48"></a>
<p class="NDLRefMemberFunction">float  GetRotAngleVar() const</p>
<p class="NDLRefMemberDescription">Accesses the rotation angle variation in radians for new particles. </p>
<p class="NDLRefMemberDetailedDescription">The resulting rotation angle values assigned to new particles will be evenly distributed over the range [fRotAngle - fRotAngleVar, fRotAngle + fRotAngleVar]. </p>

<a name="class_ni_p_s_emitter_1a01905e802948ef3215c42e7c5a70d630"></a>
<p class="NDLRefMemberFunction">void  SetRotAngleVar(float fRotAngleVar)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1a39e768905b554439120e7e3395cb0d27"></a>
<p class="NDLRefMemberFunction">float  GetRotSpeed() const</p>
<p class="NDLRefMemberDescription">Accesses the rotation speed in radians per second assigned to new particles. </p>

<a name="class_ni_p_s_emitter_1a33e87d8a55519acdb552a69ecdae5cbc"></a>
<p class="NDLRefMemberFunction">void  SetRotSpeed(float fRotSpeed)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1ad1763d219237bfab80fe3607cb0df7f7"></a>
<p class="NDLRefMemberFunction">float  GetRotSpeedVar() const</p>
<p class="NDLRefMemberDescription">Accesses the rotation speed variation in radians per second for new particles. </p>
<p class="NDLRefMemberDetailedDescription">The resulting rotation speed values assigned to new particles will be evenly distributed over the range [fRotSpeed - fRotSpeedVar, fRotSpeed + fRotSpeedVar]. </p>

<a name="class_ni_p_s_emitter_1acc83fb1b4da48e869613279c6a42e38d"></a>
<p class="NDLRefMemberFunction">void  SetRotSpeedVar(float fRotSpeedVar)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1ad27ff0452cdfd44b85b190ee0f50bed4"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetRandomRotSpeedSign() const</p>
<p class="NDLRefMemberDescription">Accesses whether or not the rotation speed sign should be randomly flipped when being assigned to new particles. </p>

<a name="class_ni_p_s_emitter_1a6708af8fe5d7eb967116c178e20e0458"></a>
<p class="NDLRefMemberFunction">void  SetRandomRotSpeedSign(<span class="NDLSystemFont">bool</span> bRandomRotSpeedSign)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1a9e5896216c067ee97ff8aae8b9554791"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>&  GetRotAxis() const</p>
<p class="NDLRefMemberDescription">Accesses the rotation axis assigned to new particles. </p>
<p class="NDLRefMemberDetailedDescription">This value is only used if bRandomRotAxis is false. </p>

<a name="class_ni_p_s_emitter_1ae813b51a49a0888806fe5256a6e24f0d"></a>
<p class="NDLRefMemberFunction">void  SetRotAxis(const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kRotAxis)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1a48974a9580d0c2464b0b1f91b8984fbd"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetRandomRotAxis() const</p>
<p class="NDLRefMemberDescription">Accesses whether or not a random rotation axis will be assigned to new particles. </p>

<a name="class_ni_p_s_emitter_1a1136be68ccc9f946e5984a6884b23b43"></a>
<p class="NDLRefMemberFunction">void  SetRandomRotAxis(<span class="NDLSystemFont">bool</span> bRandomRotAxis)</p>
<p class="NDLRefMemberDescription">Accesses the name of the emitter. </p>
<p class="NDLRefMemberDetailedDescription">The emitter name is used to locate the proper emitter when attaching an <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span> object to the particle system. </p>

<a name="class_ni_p_s_emitter_1abbf7f93820f98280c06c6a236a682c4a"></a>
<p class="NDLRefMemberFunction">virtual void  EmitParticles(<br/><span class="NDLSystemFont"><a href="NiPSParticleSystem.htm">NiPSParticleSystem</a></span>* pkParticleSystem, <br/>float fTime, <br/><span class="NDLSystemFont">NiUInt32</span> uiNumParticles, <br/>const float* pfAges)</p>
<p class="NDLRefMemberDescription">Emits particles into the specified particle system. </p>
<p class="NDLRefMemberDetailedDescription">This function is generally called from an <span class="NDLSystemFont"><a href="NiPSEmitParticlesCtlr.htm">NiPSEmitParticlesCtlr</a></span> object, but it can be called by anyone.</p>
<p class="NDLRefMemberDetailedDescription">Internally, it calls the protected ComputeInitialPositionAndVelocity function, which is pure virtual and must be overridden by derived classes. Many derived classes will be able to just override ComputeInitialPositionAndVelocity and let this version of EmitParticles do the rest, but it is possible to override EmitParticles entirely to completely customize how particles are emitted.</p>
<p class="NDLRefMemberDetailedDescription">EmitParticles uses the various initial parameters stored in this class to initialize new particles. It also calls InitializeParticle on the <span class="NDLSystemFont"><a href="NiPSParticleSystem.htm">NiPSParticleSystem</a></span> object to allow for further particle initialization.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkParticleSystem</span></td>
    <td>The particle system in which the particles should be emitted. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fTime</span></td>
    <td>The current time. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiNumParticles</span></td>
    <td>The number of particles to emit. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pfAges</span></td>
    <td>An array of size uiNumParticles that holds initial age values for each new particle. This allows particles to be emitted in the past in order to ensure even particle emission with an uneven frame rate. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_p_s_emitter_1ab2c3feabc3fbc863dd7f2e227c4e044b"></a>
<p class="NDLRefMemberFunction">virtual void  ResetTransformation()</p>
<p class="NDLRefMemberDescription">Reset the emitter's internal cache of transformation information. </p>
<p class="NDLRefMemberDetailedDescription">The emitter holds a previous transform and the corresponding time so that it can interpolate the emitted particle position through a frame. Call this method to clear that information when there is a discontinuity in the motion of the emitter or the previous frame's information is otherwise invalid.</p>
<p class="NDLRefMemberDetailedDescription">The particle system objects call this when they are reset. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

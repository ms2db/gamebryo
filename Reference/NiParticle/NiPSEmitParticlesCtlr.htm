<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPSEmitParticlesCtlr</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiPSEmitParticlesCtlr</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="NiPSEmitterCtlr.htm">NiPSEmitterCtlr</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiPSEmitParticlesCtlr.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_p_s_emit_particles_ctlr.gif" alt="Inheritance graph for NiPSEmitParticlesCtlr"/>
  <p class="FigureCaption">Inheritance graph for NiPSEmitParticlesCtlr</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Animates particle emission and birth rate. </p>
<p class="NDLNormal">This controller contains two interpolators that control when an <span class="NDLSystemFont"><a href="NiPSEmitter.htm">NiPSEmitter</a></span> should emit particles. The two interpolators hold an array of <span class="NDLSystemFont"><a href="../NiAnimation/NiFloatKey.htm">NiFloatKey</a></span> objects that define the birth rate over time and an array of <span class="NDLSystemFont"><a href="../NiAnimation/NiBoolKey.htm">NiBoolKey</a></span> objects that indicate whether or not the emitter is active over time. Sequence animation relies upon two evaluators instead of two interpolators; however, their operation is similar.</p>
<p class="NDLNormal">The Update and UpdateValue functions of this controller determine how many new particles, if any, need to be emitted and then call EmitParticles on its associated <span class="NDLSystemFont"><a href="NiPSEmitter.htm">NiPSEmitter</a></span> object.</p>
<p class="NDLNormal">
<p class="NDLNormal">No particles will be emitted if the time range for this controller is zero. Even if both interpolators are posed, the time range for this controller should be set to a non-zero value, such as 1.0, in order for particles to be emitted properly. </p></p>

<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="class_ni_p_s_emit_particles_ctlr_1a53c0431b5d239dd80350881a78d92e9c"></a>
<p class="NDLRefMemberFunction">NiPSEmitParticlesCtlr(const <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kEmitterName)</p>
<p class="NDLRefMemberDescription">Main constructor. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kEmitterName</span></td>
    <td>The name of the <span class="NDLSystemFont"><a href="NiPSEmitter.htm">NiPSEmitter</a></span> object that should be used to emit particles. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_p_s_emit_particles_ctlr_1a71850c566cc00e72ea490accd627a213"></a>
<p class="NDLRefMemberFunction">NiPSEmitParticlesCtlr()</p>
<p class="NDLRefMemberDescription">Protected default constructor for cloning and streaming only. </p>
<a name="base_class_overrides"></a>
<p class="NDLRefHead1">Base Class Overrides</p>


<a name="class_ni_p_s_emit_particles_ctlr_1add49dab60355e73f06b19f7a95914466"></a>
<p class="NDLRefMemberFunction">virtual void  Stop()</p>
<p class="NDLRefMemberDescription">This function marks this controller as inactive. </p>

<a name="class_ni_p_s_emit_particles_ctlr_1a5f10a04976c7d022034f67ec9a604afa"></a>
<p class="NDLRefMemberFunction">virtual void  Update(float fTime)</p>
<p class="NDLRefMemberDescription">This function determines how many new particles, if any, need to be emitted and then calls EmitParticles on the associated <span class="NDLSystemFont"><a href="NiPSEmitter.htm">NiPSEmitter</a></span> object. </p>

<a name="class_ni_p_s_emit_particles_ctlr_1ae5d2d59dd4db8769caa206b4ae7bd6f6"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  UpdateValue(<br/>float fTime, <br/><span class="NDLSystemFont"><a href="../NiAnimation/NiControllerSequence.htm">NiControllerSequence</a></span>* pkControllerSequence, <br/><span class="NDLSystemFont"><a href="../NiAnimation/NiEvaluator.htm">NiEvaluator</a></span>* pkEvaluator, <br/><span class="NDLSystemFont"><a href="../NiAnimation/NiEvaluatorSPData.htm">NiEvaluatorSPData</a></span> ** ppkEvalSPData, <br/>unsigned short usIndex = 0)</p>
<p class="NDLRefMemberDescription">This function sets the specified evaluator at the specified evaluator index. </p>
<p class="NDLRefMemberDetailedDescription">After the BirthRate and EmitterActive evaluators have both been set via this function for a given fTime, this function determines how many new particles, if any, need to be emitted and then calls EmitParticles on the associated <span class="NDLSystemFont"><a href="NiPSEmitter.htm">NiPSEmitter</a></span> object. ppkEvalSPData may be NULL when the evaluator contains posed (i.e. constant) data. </p>

<a name="class_ni_p_s_emit_particles_ctlr_1a2128483027a47e329f2175c9682a26d1"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  InterpolatorIsCorrectType(<br/><span class="NDLSystemFont"><a href="../NiAnimation/NiInterpolator.htm">NiInterpolator</a></span>* pkInterpolator, <br/>unsigned short usIndex) const</p>
<p class="NDLRefMemberDescription">This function marks this controller as inactive. </p>
<a name="protected_static_attributes"></a>
<p class="NDLRefHead1">Protected Static Attributes</p>


<a name="class_ni_p_s_emit_particles_ctlr_1aae4be063b0e0120d24a2c0ca61bdd482"></a>
<p class="NDLRefMemberFunction">static const char*  ms_pcBirthRate</p>
<p class="NDLRefMemberDescription">Name and index constants for use when attaching and detaching interpolators. </p>

<a name="class_ni_p_s_emit_particles_ctlr_1aa8b52d90fc49506fcb8bd39867f063c6"></a>
<p class="NDLRefMemberFunction">static const char*  ms_pcEmitterActive</p>
<p class="NDLRefMemberDescription">Name and index constants for use when attaching and detaching interpolators. </p>

<a name="class_ni_p_s_emit_particles_ctlr_1a48ae7a337a94b1016ad5338eab4f5261"></a>
<p class="NDLRefMemberFunction">static const <span class="NDLSystemFont">NiUInt16</span>  ms_usBirthRateIndex</p>
<p class="NDLRefMemberDescription">Name and index constants for use when attaching and detaching interpolators. </p>

<a name="class_ni_p_s_emit_particles_ctlr_1a4e4b3e1c2bf0745ea4eb3c09c0968d58"></a>
<p class="NDLRefMemberFunction">static const <span class="NDLSystemFont">NiUInt16</span>  ms_usEmitterActiveIndex</p>
<p class="NDLRefMemberDescription">Name and index constants for use when attaching and detaching interpolators. </p>

<a name="class_ni_p_s_emit_particles_ctlr_1a4bdbf907daf16eecf838b40cdd373fce"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiAnimation/NiFloatInterpolator.htm">NiFloatInterpolator</a></span>*  GetBirthRateInterpolator() const</p>
<p class="NDLRefMemberDescription">Accesses the interpolator that animates the emission birth rate. </p>

<a name="class_ni_p_s_emit_particles_ctlr_1a2e1fbe6f0f35cf3d8d299d6f115f52c8"></a>
<p class="NDLRefMemberFunction">void  SetBirthRateInterpolator(<span class="NDLSystemFont"><a href="../NiAnimation/NiFloatInterpolator.htm">NiFloatInterpolator</a></span>* pkInterpolator)</p>
<p class="NDLRefMemberDescription">Name and index constants for use when attaching and detaching interpolators. </p>

<a name="class_ni_p_s_emit_particles_ctlr_1a953e1544db2b2ae174cb3d2ef449bd04"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiAnimation/NiBoolInterpolator.htm">NiBoolInterpolator</a></span>*  GetEmitterActiveInterpolator() const</p>
<p class="NDLRefMemberDescription">Accesses the interpolator that animates when particles should be emitted. </p>

<a name="class_ni_p_s_emit_particles_ctlr_1aa7928364e32d04156ddb780147d03cf9"></a>
<p class="NDLRefMemberFunction">void  SetEmitterActiveInterpolator(<span class="NDLSystemFont"><a href="../NiAnimation/NiBoolInterpolator.htm">NiBoolInterpolator</a></span>* pkInterpolator)</p>
<p class="NDLRefMemberDescription">Name and index constants for use when attaching and detaching interpolators. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

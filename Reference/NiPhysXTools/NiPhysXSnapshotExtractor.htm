<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPhysXSnapshotExtractor</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiPhysXSnapshotExtractor</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__MemObject.htm">efd::MemObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiPhysXSnapshotExtractor.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_phys_x_snapshot_extractor.gif" alt="Inheritance graph for NiPhysXSnapshotExtractor"/>
  <p class="FigureCaption">Inheritance graph for NiPhysXSnapshotExtractor</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal"><span class="NDLSystemFont">NiPhysXSnapshotExtractor</span> objects are used to convert PhysX NxScene objects into Gamebryo PhysX scene descriptor objects. </p>
<p class="NDLNormal">To access the functionality, create an <span class="NDLSystemFont">NiPhysXSnapshotExtractor</span> object and call its member functions. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_phys_x_snapshot_extractor_1a9868e6011033e475047645d2a215bb15"></a>
<p class="NDLRefMemberFunction">NiPhysXSnapshotExtractor(const NxPlatform kPlatform = PLATFORM_PC)</p>
<p class="NDLRefMemberDescription">The default constructor allows you to, optionally, set the target platform for the snapshot. </p>

<a name="class_ni_phys_x_snapshot_extractor_1afe2a7a8da69adf7aff2f736d7419f11e"></a>
<p class="NDLRefMemberFunction">NxPlatform  GetTargetPlatform() const</p>
<p class="NDLRefMemberDescription">Get the target platform. </p>

<a name="class_ni_phys_x_snapshot_extractor_1a81f485be1ad0a8be1c97b33bb817cc2f"></a>
<p class="NDLRefMemberFunction">void  SetTargetPlatform(const NxPlatform kPlatform)</p>
<p class="NDLRefMemberDescription">Set the target platform. </p>
<p class="NDLRefMemberDetailedDescription">This determines the format for cooked cloth, convex and triangle meshes. </p>

<a name="class_ni_phys_x_snapshot_extractor_1a59744a943881271e0c1f79012ac86006"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXScene.htm">NiPhysXScene</a></span>*  ExtractSnapshot(<br/>NxScene* pkScene, <br/>const NxMat34& kXform, <br/><span class="NDLSystemFont">bool</span> bSetPhysXPtrs)</p>
<p class="NDLRefMemberDescription">Construct an <span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXScene.htm">NiPhysXScene</a></span> object with props and a full set of descriptors necessary to recreate a PhysX scene. </p>
<p class="NDLRefMemberDetailedDescription">The pose matrix, kXform, is used to convert all the poses and velocities of PhysX actors as they are saved to the descriptors. Use it if you would like the saved representation to be in a different coordinate system to the original scene.</p>
<p class="NDLRefMemberDetailedDescription">This returned scene does not include information about how the PhysX content is attached to Gamebryo objects; NiPhysX sources and destinations must be set up separately. However, if bSetPhysXPtrs is true, the Gamebryo descriptors will include pointers to the PhysX objects from which they were constructed. Otherwise, those pointers are NULL.</p>
<p class="NDLRefMemberDetailedDescription">The global pose of cloth objects is always saved as the identity matrix, with the pose matrix used to transform the cloth mesh vertices.</p>
<p class="NDLRefMemberDetailedDescription">The number of simulation compartments is inferred from the PhysX scene, and multiple props are created to separate content into the correct compartments. It will be necessary for the application to create appropriate compartments when using the snapshot that results. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

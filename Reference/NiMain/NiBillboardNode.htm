<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiBillboardNode</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<p class="NDLRefHeadClassTitle">NiBillboardNode</p>

<p class="NDLRefParentage">: public <span style="color: #0000ff;"><a href="NiNode.htm">NiNode</a></span></p>

<p class="NDLRefHeaderFile">&lt;NiBillboardNode.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiBillboardNode</span> 
 objects automatically adjust their local rotation matrices to cause their 
 children to &quot;face&quot; the camera at rendering time.&nbsp; They 
 may either rotate freely to point towards the camera, or may be constrained 
 to rotate about the <span class="NDLSystemFont">NiBillboardNode</span>'s 
 model-space-up-vector, which is defined to be <span class="NDLSystemFont">[0,1,0]</span>.&nbsp; Note 
 that this vector is the model-space &quot;up&quot; vector only -- Gamebryo 
 makes no requirements as to the world-space &quot;up&quot; vector used 
 by an application.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiBillboardNode()</p>

<p class="NDLRefMemberDescription">This constructor is the default constructor, 
 which constructs a billboard node with no children and a mode of <span 
 class="NDLSystemFont"><a href="NiBillboardNode.htm#Billboard_Rotation_Modes">NiBillboardNode::ROTATE_ABOUT_UP</a></span>.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction"><a href="NiBillboardNode.htm#Billboard_Rotation_Modes">FaceMode</a> 
 GetMode() const</p>

<p class="NDLRefMemberFunction">void SetMode(<a href="NiBillboardNode.htm#Billboard_Rotation_Modes">FaceMode</a> 
 eMode)</p>

<p class="NDLRefMemberDescription">Retrieve and set the rotation mode of 
 the <span class="NDLSystemFont">NiBillboardNode</span>. 
 The valid modes and their behaviors are described below in the &quot;Notes&quot; 
 section.</p>

<p class="NDLRefHead1">Notes</p>

<a name=Billboard_Rotation_Modes></a><p class="NDLRefHead2">Billboard Rotation 
 Modes</p>

<p>The following rotation modes are supported by Gamebryo; 
 note that rotation mode names are declared at the scope of <span class="NDLSystemFont">NiBillboardNode</span>, and 
 must be qualified accordingly.</p>

<p><span class="NDLSystemFont">ALWAYS_FACE_CAMERA: 
 </span>Causes the model-space z-vector to be in line with the camera's 
 view plane normal. In other words, any plane of constant Z in model space 
 will have its normal parallel to the camera's direction vector. Each frame, 
 the rotation required to re-establish this orientation is minimized. As 
 a result, this mode may differ from <span class="NDLSystemFont">RIGID_FACE_CAMERA</span>.</p>

<p><span class="NDLSystemFont">ROTATE_ABOUT_UP: 
 </span>Causes the model-space z-vector of the billboard to be as 
 close as possible to the camera's direction vector while only allowing 
 rotation about the billboard's model-space up-axis <span class="NDLSystemFont">[0,1,0]</span>. This mode is 
 useful for simulating cylindrically symmetric objects, such as light posts 
 and trees, using a single cross-sectional flat image.</p>

<p><span class="NDLSystemFont">RIGID_FACE_CAMERA: 
 </span>The billboard has a normal that is always parallel to the 
 camera's direction vector and the billboard and camera coordinate frames 
 change rigidly together.</p>

<p><span class="NDLSystemFont">ALWAYS_FACE_CENTER: 
 </span>Causes the model-space z-vector to point at the camera center. 
 Each frame, the rotation required to re-establish this orientation is 
 minimized. As a result, this mode may differ from <span class="NDLSystemFont">RIGID_FACE_CENTER</span>.</p>

<p><span class="NDLSystemFont">RIGID_FACE_CENTER: 
 </span>Causes the model-space z-vector to point at the camera center 
 while the billboard orientation is aligned with the camera coordinate 
 frame.</p>

<a name=Billboard_Nodes_and_Rotations></a><p class="NDLRefHead2">Billboard Nodes 
 and Rotations</p>

<p>Note that the local <span class="NDLSystemFont">SetRotate</span> and <span class="NDLSystemFont">GetRotate</span> 
 for a billboard will not set or retrieve the rotated-to-camera model-space 
 transform.&nbsp; This action is done externally from the billboard's own 
 local rotation, and allows the billboard to be rotated independently of 
 the rotate-to-camera transform.&nbsp; Note that the model-space rotate 
 and all other parent transforms happen to the left (i.e. closer to world-space) 
 of the billboard's rotate-to-camera transform.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

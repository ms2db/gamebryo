<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiSpecularProperty</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<p class="NDLRefHeadClassTitle">NiSpecularProperty</p>

<p class="NDLRefParentage">: public <u><span style="color: #0000ff;"><a href="NiProperty.htm"><span>NiProperty</span></a></span></u></p>

<p class="NDLRefHeaderFile">&lt;NiSpecularProperty.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>An <span class="NDLSystemFont">NiSpecularProperty</span> 
 allows the application to control the specular component of the lighting 
 equation to be computed and interpolated.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiSpecularProperty() </p>

<p class="NDLRefMemberDescription">Default constructor. Constructs a property 
 with the specular lighting enable flag set to be <span class="NDLSystemFont">false</span>.</p>

<p class="NDLRefHead1">Static Member Functions</p>

<p class="NDLRefMemberFunction">static int GetType()</p>

<p class="NDLRefMemberFunction">static NiSpecularProperty* GetDefault()</p>

<p class="NDLRefMemberDescription">See <span class="NDLSystemFont"><a HREF="NiProperty.htm">NiProperty</a></span> for details on these non-virtual 
 functions. </p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">bool GetSpecular() const</p>

<p class="NDLRefMemberFunction">void SetSpecular(bool bSpec)</p>

<p class="NDLRefMemberDescription">Retrieve and set the value of the specular 
 lighting enable flag. If set to <span class="NDLSystemFont">true</span>, 
 then specular lighting will be used when drawing polygons in the subtree 
 to which the property is attached if lighting is used and applied light 
 and material values require specular lighting. If the flag is set to <span class="NDLSystemFont">false</span>, 
 then specular lighting is disabled even if lighting calls for specular 
 lighting to be used.</p>

<p class="NDLRefMemberFunction">bool IsEqualFast(const NiSpecularProperty&amp; 
 kProp) const</p>

<p class="NDLRefMemberDescription">See <span class="NDLSystemFont">NiProperty</span> 
 for details on this non-virtual function. </p>

<p class="NDLRefHead1">Notes</p>

<p class="NDLRefHead2">Specular Lighting and Performance</p>

<p>Specular lighting is expensive to compute per-vertex 
 and may also incur added cost in rasterization.&nbsp; As a result, this 
 flag allows applications to inhibit specular lighting (in order to increase 
 performance) in subtrees that would otherwise use it.&nbsp; This technique 
 may be useful on marginal hardware platforms or with objects that are 
 too small or distant in a given frame to justify the expense of specular 
 lighting.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiSortAdjustNode</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiSortAdjustNode</p>

<p class="NDLRefParentage">: public <a href=
"NiNode.htm">NiNode</a></p>

<p class="NDLRefHeaderFile">&lt;NiSortAdjustNode.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiSortAdjustNode</span> behaves
like an <span class="NDLSystemFont"><a href=
"NiNode.htm">NiNode</a></span> in every way except one&mdash;it
has the ability to modify the leaf geometry under itself in a way
that can disable accumulation. <span class=
"NDLSystemFont">NiSortAdjustNode</span> objects can be used to
turn sorting off for individual subtrees in a scene. This
technique may be useful if parts of an otherwise sorted scene
graph must be drawn in a fixed order. This approach is commonly
used with alpha blended multi-part backdrops, which must
generally be drawn before any other scene objects. See 
<a href=
"../../Programmer/General_Topics/Object_Sorting.htm">Object
Sorting</a> for details of how accumulators and the
NiSortAdjustNode may be used together to create a desired
rendering effect.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiSortAdjustNode()</p>

<p class="NDLRefMemberDescription">This default constructor
creates a sorting adjustment node with no children and a sorting
mode of <span class="NDLSystemFont">SORTING_INHERIT</span>.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">SortingMode GetSortingMode()
const</p>

<p class="NDLRefMemberFunction">void SetSortingMode(SortingMode
eMode)</p>

<p class="NDLRefMemberDescription">These functions set and get
the sorting mode for the node. This switch controls the way that
this type of node modifies the sorting behavior for the subtree
below it. See the notes below for a discussion of each possible
mode.</p>

<p class="NDLRefHead1">Notes</p>

<p class="NDLRefHead2" style="background-color: Transparent;">
Sorting Mode Behaviors</p>

<p><span class="NDLSystemFont">NiSortAdjustNode</span> objects
have three possible sorting modes:</p>
<!--(Table)=========================================================-->

<table>
    <thead>
        <tr>
            <th>Mode</th>

            <th>Behavior</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><span class=
            "NDLSystemFont">SORTING_INHERIT</span></td>

            <td>Acts just like an <span class=
            "NDLSystemFont"><a href=
            "NiNode.htm">NiNode</a></span></td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">SORTING_OFF</span></td>

            <td>Sets the UseSort flag on all visible geometry
            objects under this node to false. This results in
            some accumulators (most notably <span class=
            "NDLSystemFont"><a href=
            "NiAlphaAccumulator.htm">NiAlphaAccumulator</a></span>)
            drawing these geometry objects immediately during
            <span class=
            "NDLSystemFont">RegisterObjectArray</span> (in almost
            all cases, in the order encountered during culling),
            rather than sorting them.</td>
        </tr>
    </tbody>
</table>

<p class="NDLRefHead2">Nested NiSortAdjustNodes</p>

<p>When an <span class="NDLSystemFont">NiSortAdjustNode</span> is
set to <span class="NDLSystemFont">SORTING_OFF</span>, it
overrides the behavior of all of the <span class=
"NDLSystemFont">NiSortAdjustNodes</span> below it in the
hierarchy. This is why the modes are named <span class=
"NDLSystemFont">INHERIT</span> and <span class=
"NDLSystemFont">OFF</span>, rather than <span class=
"NDLSystemFont">ON</span> and <span class=
"NDLSystemFont">OFF</span>. Once sorting is turned off at a node,
there is no wayto turn the sorting back on in a child object. As
a result, it is rarely useful to nest <span class=
"NDLSystemFont">NiSortAdjustNodes</span>.</p>

<p class="NDLRefHead2">NiSortAdjustNode Support</p>

<p>Note that in order for <span class=
"NDLSystemFont">NiSortAdjustNode</span> to function correctly,
the accumulator used to render the resulting culled geometrymust
be specifically written to obey the behavior of <span class=
"NDLSystemFont"><a href=
"NiAlphaProperty.htm">NiAlphaProperty</a>::GetNoSorter()</span>.
This is required because there is no direct linkage between
culling and accumulation - the two processes are completely
independent from one another. This is by design, to allow for
independent culling and rendering behavior.</p>

<p>By far, the most common accumulator used with <span class=
"NDLSystemFont">NiSortAdjustNode</span> is the <span class=
"NDLSystemFont"><a href=
"NiAlphaAccumulator.htm">NiAlphaAccumulator</a></span>, which
does support this behavior. See the documentation for any given
accumulator to determine whether it supports the <span class=
"NDLSystemFont"><a href=
"NiAlphaProperty.htm">NiAlphaProperty</a>::GetNoSorter()</span>
behavior.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

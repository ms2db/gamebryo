<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiRenderTargetGroup</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiRenderTargetGroup</p>

<p class="NDLRefParentage">: public <a href=
"NiObject.htm"><span>NiObject</span></a></p>

<p class="NDLRefHeaderFile">&lt;NiRenderTargetGroup.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This class represents a collection of <a href=
"Ni2DBuffer.htm"><span class=
"NDLSystemFont">Ni2DBuffers</span></a> that will be
simultaneously rendered to in a rendering pass by the renderer.
Since a rendering pass also needs a depth/stencil buffer for Z
comparisons and stencil operations, this class also contains a
pointer to one-and-only one <a href=
"NiDepthStencilBuffer.htm"><span class=
"NDLSystemFont">NiDepthStencilBuffer</span></a>.</p>

<p class="NDLRefHead1">Constructors</p>

<p>No public constructors are available, as the creation
functions must be able to fail in some cases. As a result, all
creation is handled via the static <span class=
"NDLSystemFont">Create</span> functions below.</p>

<p class="NDLRefHead1">Static Member Functions</p>

<p class="NDLRefMemberFunction">static NiRenderTargetGroup*
Create(unsigned int uiNumBuffers, <a href=
"NiRenderer.htm">NiRenderer</a>* pkRenderer)</p>

<p class="NDLRefMemberDescription">Create an <span class=
"NDLSystemFont">NiRenderTargetGroup</span> with a fixed number of
buffers.</p>

<p class="NDLRefMemberFunction">static NiRenderTargetGroup*
Create(<a href="Ni2DBuffer.htm">Ni2DBuffer</a>* pkBuffer,
<a href="NiRenderer.htm">NiRenderer</a>* pkRenderer, bool
bUseDefaultDepthStencil, bool bCreateCompatibleDepthStencil =
false)</p>

<p class="NDLRefMemberDescription">Create an <span class=
"NDLSystemFont">NiRenderTargetGroup</span> from an <a href=
"Ni2DBuffer.htm"><span class=
"NDLSystemFont">Ni2DBuffer</span></a>, and optionally an
additional <a href="NiDepthStencilBuffer.htm"><span class=
"NDLSystemFont">NiDepthStencilBuffer</span></a>. If the
<span class="NDLSystemFont">bUseDefaultDepthStencil</span>
parameter is <span class="NDLSystemFont">true</span>, then the
renderer's implicit depth stencil buffer will be used in the
<span class="NDLSystemFont">NiRenderTargetGroup</span>, if it is
compatible. If it is not compatible, or if the <span class=
"NDLSystemFont">bUseDefaultDepthStencil</span> parameter is
<span class="NDLSystemFont">false</span>, then setting
<span class="NDLSystemFont">bCreateCompatibleDepthStencil</span>
to <span class="NDLSystemFont">true</span> will cause the
renderer to create an <a href=
"NiDepthStencilBuffer.htm"><span class=
"NDLSystemFont">NiDepthStencilBuffer</span></a> that will work
with the provided <a href="Ni2DBuffer.htm"><span class=
"NDLSystemFont">Ni2DBuffer</span></a>. Note that on PS3 the
default depth stencil buffer can never be used with an
application-created render target group, so the <span class=
"NDLSystemFont">bUseDefaultDepthStencil</span> parameter will
effectively always be interpreted as false.</p>

<p class="NDLRefMemberFunction">static NiRenderTargetGroup*
Create(<a href="Ni2DBuffer.htm">Ni2DBuffer</a>* pkBuffer,
<a href="NiRenderer.htm">NiRenderer</a>* pkRenderer, <a href=
"NiDepthStencilBuffer.htm">NiDepthStencilBuffer</a>*
pkDSBuffer)</p>

<p class="NDLRefMemberDescription">Create an <span class=
"NDLSystemFont">NiRenderTargetGroup</span> from an <a href=
"Ni2DBuffer.htm"><span class=
"NDLSystemFont">Ni2DBuffer</span></a> and the specified <a href=
"NiDepthStencilBuffer.htm"><span class=
"NDLSystemFont">NiDepthStencilBuffer</span></a>. Note that if the
color buffer and depth buffer are incompatible, this function
will return <span class="NDLSystemFont">NULL</span>.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual unsigned int
GetWidth(unsigned int uiIndex) const</p>

<p class="NDLRefMemberFunction">virtual unsigned int
GetHeight(unsigned int uiIndex) const</p>

<p class="NDLRefMemberDescription">Get the width and height of
the <span class="NDLSystemFont"><a href=
"Ni2DBuffer.htm">Ni2DBuffer</a></span> at the specified
index. Will use the width and height of the depth stencil buffer if
the render target group does not contain any color buffers.</p>

<p class="NDLRefMemberFunction">virtual unsigned int
GetDepthStencilWidth() const</p>

<p class="NDLRefMemberFunction">virtual unsigned int
GetDepthStencilHeight() const</p>

<p class="NDLRefMemberDescription">Get the width and height of
the render target's <a href=
"NiDepthStencilBuffer.htm"><span class=
"NDLSystemFont">NiDepthStencilBuffer</span></a>.</p>

<p class="NDLRefMemberFunction">bool HasDepthStencil() const</p>

<p class="NDLRefMemberDescription">Determines whether the render
target has an <a href="NiDepthStencilBuffer.htm"><span class=
"NDLSystemFont">NiDepthStencilBuffer</span></a>.</p>

<p class="NDLRefMemberFunction">bool IsValid() const</p>

<p class="NDLRefMemberDescription">This method is a convenience
method for determining whether or not the <span class=
"NDLSystemFont">NiRenderTargetGroup</span> can be used by the
current renderer. This method essentially calls <span class=
"NDLSystemFont"><a href=
"NiRenderer.htm#Render_Target_Access_Management">NiRenderer::ValidateRenderTargetGroup</a></span>
with the render target group.</p>

<p class="NDLRefMemberFunction">bool
CheckMSAAPrefConsistency()</p>

<p class="NDLRefMemberDescription">This method is used to check
to see if all the rendered targets have the same multisample
antialiasing level. This is useful to know because if the
multisample antialiasing level is not consistent then no
multisample antialiasing will be performed. Please refer to the
<a href="../../RelNotes/Release_Notes_Introduction.htm">release
notes</a> for each renderer that is being used to check
multisample antialiasing support for rendered targets.</p>

<p class="NDLRefMemberFunction">virtual const <a href=
"NiPixelFormat.htm">NiPixelFormat</a>* GetPixelFormat(unsigned
int uiIndex) const</p>

<p class="NDLRefMemberDescription">Get the <a href=
"NiPixelFormat.htm"><span class=
"NDLSystemFont">NiPixelFormat</span></a> of the <span class=
"NDLSystemFont"><a href="Ni2DBuffer.htm">Ni2DBuffer</a></span> at
the specified index.</p>

<p class="NDLRefMemberFunction">virtual const <a href=
"NiPixelFormat.htm">NiPixelFormat</a>*
GetDepthStencilPixelFormat() const</p>

<p class="NDLRefMemberDescription">Get the <a href=
"NiPixelFormat.htm"><span class=
"NDLSystemFont">NiPixelFormat</span></a> of the <a href=
"NiDepthStencilBuffer.htm"><span class=
"NDLSystemFont">NiDepthStencilBuffer</span></a>.</p>

<p class="NDLRefMemberFunction">virtual unsigned int
GetBufferCount() const</p>

<p class="NDLRefMemberDescription">Get the number of <span class=
"NDLSystemFont"><a href="Ni2DBuffer.htm">Ni2DBuffer</a></span>'s
associated with this render target.</p>

<p class="NDLRefMemberFunction">virtual bool
AttachBuffer(<a href="Ni2DBuffer.htm">Ni2DBuffer</a>* pkBuffer,
unsigned int uiIndex)</p>

<p class="NDLRefMemberDescription">Attach an <span class=
"NDLSystemFont"><a href="Ni2DBuffer.htm">Ni2DBuffer</a></span> to
this render target at the specified index.</p>

<p class="NDLRefMemberFunction">virtual bool
AttachDepthStencilBuffer(<a href=
"NiDepthStencilBuffer.htm">NiDepthStencilBuffer</a>*
pkDepthBuffer)</p>

<p class="NDLRefMemberDescription">Attach the <a href=
"NiDepthStencilBuffer.htm"><span class=
"NDLSystemFont">NiDepthStencilBuffer</span></a> to this render
target.</p>

<p class="NDLRefMemberFunction">virtual <a href=
"Ni2DBuffer.htm">Ni2DBuffer</a>* GetBuffer(unsigned int uiIndex)
const</p>

<p class="NDLRefMemberDescription">Get the <span class=
"NDLSystemFont"><a href="Ni2DBuffer.htm">Ni2DBuffer</a></span>
attached to this render target at the specified index.</p>

<p class="NDLRefMemberFunction">virtual <a href=
"NiDepthStencilBuffer.htm">NiDepthStencilBuffer</a>*
GetDepthStencilBuffer() const</p>

<p class="NDLRefMemberDescription">Get the <span class=
"NDLSystemFont"><a href=
"NiDepthStencilBuffer.htm">NiDepthStencilBuffer</a></span>
attached to this render target.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

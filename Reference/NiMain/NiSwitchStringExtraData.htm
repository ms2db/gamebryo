<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiSwitchStringExtraData</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type=
"text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiSwitchStringExtraData</p>

<p class="NDLRefParentage">: public <u><span style="color: #0000ff;"><a href=
"NiExtraData.htm"><span>NiExtraData</span></a></span></u></p>

<p class="NDLRefHeaderFile">&lt;NiSwitchStringExtraData.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p class="NDLRefHead1">Extra data in the form of an array of arbitrary size of
text strings that can be attached to a <span class="NDLSystemFont"><a href=
"NiObjectNET.htm">NiObjectNET</a></span>; only one entry in the array of text
stringsis "active" at any given time.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiSwitchStringExtraData(const unsigned int
uiSize, const char** ppcValue, const int iIndex)</p>

<p class="NDLRefMemberDescription">Creates an extra data object that stores an
array of arbitrary size of text strings and an index for the "active" string. A
copy is made of the input array of floating point values.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">void GetValue(unsigned int &amp;uiSize, char**
&amp;ppcValue, int &amp;iIndex) const</p>

<p class="NDLRefMemberFunction">void SetValue(const unsigned int uiSize, const
char** ppcValue, const int iIndex)</p>

<p class="NDLRefMemberDescription">These functions retrieve and set the extra
data as an array of arbitrary size of text strings and an index for the
"active" string. For the latter, a copy is made of the input array of text
strings, and any existing data in the object is deleted.</p>

<p class="NDLRefMemberFunction">const int GetActiveIndex() const;</p>

<p class="NDLRefMemberFunction">void SetActiveIndex(const int iIndex);</p>

<p class="NDLRefMemberDescription">These functions retrieve and set the index
for the "active" string.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

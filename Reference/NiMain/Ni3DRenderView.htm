<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Ni3DRenderView</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">Ni3DRenderView</p>

<p class="NDLRefParentage">: public <a href=
"NiRenderView.htm">NiRenderView</a></p>

<p class="NDLRefHeaderFile">&lt;Ni3DRenderView.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This class is a render view that is used to render
<span class="NDLSystemFont"><a href=
"NiAVObject.htm">NiAVObject</a></span> scene graphs. It holds
pointers to an <span class="NDLSystemFont"><a href=
"NiCamera.htm">NiCamera</a></span> and an <span class=
"NDLSystemFont"><a href=
"NiCullingProcess.htm">NiCullingProcess</a></span>, which it
uses to cull the scene, storing all visible geometry in the
potentially visible geometry array.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">Ni3DRenderView(<a href=
"NiCamera.htm">NiCamera</a>* pkCamera = NULL, <a href=
"NiCullingProcess.htm">NiCullingProcess</a>* pkCullingProcess =
NULL, bool bAlwaysUseCameraViewport = true)</p>

<p class="NDLRefMemberDescription">The sole constructor for this
class takes pointers to the <span class=
"NDLSystemFont">NiCamera</span> and <span class=
"NDLSystemFont">NiCullingProcess</span> to use when performing
culling passes in the <span class=
"NDLSystemFont">CalculatePVGeometry</span> function. If the
camera is null, the <span class=
"NDLSystemFont">SetScreenSpaceCameraData</span> function is
called on the renderer during <span class=
"NDLSystemFont">SetCameraData</span>, and no culling is
performed. Otherwise, the specified camera's data is set on the
renderer and the specified culling process is used to generate an
array of geometry objects to render. The culling process may be
null, which will result in all geometry objects in the stored
scene graphs getting rendered without any culling. <span class=
"NDLSystemFont">bAlwaysUseCameraViewport</span> indicates whether
or not the viewport stored in <span class=
"NDLSystemFont">pkCamera</span> should be used in the
<span class="NDLSystemFont">SetCameraData</span> function instead
of the viewport passed into that function.</p>

<p class="NDLRefHead1">Overridden Virtual Functions</p>

<p class="NDLRefMemberFunction">virtual void SetCameraData(const
<a href="NiRect.htm">NiRect</a>&lt;float&gt;&amp; kViewport)</p>

<p class="NDLRefMemberDescription">Overridden from <span class=
"NDLSystemFont"><a href=
"NiRenderView.htm">NiRenderView</a></span>. This function calls
<span class="NDLSystemFont">SetCameraData</span> on the renderer
using the stored <span class="NDLSystemFont"><a href=
"NiCamera.htm">NiCamera</a></span> values and optionally the
provided viewport. If <span class=
"NDLSystemFont">GetAlwaysUseCameraViewport</span> returns true,
<span class="NDLSystemFont">kViewport</span> is ignored and the
viewport on the stored <span class="NDLSystemFont"><a href=
"NiCamera.htm">NiCamera</a></span> is used instead. If
<span class="NDLSystemFont">GetAlwaysUseCameraViewport</span>
returns false, the viewport on the camera is ignored and
<span class="NDLSystemFont">kViewport</span> is used to set the
camera data on the renderer. If the stored camera pointer is
null, <span class="NDLSystemFont">SetScreenSpaceCameraData</span>
is called on the renderer using the viewport passed into this
function.</p>

<p class="NDLRefMemberFunction">virtual void
CalculatePVGeometry()</p>

<p class="NDLRefMemberDescription">Overridden from <span class=
"NDLSystemFont"><a href=
"NiRenderView.htm">NiRenderView</a></span>. This function uses
the stored <span class="NDLSystemFont"><a href=
"NiCamera.htm">NiCamera</a></span> and <span class=
"NDLSystemFont"><a href=
"NiCullingProcess.htm">NiCullingProcess</a></span> to perform a
culling pass on all stored <span class="NDLSystemFont"><a href=
"NiAVObject.htm">NiAVObject</a></span> scene graphs, registering
all visible objects in the potentially visible geometry array.
The same camera and culling process are used for all scene
graphs. If no culling process has been specified for this render
view, all geometry objects in each scene graph are added to the
potentially visible geometry array. NOTE: This function always
uses the <span class="NDLSystemFont"><a href=
"NiVisibleArray.htm">NiVisibleArray</a></span> member variable
from <span class="NDLSystemFont"><a href=
"NiRenderView.htm">NiRenderView</a></span> during its culling
passes, overriding any <span class="NDLSystemFont"><a href=
"NiVisibleArray.htm">NiVisibleArray</a></span> that may be
specified in the culling process itself.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">void SetCamera(<a href=
"NiCamera.htm">NiCamera</a>* pkCamera)</p>

<p class="NDLRefMemberFunction"><a href=
"NiCamera.htm">NiCamera</a>* GetCamera() const</p>

<p class="NDLRefMemberDescription">These functions set and get
the camera to use for this render view.</p>

<p class="NDLRefMemberFunction">void SetCullingProcess(<a href=
"NiCullingProcess.htm">NiCullingProcess</a>*
pkCullingProcess)</p>

<p class="NDLRefMemberFunction"><a href=
"NiCullingProcess.htm">NiCullingProcess</a>* GetCullingProcess()
const</p>

<p class="NDLRefMemberDescription">These functions set and get
the culling process to use for this render view.</p>

<p class="NDLRefMemberFunction">void
SetAlwaysUseCameraViewport(bool bAlwaysUseCameraViewport)</p>

<p class="NDLRefMemberFunction">bool GetAlwaysUseCameraViewport()
const</p>

<p class="NDLRefMemberDescription">These functions set and get
whether or not the <span class=
"NDLSystemFont">SetCameraData</span> function should always use
the viewport of the stored camera instead of the viewport passed
into that function.</p>

<p class="NDLRefMemberFunction">void AppendScene(<a href=
"NiAVObject.htm">NiAVObject</a>* pkScene)</p>

<p class="NDLRefMemberFunction">void PrependScene(<a href=
"NiAVObject.htm">NiAVObject</a>* pkScene)</p>

<p class="NDLRefMemberFunction">void RemoveScene(<a href=
"NiAVObject.htm">NiAVObject</a>* pkScene)</p>

<p class="NDLRefMemberFunction">void RemoveAllScenes()</p>

<p class="NDLRefMemberFunction"><a href=
"NiTPointerList.htm">NiTPointerList</a>&lt;<a href=
"NiAVObject.htm">NiAVObjectPtr</a>&gt;&amp; GetScenes()</p>

<p class="NDLRefMemberFunction">const <a href=
"NiTPointerList.htm">NiTPointerList</a>&lt;<a href=
"NiAVObject.htm">NiAVObjectPtr</a>&gt;&amp; GetScenes() const</p>

<p class="NDLRefMemberDescription">These functions provide access
to the list of scene graphs stored in this render view.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

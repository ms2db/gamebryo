<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiRenderedCubeMap</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiRenderedCubeMap</p>

<p class="NDLRefParentage">: public <a href=
"NiRenderedTexture.htm"><span>NiRenderedTexture</span></a></p>

<p class="NDLRefHeaderFile">&lt;NiRenderedCubeMap.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiRenderedCubeMap</span>
represents cube maps (six-sided environment maps) whose contents
are generated dynamically by rendering a scene with a renderer.
These maps are commonly used for live, realistic reflective
objects. See the texturing documentation for details on cube
mapping. Note that not all renderers can support cube maps, and
as a result the creation function may return <span class=
"NDLSystemFont">NULL</span>.</p>

<p class="NDLRefHead1">Constructors</p>

<p>No public constructors are available, as the creation
functions must be able to fail in some cases. As a result, all
creation is handled via the static <span class=
"NDLSystemFont">Create</span> function below.</p>

<p class="NDLRefHead1">Static Member Functions</p>

<p class="NDLRefMemberFunction">static
NiRenderedCubeMap* Create(unsigned int uiSize, <a href=
"NiRenderer.htm">NiRenderer</a>* pkRenderer,
<a href="NiTexture__FormatPrefs.htm">FormatPrefs</a>&amp; kPrefs = ms_kDefaultPrefs)</p>

<p class="NDLRefMemberDescription">Attempts to create a rendered
cube map of the given size for the given renderer. The resulting
texture object may be used as a texture. In order to render to a
face, an <span class="NDLSystemFont"><a href=
"NiRenderTargetGroup.htm">NiRenderTargetGroup</a></span> must be
created containing the face buffer referenced by the rendered
texture.</p>

<p class="NDLRefMemberDescription">Note that NiRenderedCubeMaps
be destroyed prior to destroying the renderer. The size argument
must be a power of two &ndash; all dimensions of a cube map must
be equal, so only one size field is required. The function will
return <span class="NDLSystemFont">NULL</span> if the given
renderer or current hardware cannot support rendered cube
maps. The format preferences argument enables the application to
request a specific format for the rendered texture. This specific
format request is only a request, which the renderer may ignore
or fulfill as best it can.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual unsigned int GetWidth()
const</p>

<p class="NDLRefMemberFunction">virtual unsigned int GetHeight()
const</p>

<p class="NDLRefMemberDescription">Get the width and height of
this texture.</p>

<p class="NDLRefMemberFunction"><a href=
"Ni2DBuffer.htm">Ni2DBuffer</a>* GetFaceBuffer(FaceID eFace)</p>

<p class="NDLRefMemberDescription">Get the buffer specified by
the <span class="NDLSystemFont">FaceID</span> argument.</p>

<p class="NDLRefMemberFunction">FaceID
GetCurrentCubeFace() const</p>

<p class="NDLRefMemberFunction">void
SetCurrentCubeFace(FaceID eFace)</p>

<p class="NDLRefMemberDescription">Set and retrieve the cube face
to which rendering should occur. When using a cube map as a
texture, the entire cube map is used at once. However, when
rendering to a cube map, the six faces must be rendered one at a
time. This value controls which of the six cube faces will be the
current render target. The possible enumeration values are as
follows:</p>

<a name="CubeMapFaceID" id="CubeMapFaceID"></a>
<!--(Table)=========================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Flag</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class=
                "NDLSystemFont">FACE_POS_X</span></td>

                <td>The cube face in the plane X = 1.0</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">FACE_NEG_X</span></td>

                <td>The cube face in the plane X= -1.0</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">FACE_POS_Y</span></td>

                <td>The cube face in the plane Y = 1.0</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">FACE_NEG_Y</span></td>

                <td>The cube face in the plane Y = -1.0</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">FACE_POS_Z</span></td>

                <td>The cube face in the plane Z = 1.0</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">FACE_NEG_Z</span></td>

                <td>The cube face in the plane Z = -1.0</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefHead1">Notes</p>

<a name="Mipmapping_and_Rendered_Textures" id="Mipmapping_and_Rendered_Textures"></a><p class="NDLRefHead2">Mipmapping and Rendered Textures</p>

<p>Currently, no renderers can support mipmapped rendered
textures.</p>

<a name="Changing_the_Current_Cube_Face" id="Changing_the_Current_Cube_Face"></a><p class="NDLRefHead2">Changing the Current Cube Face</p>

<p>Applications using the set function to change the current cube
face must call <a href="NiRenderer.htm"><span class=
"NDLSystemFont">NiRenderer::BeginUsingRenderTargetGroup</span></a>
with the render target group that was created with the specific
face's <span class="NDLSystemFont"><a href=
"Ni2DBuffer.htm">Ni2DBuffer</a></span> object.</p>

<a name="Streaming_and_NiRenderedCubeMaps" id="Streaming_and_NiRenderedCubeMaps"></a><p class="NDLRefHead2">Streaming and NiRenderedCubeMaps</p>

<p><span class="NDLSystemFont">NiRenderedCubeMap</span> objects
cannot be streamed, as they must be linked to a single
renderer.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

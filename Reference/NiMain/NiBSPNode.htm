<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiBSPNode</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type=
"text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiBSPNode</p>

<p class="NDLRefParentage">: public <u><span><a href=
"NiNode.htm"><span>NiNode</span></a></span></u></p>

<p class="NDLRefHeaderFile">&lt;NiBSPNode.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiBSPNode</span> objects represent gross-scale
binary separating planes. They are designed to separate objects for sorted
drawing. <span class="NDLSystemFont">NiBSPNode</span>s are not designed to
separate objects at the per-polygon level. The left child of an <span class=
"NDLSystemFont">NiBSPNode</span> should lie entirely to the negative side of
the plane, while the right child should lie entirely to the positive side of
the plane.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiBSPNode()</p>

<p class="NDLRefMemberDescription">Default constructor, which constructs an
object with no children and a default <span class="NDLSystemFont"><a href=
"NiPlane.htm">NiPlane</a></span>.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefHead2">Tree Operations</p>

<p class="NDLRefMemberFunction">void AttachLeft(<a href=
"NiAVObject.htm">NiAVObject</a>* pkChild)</p>

<p class="NDLRefMemberFunction">void AttachRight(<a href=
"NiAVObject.htm">NiAVObject</a>* pkChild)</p>

<p class="NDLRefMemberDescription">Attach the left and right children of an
<span class="NDLSystemFont">NiBSPNode</span>. The previous left or right child
will be detached, even if the null pointer is sent as the new child.</p>

<p class="NDLRefMemberFunction"><a href="NiAVObject.htm">NiAVObjectPtr</a>
DetachLeft()</p>

<p class="NDLRefMemberFunction"><a href="NiAVObject.htm">NiAVObjectPtr</a>
DetachRight()</p>

<p class="NDLRefMemberDescription">Detach and return the left or right child
respectively.</p>

<p class="NDLRefMemberFunction"><a href="NiAVObject.htm">NiAVObjectPtr</a>
GetLeft()</p>

<p class="NDLRefMemberFunction"><a href="NiAVObject.htm">NiAVObjectPtr</a>
GetRight()</p>

<p class="NDLRefMemberDescription">Return the left or right child
respectively.</p>

<p class="NDLRefHead2">Plane Methods</p>

<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href=
"NiPlane.htm">NiPlane</a></span>&amp; GetModelPlane() const</p>

<p class="NDLRefMemberFunction">void SetModelPlane(const <span class=
"NDLSystemFont"><a href="NiPlane.htm">NiPlane</a></span>&amp; kPlane)</p>

<p class="NDLRefMemberDescription">Retrieve and set the model-space plane of
the <span class="NDLSystemFont">NiBSPNode</span>.</p>

<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href=
"NiPlane.htm">NiPlane</a></span>&amp; GetWorldPlane() const</p>

<p class="NDLRefMemberDescription">Retrieves the world-space plane of the
<span class="NDLSystemFont">NiBSPNode</span>. This value is derived, and cannot
be set directly.</p>

<p class="NDLRefMemberFunction">int WhichSide(const <a href=
"NiPoint3.htm">NiPoint3</a>&amp; kP) const</p>

<p class="NDLRefMemberDescription">Returns the side parameter (declared in
<span class="NDLSystemFont"><a href="NiPlane.htm">NiPlane</a></span>) that
describes the relationship of the given world-space point to the partitioning
plane.</p>

<p class="NDLRefHead1">Notes</p>

<p class="NDLRefHead2">Accumulation Behavior</p>

<p><span class="NDLSystemFont">NiBSPNode</span>s are culled in the same basic
manner as are <span class="NDLSystemFont">NiNode</span>s, but the two children
of the BSP node are traversed (and thus appended to the visible array) in
back-to-front BSP order with respect to one another. Some accumulators (such as
<a href="NiBackToFrontAccumulator.htm"><span class=
"NDLSystemFont">NiBackToFrontAccumulator</span></a>) will ignore this ordering
and re-sort all of the geometry. Others that pass some objects through directly
without sorting them (e.g. <a href="NiAlphaAccumulator.htm"><span class=
"NDLSystemFont">NiAlphaAccumulator</span></a>), in which case the ordering
provided by <span class="NDLSystemFont">NiBSPNode</span> may be useful.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

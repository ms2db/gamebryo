<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiVectorExtraData</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<p class="NDLRefHeadClassTitle">NiVectorExtraData</p>

<p class="NDLRefParentage">: public <a href="NiExtraData.htm">NiExtraData</a></p>

<p class="NDLRefHeaderFile">&lt;NiVectorExtraData.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>Extra data in the form of a vector (as x, y, z, w components) 
 that can be attached to an <span class="NDLSystemFont"><a href="NiObjectNET.htm">NiObjectNET</a></span>.</p>

<p>Note that the <span class="NDLSystemFont">NiVectorExtraData</span> 
 class has been deprecated and may be removed from an upcoming version 
 of Gamebryo, since <span class="NDLSystemFont"><a href="NiFloatsExtraData.htm">NiFloatsExtraData</a></span> 
 is a more general class with the same functionality, that is fully supported 
 in the shader system.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiVectorExtraData(const float* pfVector4)</p>

<p class="NDLRefMemberFunction">NiVectorExtraData(const <a href="NiPoint3.htm">NiPoint3</a> 
 kVector3)</p>

<p class="NDLRefMemberDescription">Creates an extra data object that stores 
 a vector. If the input parameter is a <span class="NDLSystemFont"><a href="NiPoint3.htm">NiPoint3</a></span> 
 instead of an array of 4 floats, no w component is preserved. A copy is 
 made of the input array of floating point values.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">const float* GetValue() const</p>

<p class="NDLRefMemberFunction">void SetValue(const float* pfVector4)</p>

<p class="NDLRefMemberDescription">These 
 functions retrieve and set the vector extra data as a vector 4-tuple (x, 
 y, z, w).&nbsp; For the latter, a copy is made of the input array of floating 
 point values.</p>

<p class="NDLRefMemberFunction">const <a href="NiPoint3.htm">NiPoint3</a> 
 GetValueVector3() const</p>

<p class="NDLRefMemberFunction">void SetValue(const <a href="NiPoint3.htm">NiPoint3</a> 
 kVector3)</p>

<p class="NDLRefMemberDescription">These 
 functions retrieve and set the vector extra data as a vector 3-tuple (x, 
 y, z).&nbsp; For the latter, a copy is made of the input array of floating 
 point values.</p>

<p class="NDLRefMemberFunction">float GetX() const</p>

<p class="NDLRefMemberFunction">void SetX(const float fX)</p>

<p class="NDLRefMemberFunction">float GetY() const</p>

<p class="NDLRefMemberFunction">void SetY(const float fY)</p>

<p class="NDLRefMemberFunction">float GetZ() const</p>

<p class="NDLRefMemberFunction">void SetZ(const float fZ)</p>

<p class="NDLRefMemberFunction">float GetW() const</p>

<p class="NDLRefMemberFunction">void SetW(const float fW)</p>

<p class="NDLRefMemberDescription">These functions are component accessor 
 functions. They retrieve and set the float values for the individual 
 components of the vector extra data, as x, y, z, and w coordinates.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

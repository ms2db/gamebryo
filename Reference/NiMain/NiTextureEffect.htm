<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiTextureEffect</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiTextureEffect</p>

<p class="NDLRefParentage">: public <a href=
"NiDynamicEffect.htm">NiDynamicEffect</a></p>

<p class="NDLRefHeaderFile">&lt;NiTextureEffect.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiTextureEffect</span> is an
object that represents an effect that uses projected textures,
such as projected lights and shadows, environment maps, and fog
maps.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiTextureEffect()</p>

<p class="NDLRefMemberDescription">This default constructor
creates an effect with identity model and world projection and
translation matrices, a filter mode of <span class=
"NDLSystemFont">FILTER_NEAREST</span>, a clamp mode of
<span class="NDLSystemFont">WRAP_S_WRAP_T</span>, a texture mode
of <span class="NDLSystemFont">PROJECTED_LIGHT</span>, and a
texture coordinate generation mode of <span class=
"NDLSystemFont">WORLD_PARALLEL</span>.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">const <a href=
"NiMatrix3.htm">NiMatrix3</a>&amp; GetModelProjectionMatrix()
const</p>

<p class="NDLRefMemberFunction">void
SetModelProjectionMatrix(const <a href=
"NiMatrix3.htm">NiMatrix3</a>&amp; kMat)</p>

<p class="NDLRefMemberDescription">Retrieves and sets the
model-space projection matrix.</p>

<p class="NDLRefMemberFunction">const <a href=
"NiPoint3.htm">NiPoint3</a>&amp; GetModelProjectionTranslation()
const</p>

<p class="NDLRefMemberFunction">void
SetModelProjectionTranslation(const <a href=
"NiPoint3.htm">NiPoint3</a>&amp; kMat)</p>

<p class="NDLRefMemberDescription">Retrieves and sets the
model-space projection translation.</p>

<p class="NDLRefMemberFunction">const <a href=
"NiMatrix3.htm">NiMatrix3</a>&amp; GetWorldProjectionMatrix()
const</p>

<p class="NDLRefMemberFunction">const <a href=
"NiPoint3.htm">NiPoint3</a>&amp; GetWorldProjectionTranslation()
const</p>

<p class="NDLRefMemberDescription">Retrieves the world-space
projection and translation matrices, respectively. These
matrices are updated automatically from the model transforms and
the model projection values set above, and cannot be set
directly.</p>

<p class="NDLRefMemberFunction"><a href=
"NiTexture.htm">NiTexture</a>* GetEffectTexture() const</p>

<p class="NDLRefMemberFunction">void SetEffectTexture(<a href=
"NiTexture.htm">NiTexture</a>* pkTexture)</p>

<p class="NDLRefMemberDescription">Retrieves and sets the texture
object associated with the texture effect.</p>

<p class="NDLRefMemberFunction"><a href=
"NiTexturingProperty.htm#Texture_Filter_Modes">NiTexturingProperty::FilterMode</a>
GetTextureFilter() const</p>

<p class="NDLRefMemberFunction">void SetTextureFilter(<a href=
"NiTexturingProperty.htm#Texture_Filter_Modes">NiTexuringProperty::FilterMode</a>
eFilter)</p>

<p class="NDLRefMemberDescription">Retrieves and sets the texture
filter mode for the effect. See the <a href=
"../../Programmer/Texturing/Texture_Pixel_Interpolation_and_Filtering.htm">
Texturing manual</a> for more information on texture filter
modes.</p>

<p class="NDLRefMemberFunction">unsigned short GetMaxAnisotropy()
const</p>

<p class="NDLRefMemberDescription">Returns the maximum level of
anisotropy for this map.</p>

<p class="NDLRefMemberFunction">void SetMaxAnisotropy(unsigned
short usMaxAnisotropyValue)</p>

<p class="NDLRefMemberDescription">Sets the maximum level of
anisotropy for this map. The value isn't used unless the
filtering mode is set to anisotropic.</p>

<p class="NDLRefMemberFunction"><a href=
"NiTexturingProperty.htm#Texture_Clamping_Modes">NiTexturingProperty::ClampMode</a>
GetTextureClamp() const</p>

<p class="NDLRefMemberFunction">void SetTextureClamp(<a href=
"NiTexturingProperty.htm#Texture_Clamping_Modes">NiTexturingProperty::ClampMode</a>
eClamp)</p>

<p class="NDLRefMemberDescription">Retrieves and sets the clamp
mode for the effect. See the <a href=
"../../Programmer/Texturing/Texture_Coordinate_Wrapping_and_Clamping.htm">
Texturing manual</a> for more information on clamp modes.</p>

<p class="NDLRefMemberFunction"><a href=
"NiTextureEffect.htm#Supported_Texture_Modes">TextureType</a>
GetTextureType() const</p>

<p class="NDLRefMemberFunction">void SetTextureType(<a href=
"NiTextureEffect.htm#Supported_Texture_Modes">TextureType</a>
eTexType)</p>

<p class="NDLRefMemberDescription">Retrieves and sets the texture
type for the effect. Texture types are described below in the
"Notes" section.</p>

<p class="NDLRefMemberFunction"><a href=
"NiTextureEffect.htm#Supported_TexGen_Modes">CoordGenType</a>
GetTextureCoordGen() const</p>

<p class="NDLRefMemberFunction">void SetTextureCoordGen(<a href=
"NiTextureEffect.htm#Supported_TexGen_Modes">CoordGenType</a>
eGen)</p>

<p class="NDLRefMemberDescription">Retrieves and sets the texture
coordinate generation type for the effect. Texture coordinate
generation types are described below in the "Notes" section.</p>

<p class="NDLRefMemberFunction">bool GetClippingPlaneEnable()
const</p>

<p class="NDLRefMemberFunction">void SetClippingPlaneEnable(bool
bEnable)</p>

<p class="NDLRefMemberDescription">Retrieves/sets the clipping
plane enable flag. If this flag is set to <span class=
"NDLSystemFont">true</span>, then the clipping plane specified by
the functions below would be used to clip away geometry that is
on its negative side by renderers that can support this feature.
See the renderer manuals and the <a href=
"../../Programmer/Texturing/Clipped_Projected_Textures.htm">Texturing
manual</a> for details on using this feature.</p>

<p class="NDLRefMemberFunction">const <a href=
"NiPlane.htm">NiPlane</a>&amp; GetModelClippingPlane() const</p>

<p class="NDLRefMemberFunction">void SetModelClippingPlane(const
<a href="NiPlane.htm">NiPlane</a>&amp; kPlane)</p>

<p class="NDLRefMemberDescription">Retrieves/sets the model-space
clipping plane for the effect. If the clipping plane is enabled,
then objects and polygons on the negative side of this plane
(once transformed to world space) will be clipped away from the
effect. See the renderer manuals and the <a href=
"../../Programmer/Texturing/Clipped_Projected_Textures.htm">Texturing
manual</a> for details on using this feature.</p>

<p class="NDLRefMemberFunction">const <a href=
"NiPlane.htm">NiPlane</a>&amp; GetWorldClippingPlane() const</p>

<p class="NDLRefMemberDescription">Returns the world-space
version of the plane specified above. This value cannot be set
directly, as it is a derived quantity.</p>

<p class="NDLRefHead1">Notes</p>

<p class="NDLRefHead2">Using NiTextureEffect Objects</p>

<p>Applications wishing to use <span class=
"NDLSystemFont">NiTextureEffect</span> objects should read the
<a href=
"../../Programmer/Texturing/Introduction_to_Texturing.htm">Texturing
manual</a> and <a href=
"../../Programmer/Texturing/Projected_Multitexture_Usage_Basics.htm">
Projected Multitexture manual</a> for details of how specific
effects are created using the object.</p>

<a name="Supported_Texture_Modes" id="Supported_Texture_Modes"></a><p class="NDLRefHead2">Supported Texture Modes</p>

<p>The following texture modes are supported by Gamebryo. Note
that all texture modes are declared in the scope of <span class=
"NDLSystemFont">NiTextureEffect</span>, and the names must be
qualified as such.</p>

<!--(Table)=========================================================-->

<table>
    <thead>
        <tr>
            <th>Texture Mode</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><span class=
            "NDLSystemFont">PROJECTED_LIGHT</span></td>

            <td>The effect is designed to represent a light in
            the scene--the overall effect of all projected lights
            are added together and then the sum is multiplied by
            the base texture.</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">PROJECTED_SHADOW</span></td>

            <td>The effect is designed to darken the scene, as it
            if was a cast shadow. The effect of each shadow is
            multiplied by the base texture and shadows, further
            darkening them.</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ENVIRONMENT_MAP</span></td>

            <td>The effect is added to the base texture, light
            maps, decals, and shadow maps, giving the effect of a
            specular reflection. This capability causes the base
            texture to look glossy.</td>
        </tr>

        <tr>
            <td><span class="NDLSystemFont">FOG_MAP</span></td>

            <td>The alpha channel of the effect is used to blend
            between the other textures and the color channel of
            this effect. This capability causes a fogging
            effect, as opaque sections of the fog map will "wash
            out" the other texturing.</td>
        </tr>
    </tbody>
</table>

<a name="Supported_TexGen_Modes" id="Supported_TexGen_Modes"></a><p class="NDLRefHead2">Supported Texture Coordinate Generation
Modes</p>

<p>Gamebryo supports the following texture coordinate generation
modes.</p>

<p>Note that all texture coordinate generation modes are declared
in the scope of <span class=
"NDLSystemFont">NiTextureEffect</span>, and the names must be
qualified as such.</p>

<!--(Table)=========================================================-->
<table>
    <thead>
        <tr>
            <th>Generation Mode</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><span class=
            "NDLSystemFont">WORLD_PARALLEL</span></td>

            <td>Texture coordinates are generated for each
            affected object by transforming the world-space
            vertex positions (X, Y, Z) by the effect's world
            projection matrix, adding the effect's world
            projection translation, and using the resulting X
            coordinate as U and Y as V. In general, this mode
            forms a parallel projection of the object.</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">WORLD_PERSPECTIVE</span></td>

            <td>Texture coordinates are generated for each
            affected object by transforming the world-space
            vertex positions (X, Y, Z) by the effect's world
            projection matrix, adding the effect's world
            projection translation, and using the resulting X/Z
            coordinate as U and Y/Z as V. In general, this mode
            forms a perspective projection of the object.</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">SPHERE_MAP</span></td>

            <td>Texture coordinates are generated for each
            affected object by transforming the world-space
            reflection vectors directly into the texture as a
            sphere map this capability is detailed in the
            Texturing manual, but is generally used for
            environment mapping.</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">DIFFUSE_CUBE_MAP</span></td>

            <td>Texture coordinates are generated for each
            affected object by transforming the world-space
            object-normal vectors directly into the texture as a
            cube map this capability is detailed in the Texturing
            manual, but is generally used for diffuse environment
            mapping and projected lights. This mode is only
            supported for <span class="NDLSystemFont"><a href=
            "NiRenderedCubeMap.htm">NiRenderedCubeMap</a></span>-
            and <span class="NDLSystemFont"><a href=
            "NiSourceCubeMap.htm">NiSourceCubeMap</a></span>-based
            <span class="NDLSystemFont">NiTextureEffect</span>
            objects on hardware that supports cube mapping.</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">SPECULAR_CUBE_MAP</span></td>

            <td>Texture coordinates are generated for each
            affected object by transforming the world-space
            reflection vectors directly into the texture as a
            cube map this capability is detailed in the Texturing
            manual, but is generally used for specular
            environment mapping and projected lights. This mode
            is only supported for <span class=
            "NDLSystemFont"><a href=
            "NiRenderedCubeMap.htm">NiRenderedCubeMap</a></span>-
            and <span class="NDLSystemFont"><a href=
            "NiSourceCubeMap.htm">NiSourceCubeMap</a></span>-based
            <span class="NDLSystemFont">NiTextureEffect</span>
            objects on hardware that supports cube mapping.</td>
        </tr>
    </tbody>
</table>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiImageReader</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<p class="NDLRefHeadClassTitle">NiImageReader</p>

<p class="NDLRefParentage">: public <a href="../../Reference/NiSystem/NiMemObject.htm"><span>NiMemObject</span></a></p>

<p class="NDLRefHeaderFile">&lt;NiImageReader.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiImageReader</span> is an 
 abstract base class that defines the interfaces for all supported image-loading 
 objects. Applications may subclass this object to create their own custom 
 image file loaders.</p>

<p class="NDLRefHead1">Constructors</p>

<p>No constructor, as this class is a pure abstract class.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual bool CanReadFile(const char* pcFileExtension) 
 const = 0</p>

<p class="NDLRefMemberDescription">This function returns true if the given 
 extension (e.g. <span class="NDLSystemFont">.nif</span>) 
 matches a supported extension for the loader. The comparison is case-insensitive.</p>

<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="NiPixelData.htm">NiPixelData</a></span>* ReadFile(<a href="../../Reference/NiSystem/NiFile.htm">NiFile</a>&amp; 
 kIst, <span class="NDLSystemFont"><a href="NiPixelData.htm">NiPixelData</a></span>*&nbsp;pkOptDest)&nbsp;=&nbsp;0</p>

<p class="NDLRefMemberDescription">This function attempts to read from the 
 open file object, reading it as the supported file format. If the load 
 is successful, the function should return an <span class="NDLSystemFont"><a href="NiPixelData.htm">NiPixelData</a></span> object that contains the 
 image file data. If the operation fails for any reason, the function should 
 return NULL. Note that the status of the file object and its file pointer 
 after the call returns is not defined. The returned pixel data will be 
 valid, but will have a reference count of 0 (i.e. no smart pointers to 
 the returned object are used within the function). As a result, it is 
 safe to assign the returned object to either a smart pointer, or a regular 
 pointer.</p>

<p class="NDLRefMemberFunction">virtual bool ReadHeader(<a href="../../Reference/NiSystem/NiFile.htm">NiFile</a>&amp; 
 kIst, unsigned int&amp; uiWidth, unsigned&nbsp;int&amp;&nbsp;uiHeight, 
 <a href="NiPixelFormat.htm">NiPixelFormat</a>&amp; kFormat, bool&amp;&nbsp;bMipmap, 
 unsigned int&amp; uiFaces) = 0</p>

<p class="NDLRefMemberDescription">Returns <span class="NDLSystemFont">true</span> 
 if the file appears to be a valid and readable by the reader object and 
 <span class="NDLSystemFont">false</span> otherwise. If 
 the function returns true, the <span class="NDLSystemFont">uiWidth</span>, 
 <span class="NDLSystemFont">uiHeight</span>, <span class="NDLSystemFont">kFormat</span>, <span class="NDLSystemFont">bMipmap,and uiFaces </span>parameters 
 will contain the width of the image file, the height of the image file, 
 the destination pixel format, whether or not the file contains mipmap 
 data, and the number of faces in the file respectively. The calling function 
 should not rely on the position of the file pointer following a call to 
 this function.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

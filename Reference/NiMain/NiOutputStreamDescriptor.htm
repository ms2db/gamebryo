<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiOutputStreamDescriptor</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiOutputStreamDescriptor</p>

<p class="NDLRefParentage">: public <a href=
"NiRefObject.htm">NiRefObject</a></p>

<p class="NDLRefHeaderFile">
&lt;NiOutputStreamDescriptor.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiOutputStreamDescriptor</span>
objects describe the format and contents of any data streams that
may be output as a result of the rendering process. The ability
to output a data stream will vary according to the renderer used;
see the specific renderer documentation for a discussion of how
this feature is supported.</p>

<p>The <span class=
"NDLSystemFont">NiOutputStreamDescriptor</span> can be seen as
analogous to the <span class="NDLSystemFont"><a href=
"NiSemanticAdapterTable.htm">NiSemanticAdapterTable</a></span>,
except that it describes the output data streams rather than the
input data streams. Unlike the <span class=
"NDLSystemFont"><a href=
"NiSemanticAdapterTable.htm">NiSemanticAdapterTable</a></span>,
however, the various elements of the data streams must have a
format and component count in addition to just the semantic. In
addition, the <span class=
"NDLSystemFont">NiOutputStreamDescriptor</span> also maintains
the maximum vertex count and the primitive topology of the
vertices.</p>

<p>The <span class=
"NDLSystemFont">NiOutputStreamDescriptor</span> consists of a
series of table entries, with each entry containing a
semantic/index combination that describes an element of a data
stream, as well as the data format and component count for that
entry. The shader will use the <span class=
"NDLSystemFont">NiOutputStreamDescriptor</span> to construct an
output data stream if necessary, and to hook up the outputs of
the shader to the correct place in that output data stream using
the semantic names and indices.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiOutputStreamDescriptor(NiUInt32
uiValue = 0)</p>

<p class="NDLRefMemberDescription">The constructor for
<span class="NDLSystemFont">NiOutputStreamDescriptor</span>. The
<span class="NDLSystemFont">uiValue</span> parameter is
ignored.</p>

<p class="NDLRefMemberFunction">NiOutputStreamDescriptor(const
NiOutputStreamDescriptor&amp; kDescriptor)</p>

<p class="NDLRefMemberDescription">Copy constructor.</p>

<p class="NDLRefHead1">Operators</p>

<p class="NDLRefMemberFunction">NiOutputStreamDescriptor&amp;
operator= (const NiOutputStreamDescriptor&amp; kDescriptor)</p>

<p class="NDLRefMemberDescription">Assignment operator.</p>

<p class="NDLRefMemberFunction">bool operator== (const
NiOutputStreamDescriptor&amp; kDescriptor) const</p>

<p class="NDLRefMemberFunction">bool operator!= (const
NiOutputStreamDescriptor&amp; kDescriptor) const</p>

<p class="NDLRefMemberDescription">Comparison operators.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">const <a href=
"NiFixedString.htm">NiFixedString</a>&amp; GetName() const</p>

<p class="NDLRefMemberFunction">void SetName(const <a href=
"NiFixedString.htm">NiFixedString</a>&amp; kName)</p>

<p class="NDLRefMemberDescription">Get and set the name of this
output stream descriptor</p>

<p class="NDLRefMemberFunction">unsigned int GetMaxVertexCount()
const</p>

<p class="NDLRefMemberFunction">void SetMaxVertexCount(unsigned
int uiMaxVertexCount)</p>

<p class="NDLRefMemberDescription">Get and set the maximum vertex
count.</p>

<p class="NDLRefMemberFunction"><a href=
"NiPrimitiveType.htm">NiPrimitiveType::Type</a> GetPrimType()
const</p>

<p class="NDLRefMemberFunction">void SetPrimType(<a href=
"NiPrimitiveType.htm">NiPrimitiveType::Type</a> ePrimType)</p>

<p class="NDLRefMemberDescription">Get and set the primitive
topology that can be used to render the resulting vertices.</p>

<p class="NDLRefMemberFunction">const <a href=
"NiOutputStreamDescriptor__VertexFormatEntry.htm">VertexFormat</a>&amp;
GetVertexFormat() const</p>

<p class="NDLRefMemberFunction">void SetVertexFormat(const
<a href=
"NiOutputStreamDescriptor__VertexFormatEntry.htm">VertexFormat</a>&amp;
kVertexFormat)</p>

<p class="NDLRefMemberDescription">Get and set the table of
<a href=
"NiOutputStreamDescriptor__VertexFormatEntry.htm"><span class=
"NDLSystemFont">VertexFormatEntry</span></a> objects that
describe the layout of the buffer that the shader expects.</p>

<p class="NDLRefMemberFunction">void AppendVertexFormat(const
<a href=
"NiOutputStreamDescriptor__VertexFormatEntry.htm">VertexFormatEntry</a>&amp;
kVertexFormatEntry)</p>

<p class="NDLRefMemberDescription">Appends a single <a href=
"NiOutputStreamDescriptor__VertexFormatEntry.htm"><span class=
"NDLSystemFont">VertexFormatEntry</span></a> object to the
existing table that the <span class=
"NDLSystemFont">NiOutputStreamDescriptor</span> is
maintaining.</p>

<p class="NDLRefHead1">Streaming Support</p>

<p class="NDLRefMemberFunction">void LoadBinary(<a href=
"../../Reference/NiSystem/NiBinaryStream.htm">NiBinaryStream</a>&amp;
kStream)</p>

<p class="NDLRefMemberDescription">Loads a output stream
descriptor from a binary stream.</p>

<p class="NDLRefMemberFunction">void SaveBinary(<a href=
"../../Reference/NiSystem/NiBinaryStream.htm">NiBinaryStream</a>&amp;
kStream) const</p>

<p class="NDLRefMemberDescription">Saves the output stream
descriptor to the binary stream.</p>

<p class="NDLRefHead1">Notes</p>

<a name="DataType" id="DataType"></a><p class="NDLRefHead2">DataType Enumerations</p>

<p>The following enumeration values are used to describe the data
formats for each of the entries in the <span class=
"NDLSystemFont">NiOutputStreamDescriptor</span>.</p>

<ul>
    <li>DATATYPE_FLOAT&mdash;Floating point</li>

    <li>DATATYPE_UINT&mdash;Unsigned intege</li>

    <li>DATATYPE_INT&mdash;Signed integer</li>

    <li>DATATYPE_MAX&mdash;Invalid value</li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

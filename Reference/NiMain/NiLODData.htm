<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiLODData</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiLODData</p>

<p class="NDLRefParentage">: public <a href=
"NiObject.htm">NiObject</a></p>

<p class="NDLRefParentage">&lt;NiLODData.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiLODData</span> is an abstract
class to represent the base functionality of switching LOD
levels..</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiLODData()</p>

<p class="NDLRefMemberDescription">Default Constructor; this
class is purely virtual.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual int GetLODLevel(const
<a href="NiCamera.htm">NiCamera</a>* pkCamera, <a href=
"NiLODNode.htm">NiLODNode</a>* pkLOD) const = 0</p>

<p class="NDLRefMemberDescription">Determine the LOD Level do be
used based on this camera and Node. Returning -1 indicates
nothing should be displayed.</p>

<p class="NDLRefMemberFunction">virtual void
UpdateWorldData(<a href="NiLODNode.htm">NiLODNode</a>* pkLOD) =
0</p>

<p class="NDLRefMemberDescription">Update any internal world data
base on this LOD node</p>

<p class="NDLRefMemberFunction">virtual NiLODData* Duplicate() =
0</p>

<p class="NDLRefMemberDescription"><span class=
"NDLSystemFont">NiLODData</span> are never shared so we need a
duplication function for cloning.</p>

<p class="NDLRefMemberFunction">virtual int GetLODIndex(int
iLODLevel) const = 0</p>

<p class="NDLRefMemberDescription">Given a LOD level return the
index of the <a href="NiLODNode.htm"><span class=
"NDLSystemFont">NiLODNode</span></a> child that should be
displayed.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiTMetricsTimer</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiTMetricsTimer</p>

<p class="NDLRefParentage">: public <a href=
"NiMetricsTimer.htm"><span>NiMetricsTimer</span></a></p>

<p class="NDLRefHeaderFile">&lt;NiMetricsTimer.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This class takes a templated parameter <span class=
"NDLSystemFont">T</span>. This parameter determines what timer to
use. The timer must implement four functions:</p>

<ul>
    <li><span class="NDLSystemFont">float GetElapsed()
    const</span></li>

    <li><span class="NDLSystemFont">void Start()</span></li>

    <li><span class="NDLSystemFont">void Stop()</span></li>

    <li><span class="NDLSystemFont">T()</span></li>
</ul>

<p>Two classes that implement this that are also included in this
same header file are the <span class=
"NDLSystemFont">NiSystemClockTimer</span> and the <span class=
"NDLSystemFont">NiPerformanceCounterTimer</span> which use the
system clock and the performance counter (respectively) to
implement those functions. The performance counter has a much
higher frequency (and thus a shorter range). The system clock has
a much longer range but is less accurate. Both timers convert the
elapsed time to seconds. <span class=
"NDLSystemFont">NiMetricsClockTimer</span> and <span class=
"NDLSystemFont">NiMetricsPCTimer</span> are <span class=
"NDLSystemFont">#typedef</span>'d to particular templated
instances of <span class="NDLSystemFont">NiTMetricsTimer</span>
that use the system clock and the performance counter,
respectively. These last two types are the ones that will be used
primarily by instrumenting code.</p>

<p>To start and stop timers of this type, it is desirable to use
<a href="NiMetricsLayer.htm"><span class=
"NDLSystemFont">NiMetricsLayer</span></a>'s <span class=
"NDLSystemFont">NIMETRICS_STARTTIMER</span> and <span class=
"NDLSystemFont">NIMETRICS_ENDTIMER</span> macros rather than
calling the member functions directly. These macros both start
and stop the timer objects as well as pass the timers onto the
metrics system to be logged appropriately by the active set of
output modules.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiTMetricsTimer(const char*
pcName)</p>

<p class="NDLRefMemberDescription">Creates a timer with a
particular metric name.</p>

<p class="NDLRefHead1">Member Functions</p>

<p class="NDLRefMemberFunction">void Start()</p>

<p class="NDLRefMemberDescription">Resets the elapsed time to
zero and starts the timer. Because it resets, the same
instantiation of a timer cannot be nested within start and stop
calls to itself. Generally, this is not called directly and is
instead called via the <span class=
"NDLSystemFont">NIMETRICS_STARTTIMER</span> macro in <span class=
"NDLSystemFont">NiMetricsLayer.h</span>.</p>

<p class="NDLRefMemberFunction">void Stop()</p>

<p class="NDLRefMemberDescription">Stops the timer and sets the
elapsed time appropriately. Generally, this is not called
directly and is instead called via the <span class=
"NDLSystemFont">NIMETRICS_ENDTIMER</span> macro in <span class=
"NDLSystemFont">NiMetricsLayer.h</span>.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

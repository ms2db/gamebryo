<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiMaterialSwapProcessor</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiMaterialSwapProcessor</p>

<p class="NDLRefParentage">: public <a href=
"NiRenderListProcessor.htm">NiRenderListProcessor</a></p>

<p class="NDLRefHeaderFile">&lt;NiMaterialSwapProcessor.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This class is a render list processor that swaps out the
material on every geometry object before rendering it, restoring
the original material after it has been rendered.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiMaterialSwapProcessor(<a href=
"NiMaterial.htm">NiMaterial</a>* pkMaterial = NULL, unsigned int
uiMaterialExtraData = <a href=
"NiMaterialInstance.htm">NiMaterialInstance</a>::DEFAULT_EXTRA_DATA)</p>

<p class="NDLRefMemberDescription">The sole constructor for this
class takes an <span class="NDLSystemFont">NiMaterial</span>
object to apply to each geometry object before rendering, along
with an extra data value to use when applying that material.</p>

<p class="NDLRefHead1">Overridden Virtual Functions</p>

<p class="NDLRefMemberFunction">virtual void
PreRenderProcessList(const <a href=
"NiVisibleArray.htm">NiVisibleArray</a>* pkInput, <a href=
"NiVisibleArray.htm">NiVisibleArray</a>&amp; kOutput, void*
pvExtraData)</p>

<p class="NDLRefMemberDescription">Overridden from <span class=
"NDLSystemFont"><a href=
"NiRenderListProcessor.htm">NiRenderListProcessor</a></span>.
This function iterates through each geometry object in the
<span class="NDLSystemFont">pkInput</span> array, backing up its
current material, applying the stored material, and rendering
immediately. The original material is restored on each geometry
object after it is rendered. No geometry objects are added to the
<span class="NDLSystemFont">kOutput</span> array in this
function.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">void SetMaterial(<a href=
"NiMaterial.htm">NiMaterial</a>* pkMaterial, unsigned int
uiMaterialExtraData)</p>

<p class="NDLRefMemberFunction"><a href=
"NiMaterial.htm">NiMaterial</a>* GetMaterial() const</p>

<p class="NDLRefMemberFunction">unsigned int
GetMaterialExtraData() const</p>

<p class="NDLRefMemberDescription">These functions provide access
to the <span class="NDLSystemFont">NiMaterial</span> object to
use when rendering geometry and the extra data value to use when
activating that material.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

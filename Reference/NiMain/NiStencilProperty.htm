<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiStencilProperty</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiStencilProperty</p>

<p class="NDLRefParentage">: public <a href=
"NiProperty.htm">NiProperty</a></p>

<p class="NDLRefHeaderFile">&lt;NiStencilProperty.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>An <span class="NDLSystemFont">NiStencilProperty</span> allows
the application to control the use of a stencil buffer in
rendering. It also includes a draw-mode setting to allow
applications to set the culling mode of a set of geometry. Note
that actual implementation of the stencil buffer is
renderer-specific.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiStencilProperty()</p>

<p class="NDLRefMemberDescription">This default constructor
creates a property with the enable flag set to <span class=
"NDLSystemFont">false</span>, the function set to <span class=
"NDLSystemFont">TEST_GREATER</span>, the reference value set to
<span class="NDLSystemFont">0</span>, the mask set to
<span class="NDLSystemFont">0xFFFFFFFF</span>, the failure action
set to <span class="NDLSystemFont">ACTION_KEEP</span>, the
Z-buffer failure action set to <span class=
"NDLSystemFont">ACTION_KEEP</span>, and the pass action set to
<span class="NDLSystemFont">ACTION_INCREMENT</span>. The draw
mode will be set to <span class=
"NDLSystemFont">DRAW_CCW_OR_BOTH</span>. Descriptions of the test
functions, actions and draw modes are included below in the
"Notes" section.</p>

<p class="NDLRefHead1">Static Member Functions</p>

<p class="NDLRefMemberFunction">static int GetType()</p>

<p class="NDLRefMemberFunction">static NiStencilProperty*
GetDefault()</p>

<p class="NDLRefMemberDescription">See <span class=
"NDLSystemFont">NiProperty</span> for details on these
non-virtual functions.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">bool GetStencilOn() const</p>

<p class="NDLRefMemberFunction">void SetStencilOn(bool bOn)</p>

<p class="NDLRefMemberDescription">Retrieve and set the value of
the stencil buffer enable flag.</p>

<p class="NDLRefMemberFunction"><a href=
"NiStencilProperty.htm#Test_Functions">TestFunc</a>
GetStencilFunction() const</p>

<p class="NDLRefMemberFunction">void SetStencilFunction(<a href=
"NiStencilProperty.htm#Test_Functions">TestFunc</a> eFunc)</p>

<p class="NDLRefMemberDescription">Retrieve and set the stencil
buffer test function used to test the reference value against the
buffer value. Descriptions of the test functions are included
below in the "Notes" section.</p>

<p class="NDLRefMemberFunction">unsigned int
GetStencilReference() const</p>

<p class="NDLRefMemberFunction">void SetStencilReference(unsigned
int uiRef);</p>

<p class="NDLRefMemberDescription">Retrieve and set the stencil
reference value, which is compared against the stencil value at
an individual pixel to determine the success of the stencil
test.</p>

<p class="NDLRefMemberFunction">unsigned int GetStencilMask()
const</p>

<p class="NDLRefMemberFunction">void SetStencilMask(unsigned int
uiMask)</p>

<p class="NDLRefMemberDescription">Retrieve and set the value of
the stencil buffer mask that is AND-ed with the reference and
buffer value prior to comparing the buffer. Note that the stencil
write mask is not affected.</p>

<p class="NDLRefMemberFunction"><a href=
"NiStencilProperty.htm#Actions">Action</a> GetStencilPassAction()
const</p>

<p class="NDLRefMemberFunction">void
SetStencilPassAction(<a href="NiStencilProperty.htm#Actions">Action</a>
eAct)</p>

<p class="NDLRefMemberDescription">Retrieve and set the action
that is taken in the stencil buffer when the stencil test passes
and the pixel passes the Z-buffer test. Descriptions of the
actions are included below in the "Notes" section.</p>

<p class="NDLRefMemberFunction"><a href=
"NiStencilProperty.htm#Actions">Action</a>
GetStencilPassZFailAction() const</p>

<p class="NDLRefMemberFunction">void
SetStencilPassAction(<a href="NiStencilProperty.htm#Actions">Action</a>
eAct)</p>

<p class="NDLRefMemberDescription">Retrieve and set the action
that is taken in the stencil buffer when the stencil test passes
but the pixel fails the Z-buffer test. Descriptions of the
actions are included below in the "Notes" section.</p>

<p class="NDLRefMemberFunction"><a href=
"NiStencilProperty.htm#Actions">Action</a> GetStencilFailAction()
const</p>

<p class="NDLRefMemberFunction">void
SetStencilPassAction(<a href="NiStencilProperty.htm#Actions">Action</a>
eAct)</p>

<p class="NDLRefMemberDescription">Retrieve and set the action
that is taken in the stencil buffer when the stencil test fails.
Descriptions of the actions are included below in the "Notes"
section.</p>

<p class="NDLRefMemberFunction"><a href=
"NiStencilProperty.htm#Actions">DrawMode</a> GetDrawMode()
const</p>

<p class="NDLRefMemberFunction">void SetDrawMode(<a href=
"NiStencilProperty.htm#Draw_Mode">DrawMode</a> eMode)</p>

<p class="NDLRefMemberDescription">Retrieve and set the drawing
(or culling) mode used to draw the object. Since stencil buffered
objects are often double-sided, this value is set on the
<span class="NDLSystemFont">NiStencilProperty</span>. Note that
this value is completely independent from the stencil mode and
flag. Its value will be used even if stencil buffering is
disabled. Descriptions of each mode are included below in the
"Notes" section.</p>

<p class="NDLRefMemberFunction">bool IsEqualFast(const
NiStencilProperty&amp; kProp) const</p>

<p class="NDLRefMemberDescription">See <span class=
"NDLSystemFont"><a href="NiProperty.htm">NiProperty</a></span>
for details on this non-virtual function.</p>

<p class="NDLRefHead1">Notes</p>

<a name="Draw_Mode" id="Draw_Mode"></a><p class="NDLRefHead2">Using the Draw Mode</p>

<p>The draw (culling) mode is functionally independent of the
stencil buffering settings. However, since changing the culling
mode is commonly used with stencil buffering, it is placed in
this property. Note that in general, it should <em>not</em> be used
to switch all geometry from "front-CCW" to "front-CW". Gamebryo
still prefers geometry to be front-counter-clockwise. The
non-default modes are to be used for special effects only. The
modes are as follows:</p>

<!--(Table)=========================================================-->
<table>
    <thead>
        <tr>
            <th>Mode</th>

            <th>Behavior</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><span class=
            "NDLSystemFont">DRAW_CCW_OR_BOTH</span></td>

            <td><em>The default</em>. May draw only triangles
            whose vertices are ordered counter-clockwise with
            respect to the viewer, or may draw all triangles,
            regardless of orientation. In the case of closed,
            opaque objects (which are very common in games), this
            distinction is irrelevant, as either mode will result
            in the same rendered image. However, for one-sided
            translucent or open objects, applications may wish to
            specify <span class=
            "NDLSystemFont">DRAW_CCW</span>.<br>
            <br>
            Note that this mode is equivalent to the way
            Gamebryo's predecessors have worked in the past. See
            the particular renderer documentation for notes on
            how a given platform implements this mode. In
            general, this mode will be the highest-performance
            mode across all platforms.</td>
        </tr>

        <tr>
            <td><span class="NDLSystemFont">DRAW_CCW</span></td>

            <td>Draw only the triangles whose vertices are
            ordered counter-clockwise with respect to the
            viewer.</td>
        </tr>

        <tr>
            <td><span class="NDLSystemFont">DRAW_CW</span></td>

            <td>Draw only the triangles whose vertices are
            ordered clockwise with respect to the viewer.</td>
        </tr>

        <tr>
            <td><span class="NDLSystemFont">DRAW_BOTH</span></td>

            <td>Do not cull back faces of any kind. Draw all
            triangles, regardless of orientation.</td>
        </tr>
    </tbody>
</table>

<a name="Test_Functions" id="Test_Functions"></a><p class="NDLRefHead2">Test Functions</p>

<p>The <span class="NDLSystemFont">NiStencilBufferProperty</span>
class supports the following test functions. The action taken as
a result of the test depends on the values set in the Action
parameters.</p>

<!--(Table)=========================================================-->
<table>
    <thead>
        <tr>
            <th>Function</th>

            <th>Action</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><span class=
            "NDLSystemFont">TEST_NEVER</span></td>

            <td>Always <span class=
            "NDLSystemFont">false</span></td>
        </tr>

        <tr>
            <td><span class="NDLSystemFont">TEST_LESS</span></td>

            <td>V<sub>Ref</sub> &lt; V<sub>Buf</sub></td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">TEST_EQUAL</span></td>

            <td>V<sub>Ref</sub> = V<sub>Buf</sub></td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">TEST_LESSEQUAL</span></td>

            <td>V<sub>Ref</sub> &le; V<sub>Buf</sub></td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">TEST_GREATER</span></td>

            <td>V<sub>Ref</sub> &gt; V<sub>Buf</sub></td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">TEST_NOTEQUAL</span></td>

            <td>V<sub>Ref</sub> &ne; V<sub>Buf</sub></td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">TEST_GREATEREQUAL</span></td>

            <td>V<sub>Ref</sub> &ge; V<sub>Buf</sub></td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">TEST_ALWAYS</span></td>

            <td>Always <span class=
            "NDLSystemFont">true</span></td>
        </tr>
    </tbody>
</table>

<a name="Actions" id="Actions"></a><p class="NDLRefHead2">Actions</p>

<p>The actions can be set to occur as a result of the tests.</p>

<!--(Table)=========================================================-->
<table>
    <thead>
        <tr>
            <th>Type</th>

            <th>Action</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><span class=
            "NDLSystemFont">ACTION_KEEP</span></td>

            <td>Keep the current value in the stencil
            buffer.</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ACTION_ZERO</span></td>

            <td>Write zero to the current stencil buffer.</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ACTION_REPLACE</span></td>

            <td>Write the reference value to the stencil
            buffer.</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ACTION_INCREMENT</span></td>

            <td>Increment the value in the stencil buffer.</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ACTION_DECREMENT</span></td>

            <td>Decrement the value in the stencil buffer.</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ACTION_INVERT</span></td>

            <td>Bit-wise invert the value in the stencil
            buffer.</td>
        </tr>
    </tbody>
</table>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiFogProperty</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiFogProperty</p>

<p class="NDLRefParentage">: public <a href=
"NiProperty.htm">NiProperty</a></p>

<p class="NDLRefHeaderFile">&lt;NiFogProperty.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiFogProperty</span> allows the
application to enable, disable and control the appearance of
fogging, also known as haze. Note that unlike older versions of
Gamebryo, the current version does not automatically set the fog
color to the background color. Fog color is now set by each
individual fog property.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiFogProperty()</p>

<p class="NDLRefMemberDescription">Default constructor.
Constructs a property with fogging turned off, a depth value of
<span class="NDLSystemFont">1.0</span>, a color of black, and
linear-z fogging as the fog function.</p>

<p class="NDLRefHead1">Static Member Functions</p>

<p class="NDLRefMemberFunction">static int GetType()</p>

<p class="NDLRefMemberFunction">static NiFogProperty*
GetDefault()</p>

<p class="NDLRefMemberDescription">See <span class=
"NDLSystemFont"><a href="NiProperty.htm">NiProperty</a></span>
for details on these non-virtual functions.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">bool GetFog() const</p>

<p class="NDLRefMemberFunction">void SetFog(bool bFog)</p>

<p class="NDLRefMemberDescription">Retrieve and set the value of
the fogging enable flag. If set to <span class=
"NDLSystemFont">true</span>, then fogging is used when drawing
polygons in the subtree to which the property is attached. If the
flag is set to <span class="NDLSystemFont">false</span>, then
fogging is disabled.</p>

<p class="NDLRefMemberFunction"><a href=
"NiFogProperty.htm#Supported_Fogging_Functions">FogFunction</a>
GetFogFunction() const</p>

<p class="NDLRefMemberFunction">void SetFogFunction(<a href=
"NiFogProperty.htm#Supported_Fogging_Functions">FogFunction</a>
eFunc)</p>

<p class="NDLRefMemberDescription">Retrieve and set the fogging
function. The fogging function setting controls the method of
generating fog values for each piece of geometry. The supported
fogging functions are listed below in the "Notes" section.</p>

<p class="NDLRefMemberFunction">const <a href=
"NiColor.htm">NiColor</a>&amp; GetFogColor() const</p>

<p class="NDLRefMemberFunction">void SetFogColor(const <a href=
"NiColor.htm">NiColor</a>&amp; kColor)</p>

<p class="NDLRefMemberDescription">Get and set the fog color. 
This function is now independent of the renderer's background
color.</p>

<p class="NDLRefMemberFunction">float GetDepth() const</p>

<p class="NDLRefMemberFunction">void SetDepth(float fDepth)</p>

<p class="NDLRefMemberDescription">Retrieve and set the value of
the fog depth. This depth value should be a positive
floating-point value (the value is not error-checked), and
represents the depth of the fog in normalized units. Currently,
fog always attains it maximum at the far plane, but the distance
at which fog begins to appear is set using this depth value. If
a value of <span class="NDLSystemFont">1.0</span> is used for the
depth value, then fogging begins at the near plane. If a value
of <span class="NDLSystemFont">0.5</span> is used for the depth
value, then fogging will begin halfway between the near and far
planes in world space. Other values will cause the fog to begin
at the given fraction from the far to the near plane. Using a
value greater than <span class="NDLSystemFont">1.0</span> will
cause all objects to be fogged to some nonzero level. This value
has no effect when the <span class=
"NDLSystemFont">FOG_VERTEX_ALPHA</span> mode is used.</p>

<p class="NDLRefMemberFunction">bool IsEqualFast(const
NiFogProperty&amp; kProp) const</p>

<p class="NDLRefMemberDescription">See <span class=
"NDLSystemFont"><a href="NiProperty.htm">NiProperty</a></span>
for details on this non-virtual function.</p>

<p class="NDLRefHead1">Notes</p>

<a name="Supported_Fogging_Functions" id="Supported_Fogging_Functions"></a>

<p class="NDLRefHead2">Supported Fogging Functions</p>

<p>The following fogging functions are supported by Gamebryo,
although specific renderers may or may not be able to support all
of them in all modes. Note that all fogging functions are
declared In reply to: the scope of <span class=
"NDLSystemFont">NiFogProperty</span>, and the names must be
qualified as such.</p>

<!--(Table)=========================================================-->
<table>
    <thead>
        <tr>
            <th>Function</th>

            <th>Description</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><span class=
            "NDLSystemFont">FOG_Z_LINEAR</span></td>

            <td>Fogging is linear, based on the perpendicular
            distance of the given point from the far plane. This
            type of fogging is inexpensive to compute (some 3D
            hardware may even be able to compute these fog values
            for free), but tends to cause artifacts because the
            fog value is not based directly upon the distance
            from the eye point to the fogged point.</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">FOG_RANGE_SQ</span></td>

            <td>Fogging is based upon the squared distance of the
            point from the eye point. This algorithm is more
            expensive to compute than linear-z fogging, but tends
            to create fewer visual artifacts.</td>
        </tr>
    </tbody>
</table>

<p class="NDLRefHead2">Unsupported Fogging Functions</p>

<p>The fogging function <span class=
"NDLSystemFont">FOG_VERTEX_ALPHA</span> is no longer
supported&mdash;updating and using per-vertex colors on a
per-frame basis is not recommended on current 3D hardware.
Applications requiring advanced fogging should use <span class=
"NDLSystemFont"><a href=
"NiTextureEffect.htm">NiTextureEffect</a></span> or <span class=
"NDLSystemFont"><a href=
"../../Programmer/NiShader/NiShader.htm">NiShader</a></span>
based effects.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

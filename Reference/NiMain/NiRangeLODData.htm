<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiRangeLODData</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiRangeLODData</p>

<p class="NDLRefParentage">: public <a href=
"NiLODData.htm">NiLODData</a></p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiRangeLODData</span> encompasses
the logic of switching LOD levels based on Z depth from the
camera to the <a href="NiLODNode.htm"><span class=
"NDLSystemFont">NiLODNode</span></a>. Z depth calculations are
done between the camera and the <span class=
"NDLSystemFont">NiRangeLODData</span>'s center point in the
<a href="NiLODNode.htm"><span class=
"NDLSystemFont">NiLODNode</span></a>'s local space. There are a
couple of things inherent to the implementation worth mentioning.
A LOD level will be the current one displayed if it is greater
than or equal to the near value and less than the far value. Two
different LOD ranges can overlap and <span class=
"NDLSystemFont">GetLODLevel</span> will return the first valid
range it finds. If the current range is not found in any LOD
ranges, <span class="NDLSystemFont">GetLODLevel</span> will
default to child -1 so no children will be displayed. There is a
direct mapping between the ordering of the LOD ranges and the
ordering of the children on the node, but there is no inherent
order to the children of the <a href="NiLODNode.htm"><span class=
"NDLSystemFont">NiLODNode</span></a> required, provided the LOD
data and the children match.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiRangeLODData();</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual int GetLODLevel(<a href=
"NiCamera.htm">NiCamera</a>* pkCamera, <a href=
"NiLODNode.htm"><span class="NDLSystemFont">NiLODNode</span></a>*
pkLOD) const</p>

<p class="NDLRefMemberDescription">Determine the LOD Level to be
used based on this camera and Node <span class=
"NDLSystemFont">NiRangeLODData</span> will use the range from
m_kWorldCenter to the Camera. Returning -1 indicates nothing
should be displayed.</p>

<p class="NDLRefMemberFunction">virtual void
UpdateWorldData(<a href="NiLODNode.htm"><span class=
"NDLSystemFont">NiLODNode</span></a>* pkLOD)</p>

<p class="NDLRefMemberDescription">Update any internal world data
base on this LOD node <span class=
"NDLSystemFont">NiRangeLODData</span> will update the
m_kWorldCenter.</p>

<p class="NDLRefMemberFunction">virtual <a href=
"NiLODData.htm">NiLODData</a>* Duplicate()</p>

<p class="NDLRefMemberDescription"><a href=
"NiLODData.htm"><span class="NDLSystemFont">NiLODData</span></a>
are never shared so we need a duplication function for
cloning.</p>

<p class="NDLRefMemberFunction">void SetCenter(const <a href=
"NiPoint3.htm">NiPoint3</a>&amp; kCenter)</p>

<p class="NDLRefMemberFunction">const <a href=
"NiPoint3.htm">NiPoint3</a>&amp; GetCenter() const</p>

<p class="NDLRefMemberDescription">Get and Set the local space
center point used to determine the range to the camera.</p>

<p class="NDLRefMemberFunction">const <a href=
"NiPoint3.htm">NiPoint3</a>&amp; GetWorldCenter() const</p>

<p class="NDLRefMemberDescription">Get the world location of the
center point.</p>

<p class="NDLRefMemberFunction">unsigned int GetNumRanges()
const;</p>

<p class="NDLRefMemberFunction">void SetNumRanges(unsigned int
uiNumRanges)</p>

<p class="NDLRefMemberDescription">Get and set the number of
ranges where each range defines the near and far distance for a
LOD level.</p>

<p class="NDLRefMemberFunction">void GetRange(unsigned int
uiIndex, float&amp; fNear, float&amp; fFar) const</p>

<p class="NDLRefMemberFunction">void SetRange(unsigned int
uiIndex, float fNear, float fFar)</p>

<p class="NDLRefMemberDescription">Get and Set the near and far
ranges for a given LOD index. A LOD level will be the current one
displayed if it is greater than or equal to the near value and
less than the far value.</p>

<p class="NDLRefMemberFunction">void GetRangeSqr(unsigned int
uiIndex, float&amp; fNearSqr, float&amp; fFarSqr) const</p>

<p class="NDLRefMemberDescription">Gets the squares of the near
and far ranges for a given LOD index.</p>

<p class="NDLRefMemberFunction">virtual int GetLODIndex(int
iLODLevel) const</p>

<p class="NDLRefMemberDescription">Given a LOD level return the
index of the <a href="NiLODNode.htm"><span class=
"NDLSystemFont">NiLODNode</span></a> child that should be
displayed.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiShadowVisitor</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiShadowVisitor</p>

<p class="NDLRefParentage">: public <span class=
"NDLSystemFont"><a href=
"../../Reference/NiSystem/NiMemObject.htm">NiMemObject</a></span></p>

<p class="NDLRefHeaderFile"><span class=
"NDLSystemFont">&lt;NiShadowVisitor.h&gt;</span></p>

<p class="NDLRefHead1">Description</p>

<p>The NiShadowVisitor class is an abstract class used by the
shadowing system to create a list of shadow casting and shadow
receiving objects for a given <a href=
"../../Reference/NiMain/NiShadowGenerator.htm">NiShadowGenerator</a>.
The shadowing system will use the active NiShadowVisitor object
to create a list of shadow casters and shadow receivers for the
provided shadow generator. This allows applications to write
custom NiShadowVisitor sub-classes to handle special nodes in the
scene.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual void
PopulateCasterList(<a href=
"../../Reference/NiMain/NiShadowGenerator.htm">NiShadowGenerator</a>*
pkGenerator, NiAVObjectRawList&amp; kCasterList)</p>

<p class="NDLRefMemberDescription">Analyzes the provided
NiShadowGenerator and populates kCasterList with a the set of
shadow casting objects. The set of shadow casting objects is
based off of the affected and unaffected lists of the shadow
generator and the light the shadow generator is attached too.
Each NiNode that is processes is passed to
NiShadowVisitor::ShouldProcessNodeChildren to determine if the
node should be added to caster list directly or if its children
should be processed instead.</p>

<p class="NDLRefMemberFunction">virtual void
PopulateReceiverList(<a href=
"../../Reference/NiMain/NiShadowGenerator.htm">NiShadowGenerator</a>*
pkGenerator, NiAVObjectRawList&amp; kCasterList)</p>

<p class="NDLRefMemberDescription">Analyzes the provided
NiShadowGenerator and populates kCasterList with a the set of
shadow receiving objects. The set of shadow receiving objects is
based off of the affected and unaffected lists of the shadow
generator and the light the shadow generator is attached too.
Each NiNode that is processes is passed to
NiShadowVisitor::ShouldProcessNodeChildren to determine if the
node should be added to caster list directly or if its children
should be processed instead.</p>

<p class="NDLRefMemberFunction">virtual bool
ShouldProcessNodeChildren(<a href=
"../../Reference/NiMain/NiNode.htm">NiNode</a>* pkNode) = 0</p>

<p class="NDLRefMemberDescription">Pure virtual method that is
used to inspect the provided node to determine if the node should
be worked with directly or if this children should be processed
instead. This is primarily used for nodes that perform work in
NiNode::OnVisible that is used to determine which of the children
should be rendered, for example NiLODNode.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>		
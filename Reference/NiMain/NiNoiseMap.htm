<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiNoiseMap</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiNoiseMap</p>

<p class="NDLRefParentage">: public <span class=
"NDLSystemFont"><a href=
"../../Reference/NiSystem/NiMemObject.htm">NiMemObject</a></span></p>

<p class="NDLRefHeaderFile"><span class=
"NDLSystemFont">&lt;NiNoiseMap.h&gt;</span></p>

<p class="NDLRefHead1">Description</p>

<p>A noise map creates a texture containing random 8-bit values
for each pixel's channel. Currently only single channel (red)
noise maps are supported</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiZBufferProperty()</p>

<p class="NDLRefMemberDescription">Default constructor - creates
a non-initialized noise map</p>

<p class="NDLRefHead1">Static Member Function</p>

<p class="NDLRefMemberFunction">static const <a href=
"../../Reference/NiMain/NiFixedString.htm">NiFixedString</a>&amp;
GetMapNameFromType( NiStandardMaterial::NoiseMapType eType)</p>

<p class="NDLRefMemberDescription">Returns a fixed string
representation of the given map type in NiStandardMaterial</p>

<p class="NDLRefMemberFunction">static bool
GetTypeIDFromName(const <a href=
"../../Reference/NiMain/NiFixedString.htm">NiFixedString</a>&amp;
kName, unsigned int&amp; uiID)</p>

<p class="NDLRefMemberDescription">Returns the
NiStandardMaterial::NoiseMapType that corresponds to the given
type name</p>

<p class="NDLRefMemberFunction">static bool
Initialize(NiNoiseMap* pkNoiseMap, NoiseType eNoiseType,
NiTexturingProperty::FilterMode eFilterMode,
NiTexturingProperty::ClampMode eClampMode, NiUInt32
uiTextureSize, NiUInt32 uiRandSeed = 0)</p>

<p class="NDLRefMemberDescription">Initializes the given noise
map according to the given parameters. If the given noise map has
already been initialized, its existing data is erased and it is
re-initialized.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">NoiseType GetNoiseType()
const</p>

<p class="NDLRefMemberDescription">Returns the current noise
generation technique in use.</p>

<p class="NDLRefMemberFunction">NiSourceTexture* GetTexture()
const</p>

<p class="NDLRefMemberDescription">Get the generated noise
NiTexture used by this map</p>

<p class="NDLRefMemberFunction">NiTexturingProperty::ClampMode
GetClampMode() const</p>

<p class="NDLRefMemberFunction">void
SetClampMode(NiTexturingProperty::ClampMode eClampMode);</p>

<p class="NDLRefMemberDescription">Clamping mode of the generated
noise NiTexture.</p>

<p class="NDLRefMemberFunction">NDLRefMemberFunction::FilterMode
GetFilterMode() const</p>

<p class="NDLRefMemberFunction">void
SetFilterMode(NiTexturingProperty::FilterMode eFilterMode);</p>

<p class="NDLRefMemberDescription">Filtering mode of the
generated noise NiTexture.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>			
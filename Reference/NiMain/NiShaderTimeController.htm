<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiShaderTimeController</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiShaderTimeController</p>

<p class="NDLRefParentage">: public <span><a href=
"NiTimeController.htm">NiTimeController</a></span></p>

<p class="NDLRefHeaderFile">&lt;NiShaderTimeController.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiShaderTimeController</span> is
the base class for all of the shader-specific animation key
classes. These classes are used to synchronize shader extra data
in a Gamebryo-friendly manner. Instances of derived classes are
usually automatically attached to a piece of <a href=
"NiRenderObject.htm"><span class=
"NDLSystemFont">NiRenderObject</span></a> as the material applies
a shader that uses time to it. These classes are not guaranteed
to be safe for streaming, so it is necessary to call the renderer
specific <span class=
"NDLSystemFont">Ni***Renderer::PrepareForStreaming</span> on the
root of the scene graph before streaming. After streaming, call
<span class=
"NDLSystemFont">Ni***Renderer::RestoreAfterStreaming</span>. This
will prepare an entire scene graph for streaming.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction"><span class=
"NDLSystemFont">NiShaderTimeController</span>()</p>

<p class="NDLRefMemberDescription">The default constructor
creates an <span class=
"NDLSystemFont">NiShaderTimeController</span> instance that does
essentially nothing.</p>

<p class="NDLRefHead1">Supported Static Member Functions</p>

<p class="NDLRefMemberFunction">static void
RemoveBeforeStreaming(<a href="NiObjectNET.htm">NiObjectNET</a>*
pkRoot)</p>

<p class="NDLRefMemberDescription">This is an internal method
that the renderers use to prep a scene graph for streaming.</p>

<p class="NDLRefMemberFunction">static void
AddAfterStreaming()</p>

<p class="NDLRefMemberDescription">This is an internal method
that the renderers use to restore a scene graph after
streaming.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberDescription">None</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

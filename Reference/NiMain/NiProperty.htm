<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiProperty</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<p class="NDLRefHeadClassTitle">NiProperty</p>

<p class="NDLRefParentage">: public <u><span style="color: #0000ff;"><a href="NiObjectNET.htm"><span>NiObjectNET</span></a></span></u></p>

<p class="NDLRefHeaderFile">&lt;NiProperty.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiProperty</span> 
 is an abstract base class representing all rendering properties. Subclasses 
 of this base are attached to <span class="NDLSystemFont"><a href="NiAVObject.htm">NiAVObject</a></span> objects to control the rendering 
 styles used to render them. </p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiProperty()</p>

<p class="NDLRefMemberDescription">Default constructor</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual void Update(float fTime)</p>

<p class="NDLRefMemberDescription">Calls <span class="NDLSystemFont">Update</span> on any <span class="NDLSystemFont">NiTimeController</span>s 
 that are attached to the property.</p>

<p class="NDLRefMemberFunction">virtual int Type() const</p>

<p class="NDLRefMemberDescription">This function returns the unique class 
 identifier number of the given rendering property. Each subclass of <span class="NDLSystemFont">NiProperty</span> 
 is assigned a unique identifier number, and each instance of a subclass 
 of <span class="NDLSystemFont">NiProperty</span> 
 returns its class identifier using this function. A given <span class="NDLSystemFont">NiProperty</span> subclass's 
 unique identifier may be accessed through the public static const int 
 <span class="NDLSystemFont">NiPropertySubclass::ms_iType</span>, 
 where <span class="NDLSystemFont">NiPropertySubclass</span> 
 is replaced by the name of the given subclass. This number is used by 
 the library to place properties in arrays, as the property type identifiers 
 range from <span class="NDLSystemFont">0</span> 
 to <span class="NDLSystemFont">NiProperty::MAX_TYPES-1</span>, 
 with no two <span class="NDLSystemFont">NiProperty</span> 
 subclasses assigned the same index.</p>

<p class="NDLRefHead1">Descendant Member Functions</p>

<p>Though these functions are not a part of this object, 
 all objects derived from <span class="NDLSystemFont">NiProperty</span> contain 
 them. </p>

<p class="NDLRefMemberFunction">bool IsEqualFast(const NiProperty&amp; kProp) 
 const</p>

<p class="NDLRefMemberDescription">This function returns <span class="NDLSystemFont">true</span> if the input object 
 contains the same property data as the called object.&nbsp; This function 
 will always return <span class="NDLSystemFont">false</span> 
 if the properties differ, but may also return <span class="NDLSystemFont">false</span> even if they are 
 functionally the same.&nbsp; These functions are designed to be fast and 
 efficient, and are conservative in their judgement at to whether or not 
 two properties are functionally equivalent.</p>

<p class="NDLRefMemberFunction">static int GetType()</p>

<p class="NDLRefMemberDescription">This function is a static version of the 
 <span class="NDLSystemFont">Type</span> 
 function and need not be called with an object.</p>

<p class="NDLRefMemberFunction">static NiProperty* GetDefault()</p>

<p class="NDLRefMemberDescription">This function returns a default copy of 
 the given property type.&nbsp; This default copy will be the property 
 that an <span class="NDLSystemFont">NiPropertyState</span> 
 refers to when another property is not specifically attached to the object 
 and contains the default property values, which usually causes the renderer 
 to ignore the property in question.</p>

<p class="NDLRefHead1">Notes</p>

<a name=Default_Properties></a><p class="NDLRefHead2">Default Properties</p>

<p>Every subclass of <span class="NDLSystemFont">NiProperty</span> 
 declares and defines a &quot;default&quot; instance of that property, 
 which is used to set an <span class="NDLSystemFont">NiRenderer</span>'s 
 render state values if no instances of that property have been attached 
 to the <span class="NDLSystemFont">NiAVObject</span> 
 being drawn or any of its parents. In general, an <span class="NDLSystemFont">NiProperty</span> subclass's 
 default instance will be built using the subclass's default constructor. 
 As a result, the values set in an <span class="NDLSystemFont">NiProperty</span> 
 subclass's default constructor are also the values used when no such property 
 is pushed. If needed, a smart pointer to a property's default instance 
 may be retrieved from the public static member variable <span class="NDLSystemFont">NiPropertySubclass::ms_kDefault</span>, 
 where <span class="NDLSystemFont">NiPropertySubclass</span> 
 is replaced by the name of the given subclass.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiTStringMap</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiTStringMap</p>

<p class="NDLRefParentage">: public <a href=
"NiTMap.htm">NiTMap</a></p>

<p class="NDLRefHeaderFile">&lt;NiTStringMap.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>A mapping or hash table between string-based keys and any type
of value. This class is useful for mapping string-based names to
objects. See the documentation for <a href=
"NiTMap.htm"><span class="NDLSystemFont">NiTMap</span></a>.
Prefer <a href="NiTStringPointerMap.htm"><span class=
"NDLSystemFont">NiTStringPointerMap</span></a> if <span class=
"NDLSystemFont">sizeof(TVAL)</span> is 4 bytes; that class
automatically block allocates elements, improving performance and
memory use.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiTStringMap(unsigned int
uiHashSize = 37, bool bCopy = true)</p>

<p class="NDLRefMemberDescription">The <span class=
"NDLSystemFont">uiHashSize</span> argument is sent to the base
class constructor. If <span class="NDLSystemFont">bCopy</span>
is <span class="NDLSystemFont">true</span>, <span class=
"NDLSystemFont">NiTStringMap</span> makes a copy of string keys. 
If <span class="NDLSystemFont">bCopy</span> is <span class=
"NDLSystemFont">false</span>, <span class=
"NDLSystemFont">NiTStringMap</span> just uses the <span class=
"NDLSystemFont">const char*</span> pointers that are passed as
string keys without duplicating them.</p>

<p class="NDLRefHead1">Notes</p>

<p>The HASH class (see <a href=
"NiTMap.htm#TemplateRestrictions"><span class=
"NDLSystemFont">NiTMap</span></a>) implements the following hash
function:</p>

<pre>
inline unsigned int NiStringHashFunctor::KeyToHashIndex(
    const char* pKey, unsigned int uiTableSize)
{
    unsigned int uiHash = 0;
    while (*pKey)
        uiHash = (uiHash &lt;&lt; 5) + uiHash + *pKey++;
    return uiHash % uiTableSize;
}
</pre>

<p>The EQUALS function is as follows:</p>

<pre>
inline bool NiStringEqualsFunctor::IsKeysEqual(const char* pcKey1,
    const char* pcKey2)
{
    return strcmp(pcKey1, pcKey2) == 0;
}
</pre>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

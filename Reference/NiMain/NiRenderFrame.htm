<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiRenderFrame</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiRenderFrame</p>

<p class="NDLRefParentage">: public <a href=
"NiRefObject.htm">NiRefObject</a></p>

<p class="NDLRefHeaderFile">&lt;NiRenderFrame.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This class represents a rendering frame. It contains a list of
<span class="NDLSystemFont"><a href=
"NiRenderStep.htm">NiRenderStep</a></span> objects that it
iterates through to render in its <span class=
"NDLSystemFont">Draw</span> function. The <span class=
"NDLSystemFont">Display</span> function tells the renderer to
display the rendered frame. Pre- and post-processing callbacks
are provided at the beginning and end of the <span class=
"NDLSystemFont">Draw</span> function.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiRenderFrame()</p>

<p class="NDLRefMemberDescription">The sole constructor for this
class sets the name to "Render Frame".</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">void SetName(const <a href=
"NiFixedString.htm">NiFixedString</a>&amp; kName)</p>

<p class="NDLRefMemberFunction">const <a href=
"NiFixedString.htm">NiFixedString</a>&amp; GetName() const</p>

<p class="NDLRefMemberDescription">These functions set and get
the name of the render frame. The name defaults to "Render
Frame".</p>

<p class="NDLRefMemberFunction">void Draw()</p>

<p class="NDLRefMemberDescription">This function is the main
rendering function for this class. It first invokes the
pre-processing callback and then calls <span class=
"NDLSystemFont">BeginFrame</span> on the renderer. Next, it
iterates over the stored list of <span class=
"NDLSystemFont"><a href=
"NiRenderStep.htm">NiRenderStep</a></span> objects, calling
<span class="NDLSystemFont">Render</span> on each active render
step. After rendering the render steps, <span class=
"NDLSystemFont">EndUsingRenderTargetGroup</span> is called, if
necessary, along with <span class=
"NDLSystemFont">EndFrame</span>. The post-processing callback is
then invoked.</p>

<p class="NDLRefMemberFunction">void Display()</p>

<p class="NDLRefMemberDescription">This function simply calls
<span class="NDLSystemFont">DisplayFrame</span> on the
renderer.</p>

<p class="NDLRefMemberFunction">void AppendRenderStep(<a href=
"NiRenderStep.htm">NiRenderStep</a>* pkRenderStep)</p>

<p class="NDLRefMemberFunction">void PrependRenderStep(<a href=
"NiRenderStep.htm">NiRenderStep</a>* pkRenderStep)</p>

<p class="NDLRefMemberFunction">void RemoveRenderStep(<a href=
"NiRenderStep.htm">NiRenderStep</a>* pkRenderStep)</p>

<p class="NDLRefMemberFunction">void RemoveAllRenderSteps()</p>

<p class="NDLRefMemberFunction"><a href=
"NiTPointerList.htm">NiTPointerList</a>&lt;<a href=
"NiRenderStep.htm">NiRenderStepPtr</a>&gt;&amp;
GetRenderSteps()</p>

<p class="NDLRefMemberFunction">const <a href=
"NiTPointerList.htm">NiTPointerList</a>&lt;<a href=
"NiRenderStep.htm">NiRenderStepPtr</a>&gt;&amp; GetRenderSteps()
const</p>

<p class="NDLRefMemberFunction"><a href=
"NiRenderStep.htm">NiRenderStep</a>* GetRenderStepByName(const
<a href="NiFixedString.htm">NiFixedString</a>&amp; kName)
const</p>

<p class="NDLRefMemberFunction">NiTListIterator
GetRenderStepPosByName(const <a href=
"NiFixedString.htm">NiFixedString</a>&amp; kName) const</p>

<p class="NDLRefMemberFunction"><a href=
"NiRenderStep.htm">NiRenderStep</a>*
GetRenderStepAndPosByName(const <a href=
"NiFixedString.htm">NiFixedString</a>&amp; kName,
NiTListIterator&amp; kIter) const</p>

<p class="NDLRefMemberDescription">These functions provide access
to the list of render steps. The <span class=
"NDLSystemFont">GetRenderStepAndPosByName</span> function returns
the first render click in the list with the specified name,
storing the list iterator to that render click in the supplied
variable. <span class="NDLSystemFont">GetRenderStepByName</span>
and <span class="NDLSystemFont">GetRenderStepPosByName</span>
both call <span class=
"NDLSystemFont">GetRenderStepAndPosByName</span> under the hood
and are provided for convenience purposes.</p>

<p class="NDLRefMemberFunction">void GatherStatistics(unsigned
int&amp; uiNumObjectsDrawn, float&amp; fCullTime, float&amp;
fRenderTime) const</p>

<p class="NDLRefMemberDescription">This function returns various
rendering statistics that were tracked during execution of the
most recent frame. Each render step contains functions for
accessing this information, so this function merely iterates over
all render steps, totaling up the information and returning it in
the provided variables.</p>

<p class="NDLRefMemberFunction">void
SetPreProcessingCallbackFunc(<a href=
"NiRenderFrame.htm#Callback">Callback</a> pfnCallback, void*
pvCallbackData = NULL)</p>

<p class="NDLRefMemberFunction"><a href=
"NiRenderFrame.htm#Callback">Callback</a>
GetPreProcessingCallbackFunc() const</p>

<p class="NDLRefMemberFunction">void*
GetPreProcessingCallbackFuncData() const</p>

<p class="NDLRefMemberDescription">These functions set and get
the pre-processing callback function pointer and data. This
callback is invoked at the very beginning of the <span class=
"NDLSystemFont">Draw</span> function.</p>

<p class="NDLRefMemberFunction">void
SetPostProcessingCallbackFunc(<a href=
"NiRenderFrame.htm#Callback">Callback</a> pfnCallback, void*
pvCallbackData = NULL)</p>

<p class="NDLRefMemberFunction"><a href=
"NiRenderFrame.htm#Callback">Callback</a>
GetPostProcessingCallbackFunc() const</p>

<p class="NDLRefMemberFunction">void*
GetPostProcessingCallbackFuncData() const</p>

<p class="NDLRefMemberDescription">These functions set and get
the post-processing callback function pointer and data. This
callback is invoked at the very end of the <span class=
"NDLSystemFont">Draw</span> function.</p>

<p class="NDLRefHead1">Notes</p>

<a name="Callback" id="Callback"></a><p class="NDLRefHead2">Callback</p>

<p class="NDLRefMemberFunction">typedef bool
(*Callback)(NiRenderFrame* pkCurrentFrame, void*
pvCallbackData)</p>

<p class="NDLRefMemberDescription">The <span class=
"NDLSystemFont">Callback</span> type defines a callback function
signature that can be used for pre- and post-processing callback
function pointers. It takes pointers to the current render frame
and the stored data for the callback.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

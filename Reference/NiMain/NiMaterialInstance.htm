<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiMaterialInstance</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiMaterialInstance</p>

<p class="NDLRefParentage">: public <a href="../../Reference/NiSystem/NiMemObject.htm">NiMemObject</a></p>

<p class="NDLRefHeaderFile">&lt;NiMaterialInstance.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This class contains the cached <span class="NDLSystemFont"><a HREF="NiShader.htm">NiShader</a></span> for a given <span class="NDLSystemFont"><a HREF="NiMaterial.htm">NiMaterial</a></span> attached to a piece of <span 
 class="NDLSystemFont"><a HREF="NiRenderObject.htm">NiRenderObject</a></span>.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiMaterialInstance()</p>

<p class="NDLRefMemberDescription">The default constructor.</p>

<p class="NDLRefMemberFunction">NiMaterialInstance(const NiMaterialInstance&amp; kMatInst)</p>

<p class="NDLRefMemberDescription">This is the default copy constructor.</p>

<p class="NDLRefMemberFunction">NiMaterialInstance(<a href="NiMaterial.htm">NiMaterial</a>* 
 pkMaterial)</p>

<p class="NDLRefMemberDescription">This constructor stores a given material 
 but does not evaluate it to produce a shader.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">NiMaterialInstance&amp; operator=(const NiMaterialInstance&amp; 
 kMatInst)</p>

<p class="NDLRefMemberDescription">Assignment operator.</p>

<p class="NDLRefMemberFunction"><a HREF="NiMaterial.htm">NiMaterial</a>* 
 GetMaterial() const</p>

<p class="NDLRefMemberDescription">Get the material associated with this 
 instance.</p>

<p class="NDLRefMemberFunction">void ClearCachedShader()</p>

<p class="NDLRefMemberDescription">Set the internal cached <a HREF="NiShader.htm"><span 
 class="NDLSystemFont">NiShader</span></a> to NULL.</p>

<p class="NDLRefMemberFunction"><a href="NiShader.htm">NiShader</a>* GetCachedShader(const 
 <a HREF="NiRenderObject.htm">NiRenderObject</a>* pkGeometry, const <a HREF="NiPropertyState.htm">NiPropertyState</a>* pkState, 
 const <a HREF="NiDynamicEffectState.htm">NiDynamicEffectState</a>* pkEffects) 
 const</p>

<p class="NDLRefMemberDescription">Get the internal cached shader if it matches 
 up with what the material expects. Additionally, this method will return 
 NULL if the <span class="NDLSystemFont">MaterialNeedsUpdate</span> flag 
 is true, the geometry's <span class="NDLSystemFont">GetDefaultMaterialNeedsUpdateFlag</span> 
 method returns true, or there is no cached shader.</p>

<p class="NDLRefMemberFunction">inline <a href="NiShader.htm">NiShader</a>* 
    GetCachedShader()</p>

<p class="NDLRefMemberDescription">Returns the internal cached shader.</p>

<p class="NDLRefMemberFunction"><a href="NiShader.htm">NiShaderderObject</a>* pkGeometry, const <a href="NiPropertyState.htm">NiPropertyState</a>* pkState, 
 const <a href="NiDynamicEffectState.htm">NiDynamicEffectState</a>* pkEffects)</p>

<p class="NDLRefMemberDescription">Generate a new shader using the <a HREF="NiMaterial.htm"><span 
 class="NDLSystemFont">NiMaterial</span></a>.</p>

<p class="NDLRefMemberFunction">void SetMaterialNeedsUpdate(bool bNeedsUpdate)</p>

<p class="NDLRefMemberDescription">Set the flag for this instance that determines 
 if the internal cached shader is valid.</p>

<p class="NDLRefMemberFunction">const <a HREF="NiSemanticAdapterTable.htm">NiSemanticAdapterTable</a>&amp; 
 GetSemanticAdapterTable() const</p>

<p class="NDLRefMemberFunction"><a HREF="NiSemanticAdapterTable.htm">NiSemanticAdapterTable</a>&amp; 
 GetSemanticAdapterTable()</p>

<p class="NDLRefMemberDescription">Returns the <span class="NDLSystemFont"><a HREF="NiSemanticAdapterTable.htm">NiSemanticAdapterTable</a></span> for 
 the mesh/material combination represented by this <span class="NDLSystemFont">NiMaterialInstance</span>.</p>

<p class="NDLRefMemberFunction">void UpdateSemanticAdapterTable(<a HREF="NiRenderObject.htm">NiRenderObject</a>* 
 pkMesh)</p>

<p class="NDLRefMemberDescription">Updates the <span class="NDLSystemFont"><a href="NiSemanticAdapterTable.htm">NiSemanticAdapterTable</a></span> for 
 the this <span class="NDLSystemFont">NiMaterialInstance</span> so it works 
 with the data in <span class="NDLSystemFont">pkMesh</span>.</p>

<p class="NDLRefMemberFunction">inline bool ShaderEquals(const <a HREF="NiMaterialInstance.htm">NiMaterialInstance</a>* 
    pkInMatInst) const</p>

<p class="NDLRefMemberDescription">Checks another <span class="NDLSystemFont"> NiMaterialInstance</span> object against this one and returns true if the two 
    are equivalent.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

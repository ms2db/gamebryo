<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiRenderedTexture</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiRenderedTexture</p>

<p class="NDLRefParentage">: public <a href=
"NiTexture.htm">NiTexture</a></p>

<p class="NDLRefHeaderFile">&lt;NiRenderedTexture.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiRenderedTexture</span>
represents textures whose contents are generated dynamically by
rendering a scene with a renderer. These textures are commonly
used for such effects as mirrors, reflections, and closed-circuit
television cameras.</p>

<p class="NDLRefHead1">Constructors</p>

<p>No public constructors are available, as the creation
functions must be able to fail in some cases. As a result, all
creation is handled via the static <span class=
"NDLSystemFont">Create</span> functions below.</p>

<p class="NDLRefHead1">Static Member Functions</p>

<p class="NDLRefMemberFunction">static NiRenderedTexture*
Create(unsigned int uiWidth, unsigned int uiHeight, <a href=
"NiRenderer.htm">NiRenderer</a>* pkRenderer, <a href=
"NiTexture__FormatPrefs.htm">FormatPrefs</a>&amp; kPrefs = ms_kDefaultPrefs,
<a href=
"Ni2DBuffer.htm#MultiSamplePreference">Ni2DBuffer::MultiSamplePreference</a>
eMSAAPref = Ni2DBuffer::MULTISAMPLE_NONE)</p>

<p class="NDLRefMemberDescription">Attempts to create a rendered
texture of the given size for the given renderer with the given
preferred multisample level. The resulting texture object may be
used as a texture. In order to render to this texture, an
<a href="NiRenderTargetGroup.htm"><span class=
"NDLSystemFont">NiRenderTargetGroup</span></a> must be created
containing the buffer referenced by the rendered texture. Please
refer to the <a href=
"../../RelNotes/Release_Notes_Introduction.htm">release notes</a>
for each renderer that is being used to check multisample
antialiasing support for rendered targets.</p>

<p class="NDLRefMemberDescription">Note that <span class=
"NDLSystemFont">NiRenderedTexture</span> objects should be
destroyed prior to destroying the renderer.</p>

<p class="NDLRefMemberDescription">The function will return NULL
if the given renderer or current hardware cannot support rendered
textures, or if the renderer failed to create a rendered texture
with the requested parameters. The format preferences argument
allows the application to request a specific format for the
rendered texture. This specific format request is only a
request, which the renderer may ignore or fulfill as best it
can.</p>

<p class="NDLRefMemberFunction">static NiRenderedTexture*
Create(unsigned int uiWidth, unsigned int uiHeight, <a href=
"NiRenderer.htm">NiRenderer</a>* pkRenderer, <a href=
"Ni2DBuffer.htm#MultiSamplePreference">Ni2DBuffer::MultiSamplePreference</a>
eMSAAPref = Ni2DBuffer::MULTISAMPLE_NONE)</p>

<p class="NDLRefMemberDescription">Attempts to create a rendered
texture of the given size for the given renderer with the given
preferred multisample level. The resulting texture object may be
used as a texture. In order to render to this texture, an
<a href="NiRenderTargetGroup.htm"><span class=
"NDLSystemFont">NiRenderTargetGroup</span></a> must be created
containing the buffer referenced by the rendered texture. Please
refer to the <a href=
"../../RelNotes/Release_Notes_Introduction.htm">release notes</a>
for each renderer that is being used to check multisample
antialiasing support for rendered targets.</p>

<p class="NDLRefMemberDescription">Note that <span class=
"NDLSystemFont">NiRenderedTexture</span> objects should be
destroyed prior to destroying the renderer.</p>

<p class="NDLRefMemberDescription">The function will return NULL
if the given renderer or current hardware cannot support rendered
textures, or if the renderer failed to create a rendered texture
with the requested parameters. The format preferences argument
allows the application to request a specific format for the
rendered texture. This specific format request is only a
request, which the renderer may ignore or fulfill as best it
can.</p>

<p class="NDLRefMemberFunction">static NiRenderedTexture*
Create(<a href="Ni2DBuffer.htm">Ni2DBuffer</a>* pkBuffer,
<a href="NiRenderer.htm">NiRenderer</a>* pkRenderer)</p>

<p class="NDLRefMemberDescription">Attempts to create an rendered
texture containing the specified <a href=
"Ni2DBuffer.htm"><span class=
"NDLSystemFont">Ni2DBuffer</span></a> for the given renderer. The
restrictions specified above still apply.</p>

<p class="NDLRefMemberDescription"><b>Note, current
limitation:</b> Currently this function will cause any previous
texture created with this buffer to no longer be updated.
Applications should avoid use of this function by storing the
<span class="NDLSystemFont">NiRenderedTexture</span> that the
buffer came from initially.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual unsigned int GetWidth()
const</p>

<p class="NDLRefMemberFunction">virtual unsigned int GetHeight()
const</p>

<p class="NDLRefMemberDescription">Return the height and width of
the texture&mdash;these functions should return a nonzero value
for all valid <span class=
"NDLSystemFont">NiRenderedTexture</span> objects.</p>

<p class="NDLRefMemberFunction">virtual <a href=
"Ni2DBuffer.htm">Ni2DBuffer</a>* GetBuffer() const</p>

<p class="NDLRefMemberDescription">Returns the buffer associated
with this rendered texture.</p>

<p class="NDLRefHead1">Notes</p><a name=
"Mipmapping_and_Rendered_Textures" id=
"Mipmapping_and_Rendered_Textures"></a>

<p class="NDLRefHead2">Mipmapping and Rendered Textures</p>

<p>Currently, no renderers can support mipmapped rendered
textures.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

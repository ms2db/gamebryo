<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiShaderAttributeDesc</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiShaderAttributeDesc</p>

<p class="NDLRefParentage">: public <a href=
"NiShaderDescBase.htm">NiShaderDescBase</a></p>

<p class="NDLRefHeaderFile">&lt;NiShaderAttributeDesc.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiShaderAttributeDesc</span>
provides a description for an attribute utilized by a Gamebryo
Shader.</p>

<p>Since the name of a shader attribute desc may be used as an
HLSL variable name, there is a requirement that the name of an
<span class="NDLSystemFont">NiShaderAttributeDesc</span> not
contain any whitespace characters. This requirement is enforced
by the internal-only function <span class=
"NDLSystemFont">SetName</span>.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiShaderAttributeDesc()</p>

<p class="NDLRefMemberDescription">The default constructor
creates an uninitialized <span class=
"NDLSystemFont">NiShaderAttributeDesc</span>.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction"><a href=
"NiShaderAttributeDesc.htm#AttributeType_Enumerations">AttributeType</a>
GetType() const</p>

<p class="NDLRefMemberDescription">Returns the data type of the
attribute.</p>

<p class="NDLRefMemberFunction">unsigned int GetFlags() const</p>

<p class="NDLRefMemberDescription">Gets the flags for the
attribute. The enumerations allowed are discussed below.</p>

<p class="NDLRefMemberFunction">bool GetValue_Bool(bool&amp;
bValue) const</p>

<p class="NDLRefMemberDescription">Retrieve the value of a
boolean attribute.</p>

<p class="NDLRefMemberFunction">bool GetValue_String(const
char*&amp; pcValue) const</p>

<p class="NDLRefMemberDescription">Retrieve the value of a string
attribute.</p>

<p class="NDLRefMemberFunction">bool
GetValue_UnsignedInt(unsigned int&amp; uiValue) const</p>

<p class="NDLRefMemberDescription">Retrieve the value of a
unsigned int attribute.</p>

<p class="NDLRefMemberFunction">bool GetValue_Float(float&amp;
fValue) const</p>

<p class="NDLRefMemberDescription">Retrieve the value of a float
attribute.</p>

<p class="NDLRefMemberFunction">bool GetValue_Point2(<a href=
"NiPoint2.htm">NiPoint2</a>&amp; kPt2Value) const</p>

<p class="NDLRefMemberDescription">Retrieve the value of a point2
attribute.</p>

<p class="NDLRefMemberFunction">bool GetValue_Point3(<a href=
"NiPoint3.htm">NiPoint3</a>&amp; kPtValue) const</p>

<p class="NDLRefMemberDescription">Retrieve the value of a point3
attribute.</p>

<p class="NDLRefMemberFunction">bool GetValue_Point4(float*&amp;
pafValue) const</p>

<p class="NDLRefMemberDescription">Retrieve the value of a point4
attribute.</p>

<p class="NDLRefMemberFunction">bool GetValue_Matrix3(<a href=
"NiMatrix3.htm">NiMatrix3</a>&amp; kMatValue) const</p>

<p class="NDLRefMemberDescription">Retrieve the value of a
matrix3 attribute.</p>

<p class="NDLRefMemberFunction">bool GetValue_Matrix4(float*&amp;
pafValue, unsigned int uiSizeBytes) const</p>

<p class="NDLRefMemberDescription">Retrieve the value of a
matrix4 attribute.</p>

<p class="NDLRefMemberFunction">bool GetValue_Color(<a href=
"NiColor.htm">NiColor</a>&amp; kClrValue) const</p>

<p class="NDLRefMemberDescription">Retrieve the value of a color
(rgb) attribute.</p>

<p class="NDLRefMemberFunction">bool GetValue_ColorA(<a href=
"NiColorA.htm">NiColorA</a>&amp; kClrValue) const</p>

<p class="NDLRefMemberDescription">Retrieve the value of a color
(rgba) attribute.</p>

<p class="NDLRefMemberFunction">bool GetValue_Texture(unsigned
int&amp; uiValue, const char*&amp; pszValue) const</p>

<p class="NDLRefMemberDescription">Retrieve the <span class=
"NDLSystemFont">NiTexturingProperty::ShaderMap</span> index of
the attribute, as well as the default texture file, if
provided.</p>

<p class="NDLRefMemberFunction">bool GetValue_Array(void*&amp;
pvValue, unsigned int uiValueBufferSize) const</p>

<p class="NDLRefMemberDescription">Retrieve the data in an array.
The <span class="NDLSystemFont">uiValueBufferSize</span>
parameter contains the amount of memory that <span class=
"NDLSystemFont">pvValue</span> refers to.</p>

<p class="NDLRefMemberFunction">bool GetArrayParams(<a href=
"NiShaderAttributeDesc.htm#AttributeType_Enumerations">AttributeType</a>&amp;
eSubType, unsigned int&amp; uiElementSize, unsigned int&amp;
uiNumElements) const</p>

<p class="NDLRefMemberDescription">Retrieve information about an
array attribute, including its type, the size of each element,
and the total number of elements in the array.</p>

<p class="NDLRefMemberFunction">bool IsHidden() const</p>

<p class="NDLRefMemberDescription">Returns <span class=
"NDLSystemFont">true</span> if the attribute is not
artist-editable.</p>

<p class="NDLRefMemberFunction">bool IsRanged() const</p>

<p class="NDLRefMemberDescription">Returns <span class=
"NDLSystemFont">true</span> if the attribute should be
constrained to a range.</p>

<p class="NDLRefMemberFunction">bool
GetRange_UnsignedInt(unsigned int&amp; uiLow, unsigned int&amp;
uiHigh) const</p>

<p class="NDLRefMemberDescription">Retrieve the range for an
unsigned int type.</p>

<p class="NDLRefMemberFunction">bool GetRange_Float(float&amp;
fLow, float&amp; fHigh) const</p>

<p class="NDLRefMemberDescription">Retrieve the range for a float
type.</p>

<p class="NDLRefMemberFunction">bool GetRange_Point2(<a href=
"NiPoint2.htm">NiPoint2</a>&amp; kPt2Low, <a href=
"NiPoint2.htm">NiPoint2</a>&amp; kPt2High) const</p>

<p class="NDLRefMemberDescription">Retrieve the range for a
point2 type.</p>

<p class="NDLRefMemberFunction">bool GetRange_Point3(<a href=
"NiPoint3.htm">NiPoint3</a>&amp; kPtLow, <a href=
"NiPoint3.htm">NiPoint3</a>&amp; kPtHigh) const</p>

<p class="NDLRefMemberDescription">Retrieve the range for a
point3 type.</p>

<p class="NDLRefMemberFunction">bool GetRange_Floats(unsigned int
uiCount, float* pafLow,<br>
float* pafHigh) const</p>

<p class="NDLRefMemberDescription">Retrieve the range for a
point4 type.</p>

<p class="NDLRefMemberFunction">bool GetRange_Color(<a href=
"NiColor.htm">NiColor</a>&amp; kClrLow, <a href=
"NiColor.htm">NiColor</a>&amp; kClrHigh) const</p>

<p class="NDLRefMemberDescription">Retrieve the range for a color
(rgb) type.</p>

<p class="NDLRefMemberFunction">bool GetRange_ColorA(<a href=
"NiColorA.htm">NiColorA</a>&amp; kClrLow, <a href=
"NiColorA.htm">NiColorA</a>&amp; kClrHigh) const</p>

<p class="NDLRefMemberDescription">Retrieve the range for a color
(rgba) type.</p>

<p class="NDLRefMemberFunction">bool GetRange_Array(void*&amp;
pvLow, void*&amp; pvHigh, unsigned int uiBufferSize) const</p>

<p class="NDLRefMemberDescription">Retrieve the range for an
array. The <span class="NDLSystemFont">uiBufferSize</span>
parameter contains the amount of memory that each of the
<span class="NDLSystemFont">pvLow</span> and <span class=
"NDLSystemFont">pvHigh</span> pointers refer to.</p>

<p class="NDLRefHead1">Notes</p>

<a name="Flags_Enumerations" id="Flags_Enumerations"></a><p class="NDLRefHead2">Flags Enumerations</p>

<p><span class="NDLSystemFont">Flags</span> is an enumerated type
that indicates information about the attribute. These flags can
indicate the following:</p>

<!--(Table)=========================================================-->

<table>
    <thead>
        <tr>
            <th>Flag</th>

            <th>Meaning</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><span class=
            "NDLSystemFont">ATTRIB_FLAGS_NONE</span></td>

            <td>No information standard attribute.</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ATTRIB_FLAGS_RANGED</span></td>

            <td>Attribute has a valid range.</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ATTRIB_FLAGS_HIDDEN</span></td>

            <td>Attribute NOT artist tweakable.</td>
        </tr>
    </tbody>
</table>

<a name="AttributeType_Enumerations" id="AttributeType_Enumerations"></a>

<p class="NDLRefHead2">AttributeType Enumerations</p>

<p><span class="NDLSystemFont">AttributeType</span> is an
enumeration that indicates the data type the entry represents.
The following values are defined in the enumeration:</p>

<!--(Table)=========================================================-->
<table>
    <thead>
        <tr>
            <th>AttributeType</th>

            <th>Corresponding Data Type</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><span class=
            "NDLSystemFont">ATTRIB_TYPE_UNDEFINED</span></td>

            <td>Invalid indicates uninitialized</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ATTRIB_TYPE_BOOL</span></td>

            <td>Boolean</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ATTRIB_TYPE_STRING</span></td>

            <td>String</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ATTRIB_TYPE_UNSIGNEDINT</span></td>

            <td>Unsigned integer</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ATTRIB_TYPE_FLOAT</span></td>

            <td>1 float</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ATTRIB_TYPE_POINT2</span></td>

            <td>2 floats (x,y)</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ATTRIB_TYPE_POINT3</span></td>

            <td>3 floats (x,y,z)</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ATTRIB_TYPE_POINT4</span></td>

            <td>4 floats (x,y,z,w)</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ATTRIB_TYPE_MATRIX3</span></td>

            <td>3x3 matrix</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ATTRIB_TYPE_MATRIX4</span></td>

            <td>4x4 matrix</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ATTRIB_TYPE_COLOR</span></td>

            <td>Color (r,g,b,a)</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ATTRIB_TYPE_TEXTURE</span></td>

            <td>Texture unsigned int index of the <span class=
            "NDLSystemFont">NiTexturingProperty::ShaderMap</span>
            to use.</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ATTRIB_TYPE_FLOAT8</span></td>

            <td>4x2 matrix</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ATTRIB_TYPE_FLOAT12</span></td>

            <td>4x3 matrix</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">ATTRIB_TYPE_ARRAY</span></td>

            <td>An array of floating point values.</td>
        </tr>
    </tbody>
</table>

<a name="ObjectType_Enumerations" id="ObjectType_Enumerations"></a><p class="NDLRefHead2">ObjectType Enumerations</p>

<p><span class="NDLSystemFont">ObjectType</span> is an
enumeration that indicates the object type the entry represents.
The following values are defined in the enumeration:</p>

<!--(Table)=========================================================-->
<table>
    <thead>
        <tr>
            <th>Object Type</th>

            <th>Corresponding Data Type</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>OT_UNDEFINED</td>

            <td>Invalid indicates uninitialized</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">OT_EFFECT_GENERALLIGHT</span></td>

            <td><span class="NDLSystemFont">NiLight</span> of any
            type</td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">OT_EFFECT_POINTLIGHT</span></td>

            <td><span class=
            "NDLSystemFont">NiPointLight</span></td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">OT_EFFECT_DIRECTIONALLIGHT</span></td>

            <td><span class=
            "NDLSystemFont">NiDirectionalLight</span></td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">OT_EFFECT_SPOTLIGHT</span></td>

            <td><span class=
            "NDLSystemFont">NiSpotLight</span></td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">OT_EFFECT_SHADOWPOINTLIGHT</span></td>

            <td><span class="NDLSystemFont">NiPointLight</span>
            with an active <span class=
            "NDLSystemFont">NiShadowGenerator</span></td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">OT_EFFECT_SHADOWDIRECTIONALLIGHT</span></td>

            <td><span class=
            "NDLSystemFont">NiDirectionalLight</span> with an
            active <span class=
            "NDLSystemFont">NiShadowGenerator</span></td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">OT_EFFECT_SHADOWSPOTLIGHT</span></td>

            <td><span class="NDLSystemFont">NiSpotLight</span>
            with an active <span class=
            "NDLSystemFont">NiShadowGenerator</span></td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">OT_EFFECT_ENVIRONMENTMAP</span></td>

            <td><span class=
            "NDLSystemFont">NiTextureEffect</span> using
            <span class=
            "NDLSystemFont">ENVIRONMENT_MAP</span></td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">OT_EFFECT_PROJECTEDSHADOWMAP</span></td>

            <td><span class=
            "NDLSystemFont">NiTextureEffect</span> using
            <span class=
            "NDLSystemFont">PROJECTED_SHADOW</span></td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">OT_EFFECT_PROJECTEDLIGHTMAP</span></td>

            <td><span class=
            "NDLSystemFont">NiTextureEffect</span> using
            <span class=
            "NDLSystemFont">PROJECTED_LIGHT</span></td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">OT_EFFECT_FOGMAP</span></td>

            <td><span class=
            "NDLSystemFont">NiTextureEffect</span> using
            <span class="NDLSystemFont">FOG_MAP</span></td>
        </tr>
    </tbody>
</table>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

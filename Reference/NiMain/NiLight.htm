<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiLight</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiLight</p>

<p class="NDLRefParentage">: public <a href=
"NiDynamicEffect.htm"><span>NiDynamicEffect</span></a></p>

<p class="NDLRefHeaderFile">&lt;NiLight.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiLight</span> is an abstract base
class that represents light sources in a scene graph. This class
includes the ambient, diffuse, and specular colors of a light, as
well as its intensity.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiLight()</p>

<p class="NDLRefMemberDescription">Default constructor.
Constructs a light with the following values:</p>

<!--(Table)=========================================================-->

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Variable</th>

                <th>Value</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td>Dimmer</td>

                <td><span class="NDLSystemFont">1.0</span></td>
            </tr>

            <tr>
                <td>Ambient color</td>

                <td><span class=
                "NDLSystemFont">[1.0,1.0,1.0]</span></td>
            </tr>

            <tr>
                <td>Diffuse color</td>

                <td><span class=
                "NDLSystemFont">[1.0,1.0,1.0]</span></td>
            </tr>

            <tr>
                <td>Specular color</td>

                <td><span class=
                "NDLSystemFont">[1.0,1.0,1.0]</span></td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">float GetDimmer() const</p>

<p class="NDLRefMemberFunction">void SetDimmer(float fDimmer)</p>

<p class="NDLRefMemberDescription">Retrieve and set the light
dimmer, which scales the overall brightness of all light
components. This value must be nonnegative is usually less than
or equal to <span class="NDLSystemFont">1.0</span> (although
advanced lighting effects may use larger values)</p>

<p class="NDLRefMemberFunction">const <a href=
"NiColor.htm">NiColor</a>&amp; GetAmbientColor() const</p>

<p class="NDLRefMemberFunction">void SetAmbientColor(const
<a href="NiColor.htm">NiColor</a>&amp; kColor)</p>

<p class="NDLRefMemberDescription">Retrieve and set the ambient
light color.</p>

<p class="NDLRefMemberFunction">const <a href=
"NiColor.htm">NiColor</a>&amp; GetDiffuseColor() const</p>

<p class="NDLRefMemberFunction">void SetDiffuseColor(const
<a href="NiColor.htm">NiColor</a>&amp; kColor)</p>

<p class="NDLRefMemberDescription">Retrieve and set the diffuse
light color.</p>

<p class="NDLRefMemberFunction">const <a href=
"NiColor.htm">NiColor</a>&amp; GetSpecularColor() const</p>

<p class="NDLRefMemberFunction">void SetSpecularColor(const
<a href="NiColor.htm">NiColor</a>&amp; kColor)</p>

<p class="NDLRefMemberDescription">Retrieve and set the specular
light color.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

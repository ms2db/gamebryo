<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiColor</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiColor</p>

<p class="NDLRefParentage">: public <a href=
"../../Reference/NiSystem/NiMemObject.htm"><span>NiMemObject</span></a></p>

<p class="NDLRefHeaderFile">&lt;NiColor.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiColor</span> represents
floating-point RGB colors without alpha. Normally, colors are
assumed to range between <span class="NDLSystemFont">0.0</span>
and <span class="NDLSystemFont">1.0</span> for each component,
but this assumption is not required inherently. The <span class=
"NDLSystemFont">r</span>, <span class="NDLSystemFont">g</span>,
and <span class="NDLSystemFont">b</span> data members are all
declared public for application convenience (allows
structure-like access).</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiColor(float fR = 0.0f, float fG
= 0.0f, float fB = 0.0f)</p>

<p class="NDLRefMemberDescription">This constructor is the
default and member-wise constructors. Given no arguments, it
constructs black (the zero color).</p>

<p class="NDLRefHead1">Operators</p>

<p class="NDLRefMemberFunction">NiColor&amp; operator= (float
fScalar)</p>

<p class="NDLRefMemberDescription">The float argument is assigned
to R, G, and B.</p>

<p class="NDLRefMemberFunction">NiColor&amp; operator== (const
NiColor&amp; kC) const</p>

<p class="NDLRefMemberDescription">This operator is the exact
equality operator.</p>

<p class="NDLRefMemberFunction">NiColor&amp; operator!= (const
NiColor&amp; kC) const</p>

<p class="NDLRefMemberDescription">This operator is the exact
inequality operator.</p>

<p class="NDLRefMemberFunction">NiColor&amp; operator+ (const
NiColor&amp; kC) const</p>

<p class="NDLRefMemberDescription">This operator performs
member-wise addition.</p>

<p class="NDLRefMemberFunction">NiColor&amp; operator- (const
NiColor&amp; kC) const</p>

<p class="NDLRefMemberDescription">This operator performs
member-wise subtraction.</p>

<p class="NDLRefMemberFunction">NiColor&amp; operator* (float
fScalar) const</p>

<p class="NDLRefMemberDescription">This operator scales all color
channels by the given scalar.</p>

<p class="NDLRefMemberFunction">NiColor&amp; operator* (const
NiColor&amp; kC) const</p>

<p class="NDLRefMemberDescription">This operator performs
member-wise multiplication (NOT a dot product).</p>

<p class="NDLRefMemberFunction">NiColor&amp; operator/ (float
fScalar) const</p>

<p class="NDLRefMemberDescription">This operator divides all the
color channels by the given scalar.</p>

<p class="NDLRefMemberFunction">NiColor&amp; operator/ (const
NiColor&amp; kC) const</p>

<p class="NDLRefMemberDescription">This operator performs a
member-wise division of the color channels.</p>

<p class="NDLRefMemberFunction">NiColor&amp; operator- ()
const</p>

<p class="NDLRefMemberDescription">This operator negates the
values of the color channels.</p>

<p class="NDLRefMemberFunction">friend NiColor operator* (float
fScalar, const NiColor&amp; kC)</p>

<p class="NDLRefMemberDescription">This operator multiplies each
color channel of the right-hand color by the given scalar.</p>

<p class="NDLRefMemberFunction">NiColor&amp; operator+= (const
NiColor&amp; kC)</p>

<p class="NDLRefMemberDescription">This operator performs a
member-wise increment of the left-hand member by the right-hand
member.</p>

<p class="NDLRefMemberFunction">NiColor&amp; operator-= (const
NiColor&amp; kC)</p>

<p class="NDLRefMemberDescription">This operator performs a
member-wise decrement of the left-hand member by the right-hand
member.</p>

<p class="NDLRefMemberFunction">NiColor&amp; operator*= (float
fScalar)</p>

<p class="NDLRefMemberDescription">This operator performs a
member-wise scaling of the left-hand member by the given
scalar.</p>

<p class="NDLRefMemberFunction">NiColor&amp; operator*= (const
NiColor&amp; kC)</p>

<p class="NDLRefMemberDescription">This operator performs a
member-wise multiplication of the left-hand member by the
right-hand member and is not a dot product.</p>

<p class="NDLRefMemberFunction">NiColor&amp; operator/= (float
fScalar)</p>

<p class="NDLRefMemberDescription">This operator performs a
member-wise division of the left-hand member by the given
scalar.</p>

<p class="NDLRefMemberFunction">NiColor&amp; operator/= (const
NiColor&amp; kC)</p>

<p class="NDLRefMemberDescription">This operator performs a
member-wise division of the left-hand member by the right-hand
member.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">void Clamp()</p>

<p class="NDLRefMemberDescription">Ensure RGB components are
within the range <span class="NDLSystemFont">[0.0,1.0]</span> by
clamping any components above <span class=
"NDLSystemFont">1.0</span> to <span class=
"NDLSystemFont">1.0</span>. Note that all the components are
assumed to be &ge; <span class="NDLSystemFont">0.0</span>, so no
such check is performed.</p>

<p class="NDLRefMemberFunction">void Scale()</p>

<p class="NDLRefMemberDescription">Ensure RGB components are
within the range <span class="NDLSystemFont">[0.0,1.0]</span> by
scaling down all components by the max component. This function
sets the components in the correct range and preserves the hue of
the final color. Note that all the components are assumed to be
&ge; <span class="NDLSystemFont">0.0</span>, so no such check is
performed.</p>

<p class="NDLRefMemberFunction">void GetAs(<a href=
"NiRGBA.htm">NiRGBA&amp;</a> kRGBA)</p>

<p class="NDLRefMemberDescription">This function converts this
object from a floating point RGB components to a unsigned integer
color value. The alpha component is assumed to be fully opaque,
set to 255. This function does not clamp the values. If they are
outside of the range of 0.0 - 1.0 problems will exist. It is a
good idea to clamp the value before converting to an NiRGBA
object.</p>

<p class="NDLRefHead1">Notes</p>

<a name="Convenience_Objects" id="Convenience_Objects"></a><p class="NDLRefHead2">Convenience Objects</p>

<p>The following public static constants are defined for
application convenience.</p>

<table class="NDLNoteContainer" width="100%">
    <tr align="left">
        <td class="NDLNoteContainerTD">
            <p class="NDLHeadingNoteContainer">Note</p>

            <div class="NDLNote">
                Since these constants are static, and not
                <span class="NDLSystemFont">#defines</span>,
                application must be careful not to reference them
                in static data declarations, as they may not be
                defined prior to the start of the "main"
                function.
            </div>
        </td>
    </tr>
</table>

<!--(Table)=========================================================-->
<table>
    <thead>
        <tr>
            <th>Constant</th>

            <th>Value</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td><span class=
            "NDLSystemFont">NiColor::BLACK</span></td>

            <td><span class="NDLSystemFont">NiColor(0, 0,
            0)</span></td>
        </tr>

        <tr>
            <td><span class=
            "NDLSystemFont">NiColor::WHITE</span></td>

            <td><span class="NDLSystemFont">NiColor(1, 1,
            1)</span></td>
        </tr>
    </tbody>
</table>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiExtraData</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiExtraData</p>

<p class="NDLRefParentage">: public <u><span style="color: #0000ff;"><a href="NiObject.htm"><span>NiObject</span></a></span></u></p>

<p class="NDLRefHeaderFile">&lt;NiExtraData.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This class supports the attaching of extra data to any 
 <span class="NDLSystemFont"><a href="NiObjectNET.htm">NiObjectNET</a> 
 </span>based object.&nbsp; The class has run-time type information and 
 streaming capabilities.&nbsp; Every <span class="NDLSystemFont">NiExtraData</span> 
 item has a unique name, to enable fast retrieval.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiExtraData(const&nbsp;<a href="NiFixedString.htm">NiFixedString</a>&amp; 
 kName)</p>

<p class="NDLRefMemberDescription">Create an extra data object with a name, 
 but no data. Typically derived classes of <span class="NDLSystemFont">NiExtraData</span> will set 
 the data.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefHead2">Streaming and Cloning</p>

<p class="NDLRefMemberFunction">const&nbsp;<a href="NiFixedString.htm">NiFixedString</a>&amp; 
 GetName()const</p>

<p class="NDLRefMemberFunction">void SetName(const&nbsp;<a href="NiFixedString.htm">NiFixedString</a>&amp; 
 pcName)</p>

<p class="NDLRefMemberDescription">Retrieve and set the extra data name.</p>

<p class="NDLRefMemberFunction">virtual bool IsStreamable() const</p>

<p class="NDLRefMemberFunction">virtual bool IsCloneable() const</p>

<p class="NDLRefMemberDescription">These two member functions tell <span 
 class="NDLSystemFont"><a HREF="NiObjectNET.htm">NiObjectNET</a></span> whether 
 it should clone or stream the extra data object. By default they return 
 true, but subclasses that use extra data to associate temporary values 
 with objects may wish to return false.</p>

<p class="NDLRefHead1">Notes</p>

<p>See the <a HREF="../../Programmer/Object_Systems/Extra_Data.htm">Object 
 Systems document</a> for a detailed explanation of the extra data system.</p>

<p>The various classes derived from <span class="NDLSystemFont">NiExtraData</span> 
 allow you to attach an arbitrary array of bytes for extra data (<span 
 class="NDLSystemFont"><a href="NiBinaryExtraData.htm">NiBinaryExtraData</a></span>) 
 or to attach more structured data.&nbsp; An example of the latter is <span 
 class="NDLSystemFont"><a href="NiStringExtraData.htm">NiStringExtraData</a></span> 
 for attaching textual data to an object. (<span class="NDLSystemFont">NiObject</span> 
 already allows setting a string name. The extra data might be used for 
 additional comments or information that the application can use for its 
 own purposes.)</p>

<p>Finally, an application can build its own extra data 
 by deriving from <span class="NDLSystemFont">NiExtraData</span>.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

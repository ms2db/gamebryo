<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiShaderDeclaration::ShaderRegisterEntry</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">
NiShaderDeclaration::ShaderRegisterEntry</p>

<p class="NDLRefParentage">: public <a href=
"../../Reference/NiSystem/NiMemObject.htm">NiMemObject</a></p>

<p class="NDLRefHeaderFile">&lt;NiShaderDeclaration.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class=
"NDLSystemFont">NiShaderDeclaration::ShaderRegisterEntry</span>
holds information for a single entry from a data stream in an
<span class="NDLSystemFont"><a href=
"NiShaderDeclaration.htm">NiShaderDeclaration</a></span>. Its
usage is largely internal to the <span class=
"NDLSystemFont"><a href=
"NiShaderDeclaration.htm">NiShaderDeclaration</a></span> class
although some users may need to work with the class when
extending <span class="NDLSystemFont"><a href=
"NiMaterial.htm">NiMaterial</a></span> or <span class=
"NDLSystemFont"><a href="NiShader.htm">NiShader</a></span>. All
members of the class are public.</p>

<pre>
class NIMAIN_ENTRY ShaderRegisterEntry: public NiMemObject
{
public:
    union
    {
        unsigned int m_uiPackingOffset;
        unsigned int m_uiPreferredStream;
    };
    ShaderParameter m_eInput;
    ShaderParameterType m_eType;
    NiFixedString m_kUsage;
    unsigned int m_uiUsageIndex;
    unsigned int m_uiExtraData;
};
</pre>

<p class="NDLRefHead1">Public Data Members</p>

<p class="NDLRefMemberFunction">unsigned int
m_uiPackingOffset</p>

<p class="NDLRefMemberDescription">The packing offset of the
entry into the data stream as calculated by the <span class=
"NDLSystemFont"><a href=
"NiShaderDeclaration.htm">NiShaderDeclaration</a></span> object.
This member is unioned with <span class=
"NDLSystemFont">m_uiPreferredStream</span>. When this class is
used by the <span class=
"NDLSystemFont">GetVertexInputSemantics</span> function,
<span class="NDLSystemFont">m_uiPackingOffset</span> corresponds
to the desired stream due to this union. Please refer to the
notes of <span class="NDLSystemFont"><a href=
"NiMaterial.htm">NiMaterial</a></span> for more information.</p>

<p class="NDLRefMemberFunction">unsigned int
m_uiPreferredStream</p>

<p class="NDLRefMemberDescription">The desired stream of the data
when <span class="NDLSystemFont">ShaderRegisterEntry</span>
objects are used by the <span class=
"NDLSystemFont">GetVertexInputSemantics</span> function. Please
refer to the notes of <span class="NDLSystemFont"><a href=
"NiMaterial.htm">NiMaterial</a></span> for more information. This
member is unioned with <span class=
"NDLSystemFont">m_uiPackingOffset</span>. When the class is used
in the renderer, <span class=
"NDLSystemFont">m_uiPreferredStream</span> corresponds to the
calculated stream offset of the entry.</p>

<p class="NDLRefMemberFunction">
NiShaderDeclaration::ShaderParameter m_eInput</p>

<p class="NDLRefMemberDescription">The Gamebryo input into the
data.</p>

<p class="NDLRefMemberFunction">
NiShaderDeclaration::ShaderParameterType m_eType</p>

<p class="NDLRefMemberDescription">The data type as specified
using the <span class="NDLSystemFont"><a href=
"NiShaderDeclaration.htm">NiShaderDeclaration</a></span>
enumeration.</p>

<p class="NDLRefMemberFunction"><a href=
"NiFixedString.htm">NiFixedString</a> m_kUsage</p>

<p class="NDLRefMemberDescription">An <span class=
"NDLSystemFont"><a href=
"NiFixedString.htm">NiFixedString</a></span> object mapping to
the usage semantic for the data. In most cases, this value should
be mapped from <span class="NDLSystemFont"><a href=
"NiShaderDeclaration.htm#ShaderParameterUsage">NiShaderDeclaration::ShaderParameterUsage</a></span>
via <span class="NDLSystemFont"><a href=
"NiShaderDeclaration.htm">NiShaderDeclaration::UsageToString</a></span>.</p>

<p class="NDLRefMemberFunction">unsigned int m_uiUsageIndex</p>

<p class="NDLRefMemberDescription">The usage index of the data
when there are multiple instances such as texture
coordinates.</p>

<p class="NDLRefMemberFunction">unsigned int m_uiExtraData</p>

<p class="NDLRefMemberDescription">Any extra data needed by the
entry. For example, some D3D renderers store the tessellation
information in this slot.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

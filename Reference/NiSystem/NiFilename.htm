<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiFilename</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiFilename</p>

<p class="NDLRefParentage">: public <a href=
"NiMemObject.htm"><span>NiMemObject</span></a></p>

<p class="NDLRefHeaderFile">&lt;NiFilename.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiFilename</span> is a
platform-independent wrapper that is designed to encompass the
entire path name for a file and facilitate creating a full path
that can be understood on the various platforms.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiFilename(const char*
pcFullPath)</p>

<p class="NDLRefMemberDescription">Constructs a <span class=
"NDLSystemFont">NiFilename</span> from the given full path. If a
full path is not passed into the constructor, the path will be
parsed as much as it is able.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">char* GetDir() const</p>

<p class="NDLRefMemberFunction">void SetDir(const char*
pcDir)</p>

<p class="NDLRefMemberDescription">Retrieve and set the directory
path from (but not including) the name of the disk up to (but not
including) the file.</p>

<p class="NDLRefMemberFunction">char* GetDrive() const</p>

<p class="NDLRefMemberFunction">void SetDrive(const char*
pcDrive)</p>

<p class="NDLRefMemberDescription">Retrieve and set the name of
the drive containing the file.</p>

<p class="NDLRefMemberFunction">char* GetExt() const</p>

<p class="NDLRefMemberFunction">void SetExt(const char*
pcExt)</p>

<p class="NDLRefMemberDescription">Retrieve and set the
three-letter extension of the filename.</p>

<p class="NDLRefMemberFunction">char* GetFilename() const</p>

<p class="NDLRefMemberFunction">void SetFilename(const char*
pcFname)</p>

<p class="NDLRefMemberDescription">Retrieve and set the name of
the file, not including the three-letter extension.</p>

<p class="NDLRefMemberFunction">char* GetPlatformSubDir()
const</p>

<p class="NDLRefMemberFunction">void SetPlatformSubDir(const
char* pcSubDir)</p>

<p class="NDLRefMemberDescription">Retrieve and set the platform
subdirectory.</p>

<p class="NDLRefMemberFunction">bool GetFullPath(char*
pcFullPath, unsigned int uiStrLen) const</p>

<p class="NDLRefMemberDescription">Retrieves the full path of the
file, in a format the platform can understand, into <span class=
"NDLSystemFont">pcFullPath</span>. Note that memory for
<span class="NDLSystemFont">pcFullPath</span> must have been
allocated before this call is made. If the size of <span class=
"NDLSystemFont">pcFullPath</span> is not large enough for the
full path, then the buffer will not be altered and the method
will return false.</p>

<p class="NDLRefHead1">Notes</p>

<a name="Max_File_Path_Length" id="Max_File_Path_Length"></a><p class="NDLRefHead2">Max File Path Length</p>

<p>The maximum length of a path in Gamebryo on the current
platform is given by <span class=
"NDLSystemFont">NI_MAX_PATH</span>, defined in NiSystem.h.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

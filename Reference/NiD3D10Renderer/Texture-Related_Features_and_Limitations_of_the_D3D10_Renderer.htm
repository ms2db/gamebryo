<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Texture-Related Features and Limitations of the D3D10 Renderer</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Texture-Related Features and Limitations of the D3D10
Renderer</h1>

<p>The following sections describe basic texture-related features
and limitations of the current version of the <span class=
"NDLSystemFont">NiD3D10Renderer</span>.</p>

<a name="Cube_Mapping" id="Cube_Mapping"></a><h3>Cube Mapping</h3>

<p>The <span class="NDLSystemFont"><a href=
"NiD3D10Renderer.htm">NiD3D10Renderer</a></span> supports both
rendered and source cube mapping. The <span class=
"NDLSystemFont">DIFFUSE_CUBE_MAP</span> and <span class=
"NDLSystemFont">SPECULAR_CUBE_MAP</span> texture coordinate
generation modes are supported.</p>

<a name="Specular_Bump_Mapping" id="Specular_Bump_Mapping"></a><h3>Specular Bump Mapping</h3>

<p>The <span class="NDLSystemFont"><a href=
"NiD3D10Renderer.htm">NiD3D10Renderer</a></span> supports
specular bump mapping via the <span class=
"NDLSystemFont"><a href="../../Reference/NiMain/NiStandardMaterial.htm">
NiStandardMaterial</a></span> pipeline.</p>

<a name="Diffuse_Bump_Mapping" id="Diffuse_Bump_Mapping"></a><h3>Diffuse Bump Mapping</h3>

<p>The <span class="NDLSystemFont"><a href=
"NiD3D10Renderer.htm">NiD3D10Renderer</a></span> can be used to
render using diffuse Dot3 bump mapping by applying a normal map
to an object. Normal maps should be in tangent space.</p>

<a name="Non-Power-of-Two_Texture_Size" id="Non-Power-of-Two_Texture_Size"></a><h3>Non-Power-of-Two Texture Size</h3>

<p>The <span class="NDLSystemFont"><a href=
"NiD3D10Renderer.htm">NiD3D10Renderer</a></span> supports
non-power-of-two textures. Note that some D3D10 texture formats,
such as the block-compressed formats, may still have some size
limitations.</p>

<a name="Texture_Downsizing" id="Texture_Downsizing"></a><h3>Texture Downsizing</h3>

<p>The <span class="NDLSystemFont"><a href=
"NiD3D10Renderer.htm">NiD3D10Renderer</a></span> does not
downsize textures automatically.</p>

<a name="Texture_Compression" id="Texture_Compression"></a><h3>Texture Compression</h3>

<p>The <span class="NDLSystemFont"><a href=
"NiD3D10Renderer.htm">NiD3D10Renderer</a></span> supports loading
pre-compressed texture data, and can support on-the-fly
compression if a compressing image converter is used. See the
<a href=
"../../Programmer/Texturing/Introduction_to_Texturing.htm">Texturing</a> documentation for details of how to create
compressed texture data. The <span class="NDLSystemFont"><a href=
"NiD3D10Renderer.htm">NiD3D10Renderer</a></span> will load
compressed data directly to the 3D hardware.</p>

<a name="Texture_Apply_Modes_Supported" id="Texture_Apply_Modes_Supported"></a><h3>Texture Apply Modes Supported</h3>

<p>The <span class="NDLSystemFont"><a href=
"NiD3D10Renderer.htm">NiD3D10Renderer</a></span> does not support
the <span class="NDLSystemFont">APPLY_DECAL</span> texture-apply
mode, only <span class="NDLSystemFont">APPLY_REPLACE</span> and
<span class="NDLSystemFont">APPLY_MODULATE.</span></p>

<a name="Texture_Format_Requests" id="Texture_Format_Requests"></a><h3>Texture Format Requests</h3>

<p>Texture format requests are fully supported via the
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiTexture__FormatPrefs.htm">NiTexture::FormatPrefs</a></span>
object the <span class="NDLSystemFont"><a href=
"NiD3D10Renderer.htm">NiD3D10Renderer</a></span> queries for all
available Gamebryo texture formats.</p>

<a name="Palettized_Texture_Formats" id="Palettized_Texture_Formats"></a><h3>Palettized Texture Formats</h3>

<p>The <span class="NDLSystemFont"><a href=
"NiD3D10Renderer.htm">NiD3D10Renderer</a></span> does not support
palettized textures. To compensate for this, palettized textures
must be expanded by the image converter at load time. This will
be done automatically when an appropriate image converter (such
as the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiDevImageConverter.htm">NiDevImageConverter</a></span>
or any other converter that can expand palettes) is in
use.</p>

<a name="Sphere_Mapping" id="Sphere_Mapping"></a><h3>Sphere Mapping</h3>

<p>The <span class="NDLSystemFont"><a href=
"NiD3D10Renderer.htm">NiD3D10Renderer</a></span> defaults to
world-space sphere mapping, as do most other renderers in
Gamebryo.</p>

<a name="Load_Texture_Files_Direct_to_Renderer_Hint" id="Load_Texture_Files_Direct_to_Renderer_Hint"></a><h3>Load Texture Files Direct to Renderer Hint</h3>

<p>The <span class="NDLSystemFont"><a href=
"NiD3D10Renderer.htm">NiD3D10Renderer</a></span> does not support
the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiSourceTexture.htm">NiSourceTexture</a></span>
hint to load texture files directly into renderer-specific
resources.</p>

<a name="Persistent_Source_Texture_Renderer_Data" id="Persistent_Source_Texture_Renderer_Data"></a><h3>Persistent Source Texture Renderer Data</h3>

<p>The <span class="NDLSystemFont"><a href=
"NiD3D10Renderer.htm">NiD3D10Renderer</a></span> supports
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiPersistentSrcTextureRendererData.htm">NiPersistentSrcTextureRendererData</a></span>
objects as the means to load textures directly into
renderer-specific resources.</p>

<a name="Dynamic_Textures" id="Dynamic_Textures"></a><h3>Dynamic Textures</h3>

<p>The <span class="NDLSystemFont"><a href=
"NiD3D10Renderer.htm">NiD3D10Renderer</a></span> supports the
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiDynamicTexture.htm">NiDynamicTexture</a></span>
class.</p>

<a name="Vertex_Geometry_Textures" id="Vertex_Geometry_Textures"></a><h3>Texture Input to Vertex and Geometry Shaders</h3>

<p>The <span class="NDLSystemFont"><a href=
"NiD3D10Renderer.htm">NiD3D10Renderer</a></span> does not support
setting up textures as shader resources for vertex or geometry
shaders.</p>

<a name="Antialiased_Rendered_Textures" id="Antialiased_Rendered_Textures"></a><h3>Antialiased Rendered Textures</h3>

<p>The <span class="NDLSystemFont"><a href=
"NiD3D10Renderer.htm">NiD3D10Renderer</a></span> supports
creating antialiased rendered textures by passing in the
appropriate <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/Ni2DBuffer.htm#MultiSamplePreference">Ni2DBuffer::MultiSamplePreference</a></span>
to the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiRenderedTexture.htm">NiRenderedTexture</a></span><span class="NDLSystemFont">
::Create</span> functions.</p>

<a name="Render_to_Cube_Maps" id="Render_to_Cube_Maps"></a><h3>Render to Cube Maps</h3>

<p>Rendering to cube maps requires using the <a href=
"../../Reference/NiMain/NiRenderTargetGroup__CubeMapSetupHelper.htm">
<span class=
"NDLSystemFont">NiRenderTargetGroup::CubeMapSetupHelper</span></a>
object to construct a depth/stencil buffer appropriate for a cube
map. D3D10 does not allow render targets that are a part of a
cube map to use depth/stencil buffers that are not also part of a
cube map, and using that object will allow Gamebryo to set up the
depth/stencil buffers correctly in a cross-platform manner.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

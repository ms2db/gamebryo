<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiD3D10PersistentSrcTextureRendererData</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">
NiD3D10PersistentSrcTextureRendererData</p>

<p class="NDLRefParentage">: public <a href=
"../../Reference/NiMain/NiPersistentSrcTextureRendererData.htm">NiPersistentSrcTextureRendererData</a></p>

<p class="NDLRefHeaderFile">
&lt;NiD3D10PersistentSrcTextureRendererData.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This class is a Direct3D10-specific subclass of <span class=
"NDLSystemFont"><a href=
"../../Reference/NiMain/NiPersistentSrcTextureRendererData.htm">NiPersistentSrcTextureRendererData</a></span>,
and is designed specifically for streaming persistent versions of
source texture renderer data to support D3D10-specific texture
format conversions for "internal textures" (those included in a
scene's NIF file) at export time.</p>

<p>This capability enables D3D10-specific source texture renderer
data to be loaded directly into a D3D10 platform at application
load time, with two very beneficial results:</p>

<ul>
    <li>Improvements in "high water mark" behavior for texture
    memory at load time. In other words, temporary memory
    allocations for texture format conversion will not be
    required if a D3D10-specific export option is requested in
    the art pipeline.</li>

    <li>Load time performance improvements, since there are no
    texture format conversions at load time.</li>
</ul>

<p>A caveat to this approach is that the texture is configured
specifically for a Direct3D10 platform (and potentially a Vista
capable class of graphics card running on the Vista operating
system), and may not be loadable for use with alternative
platforms or graphics cards, or with tools on the PC that is not
Windows Vista.. If a texture is not configured specifically for
the D3D10 platform and Vista, but an attempt is made to load the
texture, <a href=
"../../Programmer/Texturing/Failures.htm">"error" replacement
textures</a> are used to indicate load-time errors.</p>

<p>To specify D3D10-specific source texture renderer data for
export from the art packages, simply select D3D10 as your
platform, with internal textures (include textures in main NIF)
as your export option.</p>

<p>[Note that each time a platform SDK (for example, Xbox360 XDK
or Playstation3 SDK) changes, there is at least a possibility
that the new SDK will cause textures to be formatted differently
on that platform. It is not likely to happen frequently, but the
possibility exists. In such a case, it may be desirable to
re-export Nifs containing platform-specific textures using
exporters built with that platform's most recent SDK
version.]</p>

<p>If application requirements dictate fully general support of
textures within a NIF file on multiple platforms or graphics
cards, then <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiPixelData.htm">NiPixelData</a></span>
based textures may be used, since they enable on the fly texture
format conversions at load time. To specify <span class=
"NDLSystemFont"><a href=
"../../Reference/NiMain/NiPixelData.htm">NiPixelData</a></span>
based textures for export from the art packages, you may select
one of four export options: (1) "generic" platform type, but
include textures in main NIF, (2) save textures as separate NIFs,
(3) textures as original images, or (4) textures as original
images VRAM.</p>

<p>Consult the export options for <a href=
"../../Art/Max/Gamebryo_3ds_max_Export_Options1.htm">3ds max</a>
or <a href="../../Art/Maya/Export_Display_Options.htm">Maya</a>
for more details.</p>

<p>The principal functionality that <span class=
"NDLSystemFont">NiD3D10PersistentSrcTextureRendererData</span>
adds to the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiPersistentSrcTextureRendererData.htm">NiPersistentSrcTextureRendererData</a></span>
base class is the ability to stream the source texture renderer
data into the D3D10 renderer at application load time. At
application load time, the D3D10 renderer will load the
persistent source texture renderer data directly into a D3D10
renderer-specific resource, bypassing the application-level
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiPixelData.htm">NiPixelData</a></span>
object and all <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiImageConverter.htm">NiImageConverter</a></span>
based texture conversion at load time entirely.</p>

<p class="NDLRefHead1">Constructors</p>

<p>There are no public constructors for <span class=
"NDLSystemFont">NiD3D10PersistentSrcTextureRendererData</span>
objects. All instances should be created via the streaming system
creation functions.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

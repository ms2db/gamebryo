<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiD3D10DeviceState</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiD3D10DeviceState</p>

<p class="NDLRefParentage">: public <a href=
"../../Reference/NiSystem/NiMemObject.htm">NiMemObject</a></p>

<p class="NDLRefHeaderFile">&lt;NiD3D10DeviceState.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiD3D10DeviceState</span> is a
Gamebryo class that is responsible for keeping references to
D3D10 state objects that are set on the device. It helps to
prevent redundant state changes, and it also ensures that state
objects on the device are not unintentionally released while they
are on the device.</p>

<p>It is not necessary for applications that want to set state on
the device directly to use the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>, but they may. If they
do not, then the application will need to manually ensure that
state object are not accidentally released while on the device.
In addition, the application may choose to clear the state
objects from the <span class=
"NDLSystemFont">NiD3D10DeviceState</span> for states that they
will set manually to allow no-longer-used state objects to be
released. If applications do update device state without going
through <span class="NDLSystemFont">NiD3D10DeviceState</span>,
they may need to call <span class=
"NDLSystemFont">InvalidateDeviceState</span> afterwards in order
to let Gamebryo know that the device state that it is maintaining
is not necessarily up to date.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiD3D10DeviceState(ID3D10Device*
pkDevice)</p>

<p class="NDLRefMemberDescription">The constructor initializes a
new <span class="NDLSystemFont">NiD3D10DeviceState</span> using
the D3D10 device. An application should never construct a new
device state object, but should obtain a pointer to the
<span class="NDLSystemFont"><a href=
"NiD3D10Renderer.htm">NiD3D10Renderer</a></span> object's
instance instead.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">// Render states</p>

<p class="NDLRefMemberFunction">void
OMSetBlendState(ID3D10BlendState* pkBlendState, const float
afBlendFactor[4], unsigned int uiSampleMask)</p>

<p class="NDLRefMemberDescription">Sets the provided <span class=
"NDLSystemFont">ID3D10BlendState</span>, blend factor, and sample
mask on the device and on the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
OMGetBlendState(ID3D10BlendState** ppkBlendState, float
afBlendFactor[4], unsigned int* puiSampleMask) const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont">ID3D10BlendState</span>, blend factor, and sample
mask currently set on the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>. This does not
necessarily mean that the state object is also set on the
device.</p>

<p class="NDLRefMemberFunction">void OMClearBlendState()</p>

<p class="NDLRefMemberDescription">Remove the current
<span class="NDLSystemFont">ID3D10BlendState</span> from the
device and from the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
OMSetDepthStencilState(ID3D10DepthStencilState*
pkDepthStencilState, unsigned int uiStencilRef)</p>

<p class="NDLRefMemberDescription">Sets the provided <span class=
"NDLSystemFont">ID3D10DepthStencilState</span> and stencil ref on
the device and on the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
OMGetDepthStencilState(ID3D10DepthStencilState**
ppkDepthStencilState, unsigned int* puiStencilRef) const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont">ID3D10DepthStencilState</span> and stencil ref
currently set on the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>. This does not
necessarily mean that the state object is also set on the
device.</p>

<p class="NDLRefMemberFunction">void
OMClearDepthStencilState()</p>

<p class="NDLRefMemberDescription">Remove the current
<span class="NDLSystemFont">ID3D10DepthStencilState</span> from
the device and from the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
RSSetState(ID3D10RasterizerState* pkRasterizerState)</p>

<p class="NDLRefMemberDescription">Sets the provided <span class=
"NDLSystemFont">ID3D10RasterizerState</span> on the device and on
the <span class="NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
RSGetState(ID3D10RasterizerState** ppkRasterizerState) const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont">ID3D10RasterizerState</span> currently set on the
<span class="NDLSystemFont">NiD3D10DeviceState</span>. This does
not necessarily mean that the state object is also set on the
device.</p>

<p class="NDLRefMemberFunction">void RSClearState()</p>

<p class="NDLRefMemberDescription">Remove the current
<span class="NDLSystemFont">ID3D10RasterizerState</span> from the
device and from the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">// Samplers</p>

<p class="NDLRefMemberFunction">void VSSetSamplers(unsigned int
uiStartSlot, unsigned int uiNumSamplers,
ID3D10SamplerState*const* ppkSamplers)</p>

<p class="NDLRefMemberDescription">Sets the provided array of
<span class="NDLSystemFont">ID3D10SamplerState</span> objects on
the device at the indicated vertex sampler slots and on the
<span class="NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void VSGetSamplers(unsigned int
uiStartSlot, unsigned int uiNumSamplers, ID3D10SamplerState**
ppkSamplers) const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont">ID3D10SamplerState</span> objects at the
indicated vertex sampler slots currently set on the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>. This does not
necessarily mean that these state objects is also set on the
device.</p>

<p class="NDLRefMemberFunction">void VSClearSamplers()</p>

<p class="NDLRefMemberDescription">Remove the current
<span class="NDLSystemFont">ID3D10SamplerState</span> objects
from the vertex sampler slots on the device and from the
<span class="NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void GSSetSamplers(unsigned int
uiStartSlot, unsigned int uiNumSamplers,
ID3D10SamplerState*const* ppkSamplers)</p>

<p class="NDLRefMemberDescription">Sets the provided array of
<span class="NDLSystemFont">ID3D10SamplerState</span> objects on
the device at the indicated geometry sampler slots and on the
<span class="NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void GSGetSamplers(unsigned int
uiStartSlot, unsigned int uiNumSamplers, ID3D10SamplerState**
ppkSamplers) const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont">ID3D10SamplerState</span> objects at the
indicated geometry sampler slots currently set on the
<span class="NDLSystemFont">NiD3D10DeviceState</span>. This does
not necessarily mean that these state objects is also set on the
device.</p>

<p class="NDLRefMemberFunction">void GSClearSamplers()</p>

<p class="NDLRefMemberDescription">Remove the current
<span class="NDLSystemFont">ID3D10SamplerState</span> objects
from the geometry sampler slots on the device and from the
<span class="NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void PSSetSamplers(unsigned int
uiStartSlot, unsigned int uiNumSamplers,
ID3D10SamplerState*const* ppkSamplers)</p>

<p class="NDLRefMemberDescription">Sets the provided array of
<span class="NDLSystemFont">ID3D10SamplerState</span> objects on
the device at the indicated pixel sampler slots and on the
<span class="NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void PSGetSamplers(unsigned int
uiStartSlot, unsigned int uiNumSamplers, ID3D10SamplerState**
ppkSamplers) const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont">ID3D10SamplerState</span> objects at the
indicated pixel sampler slots currently set on the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>. This does not
necessarily mean that these state objects is also set on the
device.</p>

<p class="NDLRefMemberFunction">void PSClearSamplers()</p>

<p class="NDLRefMemberDescription">Remove the current
<span class="NDLSystemFont">ID3D10SamplerState</span> objects
from the pixel sampler slots on the device and from the
<span class="NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
VSSetShaderResources(unsigned int uiStartSlot, unsigned int
uiNumViews, ID3D10ShaderResourceView*const* ppkResourceViews)</p>

<p class="NDLRefMemberDescription">Sets the provided array of
<span class="NDLSystemFont">ID3D10ShaderResourceView</span>
objects on the device at the indicated vertex shader resource
slots and on the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
VSGetShaderResources(unsigned int uiStartSlot, unsigned int
uiNumViews, ID3D10ShaderResourceView** ppkResourceViews)
const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont">ID3D10ShaderResourceView</span> objects at the
indicated vertex shader resource slots currently set on the
<span class="NDLSystemFont">NiD3D10DeviceState</span>. This does
not necessarily mean that these state objects is also set on the
device.</p>

<p class="NDLRefMemberFunction">void VSClearShaderResources()</p>

<p class="NDLRefMemberDescription">Remove the current
<span class="NDLSystemFont">ID3D10ShaderResourceView</span>
objects from the vertex shader resource slots on the device and
from the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
GSSetShaderResources(unsigned int uiStartSlot, unsigned int
uiNumViews, ID3D10ShaderResourceView*const* ppkResourceViews)</p>

<p class="NDLRefMemberDescription">Sets the provided array of
<span class="NDLSystemFont">ID3D10ShaderResourceView</span>
objects on the device at the indicated geometry shader resource
slots and on the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
GSGetShaderResources(unsigned int uiStartSlot, unsigned int
uiNumViews, ID3D10ShaderResourceView** ppkResourceViews)
const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont">ID3D10ShaderResourceView</span> objects at the
indicated geometry shader resource slots currently set on the
<span class="NDLSystemFont">NiD3D10DeviceState</span>. This does
not necessarily mean that these state objects is also set on the
device.</p>

<p class="NDLRefMemberFunction">void GSClearShaderResources()</p>

<p class="NDLRefMemberDescription">Remove the current
<span class="NDLSystemFont">ID3D10ShaderResourceView</span>
objects from the geometry shader resource slots on the device and
from the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
PSSetShaderResources(unsigned int uiStartSlot, unsigned int
uiNumViews, ID3D10ShaderResourceView*const* ppkResourceViews)</p>

<p class="NDLRefMemberDescription">Sets the provided array of
<span class="NDLSystemFont">ID3D10ShaderResourceView</span>
objects on the device at the indicated pixel shader resource
slots and on the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
PSGetShaderResources(unsigned int uiStartSlot, unsigned int
uiNumViews, ID3D10ShaderResourceView** ppkResourceViews)
const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont">ID3D10ShaderResourceView</span> objects at the
indicated pixel shader resource slots currently set on the
<span class="NDLSystemFont">NiD3D10DeviceState</span>. This does
not necessarily mean that these state objects is also set on the
device.</p>

<p class="NDLRefMemberFunction">void PSClearShaderResources()</p>

<p class="NDLRefMemberDescription">Remove the current
<span class="NDLSystemFont">ID3D10ShaderResourceView</span>
objects from the pixel shader resource slots on the device and
from the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
VSSetConstantBuffers(unsigned int uiStartSlot, unsigned int
uiNumBuffers, ID3D10Buffer*const* ppkConstantBuffers)</p>

<p class="NDLRefMemberDescription">Sets the provided array of
<span class="NDLSystemFont">ID3D10Buffer</span> objects on the
device at the indicated vertex shader constant buffer slots and
on the <span class="NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
VSGetConstantBuffers(unsigned int uiStartSlot, unsigned int
uiNumBuffers, ID3D10Buffer** ppkConstantBuffers) const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont">ID3D10Buffer</span> objects at the indicated
vertex shader constant buffer slots currently set on the
<span class="NDLSystemFont">NiD3D10DeviceState</span>. This does
not necessarily mean that these state objects is also set on the
device.</p>

<p class="NDLRefMemberFunction">void VSClearConstantBuffers()</p>

<p class="NDLRefMemberDescription">Remove the current
<span class="NDLSystemFont">ID3D10Buffer</span> objects from the
vertex shader constant buffer slots on the device and from the
<span class="NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
GSSetConstantBuffers(unsigned int uiStartSlot, unsigned int
uiNumBuffers, ID3D10Buffer*const* ppkConstantBuffers)</p>

<p class="NDLRefMemberDescription">Sets the provided array of
<span class="NDLSystemFont">ID3D10Buffer</span> objects on the
device at the indicated geometry shader constant buffer slots and
on the <span class="NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
GSGetConstantBuffers(unsigned int uiStartSlot, unsigned int
uiNumBuffers, ID3D10Buffer** ppkConstantBuffers) const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont">ID3D10Buffer</span> objects at the indicated
geometry shader constant buffer slots currently set on the
<span class="NDLSystemFont">NiD3D10DeviceState</span>. This does
not necessarily mean that these state objects is also set on the
device.</p>

<p class="NDLRefMemberFunction">void GSClearConstantBuffers()</p>

<p class="NDLRefMemberDescription">Remove the current
<span class="NDLSystemFont">ID3D10Buffer</span> objects from the
geometry shader constant buffer slots on the device and from the
<span class="NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
PSSetConstantBuffers(unsigned int uiStartSlot, unsigned int
uiNumBuffers, ID3D10Buffer*const* ppkConstantBuffers)</p>

<p class="NDLRefMemberDescription">Sets the provided array of
<span class="NDLSystemFont">ID3D10Buffer</span> objects on the
device at the indicated pixel shader constant buffer slots and on
the <span class="NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
PSGetConstantBuffers(unsigned int uiStartSlot, unsigned int
uiNumBuffers, ID3D10Buffer** ppkConstantBuffers) const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont">ID3D10Buffer</span> objects at the indicated
pixel shader constant buffer slots currently set on the
<span class="NDLSystemFont">NiD3D10DeviceState</span>. This does
not necessarily mean that these state objects is also set on the
device.</p>

<p class="NDLRefMemberFunction">void PSClearConstantBuffers()</p>

<p class="NDLRefMemberDescription">Remove the current
<span class="NDLSystemFont">ID3D10Buffer</span> objects from the
pixel shader constant buffer slots on the device and from the
<span class="NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
VSSetShader(ID3D10VertexShader* pkVertexShader)</p>

<p class="NDLRefMemberDescription">Sets the provided <span class=
"NDLSystemFont">ID3D10VertexShader</span> on the device and on
the <span class="NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
VSGetShader(ID3D10VertexShader** ppkVertexShader) const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont">ID3D10VertexShader</span> currently set on the
<span class="NDLSystemFont">NiD3D10DeviceState</span>. This does
not necessarily mean that the shader object is also set on the
device.</p>

<p class="NDLRefMemberFunction">void VSClearShader()</p>

<p class="NDLRefMemberDescription">Remove the current
<span class="NDLSystemFont">ID3D10VertexShader</span> from the
device and from the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
GSSetShader(ID3D10GeometryShader* pkGeometryShader)</p>

<p class="NDLRefMemberDescription">Sets the provided <span class=
"NDLSystemFont">ID3D10GeometryShader</span> on the device and on
the <span class="NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
GSGetShader(ID3D10GeometryShader** pkGeometryShader) const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont">ID3D10GeometryShader</span> currently set on the
<span class="NDLSystemFont">NiD3D10DeviceState</span>. This does
not necessarily mean that the shader object is also set on the
device.</p>

<p class="NDLRefMemberFunction">void GSClearShader()</p>

<p class="NDLRefMemberDescription">Remove the current
<span class="NDLSystemFont">ID3D10GeometryShader</span> from the
device and from the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
PSSetShader(ID3D10PixelShader* pkPixelShader)</p>

<p class="NDLRefMemberDescription">Sets the provided <span class=
"NDLSystemFont">ID3D10PixelShader</span> on the device and on the
<span class="NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void
PSGetShader(ID3D10PixelShader** pkPixelShader) const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont">ID3D10PixelShader</span> currently set on the
<span class="NDLSystemFont">NiD3D10DeviceState</span>. This does
not necessarily mean that the shader object is also set on the
device.</p>

<p class="NDLRefMemberFunction">void PSClearShader()const</p>

<p class="NDLRefMemberDescription">Remove the current
<span class="NDLSystemFont">ID3D10PixelShader</span> from the
device and from the <span class=
"NDLSystemFont">NiD3D10DeviceState</span>.</p>

<p class="NDLRefMemberFunction">void InvalidateDeviceState()</p>

<p class="NDLRefMemberDescription">Invalidates the cached version
of the shaders, render state objects, samplers, shader resources,
and shader constant buffers that Gamebryo maintains. This may
cause Gamebryo to release the only reference to objects that are
on the device, which will cause those objects to be deleted.</p>

<p class="NDLRefMemberDescription">This function can be called
after an application has made calls directly on the D3D10 device
to inform Gamebryo that the state objects may have changed. This
prevents Gamebryo from incorrectly optimizing out a call to set a
state object on the device.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

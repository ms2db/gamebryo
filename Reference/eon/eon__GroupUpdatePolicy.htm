<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>eon::GroupUpdatePolicy</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">eon::GroupUpdatePolicy</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="eon__IReplicationGroupPolicy.htm">eon::IReplicationGroupPolicy</a></span></p>


<p class="NDLRefHeaderFile">&lt;GroupUpdatePolicy.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classeon_1_1_group_update_policy.gif" alt="Inheritance graph for eon::GroupUpdatePolicy"/>
  <p class="FigureCaption">Inheritance graph for eon::GroupUpdatePolicy</p>
</div>
</p>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classeon_1_1_group_update_policy_1a51c6b15a94abd8d1b9717f8b8c48953d"></a>
<p class="NDLRefMemberFunction">GroupUpdatePolicy()</p>
<p class="NDLRefMemberDescription">Constructor. </p>

<a name="classeon_1_1_group_update_policy_1adbf432d95372d5d0262d80524ddc80ea"></a>
<p class="NDLRefMemberFunction">virtual ~GroupUpdatePolicy()</p>
<p class="NDLRefMemberDescription">Virtual Destructor. </p>

<a name="classeon_1_1_group_update_policy_1a510b8a3b3cc5dc029193dc1c6c1e6928"></a>
<p class="NDLRefMemberFunction">virtual void  GenerateDiscovery(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__ServiceManager.htm">efd::ServiceManager</a></span>* pServiceManager, <br/><span class="NDLSystemFont"><a href="eon__ReplicationProducerEntity.htm">ReplicationProducerEntity</a></span>* pEntity, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> groupIndex)</p>
<p class="NDLRefMemberDescription">Called when an entity should be discovered as result of setting a replication category. </p>
<p class="NDLRefMemberDetailedDescription">The typical response is to generate a MessageWrapper&lt;<span class="NDLSystemFont"><a href="eon__EntityMessage.htm">EntityMessage</a></span>, kMSGID_EntityDiscoveryMessage&gt; message describing the entity being discovered and all non-default property values for the group. The message should be sent to the category returned by pEntity-&gt;GetReplicationCategory(groupIndex) using the quality of service specified for the policy.</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">The Replication Service can only handle <span class="NDLSystemFont"><a href="eon__EntityMessage.htm">EntityMessage</a></span> results. If you construct a policy that sends other message types then you need to extend or replace the Replication Service to handle the new message type.</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pServiceManager</span></td>
    <td>The service manager for use in accessing any required services </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pEntity</span></td>
    <td>The producer entity for which to generate a discovery </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">groupIndex</span></td>
    <td>The replication group that is being discovered </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classeon_1_1_group_update_policy_1ab07cd8c61677af34f73acc8710238214"></a>
<p class="NDLRefMemberFunction">virtual void  GenerateUpdate(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__ServiceManager.htm">efd::ServiceManager</a></span>* pServiceManager, <br/><span class="NDLSystemFont"><a href="eon__ReplicationProducerEntity.htm">ReplicationProducerEntity</a></span>* pEntity, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> groupIndex)</p>
<p class="NDLRefMemberDescription">Called when an entity is dirty and should be considered for updating. </p>
<p class="NDLRefMemberDetailedDescription">The typical response is to generate a MessageWrapper&lt;EntityMessage, kMSGID_EntityUpdateMessage&gt; message if enough time has passed since the last message was sent, or to do nothing if enough time has not passed. When generating an update the contents should include at least all dirty properties from the group and may optionally include additional property values based on specific poilicy needs.</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">The Replication Service can only handle <span class="NDLSystemFont"><a href="eon__EntityMessage.htm">EntityMessage</a></span> results. If you construct a policy that sends other message types then you need to extend or replace the Replication Service to handle the new message type.</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pServiceManager</span></td>
    <td>The service manager for use in accessing any required services </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pEntity</span></td>
    <td>The producer entity for which to generate an update </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">groupIndex</span></td>
    <td>The replication group that is being updated </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classeon_1_1_group_update_policy_1a4c5a47688e5a64509b214cd8273345b2"></a>
<p class="NDLRefMemberFunction">virtual void  GenerateLoss(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__ServiceManager.htm">efd::ServiceManager</a></span>* pServiceManager, <br/><span class="NDLSystemFont"><a href="eon__ReplicationProducerEntity.htm">ReplicationProducerEntity</a></span>* pEntity, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> groupIndex, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> oldCategory, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> newCategory)</p>
<p class="NDLRefMemberDescription">Called when an entity should be lost due to a category change. </p>
<p class="NDLRefMemberDetailedDescription">The typical response is to generate a MessageWrapper&lt;EntityMessage, kMSGID_EntityLossMessage&gt; message describing the entity being lost which should be sent to the oldCategory using the quality of service specified for the policy.</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">The Replication Service can only handle <span class="NDLSystemFont"><a href="eon__EntityMessage.htm">EntityMessage</a></span> results. If you construct a policy that sends other message types then you need to extend or replace the Replication Service to handle the new message type.</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pServiceManager</span></td>
    <td>The service manager for use in accessing any required services </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pEntity</span></td>
    <td>The producer entity for which to generate a loss </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">groupIndex</span></td>
    <td>The replication group that is being lost </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">oldCategory</span></td>
    <td>The category this entity is being lost from </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">newCategory</span></td>
    <td>The new category this entity is joining, if any </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classeon_1_1_group_update_policy_1a003dba343c345f6fdfc5a0ca380c4034"></a>
<p class="NDLRefMemberFunction">virtual void  GenerateP2PDiscovery(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__ServiceManager.htm">efd::ServiceManager</a></span>* pServiceManager, <br/><span class="NDLSystemFont"><a href="eon__ReplicationProducerEntity.htm">ReplicationProducerEntity</a></span>* pEntity, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> groupIndex, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> callbackChannel, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a3f46b06120f84d47e33a25e39034ed8e">efd::QualityOfService</a></span> qos)</p>
<p class="NDLRefMemberDescription">Called when an entity should be discovered as result of a late joiner subscribing to the replication channel. </p>
<p class="NDLRefMemberDetailedDescription">The typical response is to generate a MessageWrapper&lt;<span class="NDLSystemFont"><a href="eon__EntityMessage.htm">EntityMessage</a></span>, kMSGID_EntityDiscoveryMessage&gt; message describing the entity being discovered and all non-default property values for the group. The message should be sent to the specified category using the specified quality of service.</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">The Replication Service can only handle <span class="NDLSystemFont"><a href="eon__EntityMessage.htm">EntityMessage</a></span> results. If you construct a policy that sends other message types then you need to extend or replace the Replication Service to handle the new message type.</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pServiceManager</span></td>
    <td>The service manager for use in accessing any required services </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pEntity</span></td>
    <td>The producer entity for which to generate a discovery </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">groupIndex</span></td>
    <td>The replication group that is being discovered </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">callbackChannel</span></td>
    <td>The category to which any results should be sent </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">qos</span></td>
    <td>The quality of service at which results should be sent </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

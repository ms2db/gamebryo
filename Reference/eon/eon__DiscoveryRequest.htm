<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>eon::DiscoveryRequest</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">eon::DiscoveryRequest</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__IMessage.htm">efd::IMessage</a></span></p>


<p class="NDLRefHeaderFile">&lt;DiscoveryRequest.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classeon_1_1_discovery_request.gif" alt="Inheritance graph for eon::DiscoveryRequest"/>
  <p class="FigureCaption">Inheritance graph for eon::DiscoveryRequest</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Used to request a full discovery of all entities. </p>
<p class="NDLNormal">Sent by the GWClientProxy when a client late-joins a channel. Sent using ProducerSend to the channel being joined. </p>

<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classeon_1_1_discovery_request_1ad4903a062d55e9a317ea6650edbcde78"></a>
<p class="NDLRefMemberFunction">DiscoveryRequest()</p>
<p class="NDLRefMemberDescription">Default Constructor (used by factory). </p>

<a name="classeon_1_1_discovery_request_1ac3c3f7a71cb0a01a7c27d623096546be"></a>
<p class="NDLRefMemberFunction">virtual ~DiscoveryRequest()</p>
<p class="NDLRefMemberDescription">Destructor. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classeon_1_1_discovery_request_1af6ff97f7ed54bb7426229facc32bb18e"></a>
<p class="NDLRefMemberFunction">virtual void  Serialize(<span class="NDLSystemFont"><a href="../efd/efd__Archive.htm">efd::Archive</a></span>& io_ar)</p>
<p class="NDLRefMemberDescription">Serialize a polymorphic type to or from an Archive. </p>
<p class="NDLRefMemberDetailedDescription">This method must be overridden, but if your streamable object has no data the override can be an empty function. A typical implementation of this method will make one call to <span class="NDLSystemFont"><a href="../Namespaces/efd__Serializer.htm#namespaceefd_1_1_serializer_1a63e0b99047011bde53be44786ab9ee7b">efd::Serializer::SerializeObject</a></span> for each member of the class. If you are derived from another streamable class you should be sure to call to parent implementation of this method as well; it is recommended that the parent class be serialized first before adding the data for the derived class. If your class contains complex data such as STL-style contianers or pointers to allocated data then you can simplify the implementation of Serialize by using the templated helper functions in &lt;<span class="NDLSystemFont">efd/SerializeRoutines.h</span>&gt;; these can serialize even the most complex data structures with a single method call and will reduce the chance of making common mistakes (which could introduce security vulnerabilities if marshalling data from untrusted sources).</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">io_ar</span></td>
    <td>The Archive to serialize to or from. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="accessors_for_senderid"></a>
<p class="NDLRefHead1">Accessors for SenderID</p>


<a name="classeon_1_1_discovery_request_1aac37361c7e811da307a211b9ab8379df"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span>  GetSenderID() const</p>
<p class="NDLRefMemberFunction"></p>

<a name="classeon_1_1_discovery_request_1ab4f7a47d53b8beef2885d58c60f3d32a"></a>
<p class="NDLRefMemberFunction">virtual void  SetSenderID(<span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> )</p>
<p class="NDLRefMemberFunction"></p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

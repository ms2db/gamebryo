<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPhysXJointDesc</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiPhysXJointDesc</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiObject.htm">NiObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiPhysXJointDesc.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_phys_x_joint_desc.gif" alt="Inheritance graph for NiPhysXJointDesc"/>
  <p class="FigureCaption">Inheritance graph for NiPhysXJointDesc</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal"><span class="NDLSystemFont">NiPhysXJointDesc</span> objects are for caching snapshots of NxJointDesc objects, used for streaming and cloning simulation state. </p>
<p class="NDLNormal">Applications will typically only touch these objects to modify PhysX content between streaming and instantiation, or to add cloning functionality to content created in code.</p>
<p class="NDLNormal">The class stores a smart pointer to the actors involved in the joint and the state necessary to recreate the joint. Specific joint types should be derived from this class, as NiPhysXD6JointDescPtr is.</p>
<p class="NDLNormal">
<p class="NDLNormal">Extending Joint Descriptors: If an application creates new joint sub-types, the CreateFromJoint function of this class must be modified to create the correct type of joint. </p></p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_phys_x_joint_desc_1ad8c76ad8a53293d1ebaee78f467b5794"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">NiPhysXActorDescPtr</a></span>  GetActor(const <span class="NDLSystemFont">NiUInt32</span> uiIndex)</p>
<p class="NDLRefMemberDescription">Get an actor involved in this joint. </p>
<p class="NDLRefMemberDetailedDescription">The uiIndex should be either 0 or 1. </p>

<a name="class_ni_phys_x_joint_desc_1ae8028aad94606035d267ee57042edc53"></a>
<p class="NDLRefMemberFunction">void  SetActor(<br/>const <span class="NDLSystemFont">NiUInt32</span> uiIndex, <br/><span class="NDLSystemFont"><a href="NiPhysXActorDesc.htm">NiPhysXActorDesc</a></span>* kActorDesc)</p>
<p class="NDLRefMemberDescription">Set an actor involved in this joint. </p>
<p class="NDLRefMemberDetailedDescription">The uiIndex should be either 0 or 1. </p>

<a name="class_ni_phys_x_joint_desc_1ac9752eeb73414f084e1b714706b3f717"></a>
<p class="NDLRefMemberFunction">NxVec3  GetLimitPoint() const</p>
<p class="NDLRefMemberDescription">Get the limit point associated with this joint. </p>

<a name="class_ni_phys_x_joint_desc_1a09c7c3174a0d0d7909c3cb2c2b1866be"></a>
<p class="NDLRefMemberFunction">void  SetLimitPoint(const NxVec3& kLimitPt)</p>
<p class="NDLRefMemberDescription">Set the limit point associated with this joint. </p>

<a name="class_ni_phys_x_joint_desc_1a34b0817d540bb0c7e2b010e5e6962b97"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  GetNumLimits() const</p>
<p class="NDLRefMemberDescription">Returns the number of limit planes associated with this joint. </p>

<a name="class_ni_phys_x_joint_desc_1a9f95ae05426d4a32ea1b7951fde3585e"></a>
<p class="NDLRefMemberFunction">void  GetLimitPlane(<br/>const <span class="NDLSystemFont">NiUInt32</span> uiIndex, <br/>NxVec3& kNorm, <br/>NxReal& kD, <br/>NxReal& kR)</p>
<p class="NDLRefMemberDescription">Get limit plane information for this joint. </p>
<p class="NDLRefMemberDetailedDescription">The index must be less than the value returned by GetNumLimits. </p>

<a name="class_ni_phys_x_joint_desc_1a804756a29bfee8fff12b1d0e3faa0c13"></a>
<p class="NDLRefMemberFunction">void  SetLimitPlane(<br/>const <span class="NDLSystemFont">NiUInt32</span> uiIndex, <br/>const NxVec3& kNorm, <br/>const NxReal& kD, <br/>const NxReal& kR)</p>
<p class="NDLRefMemberDescription">Add limit plane information for this joint. </p>
<p class="NDLRefMemberDetailedDescription">Space is internally allocated to accommodate the index. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="class_ni_phys_x_joint_desc_1a6eccfd1e8ea44cac105337fe28be2870"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">NiPhysXJointDesc</span>*  CreateFromJoint(<br/>NxJoint* pkJoint, <br/><span class="NDLSystemFont"><a href="../NiMain/NiTMap.htm">NiTMap</a></span>&lt;NxActor *, <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">NiPhysXActorDescPtr</a></span>&gt;& kActorMap, <br/>const NxMat34& kXform = NiPhysXTypes::NXMAT34_ID)</p>
<p class="NDLRefMemberDescription">Extract from a joint all the state necessary to re-create that joint, and store actor pointers for future reference. </p>
<p class="NDLRefMemberDetailedDescription">The returned object will be of a derived class specific to the joint type that is being saved. At this time, the only type of supported joint is D6 (arbitrary six-degree-of-freedom joints). The map argument stores the mapping of NxActor objects onto their NiPhysX descriptors. It is required to support streaming pointers to the actors. The transformation, kXform, is applied to the axes and anchor point of connections to the world frame (NULL actor). </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPhysXManager</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiPhysXManager</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__MemObject.htm">efd::MemObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiPhysXManager.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_phys_x_manager.gif" alt="Inheritance graph for NiPhysXManager"/>
  <p class="FigureCaption">Inheritance graph for NiPhysXManager</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal"><span class="NDLSystemFont">NiPhysXManager</span> is a singleton class for managing global Gamebryo-PhysX state: the PhysX SDK pointer and collision meshes. </p>
<p class="NDLNormal">THIS CLASS HAS BEEN DEPRECATED. New applications should not use it. Rather, the <span class="NDLSystemFont"><a href="../efdPhysX/efdPhysX__PhysXSDKManager.htm">efdPhysX::PhysXSDKManager</a></span> class should be used.</p>
<p class="NDLNormal">Applications cannot create an instance of this class - a single instance is created by the Gamebryo-PhysX static data manager when the NiPhysX library is loaded (be sure to include <span class="NDLSystemFont">NiPhysX.h</span> in at least one file). </p>

<a name="public_attributes"></a>
<p class="NDLRefHead1">Public Attributes</p>


<a name="class_ni_phys_x_manager_1a88c810855ab335106648b1b3d41c2b70"></a>
<p class="NDLRefMemberFunction">NxPhysicsSDK*  m_pkPhysXSDK</p>
<p class="NDLRefMemberDescription">The SDK object that is created. </p>
<p class="NDLRefMemberDetailedDescription">DO NOT USE THIS VARIABLE. Use <span class="NDLSystemFont"><a href="../efdPhysX/efdPhysX__PhysXSDKManager.htm#classefd_phys_x_1_1_phys_x_s_d_k_manager_1a754806faa44700d601506a207d03a15d">efdPhysX::PhysXSDKManager::m_pPhysXSDK</a></span> instead. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="class_ni_phys_x_manager_1ad4bc9aa31aab626d207d3e752f7dd3c9"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">NiPhysXManager</span>*  GetPhysXManager()</p>
<p class="NDLRefMemberDescription">Obtain a pointer to the singleton manager. </p>

<a name="class_ni_phys_x_manager_1a155e1d10555648c491e99d754528e922"></a>
<p class="NDLRefMemberFunction">static const char*  GetSDKCreateErrorString(NxSDKCreateError* peErrorCode)</p>
<p class="NDLRefMemberDescription">Provide a string corresponding to the SDK creation error codes. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_phys_x_manager_1a8409ad8baec25ee1e963f106bcbcb64f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  Initialize(<br/><span class="NDLSystemFont">NxUserAllocator</span>* pkAllocator = NULL, <br/><span class="NDLSystemFont">NxUserOutputStream</span>* pkOutputStream = NULL, <br/>const NxPhysicsSDKDesc& kSDKDesc = efdPhysX::PhysXTypes::ms_kDefaultPhysicsSDKDesc, <br/>NxSDKCreateError* peErrorCode = 0)</p>
<p class="NDLRefMemberDescription">Initialize the PhysX SDK. </p>
<p class="NDLRefMemberDetailedDescription">DO NOT USE THIS FUNCTION. Use <span class="NDLSystemFont"><a href="../efdPhysX/efdPhysX__PhysXSDKManager.htm#classefd_phys_x_1_1_phys_x_s_d_k_manager_1a8fa7380232e39f087631d68194833cfe">efdPhysX::PhysXSDKManager::Initialize</a></span>. </p>

<a name="class_ni_phys_x_manager_1acd5221a3f6271d92a0f06c9561f81a29"></a>
<p class="NDLRefMemberFunction">void  Shutdown()</p>
<p class="NDLRefMemberDescription">Releases the PhysX SDK and other resources such as the mesh tables. </p>
<p class="NDLRefMemberDetailedDescription">DO NOT USE THIS FUNCTION. Use <span class="NDLSystemFont"><a href="../efdPhysX/efdPhysX__PhysXSDKManager.htm#classefd_phys_x_1_1_phys_x_s_d_k_manager_1ab2d35d02bbc879179d6a315c7b857ef0">efdPhysX::PhysXSDKManager::Shutdown</a></span>. </p>

<a name="class_ni_phys_x_manager_1a83ff443616adf41b5054502e9d4c1c10"></a>
<p class="NDLRefMemberFunction">NxScene*  CreateSceneOnDifferentCore(<br/>const NxSceneDesc& kDesc, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__ProcessorAffinity.htm">NiProcessorAffinity</a></span>& kAffinity)</p>
<p class="NDLRefMemberDescription">Create a PhysX scene in a thread on a particular core. </p>
<p class="NDLRefMemberDetailedDescription">DO NOT USE THIS FUNCTION. Use <span class="NDLSystemFont"><a href="../efdPhysX/efdPhysX__PhysXSDKManager.htm#classefd_phys_x_1_1_phys_x_s_d_k_manager_1a0a7b7859f04b978fb0875dbe4ff15efd">efdPhysX::PhysXSDKManager::CreateSceneOnDifferentCore</a></span> instead. </p>
<a name="physx_sdk_locking_functions"></a>
<p class="NDLRefHead1">PhysX SDK Locking Functions</p>

<p class="NDLRefMemberDescription">DO NOT USE THESE FUNCTIONS.</p>
<p class="NDLRefMemberDescription">Use <span class="NDLSystemFont"><a href="../efdPhysX/efdPhysX__PhysXSDKManager.htm#classefd_phys_x_1_1_phys_x_s_d_k_manager_1a3c789de451ff6069d9c3d9140376a432">efdPhysX::PhysXSDKManager::WaitSDKLock</a></span> or <span class="NDLSystemFont"><a href="../efdPhysX/efdPhysX__PhysXSDKManager.htm#classefd_phys_x_1_1_phys_x_s_d_k_manager_1a891e1d6da93a1977c4d2aed062adf145">efdPhysX::PhysXSDKManager::ReleaseSDKLock</a></span>. </p>

<a name="class_ni_phys_x_manager_1aa67ca063659b61539e573a2712b24bfc"></a>
<p class="NDLRefMemberFunction">void  WaitSDKLock()</p>
<p class="NDLRefMemberDescription">Wait on the lock controlling access to the PhysX SDK object. </p>

<a name="class_ni_phys_x_manager_1a8af97ab44edd518ad30a5f4e30f6d728"></a>
<p class="NDLRefMemberFunction">void  ReleaseSDKLock()</p>
<p class="NDLRefMemberDescription">Release the lock on the PhysX SDK object. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

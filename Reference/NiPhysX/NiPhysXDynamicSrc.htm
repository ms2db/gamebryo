<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPhysXDynamicSrc</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiPhysXDynamicSrc</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="NiPhysXRigidBodySrc.htm">NiPhysXRigidBodySrc</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiPhysXDynamicSrc.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_phys_x_dynamic_src.gif" alt="Inheritance graph for NiPhysXDynamicSrc"/>
  <p class="FigureCaption">Inheritance graph for NiPhysXDynamicSrc</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal"><span class="NDLSystemFont">NiPhysXDynamicSrc</span> objects are intended for pushing Gamebryo scene graph state to a PhysX dynamic or kinematic actor. </p>
<p class="NDLNormal">These objects are used for both kinematic actors and actors that are dynamic (although the latter is not recommended). They also provide feedback of the blended state of a PhysX controlled character back to the PhysX actor doing the controlling.</p>
<p class="NDLNormal">This class provides only the the UpdateToActors function. All member variables and other functionality are inherited from the base class.</p>
<p class="NDLNormal">
<p class="NDLNormal">Interpolation will fail for fast rotating objects due to the fundamental limitations of rotation representations and discrete time sampling. Disable interpolation for fast moving objects. </p></p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_phys_x_dynamic_src_1a21763cf4c26e8eaac7ae39084d9fbdbe"></a>
<p class="NDLRefMemberFunction">NiPhysXDynamicSrc(<br/><span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkSource, <br/>NxActor* pkActor)</p>
<p class="NDLRefMemberDetailedDescription">The constructor passes its arguments directly to the base class. </p>

<a name="class_ni_phys_x_dynamic_src_1a9968cad914703afb47e4412c34da1786"></a>
<p class="NDLRefMemberFunction">~NiPhysXDynamicSrc()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_phys_x_dynamic_src_1a42d81d5faa09e48d989a9ee7d3f9d347"></a>
<p class="NDLRefMemberFunction">virtual void  UpdateToActors(<br/>const float fTBegin, <br/>const float fTEnd)</p>
<p class="NDLRefMemberDescription">Push the state onto the PhysX actors. </p>
<p class="NDLRefMemberDetailedDescription">If the interpolation flag (defined in <span class="NDLSystemFont"><a href="NiPhysXSrc.htm">NiPhysXSrc</a></span>) is false, this function uses the most recent internally cached transformation with either NxActor::moveGlobalPose or NxActor::setGlobalPose to set the actor's pose. If interpolation is active, then the pose is interpolated for time fTBegin for dynamic actors or fTEnd for kinematic actors. Regardless of the interpolation flag, when the actor is dynamic the velocity of the object is estimated using the two stored poses and is set with NxActor::setLinearVelocity and NxActor::setAngularVelocity. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

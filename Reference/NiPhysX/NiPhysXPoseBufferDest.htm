<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPhysXPoseBufferDest</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiPhysXPoseBufferDest</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="NiPhysXRigidBodyDest.htm">NiPhysXRigidBodyDest</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiPhysXPoseBufferDest.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_phys_x_pose_buffer_dest.gif" alt="Inheritance graph for NiPhysXPoseBufferDest"/>
  <p class="FigureCaption">Inheritance graph for NiPhysXPoseBufferDest</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Each <span class="NDLSystemFont">NiPhysXPoseBufferDest</span> connects a PhysX rigid body actor to one rotation and one translation data item within the <span class="NDLSystemFont"><a href="../NiAnimation/NiPoseBuffer.htm">NiPoseBuffer</a></span> owned by the active animation sequence. </p>
<p class="NDLNormal">The location of this data matches the output of a given sequence evaluator. These data values form a transform which, after blending with pose buffer data from other active sequences, ultimately drive a scene graph transform node.</p>
<p class="NDLNormal">Most of its functionality is derived from the base classes. This class only adds the final step of interpolating the PhysX results and pushing them into the pose buffer.</p>
<p class="NDLNormal">This class should be used in conjunction with a <span class="NDLSystemFont"><a href="NiPhysXSequenceManager.htm">NiPhysXSequenceManager</a></span> object, in which case applications will never need to create one and will never need to explicitly call any of its functions. The code that adds a sequence to the <span class="NDLSystemFont"><a href="NiPhysXSequenceManager.htm">NiPhysXSequenceManager</a></span> creates these objects as part of its setup and continues to manage them.</p>
<p class="NDLNormal">
<p class="NDLNormal">Fast Spinning Objects: Interpolation will fail for fast rotating objects due to the fundamental limitations of rotation representations and discrete time sampling. Disable interpolation for fast moving objects. </p></p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_phys_x_pose_buffer_dest_1a2e13062563fc73a8b19f65450d5a2046"></a>
<p class="NDLRefMemberFunction">NiPhysXPoseBufferDest(<br/>NxActor* pkActor, <br/>NxActor* pkActorParent, <br/><span class="NDLSystemFont"><a href="../NiMain/NiNode.htm">NiNode</a></span>* pkSceneParent, <br/>NiPhysXSequenceManager::SequenceData* pkSeqData, <br/><span class="NDLSystemFont">NiUInt32</span> uiEvalIndex, <br/><span class="NDLSystemFont"><a href="../NiAnimation/NiPoseBufferHandle.htm">NiPoseBufferHandle</a></span> kPBHandleTranslate, <br/><span class="NDLSystemFont"><a href="../NiAnimation/NiPoseBufferHandle.htm">NiPoseBufferHandle</a></span> kPBHandleRotate)</p>
<p class="NDLRefMemberDescription">The constructor stores the evaluator index, the scene graph parent of the node that evaluator is controlling, the source sequence data, and the rotation and translation data locations within the pose buffer. </p>
<p class="NDLRefMemberDetailedDescription">The other arguments are passed to the base class constructor. </p>

<a name="class_ni_phys_x_pose_buffer_dest_1ae06c0dd96a9bfe814da29d4d8ba234a0"></a>
<p class="NDLRefMemberFunction">~NiPhysXPoseBufferDest()</p>
<p class="NDLRefMemberDescription">Destructor sets all held pointers to NULL. </p>

<a name="class_ni_phys_x_pose_buffer_dest_1a122bcf33395a26a43db8b37f34cdf75e"></a>
<p class="NDLRefMemberFunction">NiPhysXSequenceManager::SequenceData*  GetSequenceData() const</p>
<p class="NDLRefMemberDescription">Returns the associated sequence data. </p>

<a name="class_ni_phys_x_pose_buffer_dest_1a20a046f21012878dc10416f1b0c6402b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  GetEvaluatorIndex() const</p>
<p class="NDLRefMemberDescription">Returns the evaluator index within the source sequence data. </p>

<a name="class_ni_phys_x_pose_buffer_dest_1a11ce1d7955c93e4c17676067af436663"></a>
<p class="NDLRefMemberFunction">virtual void  SetActive(const <span class="NDLSystemFont">bool</span> bActive)</p>
<p class="NDLRefMemberDescription">Sets the activity flag, disables the associated evaluator channels, and validates the associated pose buffer locations. </p>

<a name="class_ni_phys_x_pose_buffer_dest_1ad9ff3c35c041283f1e9d16ef23cfa01e"></a>
<p class="NDLRefMemberFunction">virtual void  UpdateSceneGraph(<br/>const float fT, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiTransform.htm">NiTransform</a></span>& kRootTransform, <br/>const float fScalePToW, <br/>const <span class="NDLSystemFont">bool</span> bForce)</p>
<p class="NDLRefMemberDescription">Push the transform value into the pose buffer. </p>
<p class="NDLRefMemberDetailedDescription">If the interpolation flag (defined in <span class="NDLSystemFont"><a href="NiPhysXDest.htm">NiPhysXDest</a></span>) is false, this pushes the most recently extracted transformation into the target pose buffer locations. See the base class documentation for how this transformation is computed. If the interpolation flag is true, the time fT is used to interpolate or extrapolate from the two most recently extracted transforms (the work is done by the base class). </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

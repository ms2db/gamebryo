<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPhysXMeshDesc</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiPhysXMeshDesc</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiObject.htm">NiObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiPhysXMeshDesc.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_phys_x_mesh_desc.gif" alt="Inheritance graph for NiPhysXMeshDesc"/>
  <p class="FigureCaption">Inheritance graph for NiPhysXMeshDesc</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal"><span class="NDLSystemFont">NiPhysXMeshDesc</span> objects hold mesh data for streaming. </p>
<p class="NDLNormal">Applications will typically only touch these objects when working on tools that stream PhysX content, or when constructing <span class="NDLSystemFont"><a href="NiPhysXActorDesc.htm">NiPhysXActorDesc</a></span> or <span class="NDLSystemFont"><a href="NiPhysXClothDesc.htm">NiPhysXClothDesc</a></span> objects.</p>
<p class="NDLNormal">Internally, this class stores the name of the mesh, cooked mesh data if it is known, and any flags for creating the mesh. The flags, paging mode and name properties only affect shapes when they are created for an actor - they do not modify shapes that have already been attached to actors.</p>
<p class="NDLNormal">Multiple shape objects may point to the same instance of this class, in which case the PhysX mesh is shared amongst the using shapes. </p>

<a name="public_attributes"></a>
<p class="NDLRefHead1">Public Attributes</p>


<a name="class_ni_phys_x_mesh_desc_1a8fafe12af6232158c82867af0e0a41c0"></a>
<p class="NDLRefMemberFunction">NxClothMesh*  m_pkClothMesh</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_ni_phys_x_mesh_desc_1a0b17c49c49ccc00dafcf52ecb1b9af05"></a>
<p class="NDLRefMemberFunction">NxConvexMesh*  m_pkConvexMesh</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_ni_phys_x_mesh_desc_1a26caffc3435ac990fc3b9376fa5d5765"></a>
<p class="NDLRefMemberFunction">NxTriangleMesh*  m_pkTriangleMesh</p>
<p class="NDLRefMemberFunction"></p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_phys_x_mesh_desc_1af1425ee0534afee60a8868e0df33367a"></a>
<p class="NDLRefMemberFunction">NiPhysXMeshDesc()</p>
<p class="NDLRefMemberDetailedDescription">Constructor creates an object with no name or data. </p>

<a name="class_ni_phys_x_mesh_desc_1ad46a6db1e22d347404cb4c29851cef42"></a>
<p class="NDLRefMemberFunction">~NiPhysXMeshDesc()</p>
<p class="NDLRefMemberDescription">Destructor deletes any data. </p>

<a name="class_ni_phys_x_mesh_desc_1ab795906c55734f84ef00363dda840962"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetIsCloth() const</p>
<p class="NDLRefMemberDescription">Returns true if this object represents a cloth mesh. </p>

<a name="class_ni_phys_x_mesh_desc_1ae759bf1c7e423dd27f8d3f3d360fd1f1"></a>
<p class="NDLRefMemberFunction">void  SetIsCloth()</p>
<p class="NDLRefMemberDescription">Sets this object to represent a cloth mesh. </p>

<a name="class_ni_phys_x_mesh_desc_1a502a2d8d274e85e0cfe7866d1a7cbd30"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetIsConvex() const</p>
<p class="NDLRefMemberDescription">Returns true if this object represents a convex mesh. </p>

<a name="class_ni_phys_x_mesh_desc_1a2a01695a7f7d49747fceb65fadf7c63e"></a>
<p class="NDLRefMemberFunction">void  SetIsConvex()</p>
<p class="NDLRefMemberDescription">Sets this object to represent a convex mesh. </p>

<a name="class_ni_phys_x_mesh_desc_1ad8668bfa66ccebc758f658aea1e71b53"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetIsTriMesh() const</p>
<p class="NDLRefMemberDescription">Returns true if this object represents a trishape mesh. </p>

<a name="class_ni_phys_x_mesh_desc_1a0a985d2747711c68339cdd70a41c3ae4"></a>
<p class="NDLRefMemberFunction">void  SetIsTriMesh()</p>
<p class="NDLRefMemberDescription">Sets this object to represent a trishape mesh. </p>

<a name="class_ni_phys_x_mesh_desc_1a557862fc6d294873f17c9a1eb17a0d09"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetPlatform(NxPlatform& kPlatform) const</p>
<p class="NDLRefMemberDescription">Get the platform for which this mesh was cooked. </p>
<p class="NDLRefMemberDetailedDescription">Returns true and sets kPlatform if there is platform information available, or returns false and leaves kPlatform unchanged if there is no knowledge of the platform. </p>

<a name="class_ni_phys_x_mesh_desc_1a37be6dea9160bd8ab005c0e841eb0ab4"></a>
<p class="NDLRefMemberFunction">void  SetPlatform(const NxPlatform kPlatform)</p>
<p class="NDLRefMemberDescription">Set the target platform. </p>

<a name="class_ni_phys_x_mesh_desc_1a7d9fdac3a52ffcd12961a69b8fb5e84b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsValidPlatform() const</p>
<p class="NDLRefMemberDescription">Return true if the platform on which the application is executing is the same as the platform for which the mesh was cooked, false otherwise. </p>
<p class="NDLRefMemberDetailedDescription">The function returns true if there is no mesh information available. </p>

<a name="class_ni_phys_x_mesh_desc_1a7763942b28046e75187e4682e7c96ba3"></a>
<p class="NDLRefMemberFunction">NxU32  GetFlags() const</p>
<p class="NDLRefMemberDescription">Get mesh flags. </p>
<p class="NDLRefMemberDetailedDescription">These are the flags stored in a PhysX NxClothMeshDesc, NxConvexMeshDesc or NxTriangleMeshDesc object. </p>

<a name="class_ni_phys_x_mesh_desc_1afa9247c5fff2f5e83fbf5a6de046b397"></a>
<p class="NDLRefMemberFunction">void  SetFlags(const NxU32 uiFlags)</p>
<p class="NDLRefMemberDescription">Set the mesh flags. </p>

<a name="class_ni_phys_x_mesh_desc_1a911a99be9a32a10a8eba7fa7d443fd3e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetHardware() const</p>
<p class="NDLRefMemberDescription">Returns true if this mesh was cooked for PhysX hardware simulation. </p>

<a name="class_ni_phys_x_mesh_desc_1a4d9e93be89099233092aafb9e81d8b38"></a>
<p class="NDLRefMemberFunction">void  SetHardware(const <span class="NDLSystemFont">bool</span> bHardware)</p>
<p class="NDLRefMemberDescription">Set the flag indicating hardware cooking. </p>

<a name="class_ni_phys_x_mesh_desc_1a23f1dd7fe424e076ef8a1b067965141b"></a>
<p class="NDLRefMemberFunction">NxMeshPagingMode  GetMeshPagingMode() const</p>
<p class="NDLRefMemberDescription">Get the mesh paging mode associated with the mesh. </p>

<a name="class_ni_phys_x_mesh_desc_1a586f4205b31e20d6553a83ca2ef33c68"></a>
<p class="NDLRefMemberFunction">void  SetMeshPagingMode(const NxMeshPagingMode eMode)</p>
<p class="NDLRefMemberDescription">Set the mesh paging mode associated with the mesh. </p>

<a name="class_ni_phys_x_mesh_desc_1aec17880e233892e6f45fa00ae1863d59"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>&  GetName() const</p>
<p class="NDLRefMemberDescription">Get the name used for the mesh. </p>

<a name="class_ni_phys_x_mesh_desc_1a94ad3ff109699daa262bfbef68a7e4d9"></a>
<p class="NDLRefMemberFunction">void  SetName(const <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kName)</p>
<p class="NDLRefMemberDescription">Set the name to use for the mesh. </p>
<p class="NDLRefMemberDetailedDescription">The name is the file name for an extranlly streamed mesh. </p>

<a name="class_ni_phys_x_mesh_desc_1a86d2619ed52a5643ffeed504fc342775"></a>
<p class="NDLRefMemberFunction">void  GetData(<br/>size_t& kSize, <br/>unsigned char ** ppucData)</p>
<p class="NDLRefMemberDescription">Get the cooked mesh data and its size. </p>

<a name="class_ni_phys_x_mesh_desc_1a7a22f984b42b3f1dc8691c864e342ec0"></a>
<p class="NDLRefMemberFunction">void  SetData(<br/>const size_t uiSize, <br/>unsigned char* pucData)</p>
<p class="NDLRefMemberDescription">Set the raw cooked mesh data. </p>
<p class="NDLRefMemberDetailedDescription">The data size must also be provided. </p>

<a name="class_ni_phys_x_mesh_desc_1aee4bfb816ba0b838234e56ca2b604e5b"></a>
<p class="NDLRefMemberFunction">virtual void  ToClothDesc(<br/>NxClothDesc& kClothDesc, <br/>const <span class="NDLSystemFont">bool</span> bKeepData, <br/>const <span class="NDLSystemFont">bool</span> bCheckPlatform = false)</p>
<p class="NDLRefMemberDescription">Fill the contents of a PhysX cloth mesh descriptor object. </p>
<p class="NDLRefMemberDetailedDescription">If the mesh has previously been created (that is, it is shared), then the existing mesh is used. Otherwise, this function takes the cooked data and calls NxPhysicsSDK::createClothMesh. If no mesh data is present, then the mesh name is used to look for a file containing the mesh data (see NiPhysXClothMesh for details on loading external meshes).</p>
<p class="NDLRefMemberDetailedDescription">If bKeepsMesh is false, the mesh data is deleted after the mesh is created. </p>

<a name="class_ni_phys_x_mesh_desc_1ab19dfb72049cfaa028e9f3adba7190fc"></a>
<p class="NDLRefMemberFunction">virtual void  ToConvexDesc(<br/>NxConvexShapeDesc& kConvexDesc, <br/>const <span class="NDLSystemFont">bool</span> bKeepData, <br/>const <span class="NDLSystemFont">bool</span> bCheckPlatform = false)</p>
<p class="NDLRefMemberDescription">Fill the contents of a PhysX convex mesh descriptor object. </p>
<p class="NDLRefMemberDetailedDescription">If the mesh has previously been created (that is, it is shared), then the existing mesh is used. Otherwise, this function takes the cooked data and calls NxPhysicsSDK::createConvexMesh. If no mesh data is present, then the mesh name is used to look for a file containing the mesh data (see NiPhysXConvexMesh for details on loading external meshes).</p>
<p class="NDLRefMemberDetailedDescription">If bKeepsMesh is false, the mesh data is deleted after the mesh is created. </p>

<a name="class_ni_phys_x_mesh_desc_1ae213735951a03ed8e6e6667f8443b2c6"></a>
<p class="NDLRefMemberFunction">virtual void  ToTriMeshDesc(<br/>NxTriangleMeshShapeDesc& kTriMeshDesc, <br/>const <span class="NDLSystemFont">bool</span> bKeepData, <br/>const <span class="NDLSystemFont">bool</span> bCheckPlatform = false)</p>
<p class="NDLRefMemberDescription">Fill the contents of a PhysX triangle mesh descriptor object. </p>
<p class="NDLRefMemberDetailedDescription">If the mesh has previously been created (that is, it is shared), then the existing mesh is used. Otherwise, this function takes the cooked data and calls NxPhysicsSDK::createTriangleMesh. If no mesh data is present, then the mesh name is used to look for a file containing the mesh data (see NiPhysXTriangleMesh for details on loading external meshes).</p>
<p class="NDLRefMemberDetailedDescription">If bKeepsMesh is false, the mesh data is deleted after the mesh is created. </p>
<a name="mesh_search_directory_functions"></a>
<p class="NDLRefHead1">Mesh Search Directory Functions</p>


<a name="class_ni_phys_x_mesh_desc_1a971f4f89dbab7eb7530577731d1d60cc"></a>
<p class="NDLRefMemberFunction">static const char*  GetPlatformSpecificSubdirectory()</p>
<p class="NDLRefMemberDescription">Get the platform specific directory in which to search for meshes. </p>
<p class="NDLRefMemberDetailedDescription">PhysX meshes may have different cooked formats on different platforms, and these functions allow applications to more easily manage loading the appropriate resources. This is modeled after the <span class="NDLSystemFont"><a href="../NiMain/NiImageConverter.htm">NiImageConverter</a></span> class's methods for accessing textures, and functions in the same way. It is used when loading a NIF file that contains references to externally stored meshes. </p>

<a name="class_ni_phys_x_mesh_desc_1af603cf48985505a9282387e282298a22"></a>
<p class="NDLRefMemberFunction">static void  SetPlatformSpecificSubdirectory(const char* pcSubDir)</p>
<p class="NDLRefMemberDescription">Set the platform specific directory in which to search for meshes. </p>
<p class="NDLRefMemberDetailedDescription">The string is copied. </p>

<a name="class_ni_phys_x_mesh_desc_1a050ffb08df1cffbfd6f741aef2b9b12e"></a>
<p class="NDLRefMemberFunction">static char*  ConvertFilenameToPlatformSpecific(const char* pcPath)</p>
<p class="NDLRefMemberDescription">Convert a given file name in a platform specific file. </p>
<p class="NDLRefMemberDetailedDescription">This is modeled after the <span class="NDLSystemFont"><a href="../NiMain/NiImageConverter.htm">NiImageConverter</a></span> class's methods for accessing textures, and functions in the same way. </p>

<a name="class_ni_phys_x_mesh_desc_1a7a87979726ef3fddafe986170622fe82"></a>
<p class="NDLRefMemberFunction">static void  ConvertFilenameToPlatformSpecific(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kPath, <br/><span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kPlatformSpecificPath)</p>
<p class="NDLRefMemberDescription">Convert a given file name in a platform specific file. </p>
<p class="NDLRefMemberDetailedDescription">This is modeled after the <span class="NDLSystemFont"><a href="../NiMain/NiImageConverter.htm">NiImageConverter</a></span> class's methods for accessing textures, and functions in the same way. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

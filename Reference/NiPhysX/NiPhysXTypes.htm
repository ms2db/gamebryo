<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPhysXTypes</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiPhysXTypes</p>


<p class="NDLRefHeaderFile">&lt;NiPhysXTypes.h&gt;</p>


<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class provides static member functions for converting between Gamebryo Ni-prefixed types and PhysX types. </p>
<p class="NDLNormal">The efd::PhysXTypes class provides similar functionality for namespace <span class="NDLSystemFont"><a href="../../ee_goto.htm#Reference/Namespaces/efd.htm">efd</a></span> types.</p>
<p class="NDLNormal">
<p class="NDLNormal">Conversions involving quaternions may produce unexpected results due to the fact that there are two valid quaternion representations for any 3D rotation, and all the conversions guarantee is that the rotations are equivalent. For example, a call to NiQuaternionToNxMat33 followed by NxMat33ToNiQuaternion on the result will not always give the quaternion that you started with - it may produce the one with all the values negated. This is the same quaternion mathematically because it produces the same rotation, but some tests, such as Gamebryo's <span class="NDLSystemFont"><a href="../NiMain/NiQuaternion.htm">NiQuaternion</a></span> equality operator, will say they are different. </p></p>

<a name="public_static_attributes"></a>
<p class="NDLRefHead1">Public Static Attributes</p>


<a name="class_ni_phys_x_types_1a30c3bec940507d1c98bde1b59cbad846"></a>
<p class="NDLRefMemberFunction">static const NxVec3  NXVEC3_ZERO</p>
<p class="NDLRefMemberDescription">A zero vector. </p>

<a name="class_ni_phys_x_types_1a6829e14a569fb3442ae9ca327586ca6e"></a>
<p class="NDLRefMemberFunction">static const NxMat33  NXMAT33_ID</p>
<p class="NDLRefMemberDescription">An identity matrix. </p>

<a name="class_ni_phys_x_types_1a0b8f19ffaffbf23311b3358cab555482"></a>
<p class="NDLRefMemberFunction">static const NxMat34  NXMAT34_ID</p>
<p class="NDLRefMemberDescription">An identity pose. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="class_ni_phys_x_types_1a991075a421e427dc9d6cfe0eee424e7e"></a>
<p class="NDLRefMemberFunction">static void  NxVec3ToNiPoint3(<br/>const NxVec3& kNxVSrc, <br/><span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kNiPDest)</p>
<p class="NDLRefMemberDescription">Convert a NxVec3 object to a <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span> object. </p>

<a name="class_ni_phys_x_types_1aabdac54307c860d4686bbaa6eee5d7f8"></a>
<p class="NDLRefMemberFunction">static void  NiPoint3ToNxVec3(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kNiPSrc, <br/>NxVec3& kNxVDest)</p>
<p class="NDLRefMemberDescription">Convert a <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span> object to a NxVec3 object. </p>

<a name="class_ni_phys_x_types_1ac7292129564f10b50b746122d459b46b"></a>
<p class="NDLRefMemberFunction">static void  NxQuatToNiQuaternion(<br/>const NxQuat& kNxQSrc, <br/><span class="NDLSystemFont"><a href="../NiMain/NiQuaternion.htm">NiQuaternion</a></span>& kNiQDest)</p>
<p class="NDLRefMemberDescription">Convert a NxQuat object to a <span class="NDLSystemFont"><a href="../NiMain/NiQuaternion.htm">NiQuaternion</a></span> object. </p>

<a name="class_ni_phys_x_types_1ab718e8bbad5c9b3af4c4044c2bee2c30"></a>
<p class="NDLRefMemberFunction">static void  NiQuaternionToNxQuat(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiQuaternion.htm">NiQuaternion</a></span>& kNiQSrc, <br/>NxQuat& kNxQDest)</p>
<p class="NDLRefMemberDescription">Convert a <span class="NDLSystemFont"><a href="../NiMain/NiQuaternion.htm">NiQuaternion</a></span> object to a NxQuat object. </p>

<a name="class_ni_phys_x_types_1a90b9e9d3e10cbd161e19e00c70188026"></a>
<p class="NDLRefMemberFunction">static void  NxMat33ToNiMatrix3(<br/>const NxMat33& kNxMSrc, <br/><span class="NDLSystemFont"><a href="../NiMain/NiMatrix3.htm">NiMatrix3</a></span>& kNiMDest)</p>
<p class="NDLRefMemberDescription">Convert a NxMat33 object to a <span class="NDLSystemFont"><a href="../NiMain/NiMatrix3.htm">NiMatrix3</a></span> object. </p>

<a name="class_ni_phys_x_types_1a1c825a1e7632c29911b8afb80e1a6bc1"></a>
<p class="NDLRefMemberFunction">static void  NiMatrix3ToNxMat33(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiMatrix3.htm">NiMatrix3</a></span>& kNiMSrc, <br/>NxMat33& kNxMDest)</p>
<p class="NDLRefMemberDescription">Convert a <span class="NDLSystemFont"><a href="../NiMain/NiMatrix3.htm">NiMatrix3</a></span> object to a NxMat33 object. </p>

<a name="class_ni_phys_x_types_1a034dd242facffa764578d52e482fe21f"></a>
<p class="NDLRefMemberFunction">static void  NxMat33ToNiQuaternion(<br/>const NxMat33& kNxMSrc, <br/><span class="NDLSystemFont"><a href="../NiMain/NiQuaternion.htm">NiQuaternion</a></span>& kNiQDest)</p>
<p class="NDLRefMemberDescription">Convert a NxMat33 representing a rotation into a <span class="NDLSystemFont"><a href="../NiMain/NiQuaternion.htm">NiQuaternion</a></span> representing the same rotation. </p>
<p class="NDLRefMemberDetailedDescription">Uses PhysX's NxMat33.toQuat function. </p>

<a name="class_ni_phys_x_types_1adc3c4541cfdf5feab42251a572eafac1"></a>
<p class="NDLRefMemberFunction">static void  NiQuaternionToNxMat33(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiQuaternion.htm">NiQuaternion</a></span>& kNiQSrc, <br/>NxMat33& kNxMDest)</p>
<p class="NDLRefMemberDescription">Convert a <span class="NDLSystemFont"><a href="../NiMain/NiQuaternion.htm">NiQuaternion</a></span> representing a rotation into a NxMat33 representing the same rotation. </p>
<p class="NDLRefMemberDetailedDescription">Uses PhysX's NxMat33.fromQuat function. </p>

<a name="class_ni_phys_x_types_1a85cf6f083e8c4ee37bb1442686a48580"></a>
<p class="NDLRefMemberFunction">static void  NxMat34ToNiTransform(<br/>const NxMat34& kNxMSrc, <br/><span class="NDLSystemFont"><a href="../NiMain/NiMatrix3.htm">NiMatrix3</a></span>& kNiMDest, <br/><span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kNiPDest)</p>
<p class="NDLRefMemberDescription">Convert a PhysX pose matrix to the components of Gamebryo's <span class="NDLSystemFont"><a href="../NiMain/NiTransform.htm">NiTransform</a></span> representation. </p>

<a name="class_ni_phys_x_types_1a30ee3a2e627a1533e3e23f5615c75a93"></a>
<p class="NDLRefMemberFunction">static void  NiTransformToNxMat34(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiMatrix3.htm">NiMatrix3</a></span>& kNiMSrc, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kNiPSrc, <br/>NxMat34& kNxMDest)</p>
<p class="NDLRefMemberDescription">Convert the components of Gamebryo's <span class="NDLSystemFont"><a href="../NiMain/NiTransform.htm">NiTransform</a></span> representation to a PhysX pose matrix. </p>

<a name="class_ni_phys_x_types_1afb11aa653028546e47799c32090cd0ef"></a>
<p class="NDLRefMemberFunction">static void  NxMat34ToNiQuatTransform(<br/>const NxMat34& kNxMSrc, <br/><span class="NDLSystemFont"><a href="../NiMain/NiQuaternion.htm">NiQuaternion</a></span>& kNiQDest, <br/><span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kNiPDest)</p>
<p class="NDLRefMemberDescription">Convert from a PhysX pose matrix to the components of Gamebryo's <span class="NDLSystemFont"><a href="../NiAnimation/NiQuatTransform.htm">NiQuatTransform</a></span> representation. </p>

<a name="class_ni_phys_x_types_1a3fab9e94cecb89f609fb77f285f3f4c1"></a>
<p class="NDLRefMemberFunction">static void  NiQuatTransformToNxMat34(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiQuaternion.htm">NiQuaternion</a></span>& kNiQSrc, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kNiPSrc, <br/>NxMat34& kNxMDest)</p>
<p class="NDLRefMemberDescription">Convert from the components of Gamebryo's <span class="NDLSystemFont"><a href="../NiAnimation/NiQuatTransform.htm">NiQuatTransform</a></span> representation to a PhysX pose matrix. </p>

<a name="class_ni_phys_x_types_1ab89860e58c57076b6481458b3997be45"></a>
<p class="NDLRefMemberFunction">static void  NxColorToNiColorA(<br/>const NxU32 kNxSrc, <br/><span class="NDLSystemFont"><a href="../NiMain/NiColorA.htm">NiColorA</a></span>& kNiDest)</p>
<p class="NDLRefMemberDescription">Converts from the color representation used in PhysX's debug rendering to a Gamebryo color. </p>

<a name="class_ni_phys_x_types_1a8486d6fc056d6c495ef842b1b847bb05"></a>
<p class="NDLRefMemberFunction">static void  NxColorToNiRGBA(<br/>const NxU32 kNxSrc, <br/><span class="NDLSystemFont"><a href="../NiMain/NiRGBA.htm">NiRGBA</a></span>& uiNiDest)</p>
<p class="NDLRefMemberDescription">Converts from the ARGB color representation used in PhysX's debug rendering to an RGBA color. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPhysXSceneDesc</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiPhysXSceneDesc</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiObject.htm">NiObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiPhysXSceneDesc.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_phys_x_scene_desc.gif" alt="Inheritance graph for NiPhysXSceneDesc"/>
  <p class="FigureCaption">Inheritance graph for NiPhysXSceneDesc</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal"><span class="NDLSystemFont">NiPhysXSceneDesc</span> objects are for caching the properties of NxScene objects. </p>
<p class="NDLNormal">They are the objects streamed to save or load a NxScene and are the objects stored as snapshots in <span class="NDLSystemFont"><a href="NiPhysXScene.htm">NiPhysXScene</a></span>. Instances of this class are typically created in art tools, or modified after loading from a stream but before instantiating the PhysX.</p>
<p class="NDLNormal">Cloning is supported, allowing the settings for a scene to be copied for creating another.</p>
<p class="NDLNormal">
<p class="NDLNormal">At one time these were the objects that held all PhysX content, but but they have subsequently been replaced by <span class="NDLSystemFont"><a href="NiPhysXProp.htm">NiPhysXProp</a></span>. Functionality to handle back compatibility for old NIF files is still included in this class. </p></p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_phys_x_scene_desc_1a92806cb3e281c5503af526191866a89b"></a>
<p class="NDLRefMemberFunction">NiPhysXSceneDesc()</p>
<p class="NDLRefMemberDescription">Constructor. </p>
<p class="NDLRefMemberDetailedDescription">Sets the internal properties to match the PhysX NxScene defaults. </p>

<a name="class_ni_phys_x_scene_desc_1a5d0bbf4d97c942c6309e91506d071012"></a>
<p class="NDLRefMemberFunction">virtual ~NiPhysXSceneDesc()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_phys_x_scene_desc_1a0fefbf22a953ed7c60a47bc4f95098ec"></a>
<p class="NDLRefMemberFunction">virtual NxSceneDesc&  GetNxSceneDesc()</p>
<p class="NDLRefMemberDescription">Returns a reference to the internal NxSceneDesc object. </p>

<a name="class_ni_phys_x_scene_desc_1af87fd3ef09b023a4e14bc2ee2905c60f"></a>
<p class="NDLRefMemberFunction">virtual void  SetNxSceneDesc(const NxSceneDesc& kSceneDesc)</p>
<p class="NDLRefMemberDescription">Copies the contents of its argument into the internal descriptor. </p>

<a name="class_ni_phys_x_scene_desc_1a2daa0d9610cd11c84d23edb7b16695dc"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetGroupCollisionFlag(<br/>const unsigned char ucGroup1, <br/>const unsigned char ucGroup2) const</p>
<p class="NDLRefMemberDescription">Get a group collision flag, with the same behavior as NxScene::getGroupCollisionFlag(). </p>
<p class="NDLRefMemberDetailedDescription">The flags are stored separately in this class because they do not appear in a NxSceneDesc. This function returns the local copy. </p>

<a name="class_ni_phys_x_scene_desc_1a2b30e83daaa5d0bc4ddaa41544bf1555"></a>
<p class="NDLRefMemberFunction">void  SetGroupCollisionFlag(<br/>const unsigned char ucGroup1, <br/>const unsigned char ucGroup2, <br/>const <span class="NDLSystemFont">bool</span> bVal)</p>
<p class="NDLRefMemberDescription">Set a group collision flag, with the same behavior as NxScene::setGroupCollisionFlag(). </p>
<p class="NDLRefMemberDetailedDescription">The flags are stored separately in this class because they do not appear in a NxSceneDesc. This function should only be used before the PhysX scene is created, because the call is not passed through to the NxScene. </p>

<a name="class_ni_phys_x_scene_desc_1aef1751b2bec9eda8ec4fa20a59d69e71"></a>
<p class="NDLRefMemberFunction">void  GetFilterOps(<br/>NxFilterOp& eOp0, <br/>NxFilterOp& eOp1, <br/>NxFilterOp& eOp2) const</p>
<p class="NDLRefMemberDescription">Get the collision filtering operations, with the same behavior as NxScene::getFilterOps. </p>
<p class="NDLRefMemberDetailedDescription">The operators are stored separately in this class because they do not appear in a NxSceneDesc. This function returns the local copy. </p>

<a name="class_ni_phys_x_scene_desc_1aa97ac972e58cea81a68402fa3ce4815d"></a>
<p class="NDLRefMemberFunction">void  SetFilterOps(<br/>NxFilterOp eOp0, <br/>NxFilterOp eOp1, <br/>NxFilterOp eOp2)</p>
<p class="NDLRefMemberDescription">Set the collision filtering operations, with the same behavior as NxScene::setFilterOps. </p>
<p class="NDLRefMemberDetailedDescription">The operators are stored separately in this class because they do not appear in a NxSceneDesc. This function should only be used before the PhysX scene is created, because the call is not passed through to the NxScene. </p>

<a name="class_ni_phys_x_scene_desc_1aa58bf36f41b4bdd74313e85b7cfa1594"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetFilterBool() const</p>
<p class="NDLRefMemberDescription">Get the collision filtering boolean, with the same behavior as NxScene::getFilterBool. </p>
<p class="NDLRefMemberDetailedDescription">The filter boolean is stored separately in this class because it does not appear in a NxSceneDesc. This function returns the local copy. </p>

<a name="class_ni_phys_x_scene_desc_1a7e6bf7c5beb24ab0d5dc8d95603a3d63"></a>
<p class="NDLRefMemberFunction">void  SetFilterBool(<span class="NDLSystemFont">bool</span> bFlag)</p>
<p class="NDLRefMemberDescription">Set the collision filtering boolean, with the same behavior as NxScene::setFilterBool. </p>
<p class="NDLRefMemberDetailedDescription">The filter boolean is stored separately in this class because it does not appear in a NxSceneDesc. This function should only be used before the PhysX scene is created, because the call is not passed through to the NxScene. </p>

<a name="class_ni_phys_x_scene_desc_1af7c509d4bfb5d7d8e71f481e2e719ba4"></a>
<p class="NDLRefMemberFunction">void  GetFilterConstant0(NxGroupsMask& kMask) const</p>
<p class="NDLRefMemberDescription">Get the first collision filtering constant, with the same behavior as NxScene::getFilterConstant0. </p>
<p class="NDLRefMemberDetailedDescription">The filter constants are stored separately in this class because they do not appear in a NxSceneDesc. This function returns the local copy. </p>

<a name="class_ni_phys_x_scene_desc_1a4e907bcc20390adbe18010af8371ab86"></a>
<p class="NDLRefMemberFunction">void  SetFilterConstant0(const NxGroupsMask& kMask)</p>
<p class="NDLRefMemberDescription">Set the first collision filtering constant, with the same behavior as NxScene::setFilterConstant0. </p>
<p class="NDLRefMemberDetailedDescription">The filter constants are stored separately in this class because they do not appear in a NxSceneDesc. This function should only be used before the PhysX scene is created, because the call is not passed through to the NxScene. </p>

<a name="class_ni_phys_x_scene_desc_1a6f255a01ca864a84dc88556236824b52"></a>
<p class="NDLRefMemberFunction">void  GetFilterConstant1(NxGroupsMask& kMask) const</p>
<p class="NDLRefMemberDescription">Get the second collision filtering constant, with the same behavior as NxScene::getFilterConstant1. </p>
<p class="NDLRefMemberDetailedDescription">The filter constants are stored separately in this class because they do not appear in a NxSceneDesc. This function returns the local copy. </p>

<a name="class_ni_phys_x_scene_desc_1a4b96123e94d0e516692b1f7ae4da37a2"></a>
<p class="NDLRefMemberFunction">void  SetFilterConstant1(const NxGroupsMask& kMask)</p>
<p class="NDLRefMemberDescription">Set the second collision filtering constant, with the same behavior as NxScene::setFilterConstant1. </p>
<p class="NDLRefMemberDetailedDescription">The filter constants are stored separately in this class because they do not appear in a NxSceneDesc. This function should only be used before the PhysX scene is created, because the call is not passed through to the NxScene. </p>

<a name="class_ni_phys_x_scene_desc_1ab9cfcb3f2067bc0c6d464a1232782f10"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiMain/NiTMap.htm">NiTMap</a></span>&lt;<span class="NDLSystemFont">NiUInt32</span>, NxCompartmentDesc*&gt;&  GetCompartmentMap()</p>
<p class="NDLRefMemberDescription">Access to compartments. </p>
<p class="NDLRefMemberDetailedDescription">This function returns a reference to the map used to store information about compartments in this scene. The values in the map should be allocated using NiAlloc or NiMalloc, and the memory is subsequently owned by the <span class="NDLSystemFont">NiPhysXSceneDesc</span> object. You must assign the return value to a reference variable, or you will get a compile error about a non-existent constructor.</p>
<p class="NDLRefMemberDetailedDescription">The keys from this map are used in <span class="NDLSystemFont"><a href="NiPhysXPropDesc.htm">NiPhysXPropDesc</a></span> to indicate the appropriate compartment for various types of object. </p>

<a name="class_ni_phys_x_scene_desc_1a614ebe0b9df7defbbc99813dda9a9110"></a>
<p class="NDLRefMemberFunction">virtual NxScene*  CreateScene()</p>
<p class="NDLRefMemberDescription">Create a NxScene object using the stored parameters. </p>
<p class="NDLRefMemberDetailedDescription">Presumes that the PhysX SDK has been initialized through <span class="NDLSystemFont"><a href="../efdPhysX/efdPhysX__PhysXSDKManager.htm#classefd_phys_x_1_1_phys_x_s_d_k_manager_1a8fa7380232e39f087631d68194833cfe">efdPhysX::PhysXSDKManager::Initialize</a></span>. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egfPhysX::TriggerService</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egfPhysX::TriggerService</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__ISystemService.htm">efd::ISystemService</a></span></p>


<p class="NDLRefHeaderFile">&lt;TriggerService.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegf_phys_x_1_1_trigger_service.gif" alt="Inheritance graph for egfPhysX::TriggerService"/>
  <p class="FigureCaption">Inheritance graph for egfPhysX::TriggerService</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">The Trigger Service provides functionality for generating trigger events using PhysX actors. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegf_phys_x_1_1_trigger_service_1a6019855b8aa61646bdc3be641e004774"></a>
<p class="NDLRefMemberFunction">TriggerService(<span class="NDLSystemFont">bool</span> runSynchronously = false)</p>
<p class="NDLRefMemberDescription">Constructor. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">runSynchronously</span></td>
    <td>This parameter should be set to true when PhysX simulation is synchronous, as set by the entity with the PhysXScene model that triggers are simulating in. Otherwise, it should be false. It is used to correctly set the priority for the service. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_phys_x_1_1_trigger_service_1ad3c88d21b29f457a053e91869a3ffb5d"></a>
<p class="NDLRefMemberFunction">void  HandleEntityDiscoverMessage(<br/>const <span class="NDLSystemFont"><a href="../egf/egf__EntityChangeMessage.htm">egf::EntityChangeMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">This message handler is called when a new entity is discovered. </p>
<p class="NDLRefMemberDetailedDescription">The service only takes action if the entity has the PhysXShape model. If so, properties for the PhysX actor are extracted and saved in the service. The actor is created in a scene if the entity also has a "SceneName" property naming a valid PhysX scene.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The entity message. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">targetChannel</span></td>
    <td>Channel the message was sent on. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_phys_x_1_1_trigger_service_1a8d0a189bb1adb5a5a49c2e47f3ca9875"></a>
<p class="NDLRefMemberFunction">void  HandleEntityUpdatedMessage(<br/>const <span class="NDLSystemFont"><a href="../egf/egf__EntityChangeMessage.htm">egf::EntityChangeMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">This message handler is called when properties of an entity change. </p>
<p class="NDLRefMemberDetailedDescription">Position and orientation information is propagated to the PhysX actors. Any property changes affecting the shape or trigger status are also handled. The changes are not applied immediately because the state of the PhysX simulation may not be modified during simulation. The changes are cached and applied during OnTick.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The entity message. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">targetChannel</span></td>
    <td>Channel the message was sent on. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_phys_x_1_1_trigger_service_1ac4ba7cf6331b407492ee05c8ef9a98cc"></a>
<p class="NDLRefMemberFunction">void  HandleEntityRemovedMessage(<br/>const <span class="NDLSystemFont"><a href="../egf/egf__EntityChangeMessage.htm">egf::EntityChangeMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">This message handler is called when an entity has been removed from the scheduler. </p>
<p class="NDLRefMemberDetailedDescription">The actor for the entity is removed.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The entity message. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">targetChannel</span></td>
    <td>Channel the message was sent on. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_phys_x_1_1_trigger_service_1a7a46db1e21d3a5530f9fec6d211567ab"></a>
<p class="NDLRefMemberFunction">void  HandleSceneAddedMessage(<br/>const <span class="NDLSystemFont"><a href="egfPhysX__SceneMessage.htm">egfPhysX::SceneMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">This message handler is called when a PhysX scene has been added to the <span class="NDLSystemFont"><a href="egfPhysX__SceneService.htm">SceneService</a></span>. </p>
<p class="NDLRefMemberDetailedDescription">Check the lists for any objects that need to be added to the scene.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The entity message. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">targetChannel</span></td>
    <td>Channel the message was sent on. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_phys_x_1_1_trigger_service_1add53d6c67cb37ed69536e8297867a0c1"></a>
<p class="NDLRefMemberFunction">void  HandleSceneRemovingMessage(<br/>const <span class="NDLSystemFont"><a href="egfPhysX__SceneMessage.htm">egfPhysX::SceneMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">This message handler is called when a PhysX scene has been removed from the <span class="NDLSystemFont"><a href="egfPhysX__SceneService.htm">SceneService</a></span>. </p>
<p class="NDLRefMemberDetailedDescription">Remove all actors from that scene and keep the object information on the pending queue in case a new scene with that name is added.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The entity message. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">targetChannel</span></td>
    <td>Channel the message was sent on. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="entity-actor_mapping_functions"></a>
<p class="NDLRefHead1">Entity-Actor Mapping Functions</p>

<p class="NDLRefMemberDescription">A mapping is maintained between entities and the PhysX actor's they use.</p>
<p class="NDLRefMemberDescription">To find an actor for a given entity, use the functions from this class. To find an entity for a given actor, use the userData in the NxActor object (which is of type <span class="NDLSystemFont"><a href="egfPhysX__EntityActorData.htm">EntityActorData</a></span>). </p>

<a name="classegf_phys_x_1_1_trigger_service_1ade05b76268092a75bb42f7b420505ca7"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">efd::Bool</span>  AddEntityActor(<br/><span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">egf::EntityPtr</a></span> spEntity, <br/>NxActor* pActor, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> scale, <br/>const <span class="NDLSystemFont">bool</span> takeOwnership)</p>
<p class="NDLRefMemberDescription">Add an entity and its associated actor. </p>
<p class="NDLRefMemberDetailedDescription">The actor is presumed to already be in the scene. The actor's userData member will be over-written. Sub-class this class if you need more control of the userData.</p>
<p class="NDLRefMemberDetailedDescription">When takeOwnership is true the Trigger Service will be responsible for removing the actor when the entity is removed. Set this true only when the calling code will not be managing the actor.</p>
<p class="NDLRefMemberDetailedDescription">Returns true if the entity and its actor were added, false if the entity already has an actor. </p>

<a name="classegf_phys_x_1_1_trigger_service_1aea7ea536b8d6bd915efd8478722b2458"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">efd::Bool</span>  RemoveEntityActor(const <span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span>& entityID)</p>
<p class="NDLRefMemberDescription">Remove an entity and its associated actor from the simulation. </p>
<p class="NDLRefMemberDetailedDescription">A call to this function removes the entity from the currently active set, but will leave the actor in the simulation until the OnTick function is called.</p>
<p class="NDLRefMemberDetailedDescription">The actor is removed from the simulation only if the Trigger Service has ownership of this entity's data.</p>
<p class="NDLRefMemberDetailedDescription">Returns true if the entity was found and removed. False otherwise. </p>

<a name="classegf_phys_x_1_1_trigger_service_1a8682f39719a5bdd0c2ba6d3246859692"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egfPhysX__EntityActorData.htm">EntityActorData</a></span>*  GetEntityActorData(const <span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span>& entityID) const</p>
<p class="NDLRefMemberDescription">Get the actor data for an Entity. </p>
<p class="NDLRefMemberDetailedDescription">Returns the actor data or NULL if the entity has no actor. Do not free the pointer. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

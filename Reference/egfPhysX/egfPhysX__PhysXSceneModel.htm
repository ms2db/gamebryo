<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egfPhysX::PhysXSceneModel</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egfPhysX::PhysXSceneModel</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../egf/egf__IBuiltinModelImpl.htm">egf::IBuiltinModelImpl</a></span></p>


<p class="NDLRefHeaderFile">&lt;PhysXSceneModel.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegf_phys_x_1_1_phys_x_scene_model.gif" alt="Inheritance graph for egfPhysX::PhysXSceneModel"/>
  <p class="FigureCaption">Inheritance graph for egfPhysX::PhysXSceneModel</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">The <span class="NDLSystemFont">PhysXSceneModel</span> class provides the built-in model functionality for the PhysX Scene model in the PhysXModelLibrary. </p>
<p class="NDLNormal">Entites that mix in PhysXScene use this built-in, and the <span class="NDLSystemFont"><a href="egfPhysX__SceneService.htm">egfPhysX::SceneService</a></span> caches pointers to the model when it discovers entities that contain it. </p>

<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classegf_phys_x_1_1_phys_x_scene_model_1a3cb78cd18fb368e404da88a345e33c66"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="../egf/egf__IBuiltinModel.htm">egf::IBuiltinModel</a></span>*  PhysXSceneModelFactory()</p>
<p class="NDLRefMemberDescription">The factory class for the PhysX Scene built-in model. </p>
<p class="NDLRefMemberDetailedDescription">It is public to allow the <span class="NDLSystemFont"><a href="egfPhysX__SceneService.htm">egfPhysX::SceneService</a></span> to register the factory in its PreInit method. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegf_phys_x_1_1_phys_x_scene_model_1a4a8fd912218032b9104f517b436c5835"></a>
<p class="NDLRefMemberFunction">virtual const <span class="NDLSystemFont"><a href="../efd/efd__map.htm">egf::BuiltinModelPropertyMap</a></span>&  GetPropertyMap() const</p>
<p class="NDLRefMemberDescription">You must use EE_DECLARE_BUILTINMODEL_PROPERTIES in your final class in order to override this method. </p>
<p class="NDLRefMemberDetailedDescription">Alternatively you can use EE_NO_BUILTINMODEL_PROPERTIES if you have no properties on your built-in model. </p>

<a name="classegf_phys_x_1_1_phys_x_scene_model_1a10a0e86f42d2562fb51bf666aecc16f6"></a>
<p class="NDLRefMemberFunction">PhysXSceneModel()</p>
<p class="NDLRefMemberDescription">Constructor sets all default properties. </p>

<a name="classegf_phys_x_1_1_phys_x_scene_model_1a4fec18c014f3261952807a98fae1b278"></a>
<p class="NDLRefMemberFunction">virtual ~PhysXSceneModel()</p>
<p class="NDLRefMemberDescription">Virtual destructor. </p>

<a name="classegf_phys_x_1_1_phys_x_scene_model_1a434104f9d9faf12bfd38cb7066396831"></a>
<p class="NDLRefMemberFunction">virtual const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&  GetSceneName() const</p>
<p class="NDLRefMemberDescription">Get the name of the scene. </p>

<a name="classegf_phys_x_1_1_phys_x_scene_model_1a0c4cea43cb36b4498c3b923ae697a4a0"></a>
<p class="NDLRefMemberFunction">virtual void  SetSceneName(const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& newName)</p>
<p class="NDLRefMemberDescription">Set the name of the scene. </p>
<p class="NDLRefMemberDetailedDescription">We implement it here because special action must be taken with the scene service to ensure corret handling if a scene rename. </p>

<a name="classegf_phys_x_1_1_phys_x_scene_model_1aacda11acdf081e04f0698c7b0b4f8dd8"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetActivateOnSetFinished() const</p>
<p class="NDLRefMemberFunction"></p>

<a name="classegf_phys_x_1_1_phys_x_scene_model_1ad104d0509881272a2e0472df191f47fc"></a>
<p class="NDLRefMemberFunction">void  SetActivateOnSetFinished(const <span class="NDLSystemFont">efd::Bool</span>& activate)</p>
<p class="NDLRefMemberFunction"></p>
<a name="built-in_model_functionality"></a>
<p class="NDLRefHead1">Built-in Model Functionality</p>


<a name="classegf_phys_x_1_1_phys_x_scene_model_1a13557f69fbb2d641f5a2c30f872bd4dc"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  Initialize(<br/><span class="NDLSystemFont"><a href="../egf/egf__Entity.htm">egf::Entity</a></span>* pOwner, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__list.htm">egf::PropertyDescriptorList</a></span>& defaults)</p>
<p class="NDLRefMemberDescription">Initialization function sets the entity and the default values for properties. </p>

<a name="classegf_phys_x_1_1_phys_x_scene_model_1a952e50b20ef8d942b50546e0fe1abb90"></a>
<p class="NDLRefMemberFunction">virtual void  OnAdded()</p>
<p class="NDLRefMemberDescription">The PhysX scene is created. </p>

<a name="classegf_phys_x_1_1_phys_x_scene_model_1a3abaafaeb747b1fa2642d2d0f93203c0"></a>
<p class="NDLRefMemberFunction">virtual void  OnRemoved()</p>
<p class="NDLRefMemberDescription">The PhysX scene is released after simulation is forced to complete. </p>

<a name="classegf_phys_x_1_1_phys_x_scene_model_1a79140dcdff41f0acda993c13aa04acc4"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  ResetProperty(const <span class="NDLSystemFont"><a href="../egf/egf__PropertyDescriptor.htm">egf::PropertyDescriptor</a></span>* pDefault)</p>
<p class="NDLRefMemberDescription">Resets the given property to the default. </p>

<a name="classegf_phys_x_1_1_phys_x_scene_model_1a14f8b39044198bee2c2b887d140ba4e3"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  operator==(const IProperty& other) const</p>
<p class="NDLRefMemberDescription">Checks for equality of all properties, but not runtime modified data. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

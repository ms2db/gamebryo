<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiExtraObjectsSharedData</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiExtraObjectsSharedData</p>

<p class="NDLRefParentage">: public <a href=
"../../Reference/NiPluginToolkit/NiSharedData.htm">NiSharedData</a></p>

<p class="NDLRefHeaderFile">
&lt;NiExtraObjectsSharedData.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This class holds a collection of NiObject instances that are
not part of the scene graph. The only objects of this type in
Gamebryo are related to the PhysX integration, but applications
can add any additional objects as needed. All the objects are
optionally exported as extra top-level objects in the NIF file
that can be found when an application loads the NIF.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiExtraObjectsSharedData()</p>

<p class="NDLRefMemberDescription">Default constructor.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">void AddObject(NiObject* pkObj,
const char* pcName = "", bool bStreamable = true)</p>

<p class="NDLRefMemberDescription">Adds an object into the object
array. The object will only be streamed out if <span class=
"NDLSystemFont">bStreamable</span> is true. The name can be used
as an identifier for objects in the array.</p>

<p class="NDLRefMemberFunction">NiObjectPtr
RemoveObject(NiObject* pkObj)</p>

<p class="NDLRefMemberDescription">Removes an object from the
object array.</p>

<p class="NDLRefMemberFunction">void RemoveAllObjects()</p>

<p class="NDLRefMemberDescription">Removes all the objects from
the object array, setting smart pointers to zero.</p>

<p class="NDLRefMemberFunction">unsigned int GetObjectCount()</p>

<p class="NDLRefMemberDescription">Get the total number of
objects in the array. The array is kept packed, so all of the
objects are non-zero.</p>

<p class="NDLRefMemberFunction">NiObject* GetObjectAt(unsigned
int uiIndex)</p>

<p class="NDLRefMemberDescription">Get an object out of the
shared data by index.</p>

<p class="NDLRefMemberFunction">NiString GetObjectName(NiObject*
pkObj)</p>

<p class="NDLRefMemberDescription">Returns the stored name of the
specified object.</p>

<p class="NDLRefMemberFunction">bool IsObjectStreamable(NiObject*
pkObj)</p>

<p class="NDLRefMemberDescription">Returns whether or not the
specified object is streamable.</p>

<p class="NDLRefHead1">Notes</p>

<p>A shared data object of this type is not created until
required by a ToolPlugin, so always test that one exists before
using it and explicitly add it if it doesn't. And don't add a new
instance if one already exists.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Introduction to NiMaterialNodeXMLLibraryReader</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Introduction to NiMaterialNodeXMLLibraryReader</h1>

<p>This library uses the TinyXML parser system to create an
<span class="NDLSystemFont">NiMaterialNodeLibrary</span> from an
XML file. The supported format for a node library in an XML file
is as follows in hierarchical order:</p>

<ul>
    <li>A &lt;library&gt; tag. The version field is required.

        <ul>
            <li>One or more &lt;fragment&gt; tags, with the type
            and name fields. This indicates the addition of a new
            fragment to the library. The type may be any
            combination of "Vertex", "Pixel", and "Geometry" with
            the forward slash character as a delimiter.

                <ul>
                    <li>One &lt;desc&gt; tag, with no fields.
                    This describes the current fragment. Any
                    arbitrary description string is supported in
                    the body of this tag.</li>

                    <li>One &lt;input&gt; tag, with no fields.
                    This describes all of the input resources for
                    the current fragment.

                        <ul>
                            <li>Some number of &lt;resource&gt;
                            tags. This describes a resource input
                            to this fragment. There are several
                            supported fields. The type can be one
                            of the following: "float", "float2",
                            "float3", "float4", "float3x3",
                            "float4x4", "sampler", "int", "uint",
                            and "bool". The semantic and label
                            fields are used to provide a logical
                            description of what the resource
                            controls in the fragment. The
                            variable field is required and
                            describes the name of the input
                            variable. The default field is
                            optional and describes the default
                            value for this resource. All default
                            fields enclose their string values in
                            parentheses.</li>
                        </ul>
                    </li>

                    <li>One &lt;output&gt; tag, with no fields.
                    This describes all of the output resources
                    for the current fragment.

                        <ul>
                            <li>Some number of &lt;resource&gt;
                            tags. This describes a resource
                            output of this fragment. There are
                            several supported fields. The type
                            can be one of the following: float,
                            float2, float3, float4, float3x3,
                            float4x4, sampler, int, uint, and
                            bool. The semantic and label fields
                            are used to provide a logical
                            description of what the resource
                            output means to the fragment. The
                            variable field is required and
                            describes the name of the input
                            variable. The default field is NOT
                            supported.</li>
                        </ul>
                    </li>

                    <li>Some number of &lt;code&gt; tags. These
                    tags represent the actual code snippets for
                    the fragment. This tag supports several
                    fields. The "lang" field indicates which
                    high-level shader languages can compile this
                    fragment. Supported values are "Cg" and
                    "hlsl" and can be concatenated with a forward
                    slash. The "platform" field indicates which
                    Gamebryo platforms are supported by this code
                    snippet. Supported values are "DX9", "D3D10",
                    "D3D11", "Xenon", or "PS3" and can be concatenated
                    together using the forward slash character.
                    The "target" field indicates the minimum
                    shader model supported by this code snippet.
                    Supported values are "vs_1_1", "vs_2_0",
                    "vs_2_a", "vs_3_0", "vs_4_0", "gs_4_0",
                    "ps_1_1", "ps_2_0", "ps_2_a", "ps_2_b",
                    "ps_3_0", and "ps_4_0".</li>
                </ul>
            </li>
        </ul>
    </li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

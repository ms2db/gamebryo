<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiRoomGroup</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiRoomGroup</p>

<p class="NDLRefParentage">: public <span><a href=
"../../Reference/NiMain/NiNode.htm">NiNode</a></span></p>

<p class="NDLRefHeaderFile">&lt;NiRoomGroup.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>An <span class="NDLSystemFont">NiRoomGroup</span> object
represents a set of connected rooms (such as a game "level"). The
<span class="NDLSystemFont">NiRoomGroup</span> object serves as a
"gatekeeper" to the set of rooms, as processing a room group for
drawing causes the currently visible parts of the set of rooms to
be processed. The room group also automatically processes the
"shell" object that represents the exterior of the set of rooms
(if such an exterior exists) if the camera is not contained in
any of the rooms in the group.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiRoomGroup()</p>

<p class="NDLRefMemberDescription">Default constructor.
Constructs an empty room group. See "Notes" for details.</p>

<p class="NDLRefHead1">Supported Static Functions</p>

<p class="NDLRefMemberFunction">bool GetPortallingDisabled()</p>

<p class="NDLRefMemberFunction">void SetPortallingDisabled(bool
bIsDisabled)</p>

<p class="NDLRefMemberDescription">Get and set whether or not to
render using portalling. This option is useful in tools so that
you can see the entire level without having to carefully fly
around inside the portals and rooms.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction"><a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObjectPtr</a>
GetShell() const</p>

<p class="NDLRefMemberDescription">Retrieves the shell object
that represents the room group as seen from the "outside".</p>

<p class="NDLRefMemberFunction">void AttachShell(<a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObject</a>*
pkShell)</p>

<p class="NDLRefMemberDescription">Sets the shell object, which
is the object to be rendered if the camera is
outside the group of rooms.</p>

<p class="NDLRefMemberFunction"><a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObjectPtr</a>
DetachShell()</p>

<p class="NDLRefMemberDescription">Detaches and returns a smart
pointer to the shell object.</p>

<p class="NDLRefMemberFunction">const NiRoomList&amp;
GetRoomList() const</p>

<p class="NDLRefMemberDescription">Returns a const (read-only)
list of all rooms in the room group. An <span class=
"NDLSystemFont">NiRoomList</span> object is defined in
<span class="NDLSystemFont">NiRoom.h</span> as <span class=
"NDLSystemFont"><a href=
"../../Reference/NiMain/NiTPointerList.htm">NiTPointerList</a>&lt;<a href="NiRoom.htm">
NiRoomPtr</a>&gt;</span>.</p>

<p class="NDLRefMemberFunction">void AttachRoom(<a href=
"NiRoom.htm">NiRoom</a>* pkRoom)</p>

<p class="NDLRefMemberDescription">Attaches the given room to the
room group, unless the given room is <span class=
"NDLSystemFont">NULL</span>, or is already a member of the room
group.</p>

<p class="NDLRefMemberFunction"><a href=
"NiRoom.htm">NiRoomPtr</a> DetachRoom(<a href=
"NiRoom.htm">NiRoom</a>* pkRoom)</p>

<p class="NDLRefMemberDescription">Detaches the given room group
from the room and returns a smart pointer to the room. Returns
<span class="NDLSystemFont">NULL</span> if the room was not in
the room group.</p>

<p class="NDLRefMemberFunction"><a href=
"NiRoom.htm">NiRoomPtr</a> WhichRoom(const <a href=
"../../Reference/NiMain/NiPoint3.htm">NiPoint3</a>&amp; kPoint)
const</p>

<p class="NDLRefMemberFunction"><a href=
"NiRoom.htm">NiRoomPtr</a> WhichRoom(const <a href=
"../../Reference/NiMain/NiPoint3.htm">NiPoint3</a>&amp; kPoint,
<a href="NiRoom.htm">NiRoom</a>* pkLastRoom) const</p>

<p class="NDLRefMemberDescription">These functions return a smart
pointer to a room in the room group that contains the given
world-space point, or <span class="NDLSystemFont">NULL</span> if
no room in the room group contains the point. If more than one
room in the room group contains the point, then the library does
not guarantee any particular method for choosing between them.
The second version of the function will always check the given
room first&mdash;if the point is contained in the given room,
then that room is returned; otherwise, all rooms in the room
group are checked until an enclosing room is found.</p>

<p class="NDLRefMemberFunction"><a href=
"NiRoom.htm">NiRoomPtr</a> GetLastRoom() const</p>

<p class="NDLRefMemberDescription">Retrieves the pointer to the
room containing the camera center at the time of the last culling
pass that traversed the room group. This function returns
<span class="NDLSystemFont">NULL</span> if the last camera used
when culling the room group was found to be outside of all of the
rooms in the room group (i.e. the shell was visible, not the
interior). As a common performance optimization, this room will
be the first room to be checked against the camera position the
next time the room group is processed.</p>

<p class="NDLRefMemberFunction">void SetLastRoom(<a href=
"NiRoom.htm">NiRoom</a>* pkLastRoom)</p>

<p class="NDLRefMemberDescription">Allows the application to set
the "last room" pointer manually. This can increase performance
if the application has prior knowledge of the room that contains
the camera. The portals system also sets this value internally,
but does so only during a culling pass, allowing applications to
overwrite this value (if desired) at any time between the two
culling passes.</p>

<p class="NDLRefHead1">Notes</p>

<p class="NDLRefHead2"><a href=
"../../Reference/NiMain/NiAccumulator.htm">NiAccumulator</a>
Sorters and Rooms</p>

<p>Sorting (accumulators) can change the order in which leaf
geometry objects are rendered with respect to the order
originally generated by culling, so applications relying on room
groups to control draw ordering should take care when using
sorting via accumulators. Because portal-based culling occurs
well prior to accumulation, there is no direct interaction
between the systems.</p>

<p class="NDLRefHead2">The Shell Object and Determining the
Current Room</p>

<p>The behavior of the <span class=
"NDLSystemFont">NiRoomGroup</span> system when the current camera
does not fall within any of the <span class=
"NDLSystemFont"><a href="NiRoom.htm">NiRoom</a></span> objects in
a <span class="NDLSystemFont">NiRoomGroup</span> object is
dependent upon the existence of a shell for the group. If the
<span class="NDLSystemFont">NiRoomGroup</span> object contains a
non-<span class="NDLSystemFont">NULL</span> shell object, then
the shell will be drawn when the camera location is found to be
outside of all of the rooms in the room group. This is the case
that is used by applications that intend to enter and exit the
room group, which is representing an entire building. If there is
no shell object, however, the room group will use the last valid
room that contained the camera. This mode may be used by
applications that intend to use the room group system for
interior-only scenes. The benefit of this mode is that in cases
where room walls do not line up perfectly, "flashing" that occurs
when the camera location falls in the tiny gap between rooms is
eliminated.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

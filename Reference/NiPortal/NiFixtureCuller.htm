<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiFixtureCuller</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiFixtureCuller</p>

<p class="NDLRefParentage">: public <u><a href=
"../../Reference/NiMesh/NiMeshCullingProcess.htm">NiMeshCullingProcess</a></u></p>

<p class="NDLRefHeaderFile">&lt;NiFixtureCuller.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>The <span class="NDLSystemFont">NiFixtureCuller</span> behaves
exactly like <span class="NDLSystemFont"><a href=
"../../Reference/NiMesh/NiMeshCullingProcess.htm">NiMeshCullingProcess</a></span>,
with one important difference. Portals can end up adding the same
geometry object to a culling process object multiple times within
a single culling pass. For example, a piece of geometry in a room
may be seen from another room through multiple windows. This
could lead to the same object being rendered multiple times in
the same frame. This can cause performance issues or even
rendering artifacts (if the object is alpha blended). The
<span class="NDLSystemFont">NiFixtureCuller</span> class avoids
this by keeping an <a href=
"../../Reference/NiMain/NiTMap.htm"><span class=
"NDLSystemFont">NiTMap</span></a> of the objects seen over the
course of a culling pass. If an object is passed to the
<span class="NDLSystemFont">NiFixtureCuller</span> object as
visible but already appears in the map, it is not added to the
visible array. However, if the object is not already in the map,
then it is added to the map and appended to the visible array.
This ensures that each object gets rendered at most once per
culling pass.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiFixtureCuller(<a href=
"../../Reference/NiFloodgate/NiSPWorkflowManager.htm">NiSPWorkflowManager</a>*
pkWorkflowManager)</p>

<p class="NDLRefMemberDescription">The constructor initializes
the base class with <span class=
"NDLSystemFont">bUseVirtualAppend</span> as true, since the
culling process overrides <span class=
"NDLSystemFont">AppendVirtual</span>.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p>The member functions listed below are protected. They are
listed to provide insight to the user on what methods to override
when creating subclasses of the <span class=
"NDLSystemFont">NiMeshCullingProcess</span> class.</p>

<p class="NDLRefMemberFunction">void Process(const <a href=
"../../Reference/NiMain/NiCamera.htm">NiCamera</a>* pkCamera,
<a href="../../Reference/NiMain/NiAVObject.htm">NiAVObject</a>*
pkScene, <a href=
"../../Reference/NiMain/NiVisibleArray.htm">NiVisibleArray</a>*
pkVisibleSet)</p>

<p class="NDLRefMemberDescription">This function clears the map
of objects that have already been rendered this call and then
calls the base class version of the function.</p>

<p class="NDLRefMemberFunction">void AppendVirtual(<a href=
"../../Reference/NiMain/NiRenderObject.htm">NiRenderObject</a>&amp;
kVisible)</p>

<p class="NDLRefMemberDescription">This override does as is
described above - if the given leaf geometry object has already
been seen during this <span class="NDLSystemFont">Process</span>
pass, then it is skipped. If this is the first time the object
has been seen in this <span class="NDLSystemFont">Process</span>
pass, then the object is added to the visible array and is
recorded in the map as having been seen.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

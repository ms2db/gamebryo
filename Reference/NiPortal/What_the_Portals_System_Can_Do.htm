<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>What the Portals System Can Do</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>What the Portals System Can Do</h1>

<p>The Gamebryo portals module is designed to allow applications
to render and manage large interior datasets. The module uses
portal technology to cull geometry against not only the edges of
the screen, but also against doorways and windows in the scene.
The figure below shows a simple case. The floor plan of a simple,
two-room scene is shown. If this scene were to be culled by the
standard scene graph culling process, both rooms would be visible
in their entirety, including the hidden objects in the far room
(left figure). Using the portals module, the geometry in the far
room is culled against a smaller view rectangle&mdash;one that
tightly bounds the doorway edges (right figure). While the two
versions of the scene will look exactly the same on the screen,
the cell-portal version can be rendered at higher performance,
due to the decreased geometric and depth complexity.</p>

<div class="FigureContainer">
    <img src="images/image002.gif" width="362" height="247" alt=
    "image002 (8K)"> 
    <!-- <p class="FigureCaption">{Figure caption}</p> -->
</div>

<p>This extra culling can quickly skip large parts of a scene
graph that are not visible, even if they fall within the standard
view volume. Effective performance is thus dependent upon the
complexity of the parts of the scene that are visible at a given
time, not upon the complexity of the entire scene graph.
Invisible sections of the scene graph are rarely even visited,
making expansive interior scenes as efficient as simple ones.</p>

<p>Limiting depth complexity through culling is extremely
important for both hardware and software rendering, as
applications become fill limited and geometry limited rather
quickly. The portals module consists of a set of Gamebryo scene
graph objects that manage an interior dataset and allow the
application to represent interiors as rooms connected by portals.
This forms a sort of high-level "visibility graph" of rooms and
doorways that allows Gamebryo to render the interior dataset by
traversing only the visible parts of the scene graph. If the
rendering starts at the room containing the camera, then the only
way that any other rooms in the dataset can be drawn is if there
is some visible path into that room via a series of portals.</p>

<p>Next: <a href="What_the_Portals_System_Cannot_Do.htm">What the
Portals System Cannot Do</a></p>

<p>Previous: <a href="Portals_Benefits.htm">Portals
Benefits</a></p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

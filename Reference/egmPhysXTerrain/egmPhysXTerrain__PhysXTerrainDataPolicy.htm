<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egmPhysXTerrain::PhysXTerrainDataPolicy</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egmPhysXTerrain::PhysXTerrainDataPolicy</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiTerrainPhysX/NiTerrainPhysXDataPolicy.htm">NiTerrainPhysXDataPolicy</a></span></p>


<p class="NDLRefHeaderFile">&lt;PhysXTerrainDataPolicy.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegm_phys_x_terrain_1_1_phys_x_terrain_data_policy.gif" alt="Inheritance graph for egmPhysXTerrain::PhysXTerrainDataPolicy"/>
  <p class="FigureCaption">Inheritance graph for egmPhysXTerrain::PhysXTerrainDataPolicy</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Class defining how to load and save custom physx data as part of the terrain dof file. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegm_phys_x_terrain_1_1_phys_x_terrain_data_policy_1a84c42a6f8e97e04731d4c4723573a4a7"></a>
<p class="NDLRefMemberFunction">PhysXTerrainDataPolicy(<br/><span class="NDLSystemFont"><a href="../ecrPhysX/ecrPhysX__PropService.htm">ecrPhysX::PropService</a></span>* pPropService, <br/><span class="NDLSystemFont"><a href="../NiTerrainPhysX/NiTerrainPhysXUtils.htm">NiTerrainPhysXUtils</a></span>* pUtils, <br/><span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span> sceneName)</p>
<p class="NDLRefMemberDescription">Initialization constructor. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pPropService</span></td>
    <td>reference to the prop service. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pUtils</span></td>
    <td>the <span class="NDLSystemFont"><a href="../NiTerrainPhysX/NiTerrainPhysXUtils.htm">NiTerrainPhysXUtils</a></span> that will create the physx data for the terrain </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">sceneName</span></td>
    <td>the name of the scene the terrain is associated to. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_phys_x_terrain_1_1_phys_x_terrain_data_policy_1a7f5c021faae4216ca6d5bb428aaa384f"></a>
<p class="NDLRefMemberFunction">~PhysXTerrainDataPolicy()</p>
<p class="NDLRefMemberDescription">Destrcutor. </p>
<a name="niterrainphysxdatapolicy_overrides."></a>
<p class="NDLRefHead1">NiTerrainPhysXDataPolicy overrides.</p>

<p class="NDLRefMemberDescription"></p>
<p class="NDLRefMemberDescription"><span class="NDLSystemFont"><a href="../NiTerrainPhysX/NiTerrainPhysXDataPolicy.htm">NiTerrainPhysXDataPolicy</a></span></p>

<a name="classegm_phys_x_terrain_1_1_phys_x_terrain_data_policy_1aa505c89ce8b053b9704114531cfae048"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  CreatePhysXData(<span class="NDLSystemFont"><a href="../NiTerrain/NiTerrainSector.htm">NiTerrainSector</a></span>* pkSector)</p>
<p class="NDLRefMemberDescription">Creates the physx actors and materials for the given sector. </p>

<a name="classegm_phys_x_terrain_1_1_phys_x_terrain_data_policy_1a0b7081a25965286ad75fb9200fcd2d1d"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  DeletePhysXData()</p>
<p class="NDLRefMemberDescription">Release actors marked for release. </p>

<a name="classegm_phys_x_terrain_1_1_phys_x_terrain_data_policy_1abf02fd7b2103ce92bcdb23eacae23e44"></a>
<p class="NDLRefMemberFunction">virtual void  ClearSceneActors()</p>
<p class="NDLRefMemberDescription">Remove all actors from the scene. </p>

<a name="classegm_phys_x_terrain_1_1_phys_x_terrain_data_policy_1a0e71e452aa116488ee57c3ad13f38a90"></a>
<p class="NDLRefMemberFunction">virtual void  ProcessPendingData()</p>
<p class="NDLRefMemberDescription">Attemps to load actors and materials for pending data in a thread safe location. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

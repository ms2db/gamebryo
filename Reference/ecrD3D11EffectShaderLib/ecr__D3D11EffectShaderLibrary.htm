<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ecr::D3D11EffectShaderLibrary</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">ecr::D3D11EffectShaderLibrary</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../ecrD3D11Renderer/ecr__D3D11ShaderLibrary.htm">ecr::D3D11ShaderLibrary</a></span></p>


<p class="NDLRefHeaderFile">&lt;D3D11EffectShaderLibrary.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classecr_1_1_d3_d11_effect_shader_library.gif" alt="Inheritance graph for ecr::D3D11EffectShaderLibrary"/>
  <p class="FigureCaption">Inheritance graph for ecr::D3D11EffectShaderLibrary</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal"><span class="NDLSystemFont">D3D11EffectShaderLibrary</span> is the D3D11-specific shader library that manages FX shaders. </p>
<p class="NDLNormal">The library will create D3D11EffectShader objects for shaders found loaded from FX files through the Effects11 framework.</p>
<p class="NDLNormal">Applications that link in <span class="NDLSystemFont">D3D11EffectShaderLibrary</span> using static libraries should use the function D3D11EffectShaderLib_LoadShaderLibrary, found in <span class="NDLSystemFont">D3D11EffectShaderLib.h</span>.</p>
<p class="NDLNormal">For information on how applications can use the library, refer to the documentation on "Linking and using the NiD3DXEffectShaderLib" and "Using the NiD3D10EffectShaderLib and     ecrD3D11EffectShaderLib" for D3D10 and D3D11-specific addenda. </p>

<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classecr_1_1_d3_d11_effect_shader_library_1a7b9cb8ba16e9e02e113fc76433e63ab6"></a>
<p class="NDLRefMemberFunction">virtual ~D3D11EffectShaderLibrary()</p>
<p class="NDLRefMemberDescription">Destructor. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classecr_1_1_d3_d11_effect_shader_library_1a42ade8d76f64d367aff6a188b9fd0a19"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">D3D11EffectShaderLibrary</span>*  Create(<br/><span class="NDLSystemFont"><a href="../NiMain/NiRenderer.htm">NiRenderer</a></span>* pRenderer, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> directoryCount, <br/>const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1add86b31b043c249b287806395efeecd4">efd::Char</a></span>* ppDirectories, <br/><span class="NDLSystemFont">efd::Bool</span> recurseSubFolders)</p>
<p class="NDLRefMemberDescription">Create an instance of the <span class="NDLSystemFont">D3D11EffectShaderLibrary</span>. </p>
<p class="NDLRefMemberDetailedDescription">After the library is created, the function searches for FX files, loads them, and adds them to the library's list of available shaders.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pRenderer</span></td>
    <td>Current renderer. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">directoryCount</span></td>
    <td>Number of directories in the ppDirectories array. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">ppDirectories</span></td>
    <td>Array of directories to search for shaders. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">recurseSubFolders</span></td>
    <td>Whether or not to recursively search the directories specified in ppDirectories. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The new library, if creation succeeded, otherwise NULL. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classecr_1_1_d3_d11_effect_shader_library_1a8fb12156f147b3c13b2aa4843ec829b7"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../NiMain/NiShader.htm">NiShader</a></span>*  GetShader(<br/><span class="NDLSystemFont"><a href="../NiMain/NiRenderer.htm">NiRenderer</a></span>* pRenderer, <br/>const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1add86b31b043c249b287806395efeecd4">efd::Char</a></span>* pName, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> implementation)</p>
<p class="NDLRefMemberDescription">Return a specific shader, creating it it necessary, or return NULL if the shader library cannot create a shader with the given name and implementation. </p>

<a name="classecr_1_1_d3_d11_effect_shader_library_1a71ccfc4518f178bddc5bdbd0531f5822"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">efd::Bool</span>  ReleaseShader(<br/>const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1add86b31b043c249b287806395efeecd4">efd::Char</a></span>* pName, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> implementation)</p>
<p class="NDLRefMemberDescription">Release the shader library's reference to the given shader, and return whether or not the shader library had a reference to that shader. </p>

<a name="classecr_1_1_d3_d11_effect_shader_library_1a00c3dcd0c424d2c1a5d15f1e47706bd0"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">efd::Bool</span>  ReleaseShader(<span class="NDLSystemFont"><a href="../NiMain/NiShader.htm">NiShader</a></span>* pShader)</p>
<p class="NDLRefMemberDescription">Release the shader library's reference to the given shader, and return whether or not the shader library had a reference to that shader. </p>

<a name="classecr_1_1_d3_d11_effect_shader_library_1a29354b2e58ac1e519d2da6b69a7bb8e3"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  LoadEffect(<br/>void* pBuffer, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> bufferSize, <br/>const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1add86b31b043c249b287806395efeecd4">efd::Char</a></span>* pEffectFileName)</p>
<p class="NDLRefMemberDescription">Load an FX shader from the memory buffer, and return whether or not the load was successful. </p>

<a name="classecr_1_1_d3_d11_effect_shader_library_1a8051ec0b97c44e420635cafe936c37d1"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetNumSupportedMimeTypes() const</p>
<p class="NDLRefMemberDescription">Return the number of mime types the shader library supports. </p>

<a name="classecr_1_1_d3_d11_effect_shader_library_1a6fe8e04d01f326753b30882c7086e223"></a>
<p class="NDLRefMemberFunction">virtual const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1add86b31b043c249b287806395efeecd4">efd::Char</a></span>*  GetSupportedMimeType(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> index) const</p>
<p class="NDLRefMemberDescription">Return one of the mime types the shader library supports. </p>

<a name="classecr_1_1_d3_d11_effect_shader_library_1a8cb7d37fc9ed3acebd8be8a9550f28c7"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">efd::Bool</span>  LoadShader(const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1add86b31b043c249b287806395efeecd4">efd::Char</a></span>* pFile)</p>
<p class="NDLRefMemberDescription">Load an FX shader from the indicated file, and return whether or not the load was successful. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

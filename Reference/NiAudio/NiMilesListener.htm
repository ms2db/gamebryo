<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiMilesListener</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiMilesListener</p>

<p class="NDLRefParentage">: public <u><span><a href=
"NiAudioListener.htm">NiAudioListener</a></span></u></p>

<p class="NDLRefHeaderFile"><span class=
"NDLSystemFont">&lt;NiMilesListener.h&gt;</span></p>

<p class="NDLRefHead1">Description</p>

<p>The <span class="NDLSystemFont">NiMilesListener</span> class
is used to represent the sound-receiving object of the
application. Like <span class="NDLSystemFont"><a href=
"NiMilesAudioSystem.htm">NiMilesAudioSystem</a></span>, there is
a single instance of the <span class=
"NDLSystemFont">NiMilesListener</span> object in an audio-enabled
Gamebryo application. This instance is created automatically at
application startup by the audio system and is accessed with
methods available through the audio system.</p>

<p><span class="NDLSystemFont">NiMilesListener</span> is
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObject</a></span>
derived, allowing it to be attached within a Gamebryo scene graph
for transformation. The world space location and orientation of
the listener object is used by the audio system during audio
rendering.</p>

<p class="NDLRefHead1">Constructors</p>

<p>There are no publicly available constructors or destructors
for <span class="NDLSystemFont">NiMilesListener</span>. The
single listener object is created automatically with the audio
system. The listener's instance can be accessed using the
<span class=
"NDLSystemFont">NiMilesAudioSystem::GetListener()</span>
method.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual void Startup()</p>

<p class="NDLRefMemberDescription">Startup() will initialize the
listener and prepare it for operation with the audio system.</p>

<p class="NDLRefMemberFunction">virtual void
SetDirectionVector(const NiPoint3&amp; kDir)</p>

<p class="NDLRefMemberFunction">virtual const NiPoint3&amp;
GetDirectionVector() const</p>

<p class="NDLRefMemberFunction">virtual void SetUpVector(const
NiPoint3&amp; kUp)</p>

<p class="NDLRefMemberFunction">virtual const NiPoint3&amp;
GetUpVector() const</p>

<p class="NDLRefMemberDescription">The listener requires a
coordinate frame to describe its orientation, so like a camera,
the "listener space" direction and up vectors can be set. These
four functions give access to these model-space vectors.</p>

<p class="NDLRefMemberFunction">virtual void Update()</p>

<p class="NDLRefMemberDescription">This function updates Miles
with the status of the listener. The listener's world-space
orientation and location are updated in the Miles system with
every call to <span class="NDLSystemFont">Update()</span>. This
function should be called any time the listener is moved. It can
be called automatically by <span class=
"NDLSystemFont">NiMilesAudioSystem::Update()</span> if that
function has its <span class="NDLSystemFont">bUpdateAll</span>
parameter set to <span class="NDLSystemFont">true</span>.</p>

<p class="NDLRefMemberFunction">virtual NiPoint3
GetPosition()</p>

<p class="NDLRefMemberFunction">virtual NiPoint3
GetVelocity()</p>

<p class="NDLRefMemberFunction">virtual void
GetOrientation(NiPoint3 kDir, NiPoint3 kUp)</p>

<p class="NDLRefMemberDescription">These three functions query
the internal state of the listener. Typically, the Gamebryo
state information maintained by <span class=
"NDLSystemFont">NiMilesListener</span> itself or its <span class=
"NDLSystemFont"><a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObject</a></span>
functionality should be sufficient. However, there may be cases
where these methods are needed.</p>

<p class="NDLRefHead1">Notes</p>

<p class="NDLRefHead2">NIF Streaming:</p>

<p><span class="NDLSystemFont">NiMilesListener</span> is
responsible for ensuring that any <span class=
"NDLSystemFont"><a href=
"NiMilesAudioSystem.htm">NiMilesAudioSystem</a></span> data is
streamed. If an application wants to guarantee that the audio
system is saved (or loaded later), it must be certain either to
have the listener in a scene graph to be streamed or as a
top-level object inserted with the stream.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiAudioListener</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiAudioListener</p>

<p class="NDLRefParentage">: public <span><a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObject</a></span></p>

<p class="NDLRefHeaderFile"><span class=
"NDLSystemFont">&lt;NiAudioListener.h&gt;</span></p>

<p class="NDLRefHead1">Description</p>

<p>The <span class="NDLSystemFont">NiAudioListener</span> class
is used to represent the sound-receiving object of the
application. As with <span class="NDLSystemFont"><a href=
"NiAudioSystem.htm">NiAudioSystem</a></span>, there is a single
instance of the <span class=
"NDLSystemFont">NiAudioListener</span> object in an audio-enabled
Gamebryo application. This instance is created automatically at
application startup by the audio system, and is accessed via
methods available through the audio system.</p>

<p><span class="NDLSystemFont">NiAudioListener</span> is derived
from <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObject</a></span>,
enabling it to be attached within a Gamebryo scene graph for
transformation. The world space location and orientation of the
listener object is used by the audio system during audio
rendering.</p>

<p class="NDLRefHead1">Constructors</p>

<p>There are no publicly available constructors or destructors
for <span class="NDLSystemFont">NiAudioListener</span>. The
single listener object is created automatically with the audio
system. The listener's instance can be accessed using the
<span class="NDLSystemFont">NiAudioSystem::GetListener()</span>
method.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual void Startup() = 0</p>

<p class="NDLRefMemberDescription">Startup will initialize the
listener and prepare it for operation with the audio system.</p>

<p class="NDLRefMemberFunction">virtual void
SetDirectionVector(const <a href=
"../../Reference/NiMain/NiPoint3.htm">NiPoint3</a>&amp; kDir) =
0</p>

<p class="NDLRefMemberFunction">virtual const <a href=
"../../Reference/NiMain/NiPoint3.htm">NiPoint3</a>&amp;
GetDirectionVector() const</p>

<p class="NDLRefMemberFunction">virtual void SetUpVector(const
<a href="../../Reference/NiMain/NiPoint3.htm">NiPoint3</a>&amp;
kUp) = 0</p>

<p class="NDLRefMemberFunction">virtual const <a href=
"../../Reference/NiMain/NiPoint3.htm">NiPoint3</a>&amp;
GetUpVector() const</p>

<p class="NDLRefMemberDescription">The listener requires a
coordinate frame to describe its orientation, so, as with a
camera, the "listener space" direction and up vectors can be set.
These four functions provide access to these model-space
vectors.</p>

<p class="NDLRefMemberFunction">virtual void Update() = 0</p>

<p class="NDLRefMemberDescription">This function updates the
sound system with the status of the listener. The listener's
world-space orientation and location are updated in the sound
system with every call to <span class=
"NDLSystemFont">Update</span>. This function should be called any
time the listener is moved. It can be called automatically by
<span class="NDLSystemFont">NiAudioSystem::Update()</span> if
that function has its <span class=
"NDLSystemFont">bUpdateAll</span> parameter set to <span class=
"NDLSystemFont">true</span> .</p>

<p class="NDLRefMemberFunction">virtual <a href=
"../../Reference/NiMain/NiPoint3.htm">NiPoint3</a> GetPosition()
= 0</p>

<p class="NDLRefMemberFunction">virtual <a href=
"../../Reference/NiMain/NiPoint3.htm">NiPoint3</a> GetVelocity()
= 0</p>

<p class="NDLRefMemberFunction">virtual void
GetOrientation(NiPoint3 kDir, NiPoint3 kUp) = 0</p>

<p class="NDLRefMemberDescription">These three functions query
the internal state of the listener. Typically, the Gamebryo state
information maintained by <span class=
"NDLSystemFont">NiAudioListener</span> itself or its <span class=
"NDLSystemFont"><a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObject</a></span>
functionality should be sufficient. However, there may be cases
where these methods are needed.</p>

<p class="NDLRefHead1">Notes</p>

<p class="NDLRefHead2">NIF Streaming</p>

<p><span class="NDLSystemFont">NiAudioListener</span> is
responsible for ensuring that any <span class=
"NDLSystemFont"><a href=
"NiAudioSystem.htm">NiAudioSystem</a></span> data is streamed. If
an application wants to guarantee that the audio system is saved
(or loaded later), it must be certain either to have the listener
in a scene graph to be streamed or as a top-level object inserted
with the stream.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

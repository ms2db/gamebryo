<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>bapiCoreRuntime Namespace</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">bapiCoreRuntime Namespace</p>





<a name="private_methods"></a>
<p class="NDLRefHead1">Private Methods</p>


<a name="namespacebapi_core_runtime_1a4f67033563a1dcba74fc7e829dc6d26b"></a>
<p class="NDLRefMemberFunction">EE_ECR_ENTRY <span class="NDLSystemFont">bool</span>  AttachEntity(<br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> i_entityToAttachID, <br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> i_entityTargetID, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& i_nodeToAttachAt, <br/><span class="NDLSystemFont">bool</span> i_inheritScale)</p>
<p class="NDLRefMemberDescription">A script may call this method to attach one entity to another, at a particular scene graph node location. </p>
<p class="NDLRefMemberDetailedDescription">Internally, the entity to attach is set to have it's Placeable model updated using the transform of the given scene grpah node on the target entity. This function will fail if a circular dependency is created (an entity is attached to itself, for instance).</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_entityToAttachID</span></td>
    <td>The ID of the entity to be attached. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_entityTargetID</span></td>
    <td>The ID of the entity to attach to. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_nodeToAttachAt</span></td>
    <td>The name of the scene graph node to attach to. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_inheritScale</span></td>
    <td>When true, the scale of the attached entity inherited from the node to which it is attached. When false, the attached entity uses its own scale. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>False if either entity is not found, the target does not have a scene graph, the named node is not found, or a dependency causes failure. True if the attachment succeeded. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_core_runtime_1a0125e301958ddc7d545be5a8d1d4f686"></a>
<p class="NDLRefMemberFunction">EE_ECR_ENTRY <span class="NDLSystemFont">bool</span>  DetachEntity(<br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> i_entityToDetachID, <br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> i_entityTargetID, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& i_nodeToDetachFrom)</p>
<p class="NDLRefMemberDescription">A script may call this method to detach a previously attached entity. </p>
<p class="NDLRefMemberDetailedDescription">The entity must have previously attached using AttachEntity, and the node name must match the attach call.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_entityToDetachID</span></td>
    <td>The ID of the entity that was attached (i_entityToAttachID from the AttachEntity call). </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_entityTargetID</span></td>
    <td>The ID of the entity to detach from. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_nodeToDetachFrom</span></td>
    <td>The name of the scene graph node to which the entity is attached. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>False if the entity is not found or the attempt to detach otherwise fails (due to a lack of existing attachment, most likely); otherwise true. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_core_runtime_1ad26732b6296f762a10e184f09bf6a83e"></a>
<p class="NDLRefMemberFunction">EE_ECR_ENTRY <span class="NDLSystemFont">bool</span>  AttachSceneGraph(<br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> entityID, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& attachmentKey, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& assetURN)</p>
<p class="NDLRefMemberDescription">A script may call this method to attach a scene graph to an entity at a particular location. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">entityID</span></td>
    <td>The entity to attach to. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">attachmentKey</span></td>
    <td>The attachmentKey must be one of the keys on the AttachedObjects map property of the entity. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">assetURN</span></td>
    <td>The urn for the asset to attach at the location determined by the attachmentKey. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>False is returned if the entity is not found, the key is invalid, or the URN is invalid. The attachment is not guaranteed to occur even when true is returned, because errors from loading the asset may be delayed. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_core_runtime_1a9eb0069209c4e7f2de54470f02d0004e"></a>
<p class="NDLRefMemberFunction">EE_ECR_ENTRY <span class="NDLSystemFont">bool</span>  DetachSceneGraph(<br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> entityID, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& attachmentKey)</p>
<p class="NDLRefMemberDescription">A script may call this method to detach a scene graph from an entity at a particular location. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">entityID</span></td>
    <td>The entity to attach to. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">attachmentKey</span></td>
    <td>The attachmentKey must be one of the keys on the AttachedObjects map property of the entity. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>False if the entity is not found, the key is invalid, or there is no attached asset at that location. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_core_runtime_1a5b0645b5b85a08f60b25bcb150b1ceaa"></a>
<p class="NDLRefMemberFunction">EE_ECR_ENTRY <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>  GetAttachedSceneGraph(<br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> entityID, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& attachmentKey)</p>
<p class="NDLRefMemberDescription">A script may call this method to query the URN of the scene graph attached to an entity at a particular location. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">entityID</span></td>
    <td>The entity to query. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">attachmentKey</span></td>
    <td>The attachmentKey must be one of the keys on the AttachedObjects map property of the entity. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The URN of the attached scene graph. The empty string is returned on error or if nothing is attached. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_core_runtime_1af84616819f2a6982eee7e94c77711a72"></a>
<p class="NDLRefMemberFunction">EE_ECR_ENTRY <span class="NDLSystemFont">bool</span>  SetAttachmentOffset(<br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> entityID, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& attachmentKey, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& offset)</p>
<p class="NDLRefMemberDescription">A script may call this method to modify the translation offset applied to an attached asset. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">entityID</span></td>
    <td>The entity with this attachment. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">attachmentKey</span></td>
    <td>The attachmentKey must be one of the keys on the AttachedObjects map property of the entity. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">offset</span></td>
    <td>The new translation offset. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True on success. False if the entity is not found or the key is invalid. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_core_runtime_1ade59d1ec839cd43163aee427325c3931"></a>
<p class="NDLRefMemberFunction">EE_ECR_ENTRY <span class="NDLSystemFont">bool</span>  SetAttachmentRotation(<br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> entityID, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& attachmentKey, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& rotation)</p>
<p class="NDLRefMemberDescription">A script may call this method to modify the rotation applied to an attached asset. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">entityID</span></td>
    <td>The entity with this attachment. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">attachmentKey</span></td>
    <td>The attachmentKey must be one of the keys on the AttachedObjects map property of the entity. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">rotation</span></td>
    <td>The new rotation (given in Euler angles.) </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True on success. False if the entity is not found or the key is invalid. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_core_runtime_1a541d178aebad677ae1d7f70d7e64c88a"></a>
<p class="NDLRefMemberFunction">EE_ECR_ENTRY <span class="NDLSystemFont">bool</span>  SetAttachmentScale(<br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> entityID, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& attachmentKey, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> scale)</p>
<p class="NDLRefMemberDescription">A script may call this method to modify the scale applied to an attached asset. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">entityID</span></td>
    <td>The entity with this attachment. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">attachmentKey</span></td>
    <td>The attachmentKey must be one of the keys on the AttachedObjects map property of the entity. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">scale</span></td>
    <td>The new scale for this attachment. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True on success. False if the entity is not found or the key is invalid. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_core_runtime_1a95faaad4d6e1af120678a39fd740c5c0"></a>
<p class="NDLRefMemberFunction">EE_ECR_ENTRY <span class="NDLSystemFont">bool</span>  GetAttachmentOffset(<br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> i_entityID, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& i_attachmentKey, <br/><span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>* o_offset)</p>
<p class="NDLRefMemberDescription">A script may call this method to obtain the translation offset applied to an attached asset. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_entityID</span></td>
    <td>The entity with this attachment. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_attachmentKey</span></td>
    <td>The attachmentKey must be one of the keys on the AttachedObjects map property of the entity. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_offset</span></td>
    <td>The queried translation offset. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True on success. False if the entity is not found or the key is invalid. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_core_runtime_1a0915c20baeb4cab3ccbd8e0628c53c45"></a>
<p class="NDLRefMemberFunction">EE_ECR_ENTRY <span class="NDLSystemFont">bool</span>  GetAttachmentRotation(<br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> i_entityID, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& i_attachmentKey, <br/><span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>* o_rotation)</p>
<p class="NDLRefMemberDescription">A script may call this method to obtain the rotation applied to an attached asset. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_entityID</span></td>
    <td>The entity with this attachment. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_attachmentKey</span></td>
    <td>The attachmentKey must be one of the keys on the AttachedObjects map property of the entity. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_rotation</span></td>
    <td>The queried translation offset (in Euler angles.) </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True on success. False if the entity is not found or the key is invalid. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_core_runtime_1a5eb2a692673b754b4f58898853dd56fe"></a>
<p class="NDLRefMemberFunction">EE_ECR_ENTRY <span class="NDLSystemFont">bool</span>  GetAttachmentScale(<br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> i_entityID, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& i_attachmentKey, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>* o_scale)</p>
<p class="NDLRefMemberDescription">A script may call this method to obtain the scale applied to an attached asset. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_entityID</span></td>
    <td>The entity with this attachment. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_attachmentKey</span></td>
    <td>The attachmentKey must be one of the keys on the AttachedObjects map property of the entity. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_scale</span></td>
    <td>The queried scale. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True on success. False if the entity is not found or the key is invalid. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_core_runtime_1a6501d17e03afb72dfcdacf15723cf755"></a>
<p class="NDLRefMemberFunction">EE_ECR_ENTRY <span class="NDLSystemFont">bool</span>  GetSceneGraphNodeTransform(<br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> i_entityID, <br/>const char* i_nodeName, <br/><span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>* o_position, <br/><span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>* o_rotation, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>* o_scale)</p>
<p class="NDLRefMemberDescription">A script may call this method to obtain the world transformation of a node within the primary scene graph associated with the given entity. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_entityID</span></td>
    <td>The entity with this attachment. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_nodeName</span></td>
    <td>The node to query. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_position</span></td>
    <td>The queried translation of this node. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_rotation</span></td>
    <td>The queried rotation (in Euler angles) of this node. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_scale</span></td>
    <td>The queried scale of this node. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True on success. False if the entity is not found, the entity does not have a scene graph, or the named node is not found. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_core_runtime_1af72748649dc3881c6a26ad68438f65db"></a>
<p class="NDLRefMemberFunction">EE_ECR_ENTRY <span class="NDLSystemFont">bool</span>  ClosestObjectOnRay(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& i_origin, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& i_direction, <br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span>* o_entityID, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>* o_distance)</p>
<p class="NDLRefMemberDescription">A script may call this method to find the closest object along a ray, and its distance from the ray origin. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_origin</span></td>
    <td>The origin of the ray. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_direction</span></td>
    <td>The direction of the ray. This need not be a unit vector, but must be non-zero. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_entityID</span></td>
    <td>Upon return, the closest entity along the ray. The return value will be the invalid entity ID if the ray does not hit any entity's scene graph. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_distance</span></td>
    <td>Upon return, the distance from the ray origin to the entity. This distance is in units of the ray's length. The intersection point of the ray and the entity can be found by computing origin + direction* distance. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if any entity is found along the ray. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_core_runtime_1a036e48eee8bdc2961bab4d1a9518c156"></a>
<p class="NDLRefMemberFunction">EE_ECR_ENTRY <span class="NDLSystemFont">bool</span>  DistanceToEntityAlongRay(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& i_origin, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& i_direction, <br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> i_entityID, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>* o_distance)</p>
<p class="NDLRefMemberDescription">A script may call this method to find the distance to a particular entity along a ray. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_origin</span></td>
    <td>The origin of the ray. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_direction</span></td>
    <td>The direction of the ray. This need not be a unit vector, but must be non-zero. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_entityID</span></td>
    <td>The Entity to look for along the ray. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_distance</span></td>
    <td>Upon return, the distance from the ray origin to the closest point on the entity. This distance is in units of the ray's length. The intersection point of the ray and the entity can be found by computing origin + direction* distance. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if any entity is found along the ray. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

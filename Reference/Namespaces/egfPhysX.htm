<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egfPhysX Namespace</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egfPhysX Namespace</p>





<a name="messagewrappers_from_scenemessage.h"></a>
<p class="NDLRefHead1">MessageWrappers from SceneMessage.h</p>


<a name="namespaceegf_phys_x_1a436b0a68016c9702b1495c67a59f3c71"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__MessageWrapper.htm">efd::MessageWrapper</a></span>&lt;<span class="NDLSystemFont"><a href="../egfPhysX/egfPhysX__SceneMessage.htm">SceneMessage</a></span>, efd::kMSGID_PhysXSceneAdded&gt;  SceneAddedMessage</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceegf_phys_x_1ab3b4d76637137e526cb47d9e945047c2"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__MessageWrapper.htm">efd::MessageWrapper</a></span>&lt;<span class="NDLSystemFont"><a href="../egfPhysX/egfPhysX__SceneMessage.htm">SceneMessage</a></span>, efd::kMSGID_PhysXSceneRemoving&gt;  SceneRemovingMessage</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceegf_phys_x_1aa0d9d6bcccf301ee3a6a12809ac8beb6"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__MessageWrapper.htm">efd::MessageWrapper</a></span>&lt;<span class="NDLSystemFont"><a href="../egfPhysX/egfPhysX__SceneMessage.htm">SceneMessage</a></span>, efd::kMSGID_PhysXSceneRemoved&gt;  SceneRemovedMessage</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceegf_phys_x_1a68343ab91ea8ab6defae9800a9b6ce18"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__MessageWrapper.htm">efd::MessageWrapper</a></span>&lt;<span class="NDLSystemFont"><a href="../egfPhysX/egfPhysX__SimulationMessage.htm">SimulationMessage</a></span>, efd::kMSGID_PhysXSceneSimulationStarting&gt;  StartSimulationMessage</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceegf_phys_x_1a90123a413d6e39f8c4ed80afd3e3e3c0"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__MessageWrapper.htm">efd::MessageWrapper</a></span>&lt;<span class="NDLSystemFont"><a href="../egfPhysX/egfPhysX__SimulationMessage.htm">SimulationMessage</a></span>, efd::kMSGID_PhysXSceneSimulationFinishing&gt;  FinishingSimulationMessage</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceegf_phys_x_1a1c8f716e8f0d4c70be9a0ddafcd8cd20"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__MessageWrapper.htm">efd::MessageWrapper</a></span>&lt;<span class="NDLSystemFont"><a href="../egfPhysX/egfPhysX__SimulationMessage.htm">SimulationMessage</a></span>, efd::kMSGID_PhysXSceneSimulationFinished&gt;  FinishedSimulationMessage</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceegf_phys_x_1a371c8a37d8d906d72d86c9104e022001"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__MessageWrapper.htm">efd::MessageWrapper</a></span>&lt;<span class="NDLSystemFont"><a href="../egfPhysX/egfPhysX__SimulationMessage.htm">SimulationMessage</a></span>, efd::kMSGID_PhysXSceneSimulationTimeUpdated&gt;  SimulationTimeUpdatedMessage</p>
<p class="NDLRefMemberFunction"></p>
<a name="private_types"></a>
<p class="NDLRefHead1">Private Types</p>


<a name="namespaceegf_phys_x_1a5ec54dfed8214fcced2ab113864aba22"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont"><a href="../egfPhysX/egfPhysX__EntityActorData.htm">EntityActorData</a></span>&gt;  EntityActorDataPtr</p>
<p class="NDLRefMemberDescription">A SmartPointer for the <span class="NDLSystemFont"><a href="../egfPhysX/egfPhysX__EntityActorData.htm">EntityActorData</a></span> class. </p>

<a name="namespaceegf_phys_x_1ac3e8712cb7c4e0bf2854dfc4dada5040"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont"><a href="../egfPhysX/egfPhysX__SceneMessage.htm">SceneMessage</a></span>&gt;  SceneMessagePtr</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceegf_phys_x_1a11ada1eea2b206e9600784222f39e29d"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont"><a href="../egfPhysX/egfPhysX__SimulationMessage.htm">SimulationMessage</a></span>&gt;  SimulationMessagePtr</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceegf_phys_x_1a2efe88daa7eadc19de7e1c32a4b6b58e"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont"><a href="../egfPhysX/egfPhysX__SceneService.htm">SceneService</a></span>&gt;  SceneServicePtr</p>
<p class="NDLRefMemberDescription">A SmartPointer for the <span class="NDLSystemFont"><a href="../egfPhysX/egfPhysX__SceneService.htm">SceneService</a></span> class. </p>

<a name="namespaceegf_phys_x_1a887913c5eacd24f02ea26b159d0cf8e6"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont"><a href="../egfPhysX/egfPhysX__TriggerService.htm">TriggerService</a></span>&gt;  TriggerServicePtr</p>
<p class="NDLRefMemberFunction"></p>
<a name="private_attributes"></a>
<p class="NDLRefHead1">Private Attributes</p>
<a name="namespaceegf_phys_x_1a88db70644becec0b4f43e21fc63000e2"></a>
<p class=NDLRefHead2>egfPhysX::PhysXServiceAllocatorFlags</p>


<p class="NDLRefMemberDescription">Define bit flags to modify service allocations in the Create() function. </p>


<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  

  </tbody>
</table>
</div>

<a name="namespaceegf_phys_x_1af94736f8462a9c91cb8d797f3a029e28"></a>
<p class=NDLRefHead2>egfPhysX::CollisionStatus</p>


<p class="NDLRefMemberDescription">An enum that describes the PhysX collision status. </p>


<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">COLLIDE_INVALID</span></td>
    <td>An invalid status, value 0. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">COLLIDE_ON_ENTER</span></td>
    <td>The trigger is due to an enter event, value 1. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">COLLIDE_ON_STAY</span></td>
    <td>The trigger is due to a stay event, value 2. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">COLLIDE_ON_LEAVE</span></td>
    <td>The trigger is due to a leave event, value 3. </td>
</tr>

  </tbody>
</table>
</div>



<a name="namespaceegf_phys_x_1ae2d944e9e19ee98e38c022b41501f523"></a>
<p class="NDLRefMemberFunction">static const <span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span>  kCAT_egfPhysXMessage</p>
<p class="NDLRefMemberFunction"></p>
<a name="private_methods"></a>
<p class="NDLRefHead1">Private Methods</p>


<a name="namespaceegf_phys_x_1a9e136b58d1a10a960a78aeec79ad4d79"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  CreatePhysXServices(<br/><span class="NDLSystemFont"><a href="../efd/efd__ServiceManager.htm">efd::ServiceManager</a></span>* pServiceManager, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> flags = 0)</p>
<p class="NDLRefMemberDescription">Create the common PhysX services needed by most applications. </p>
<p class="NDLRefMemberDetailedDescription">If you use a fairly standard configuration you can simply call this method to create, configure and register the services.</p>
<p class="NDLRefMemberDetailedDescription">This function always creates the following services:</p>
<ul>
<li><span class="NDLSystemFont"><a href="../egfPhysX/egfPhysX__SceneService.htm">egfPhysX::SceneService</a></span></li>
<li><span class="NDLSystemFont"><a href="../egfPhysX/egfPhysX__TriggerService.htm">egfPhysX::TriggerService</a></span>.</li></ul>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pServiceManager</span></td>
    <td>The ServiceManager to which the services are registered </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">flags</span></td>
    <td>Flags from the PhysXServiceAllocatorFlags enum to change default behavior </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

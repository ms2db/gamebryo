<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ecrInput Namespace</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">ecrInput Namespace</p>





<a name="private_types"></a>
<p class="NDLRefHead1">Private Types</p>


<a name="namespaceecr_input_1a42a44c10e7ac94facb7069ee32163341"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont"><a href="../ecrInput/ecrInput__InputActionMapsLoaded.htm">InputActionMapsLoaded</a></span>&gt;  InputActionMapsLoadedPtr</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceecr_input_1ad11c45db2688f6f7eb6771888c74880a"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont"><a href="../ecrInput/ecrInput__InputActionMessage.htm">InputActionMessage</a></span>&gt;  InputActionMessagePtr</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceecr_input_1a745be2d1dd044bd67e68f3cf9afcaa4c"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont"><a href="../ecrInput/ecrInput__InputHandler.htm">InputHandler</a></span>&gt;  InputHandlerPtr</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceecr_input_1a4534fd7c76180f507efb3877a17594cf"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont"><a href="../ecrInput/ecrInput__InputService.htm">InputService</a></span>&gt;  InputServicePtr</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceecr_input_1a187ce6b7e04fcbeb3718d0b76ea9a871"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__map.htm">efd::map</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>, <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>&gt;  FlagMap</p>
<p class="NDLRefMemberDescription">Type used to store string mappings for various flag-style attributes. </p>

<a name="namespaceecr_input_1af1600ddfea52fdf85a92a5f084c98371"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont"><a href="../ecrInput/ecrInput__InputStickMessage.htm">InputStickMessage</a></span>&gt;  InputStickMessagePtr</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceecr_input_1ab3c0f7c66c4c1794f26c6fd1b29ebcd4"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont"><a href="../ecrInput/ecrInput__KeyDownMessage.htm">KeyDownMessage</a></span>&gt;  KeyDownMessagePtr</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceecr_input_1a9bf01f95ad05dfe1415d9721226adcb1"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont"><a href="../ecrInput/ecrInput__KeyUpMessage.htm">KeyUpMessage</a></span>&gt;  KeyUpMessagePtr</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceecr_input_1ae2a75e04476259a49362bf1faf7bf8f5"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont"><a href="../ecrInput/ecrInput__MouseMoveMessage.htm">MouseMoveMessage</a></span>&gt;  MouseMoveMessagePtr</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceecr_input_1ae476b94484d79976a8c864f9ce790a8c"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont"><a href="../ecrInput/ecrInput__MouseDownMessage.htm">MouseDownMessage</a></span>&gt;  MouseDownMessagePtr</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceecr_input_1a20527deb6ab88540e0a15cb373cf77dc"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont"><a href="../ecrInput/ecrInput__MouseUpMessage.htm">MouseUpMessage</a></span>&gt;  MouseUpMessagePtr</p>
<p class="NDLRefMemberFunction"></p>
<a name="private_attributes"></a>
<p class="NDLRefHead1">Private Attributes</p>


<a name="namespaceecr_input_1a0647094ad191d57dc6340a180ef273f6"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  InvalidCallbackID</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceecr_input_1a2d5731335669be922dd0c98ecc968c44"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  CallbackNormal</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceecr_input_1a2e549edd9484668bc1c127619d1440e7"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  CallbackImmediate</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceecr_input_1a401ab9aa88ad592c591bced8efcb258c"></a>
<p class="NDLRefMemberFunction">static const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  kINVALID_CALLBACK</p>
<p class="NDLRefMemberDescription">Callback ID indicating an invalid callback. </p>
<a name="private_methods"></a>
<p class="NDLRefHead1">Private Methods</p>


<a name="namespaceecr_input_1a1a23155712fb19905700948d73bea402"></a>
<p class="NDLRefMemberFunction">EE_ECRINPUT_ENTRY <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  ListenForInputActionEvent(<br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> entityID, <br/><span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span> inputEventName, <br/><span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span> behaviorName, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> callbackType = CallbackNormal)</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceecr_input_1a64b5397ed6c668209733d587cbcbabb5"></a>
<p class="NDLRefMemberFunction">EE_ECRINPUT_ENTRY <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  ListenForInputStickEvent(<br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> entityID, <br/><span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span> inputEventName, <br/><span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span> behaviorName, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> callbackType = CallbackNormal)</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceecr_input_1abe7c20041844517cac6570f7fc71dd2a"></a>
<p class="NDLRefMemberFunction">EE_ECRINPUT_ENTRY void  ClearRegisteredInputEvents(<span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> entityID)</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceecr_input_1a20dc3a27e688f51c8ae2800fd3cdd01c"></a>
<p class="NDLRefMemberFunction">EE_ECRINPUT_ENTRY void  ClearRegisteredInputEvent(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> callbackID)</p>
<p class="NDLRefMemberFunction"></p>

<a name="namespaceecr_input_1a005c0c728934c4bb04d0dddd10835121"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  ReadEnumFromAttribute(<br/>efd::TiXmlElement* i_pElement, <br/>const char* i_attrib, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__map.htm">FlagMap</a></span>& i_map, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& o_value)</p>
<p class="NDLRefMemberDescription">Helper used when reading actionmap files to convert strings into enum values. </p>
<p class="NDLRefMemberDetailedDescription">The value is expected to match exactly one entry in the FlagMap. </p>

<a name="namespaceecr_input_1add9dc5a85b55e3da86320d36398c3091"></a>
<p class="NDLRefMemberFunction">void  WriteEnumToAttribute(<br/>efd::TiXmlElement* pElement, <br/>const char* attrib, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__map.htm">FlagMap</a></span>& map, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> value)</p>
<p class="NDLRefMemberDescription">Helper used when writing actionmap files to convert flag values into string. </p>
<p class="NDLRefMemberDetailedDescription">The value is expected to match exactly one entry in the FlagMap. </p>

<a name="namespaceecr_input_1a35457ac84b91c60e5f7b68db8a1d6b66"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  ReadFlagsFromAttribute(<br/>efd::TiXmlElement* i_pElement, <br/>const char* i_attrib, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__map.htm">FlagMap</a></span>& i_map, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& o_flags)</p>
<p class="NDLRefMemberDescription">Helper used when reading actionmap files to convert strings into flag values. </p>
<p class="NDLRefMemberDetailedDescription">Multiple flags can be combined using the '|' character. </p>

<a name="namespaceecr_input_1a86b0bd9c7df054fb03dc1f769e190059"></a>
<p class="NDLRefMemberFunction">void  WriteFlagsToAttribute(<br/>efd::TiXmlElement* pElement, <br/>const char* attrib, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__map.htm">FlagMap</a></span>& map, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> flags)</p>
<p class="NDLRefMemberDescription">Helper used when writing actionmap files to convert flag values into string. </p>
<p class="NDLRefMemberDetailedDescription">Multiple flags can be combined using the '|' character. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

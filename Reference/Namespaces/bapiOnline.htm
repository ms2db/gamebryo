<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>bapiOnline Namespace</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">bapiOnline Namespace</p>





<a name="replication_groups"></a>
<p class="NDLRefHead1">Replication groups</p>

<p class="NDLRefMemberDescription">Methods to get or set entity replication groups which determine who can remotely "see" the various properties on the entity.</p>

<a name="namespacebapi_online_1a1fcd9c8501d6bd5e2c070bedbedb82ac"></a>
<p class="NDLRefMemberFunction">EE_EONENTRY <span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span>  GetReplicationCategory(<br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> id, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> group)</p>
<p class="NDLRefMemberDescription">Get the category to which the specified replication group for the given entity is published. </p>
<p class="NDLRefMemberDetailedDescription">This can be called on either the publishing entity or on a replica of that entity.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">id</span></td>
    <td>The entity id to get replication Category for. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">group</span></td>
    <td>The replication group to get the Category for. Valid range is 0 to 31 inclusive. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The replication group Category for the specified entity and group. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_online_1a9975c66a873a17919d008bcd97e53154"></a>
<p class="NDLRefMemberFunction">EE_EONENTRY <span class="NDLSystemFont">bool</span>  SetReplicationCategory(<br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> id, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> group, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> cat)</p>
<p class="NDLRefMemberDescription">Set the replication group category for the given producer entity. </p>
<p class="NDLRefMemberDetailedDescription">The entity will stop producing to the previously set category, which can result in entity loss for remote consumers, and then start producing to the new category, which can result in entity discovery for remote consumers (remote consumers who consume both the old and new categories will not see any loss or discovery). Each producer entity can have up to 32 different replication groups each of which can use a different category so you must specify which group is being set. Your categorization policy will inform you as to which groups are used for what purpose.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">id</span></td>
    <td>The entity to set a replication category for. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">group</span></td>
    <td>The replication group to set the Category for. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">cat</span></td>
    <td>The replication Category to produce into for the specified entity and group. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the specified entity is a valid producer entity which uses the specified replication group. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_online_1a3b7e0857065519ee71366dc39e684f60"></a>
<p class="NDLRefMemberFunction">EE_EONENTRY <span class="NDLSystemFont">bool</span>  UsesReplicationCategory(<br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> entityID, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> catID)</p>
<p class="NDLRefMemberDescription">Determines if the given entity uses the specified replication channel for any replication group. </p>
<p class="NDLRefMemberDetailedDescription">This can be called on either the producer entity or on a replica of that entity.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">entityID</span></td>
    <td>The entity to check. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">catID</span></td>
    <td>The Category to check for use. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the given entity is found and uses the specified category for any replication group. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="private_methods"></a>
<p class="NDLRefHead1">Private Methods</p>


<a name="namespacebapi_online_1a02da5e03e1c141e1390788f743ffb176"></a>
<p class="NDLRefMemberFunction">EE_EONENTRY <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetVirtualProcessId()</p>
<p class="NDLRefMemberDescription">Retrieves the current Virtual Process ID from the Service Manager. </p>
<p class="NDLRefMemberDetailedDescription">This is usually the same as the NetID, but may differ when using rapid iteration based on the order of connection to Toolbench verse the channel manager. The last connection established determines the virtual process ID but only the channel manager connection effects the NetID.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>The virtual process id. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_online_1ab7cde8e3889824aa57a8256c40e81839"></a>
<p class="NDLRefMemberFunction">EE_EONENTRY <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetNetID()</p>
<p class="NDLRefMemberDescription">Get the NetID for this process from the Net Service. </p>
<p class="NDLRefMemberDetailedDescription">The NetID starts with a default value and changes to a globally unique value when the process joins a channel manager. If connection to the channel manager is lost this will change back to the default value. Multiprocess applications can use this value to generate unique categories for their process but must pay attention to the connection state.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>The NetID. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_online_1ae3239d4a192ae0a919c2bdd74cddd449"></a>
<p class="NDLRefMemberFunction">EE_EONENTRY <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  FindAllReplicatedEntities(<span class="NDLSystemFont"><a href="../efd/efd__list.htm">efd::list</a></span>&lt;<span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span>&gt;* OutValue)</p>
<p class="NDLRefMemberDescription">Find all entities that are reflected to this process. </p>
<p class="NDLRefMemberDetailedDescription">Similar to <span class="NDLSystemFont"><a href="../Namespaces/BehaviorAPI.htm#namespace_behavior_a_p_i_1a8e2e085f3ecafcc22ef086c596701ad5">BehaviorAPI::FindAllEntities</a></span> only it excludes entities that are locally owned by the scheduler.</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">: If a large number of entities are reflected this API might consume excessive amounts of memory and take a long time to execute. We recommend against using this API in general purpose settings, although it can often be helpful for certain debugging cases</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">OutValue</span></td>
    <td>: the list of entities that are found </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>UInt32 the number of entities found </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_online_1a2e80ada474476ec632ef3ee66eda3068"></a>
<p class="NDLRefMemberFunction">EE_EONENTRY <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  FindAllEntitiesByReplicationCategory(<br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> replicationCategory, <br/><span class="NDLSystemFont"><a href="../efd/efd__list.htm">efd::list</a></span>&lt;<span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span>&gt;* OutValue)</p>
<p class="NDLRefMemberDescription">Creates a list of all Entities that are published into the given Category. </p>
<p class="NDLRefMemberDetailedDescription">This includes both producing entities that produce to this category and consumer entities which are replicated to this process because they use that category.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">replicationCategory</span></td>
    <td>The Category to which the interesting Entities are being published </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">OutValue</span></td>
    <td>The resulting list of Entities. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The number of entities that were found. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_online_1a28294d46eb3b2a67f81884e3b0b839b0"></a>
<p class="NDLRefMemberFunction">EE_EONENTRY <span class="NDLSystemFont">bool</span>  SendViewEvent(<br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> eventChannel, <br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> entityID, <br/>const char* strBehavior, <br/><span class="NDLSystemFont"><a href="../efd/efd__ParameterList.htm">efd::ParameterList</a></span>* pStream = 0, <br/>double delay = 0.0)</p>
<p class="NDLRefMemberDescription">Sends a view behavior invocation request to the given event channel on behalf of the given entity. </p>
<p class="NDLRefMemberDetailedDescription">All replicas of that entity which are using the given replication channel will attempt to invoke the behavior. Typically the categories used are the same categories to which the producer entity replicates, but any category that the Replication Service is subscribed to maybe used (for example, any category used in SubscribeReplicationChannel).</p>
<p class="NDLRefMemberDetailedDescription">Note that the SendEvent method can only send behavior requests to the owned producer entity and not to the replicas of that entity. You must use one of the ViewEvent methods to send a behavior to a replica entity. Replica entities cannot use callback behaviors either as the callback will be invoked on the owned entity and not the replica.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">eventChannel</span></td>
    <td>The category for sending the event request, typically a replication channel. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">entityID</span></td>
    <td>The ID of the target replicated entity </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">strBehavior</span></td>
    <td>The name of the behavior to execute for this event </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pStream</span></td>
    <td>The argument stream to pass to the behavior </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">delay</span></td>
    <td>An optional time to wait before actually executing the event. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the view event was generated and sent. A true value does not guarantee that the event message will be received or a behavior will execute. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_online_1ade1601a353e29c9a2c472fc7e05ac117"></a>
<p class="NDLRefMemberFunction">EE_EONENTRY <span class="NDLSystemFont">bool</span>  SendLocalViewEvent(<br/><span class="NDLSystemFont"><a href="../egf/egf__EntityID.htm">egf::EntityID</a></span> entityID, <br/>const char* strBehavior, <br/><span class="NDLSystemFont"><a href="../efd/efd__ParameterList.htm">efd::ParameterList</a></span>* pStream = 0, <br/>double delay = 0.0)</p>
<p class="NDLRefMemberDescription">Sends a view behavior invocation request to the given local replica entity. </p>
<p class="NDLRefMemberDetailedDescription">Only the local replica, if present, will run the behavior in question. This can be used from a running view behavior in order to queue an additional view behavior on the current entity, for example.</p>
<p class="NDLRefMemberDetailedDescription">Note that the SendEvent method can only send behavior requests to the owned producer entity and not to the replicas of that entity. You must use one of the ViewEvent methods to send a behavior to a replica entity. Replica entities cannot use callback behaviors either as the callback will be invoked on the owned entity and not the replica.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">entityID</span></td>
    <td>The ID of the target replica entity </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">strBehavior</span></td>
    <td>The name of the behavior to execute for this event </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pStream</span></td>
    <td>The argument stream to pass to the behavior </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">delay</span></td>
    <td>An optional time to wait before actually executing the event. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the specified entity exists. A true value does not guarantee that the behavior is valid or will execute. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_online_1ab926f3e182dbc0f10ec02ab9f479f483"></a>
<p class="NDLRefMemberFunction">EE_EONENTRY void  SubscribeReplicationChannel(<span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> replicationChannel)</p>
<p class="NDLRefMemberDescription">Causes the local ReplicationService to subscribe to the specified replication category. </p>
<p class="NDLRefMemberDetailedDescription">This will cause any remote entity publishing to that category to be replicated to this process. There must eventually be one matching call to UnsubscribeReplicationChannel method for every call to SubscribeReplicationChannel or else subscription references will be leaked causing unused data to remain in the current process.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">replicationChannel</span></td>
    <td>The channel for the replication group </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_online_1a17229bccf51258c702ab4176a5cedf5a"></a>
<p class="NDLRefMemberFunction">EE_EONENTRY void  UnsubscribeReplicationChannel(<span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> replicationChannel)</p>
<p class="NDLRefMemberDescription">Causes the local ReplicationService to unsubscribe from the specified replication category. </p>
<p class="NDLRefMemberDetailedDescription">This will cause any replica entities that are replicated to this process only using the given category to be cleanly removed. There must be one matching call to UnsubscribeReplicationChannel method for every call to SubscribeReplicationChannel or else subscription references will be leaked.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">replicationChannel</span></td>
    <td>The channel for the replication group </td>
</tr>

        </tbody>
    </table>
</div>



<a name="namespacebapi_online_1a760ecf5bf550c1462c4cc085626ba25f"></a>
<p class="NDLRefMemberFunction">EE_EONENTRY void  SetGroupUpdateInterval(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> group, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a37c593debc73d82d7ddc571c725f0e2d">efd::TimeType</a></span> newDelta)</p>
<p class="NDLRefMemberDescription">Set the default minimum update interval for a replication group. </p>
<p class="NDLRefMemberDetailedDescription">Changing this value will effect all entities that are using the specified group starting on the next update pass.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">group</span></td>
    <td>The replication group to set the update interval for. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">newDelta</span></td>
    <td>The new minimum update delta in seconds. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

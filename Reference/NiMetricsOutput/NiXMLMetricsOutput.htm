<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiXMLMetricsOutput</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiXMLMetricsOutput</p>

<p class="NDLRefParentage">: public <a href=
"NiCalculatingOutput.htm">NiCalculatingOutput</a></p>

<p class="NDLRefHeaderFile">&lt;NiXMLMetricsOutput.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This class calculates instrumented metrics over some
user-specified number of frames. It will calculate the mean, sum,
min, max, and count for each metric and output them in an XML
file. (Count is the number of values that were used to calculate
the other four values.)</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiXMLMetricsOutput(unsigned int
uiFramePeriod, const char* pcNiFileName, unsigned int
uiNiFileBufferSize = 32768, unsigned int uiHashSize = 127)</p>

<p class="NDLRefMemberDescription">The constructor takes an
initial frame period to calculate metrics over, a filename to
store it in, and a default buffer size to use for this file. The
<span class="NDLSystemFont">uiHashSize</span> argument is the
initial size of the string to metric container hash table.</p>

<p class="NDLRefHead1">Virtual Member Functions</p>

<p class="NDLRefMemberFunction">virtual void AddValue(const char*
pcName, float fValue)</p>

<p class="NDLRefMemberDescription">This function stores a
name/value pair that will be calculated and written out after the
frame period has passed.</p>

<p class="NDLRefMemberFunction">virtual void
EndTimer(NiMetricsTimer* pkTimer)</p>

<p class="NDLRefMemberDescription">This function maps to calling
the <span class="NDLSystemFont">AddValue</span> function with the
name of the timer and the elapsed time as the value.</p>

<p class="NDLRefMemberFunction">virtual void
AddImmediateEvent(const char* pcName, float fValue)</p>

<p class="NDLRefMemberDescription">This function maps to calling
the <span class="NDLSystemFont">AddValue</span> function with the
name of the immediate event and its value.</p>

<p class="NDLRefMemberFunction">virtual void Update()</p>

<p class="NDLRefMemberDescription">If the frame period has
passed, then this function will write out all of the metrics that
have been calculated over the frame period.</p>

<p class="NDLRefHead1">Member Functions</p>

<p class="NDLRefMemberFunction">bool GetFileValid() const</p>

<p class="NDLRefMemberDescription">This function returns true if
the XML output file was opened successfully for writing. This
should be checked after the constructor and the object should not
be used if the file is invalid.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

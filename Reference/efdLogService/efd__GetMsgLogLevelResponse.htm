<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>efd::GetMsgLogLevelResponse</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">efd::GetMsgLogLevelResponse</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="efd__LogServiceResponse.htm">efd::LogServiceResponse</a></span></p>


<p class="NDLRefHeaderFile">&lt;LogServiceMessages.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classefd_1_1_get_msg_log_level_response.gif" alt="Inheritance graph for efd::GetMsgLogLevelResponse"/>
  <p class="FigureCaption">Inheritance graph for efd::GetMsgLogLevelResponse</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Response to a get msg log level request message. </p>
<p class="NDLNormal">It adds the category, message type id, and log level id to the base <span class="NDLSystemFont"><a href="efd__LogServiceResponse.htm">LogServiceResponse</a></span>. </p>

<a name="public_attributes"></a>
<p class="NDLRefHead1">Public Attributes</p>


<a name="classefd_1_1_get_msg_log_level_response_1a7f520edeb20b7f8b3937cddbdc142a1a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span>  m_category</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_get_msg_log_level_response_1a84595345ce80dced42703222cabef280"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a11b3d968bc96d7f04115a0aad3893469">efd::ClassID</a></span>  m_msgClassID</p>
<p class="NDLRefMemberFunction"></p>

<a name="classefd_1_1_get_msg_log_level_response_1a802cf9b179728d0a822d194e6e0c8461"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a59a3838ab5cdfe87f98f5b8371e4e91d">efd::UInt8</a></span>  m_levelId</p>
<p class="NDLRefMemberFunction"></p>
<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classefd_1_1_get_msg_log_level_response_1a9772c4cce6e64b19dc249350d9470a97"></a>
<p class="NDLRefMemberFunction">GetMsgLogLevelResponse()</p>
<p class="NDLRefMemberDescription">Default constructor. </p>

<a name="classefd_1_1_get_msg_log_level_response_1a0946a4cfd3ecfc3a0eef63efdbcebdf7"></a>
<p class="NDLRefMemberFunction">GetMsgLogLevelResponse(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span>& category, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a11b3d968bc96d7f04115a0aad3893469">efd::ClassID</a></span> msgClassID, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a59a3838ab5cdfe87f98f5b8371e4e91d">efd::UInt8</a></span> levelId, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> netId, <br/><span class="NDLSystemFont"><a href="efd__LogServiceResponse.htm#classefd_1_1_log_service_response_1a6fcb182e2d47cd622cc75c1d2429ce10">LogServiceResponse::Result</a></span> result)</p>
<p class="NDLRefMemberDescription">Get the message log response. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">category</span></td>
    <td>the category of the message. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">msgClassID</span></td>
    <td>Message type id. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">levelId</span></td>
    <td>Log level. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">netId</span></td>
    <td>Net ID of the log service we want to respond. 0 for all. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">result</span></td>
    <td>The result of the operation. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classefd_1_1_get_msg_log_level_response_1a67f90415349e89f20407d870abb306e4"></a>
<p class="NDLRefMemberFunction">virtual void  Serialize(<span class="NDLSystemFont"><a href="../efd/efd__Archive.htm">efd::Archive</a></span>& io_ar)</p>
<p class="NDLRefMemberDescription">Serialize a polymorphic type to or from an <span class="NDLSystemFont"><a href="../efd/efd__Archive.htm">Archive</a></span>. </p>
<p class="NDLRefMemberDetailedDescription">This method must be overridden, but if your streamable object has no data the override can be an empty function. A typical implementation of this method will make one call to <span class="NDLSystemFont"><a href="../Namespaces/efd__Serializer.htm#namespaceefd_1_1_serializer_1a63e0b99047011bde53be44786ab9ee7b">efd::Serializer::SerializeObject</a></span> for each member of the class. If you are derived from another streamable class you should be sure to call to parent implementation of this method as well; it is recommended that the parent class be serialized first before adding the data for the derived class. If your class contains complex data such as STL-style contianers or pointers to allocated data then you can simplify the implementation of Serialize by using the templated helper functions in &lt;<span class="NDLSystemFont">efd/SerializeRoutines.h</span>&gt;; these can serialize even the most complex data structures with a single method call and will reduce the chance of making common mistakes (which could introduce security vulnerabilities if marshalling data from untrusted sources).</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">io_ar</span></td>
    <td>The <span class="NDLSystemFont"><a href="../efd/efd__Archive.htm">Archive</a></span> to serialize to or from. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

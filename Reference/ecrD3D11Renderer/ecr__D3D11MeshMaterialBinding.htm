<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ecr::D3D11MeshMaterialBinding</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">ecr::D3D11MeshMaterialBinding</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiRefObject.htm">NiRefObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;D3D11MeshMaterialBinding.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classecr_1_1_d3_d11_mesh_material_binding.gif" alt="Inheritance graph for ecr::D3D11MeshMaterialBinding"/>
  <p class="FigureCaption">Inheritance graph for ecr::D3D11MeshMaterialBinding</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal"><span class="NDLSystemFont">ecr::D3D11MeshMaterialBinding</span> is a class that wraps functionality needed to build a D3D11 vertex layout for an <span class="NDLSystemFont"><a href="../NiMain/NiRenderObject.htm">NiRenderObject</a></span>. </p>

<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classecr_1_1_d3_d11_mesh_material_binding_1a62f82b27ebfb296b447b54f9972dec62"></a>
<p class="NDLRefMemberFunction">virtual ~D3D11MeshMaterialBinding()</p>
<p class="NDLRefMemberDescription">Destructor. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classecr_1_1_d3_d11_mesh_material_binding_1a6cf8755d455b41d4b7dc7a56d1f28f56"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">D3D11MeshMaterialBindingPtr</a></span>  Create(<br/><span class="NDLSystemFont"><a href="../NiMain/NiRenderObject.htm">NiRenderObject</a></span>* pMesh, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiSemanticAdapterTable.htm">NiSemanticAdapterTable</a></span>& adapterTable)</p>
<p class="NDLRefMemberDescription">Creates a new <span class="NDLSystemFont">D3D11MeshMaterialBinding</span> object. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMesh</span></td>
    <td>Mesh to create a new mesh material binding for. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">adapterTable</span></td>
    <td><span class="NDLSystemFont"><a href="../NiMain/NiSemanticAdapterTable.htm">NiSemanticAdapterTable</a></span> to use when creating the binding. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The newly created <span class="NDLSystemFont">D3D11MeshMaterialBinding</span>. If no binding can be created or the D3D11 renderer fails to create a vertex declaration, then this function will return NULL. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classecr_1_1_d3_d11_mesh_material_binding_1aaf1be512e0285eeedb4fbf52338e8a4a"></a>
<p class="NDLRefMemberFunction">void  UpdateInputLayout(<br/>void* pInputSignature, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> inputSignatureSize)</p>
<p class="NDLRefMemberDescription">Updates the <span class="NDLSystemFont">D3D11MeshMaterialBinding</span> with the input signature from a specific vertex shader. </p>
<p class="NDLRefMemberDetailedDescription">The <span class="NDLSystemFont">D3D11MeshMaterialBinding</span> will remember which ID3D11InputLayout object is associated with which input signature, so it will not need to recreate the input layout each time the vertex shader is changed.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pInputSignature</span></td>
    <td>The new input signature for the vertex shader. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">inputSignatureSize</span></td>
    <td>The size of the new input signature. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_1_1_d3_d11_mesh_material_binding_1a76d1cac142b6c36111b656c74788987f"></a>
<p class="NDLRefMemberFunction">D3D11_INPUT_ELEMENT_DESC*  GetInputElementDescArray() const</p>
<p class="NDLRefMemberDescription">Returns the array of D3D11_INPUT_ELEMENT_DESC structures that was created from the <span class="NDLSystemFont"><a href="../NiMain/NiSemanticAdapterTable.htm">NiSemanticAdapterTable</a></span> provided during initialization to describe the vertex buffers. </p>

<a name="classecr_1_1_d3_d11_mesh_material_binding_1a289a74ad62d2476f627991df0a43b683"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetInputElementDescCount() const</p>
<p class="NDLRefMemberDescription">Returns the number of elements in the D3D11_INPUT_ELEMENT_DESC array. </p>

<a name="classecr_1_1_d3_d11_mesh_material_binding_1a318274b7463edeea7c641f867daf8c41"></a>
<p class="NDLRefMemberFunction">ID3D11InputLayout*  GetInputLayout() const</p>
<p class="NDLRefMemberDescription">Returns the D3D11 vertex layout represented by this instance. </p>
<p class="NDLRefMemberDetailedDescription">The layout will be based on the most recent input signature passed into UpdateInputLayout. </p>

<a name="classecr_1_1_d3_d11_mesh_material_binding_1a25e9027b059c1140de0d01aaec5da017"></a>
<p class="NDLRefMemberFunction">void  ReleaseCachedInputLayouts()</p>
<p class="NDLRefMemberDescription">Releases all the ID3D11InputLayout objects that have been created for the various input signatures that have been passed into UpdateInputLayout. </p>

<a name="classecr_1_1_d3_d11_mesh_material_binding_1a73fb31d15e12dad98f0e1a3366504cc0"></a>
<p class="NDLRefMemberFunction">void  ReleaseElementArray()</p>
<p class="NDLRefMemberDescription">Releases the array of D3D11_INPUT_ELEMENT_DESC structures that was created from the <span class="NDLSystemFont"><a href="../NiMain/NiSemanticAdapterTable.htm">NiSemanticAdapterTable</a></span> provided during initialization to describe the vertex buffers. </p>

<a name="classecr_1_1_d3_d11_mesh_material_binding_1ab0e0eb91dae47bbe58e969d238172df7"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span>*  GetIndexStreamRef() const</p>
<p class="NDLRefMemberDescription">Returns a pointer to the <span class="NDLSystemFont"><a href="../NiMesh/NiDataStreamRef.htm">NiDataStreamRef</a></span> representing the index buffer. </p>

<a name="classecr_1_1_d3_d11_mesh_material_binding_1a25999218385c78dbfa006e8baebdd54e"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a2ed07576a2c351e88e18847f247b5705">efd::UInt16</a></span>*  GetStreamsToSetArray() const</p>
<p class="NDLRefMemberDescription">Returns a pointer to an internal array describing the indices of the data streams that will be set as vertex buffers. </p>

<a name="classecr_1_1_d3_d11_mesh_material_binding_1a95d72466fcba073800de4b15862b147c"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a2ed07576a2c351e88e18847f247b5705">efd::UInt16</a></span>  GetLastValidStream() const</p>
<p class="NDLRefMemberDescription">Returns the index of the highest-numbered stream that will be set. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

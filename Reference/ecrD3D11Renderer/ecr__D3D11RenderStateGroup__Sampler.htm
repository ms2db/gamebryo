<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ecr::D3D11RenderStateGroup::Sampler</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">ecr::D3D11RenderStateGroup::Sampler</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__MemObject.htm">efd::MemObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;D3D11RenderStateGroup.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classecr_1_1_d3_d11_render_state_group_1_1_sampler.gif" alt="Inheritance graph for ecr::D3D11RenderStateGroup::Sampler"/>
  <p class="FigureCaption">Inheritance graph for ecr::D3D11RenderStateGroup::Sampler</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Class that stores and accumulates render states for a sampler. </p>
<p class="NDLNormal"><span class="NDLSystemFont">Sampler</span> render states are stored in individual <span class="NDLSystemFont">Sampler</span> objects rather than directly in the <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateGroup.htm">D3D11RenderStateGroup</a></span> because shaders reference samplers by name, rather than by number. It is much more useful and efficient to accumulate the state for a named sampler than by which shader type and index that sampler will use.</p>
<p class="NDLNormal">New samplers should only be constructed using <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateGroup.htm#classecr_1_1_d3_d11_render_state_group_1a5746628b0c7e0f1e37341761a5b6d952">D3D11RenderStateGroup::AddSampler</a></span>. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a7ce89a40ec65772952e5543ddb435ac7"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../efd/efd__FixedString.htm">efd::FixedString</a></span>&  GetName() const</p>
<p class="NDLRefMemberDescription">Get the variable name of the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a55ce64afe17caa1e37e3ddca5b3fab57"></a>
<p class="NDLRefMemberFunction">void  SetFilter(D3D11_FILTER filter)</p>
<p class="NDLRefMemberDescription">Set <span class="NDLSystemFont">Sampler</span> Filter state in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a8edb6998fd90a67e4d100e8ef9b6fccc"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetFilter(D3D11_FILTER& filter) const</p>
<p class="NDLRefMemberDescription">Output the <span class="NDLSystemFont">Sampler</span> Filter state in the sampler, and return whether or not that state has actually been set in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1adf4c857e1d7aad5596647edb29c75cca"></a>
<p class="NDLRefMemberFunction">void  RemoveFilter()</p>
<p class="NDLRefMemberDescription">Remove the <span class="NDLSystemFont">Sampler</span> Filter state from the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a7931352c214477bc912dfa862f2bdf59"></a>
<p class="NDLRefMemberFunction">void  SetAddressU(D3D11_TEXTURE_ADDRESS_MODE addressU)</p>
<p class="NDLRefMemberDescription">Set <span class="NDLSystemFont">Sampler</span> AddressU state in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a11f8f96dd3de7c6a9ea86f448e34f9ac"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetAddressU(D3D11_TEXTURE_ADDRESS_MODE& addressU) const</p>
<p class="NDLRefMemberDescription">Output the <span class="NDLSystemFont">Sampler</span> AddressU state in the sampler, and return whether or not that state has actually been set in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a857daffff3ce31993201ada9ca18d6df"></a>
<p class="NDLRefMemberFunction">void  RemoveAddressU()</p>
<p class="NDLRefMemberDescription">Remove the <span class="NDLSystemFont">Sampler</span> AddressU state from the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1aa8d479fa2e27d2a66aaa2b96470df8d4"></a>
<p class="NDLRefMemberFunction">void  SetAddressV(D3D11_TEXTURE_ADDRESS_MODE addressV)</p>
<p class="NDLRefMemberDescription">Set <span class="NDLSystemFont">Sampler</span> AddressV state in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a8731bc489754d9c0bf6764b11382124f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetAddressV(D3D11_TEXTURE_ADDRESS_MODE& addressV) const</p>
<p class="NDLRefMemberDescription">Output the <span class="NDLSystemFont">Sampler</span> AddressV state in the sampler, and return whether or not that state has actually been set in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a5f383f9521ed8b715b3e1e1196d79f3e"></a>
<p class="NDLRefMemberFunction">void  RemoveAddressV()</p>
<p class="NDLRefMemberDescription">Remove the <span class="NDLSystemFont">Sampler</span> AddressV state from the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a9906ef274996ded94c7b6a573fa54dca"></a>
<p class="NDLRefMemberFunction">void  SetAddressW(D3D11_TEXTURE_ADDRESS_MODE addressW)</p>
<p class="NDLRefMemberDescription">Set <span class="NDLSystemFont">Sampler</span> AddressW state in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a0ca61543b6eb9e80e2b5d581ab642c03"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetAddressW(D3D11_TEXTURE_ADDRESS_MODE& addressW) const</p>
<p class="NDLRefMemberDescription">Output the <span class="NDLSystemFont">Sampler</span> AddressW state in the sampler, and return whether or not that state has actually been set in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a76d897ceedd5c680319c04e893001ab6"></a>
<p class="NDLRefMemberFunction">void  RemoveAddressW()</p>
<p class="NDLRefMemberDescription">Remove the <span class="NDLSystemFont">Sampler</span> AddressW state from the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a29699d133a91c157a2ea443da0e0faf0"></a>
<p class="NDLRefMemberFunction">void  SetMipLODBias(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> mipLODBias)</p>
<p class="NDLRefMemberDescription">Set <span class="NDLSystemFont">Sampler</span> MipLODBias state in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a4ae564f2c21d5f5d401d460e7c9f4cec"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetMipLODBias(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>& mipLODBias) const</p>
<p class="NDLRefMemberDescription">Output the <span class="NDLSystemFont">Sampler</span> MipLODBias state in the sampler, and return whether or not that state has actually been set in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1afc81eb7f8c0c22f26f1166caf2a4baff"></a>
<p class="NDLRefMemberFunction">void  RemoveMipLODBias()</p>
<p class="NDLRefMemberDescription">Remove the <span class="NDLSystemFont">Sampler</span> MipLODBias state from the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1aa4bf2f05660dab673aea8de2f47a0e95"></a>
<p class="NDLRefMemberFunction">void  SetMaxAnisotropy(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> maxAnisotropy)</p>
<p class="NDLRefMemberDescription">Set <span class="NDLSystemFont">Sampler</span> MaxAnisotropy state in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1ad8ff1a7986d0f958775a3b6b4d92f830"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetMaxAnisotropy(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& maxAnisotropy) const</p>
<p class="NDLRefMemberDescription">Output the <span class="NDLSystemFont">Sampler</span> MaxAnisotropy state in the sampler, and return whether or not that state has actually been set in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1af6536d2373ef8f94e7a1913bddc0fe24"></a>
<p class="NDLRefMemberFunction">void  RemoveMaxAnisotropy()</p>
<p class="NDLRefMemberDescription">Remove the <span class="NDLSystemFont">Sampler</span> MaxAnisotropy state from the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1aa4b5dbfce52fa53ffda266bfdeb218e7"></a>
<p class="NDLRefMemberFunction">void  SetComparisonFunc(D3D11_COMPARISON_FUNC comparisonFunc)</p>
<p class="NDLRefMemberDescription">Set <span class="NDLSystemFont">Sampler</span> ComparisonFunc state in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a526b0550165c388fe8c9247447fa5cd2"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetComparisonFunc(D3D11_COMPARISON_FUNC& comparisonFunc) const</p>
<p class="NDLRefMemberDescription">Output the <span class="NDLSystemFont">Sampler</span> ComparisonFunc state in the sampler, and return whether or not that state has actually been set in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a40ee38058af9e9a27938b7a88c8ff330"></a>
<p class="NDLRefMemberFunction">void  RemoveComparisonFunc()</p>
<p class="NDLRefMemberDescription">Remove the <span class="NDLSystemFont">Sampler</span> ComparisonFunc state from the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a73401acbb621a2ddf5ace14ce51101ad"></a>
<p class="NDLRefMemberFunction">void  SetBorderColor(const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> borderColor)</p>
<p class="NDLRefMemberDescription">Set <span class="NDLSystemFont">Sampler</span> BorderColor state in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a1665efd6b5cd2e53c10dacdf04bdafbb"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetBorderColor(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> borderColor) const</p>
<p class="NDLRefMemberDescription">Output the <span class="NDLSystemFont">Sampler</span> BorderColor state in the sampler, and return whether or not that state has actually been set in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1ac413c11bdb087d66bc0b34a75f66e198"></a>
<p class="NDLRefMemberFunction">void  RemoveBorderColor()</p>
<p class="NDLRefMemberDescription">Remove the <span class="NDLSystemFont">Sampler</span> BorderColor state from the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a1b6c699a984092b24159fe4d476fad64"></a>
<p class="NDLRefMemberFunction">void  SetMinLOD(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> minLOD)</p>
<p class="NDLRefMemberDescription">Set <span class="NDLSystemFont">Sampler</span> MinLOD state in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a628a183985543115bfcf9db37977d7ad"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetMinLOD(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>& minLOD) const</p>
<p class="NDLRefMemberDescription">Output the <span class="NDLSystemFont">Sampler</span> MinLOD state in the sampler, and return whether or not that state has actually been set in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a48d2a7c5a0d62ac9d04e55f49291ec2b"></a>
<p class="NDLRefMemberFunction">void  RemoveMinLOD()</p>
<p class="NDLRefMemberDescription">Remove the <span class="NDLSystemFont">Sampler</span> MinLOD state from the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1aa8e5ec5790c8fe7941cd465a05dc23cf"></a>
<p class="NDLRefMemberFunction">void  SetMaxLOD(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> maxLOD)</p>
<p class="NDLRefMemberDescription">Set <span class="NDLSystemFont">Sampler</span> MaxLOD state in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a849059d605600dd39a66ff79424d6b45"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetMaxLOD(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>& maxLOD) const</p>
<p class="NDLRefMemberDescription">Output the <span class="NDLSystemFont">Sampler</span> MaxLOD state in the sampler, and return whether or not that state has actually been set in the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1adf05f92767a1b54f85c700430657e96a"></a>
<p class="NDLRefMemberFunction">void  RemoveMaxLOD()</p>
<p class="NDLRefMemberDescription">Remove the <span class="NDLSystemFont">Sampler</span> MaxLOD state from the sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a13f064eed17378961ca71e24444d193a"></a>
<p class="NDLRefMemberFunction">const D3D11_SAMPLER_DESC&  GetSamplerDesc() const</p>
<p class="NDLRefMemberDescription">Return the accumulated D3D11_SAMPLER_DESC for this sampler. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1_1_sampler_1a22185ce5a0ace3e23f3513f91f6e790e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetSamplerValidFlags() const</p>
<p class="NDLRefMemberDescription">Return a set of flags from <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateManager.htm#classecr_1_1_d3_d11_render_state_manager_1a15e5ad98e89dde9c9b51c5b619f5cef0">D3D11RenderStateManager::SamplerValidFlags</a></span> indicating which states were actually set on this sampler. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

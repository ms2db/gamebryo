<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ecr::D3D11GeometryShader</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">ecr::D3D11GeometryShader</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="ecr__D3D11ShaderProgram.htm">ecr::D3D11ShaderProgram</a></span></p>


<p class="NDLRefHeaderFile">&lt;D3D11GeometryShader.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classecr_1_1_d3_d11_geometry_shader.gif" alt="Inheritance graph for ecr::D3D11GeometryShader"/>
  <p class="FigureCaption">Inheritance graph for ecr::D3D11GeometryShader</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Encapsulates a D3D11 geometry shader. </p>

<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classecr_1_1_d3_d11_geometry_shader_1aa59e0cd9043438b7cc539559c4a97de8"></a>
<p class="NDLRefMemberFunction">D3D11GeometryShader()</p>
<p class="NDLRefMemberDescription">Constructor for an uninitialized D3D11GeoemtryShader. </p>

<a name="classecr_1_1_d3_d11_geometry_shader_1a77fe4f49fcf1926319a360091c557de7"></a>
<p class="NDLRefMemberFunction">D3D11GeometryShader(<br/>ID3D11GeometryShader* pGeometryShader, <br/>ID3DBlob* pShaderByteCode)</p>
<p class="NDLRefMemberDescription">This constructor creates an initialized <span class="NDLSystemFont">D3D11GeometryShader</span> using the provided geometry shader and an ID3DBlob containing the shader's byte code. </p>

<a name="classecr_1_1_d3_d11_geometry_shader_1ac20202ed5dfa23f478e1812b188a03f9"></a>
<p class="NDLRefMemberFunction">virtual ~D3D11GeometryShader()</p>
<p class="NDLRefMemberDescription">Destructor. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classecr_1_1_d3_d11_geometry_shader_1a7de16ae62dcbbdf4886687b1dcbf1b10"></a>
<p class="NDLRefMemberFunction">void  SetStreamOutputDeclaration(<br/>const D3D11_SO_DECLARATION_ENTRY* pSODeclaration, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numEntries, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>* outputStreamStrideArray, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numOutputStreams, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> rasterizedStream)</p>
<p class="NDLRefMemberDescription">Stream output. </p>
<p class="NDLRefMemberDetailedDescription">Sets the declaration for stream output from the geometry shader. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pSODeclaration</span></td>
    <td>Array of D3D11_SO_DECLARATION_ENTRY objects that describe the expected arrangement of the output streams. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">numEntries</span></td>
    <td>Number of entries in pSODeclaration. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">outputStreamStrideArray</span></td>
    <td>Array of strides for the output streams. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">numOutputStreams</span></td>
    <td>Number of output streams, and number of entries in outputStreamStrideArray. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">rasterizedStream</span></td>
    <td>ID of the output stream to be rasterized, if any. If none will be rasterized, pass in D3D11_SO_NO_RASTERIZED_STREAM. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_1_1_d3_d11_geometry_shader_1a10db3762c3f5c4e4f56652e790979b2b"></a>
<p class="NDLRefMemberFunction">const D3D11_SO_DECLARATION_ENTRY*  GetStreamOutputDeclaration() const</p>
<p class="NDLRefMemberDescription">Returns the array of stream output declaration objects. </p>

<a name="classecr_1_1_d3_d11_geometry_shader_1a06044fa5870ddc240f0114c0eed7947b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetNumStreamOutputEntries() const</p>
<p class="NDLRefMemberDescription">Returns the number of entries in the stream output declaration array. </p>

<a name="classecr_1_1_d3_d11_geometry_shader_1aef6761caefcca4d68744f20c0f93a047"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>*  GetOutputStreamStrideArray() const</p>
<p class="NDLRefMemberDescription">Returns the array of strides for the output streams. </p>

<a name="classecr_1_1_d3_d11_geometry_shader_1aff462976351550caa914eb8b56d556f9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetNumStreamOutputStreams() const</p>
<p class="NDLRefMemberDescription">Returns the number of the output streams. </p>

<a name="classecr_1_1_d3_d11_geometry_shader_1abe5f0afa07a1ab24ef5736a4d0f6f289"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetRasterizedStreamOutputStream() const</p>
<p class="NDLRefMemberDescription">Returns the ID of the output stream to be rasterized, if any. </p>
<p class="NDLRefMemberDetailedDescription">If none will be rasterized, this function will return D3D11_SO_NO_RASTERIZED_STREAM. </p>

<a name="classecr_1_1_d3_d11_geometry_shader_1a0fefb88a883f616c783bee3761287f5d"></a>
<p class="NDLRefMemberFunction">ID3D11GeometryShader*  GetGeometryShader() const</p>
<p class="NDLRefMemberDescription">Returns the D3D11 geometry shader. </p>

<a name="classecr_1_1_d3_d11_geometry_shader_1aff3eefe67b49e2cc8832cce1fdc4b19b"></a>
<p class="NDLRefMemberFunction">void  SetGeometryShader(ID3D11GeometryShader* pGeometryShader)</p>
<p class="NDLRefMemberDescription">Sets the D3D11 geometry shader. </p>

<a name="classecr_1_1_d3_d11_geometry_shader_1a18b071fafc317e284caa7efb690f9615"></a>
<p class="NDLRefMemberFunction">virtual void  DestroyRendererData()</p>
<p class="NDLRefMemberDescription">Releases the ID3D11GeometryShader reference. </p>

<a name="classecr_1_1_d3_d11_geometry_shader_1a0030174a1e253099e1b6c6022af2f2e3"></a>
<p class="NDLRefMemberFunction">virtual void  RecreateRendererData()</p>
<p class="NDLRefMemberDescription">Recreates the ID3D11ComptueShader from shader byte code, if it exists. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

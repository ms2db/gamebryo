<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ecr::D3D11RenderStateGroup</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">ecr::D3D11RenderStateGroup</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiRefObject.htm">NiRefObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;D3D11RenderStateGroup.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classecr_1_1_d3_d11_render_state_group.gif" alt="Inheritance graph for ecr::D3D11RenderStateGroup"/>
  <p class="FigureCaption">Inheritance graph for ecr::D3D11RenderStateGroup</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal"><span class="NDLSystemFont">ecr::D3D11RenderStateGroup</span> stores and accumulate render states for a render pass. </p>
<p class="NDLNormal"><span class="NDLSystemFont">ecr::D3D11RenderStateGroup</span> is a class that collects render state values that will be used to create the ID3D11BlendState, ID3D11DepthStencilState, ID3D11RasterizerState, and ID3D11SamplerState objects. The <span class="NDLSystemFont">D3D11RenderStateGroup</span> allows a shader or application to accumulate render states individually before passing them to the <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateManager.htm">D3D11RenderStateManager</a></span> to be turned into D3D11 state objects. Refer to Render State Management in D3D11 for further discussion of how to handle render states. </p>

<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classecr_1_1_d3_d11_render_state_group_1a0cb3a4640c1e68dd8719250f61f0d03f"></a>
<p class="NDLRefMemberFunction">D3D11RenderStateGroup()</p>
<p class="NDLRefMemberDescription">Constructor. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a41837b8aa41aa8c921eebdee2d42891f"></a>
<p class="NDLRefMemberFunction">virtual ~D3D11RenderStateGroup()</p>
<p class="NDLRefMemberDescription">Destructor. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classecr_1_1_d3_d11_render_state_group_1a682cbe997c1b1402ff175771c5f8ceb2"></a>
<p class="NDLRefMemberFunction">void  SetBSAlphaToCoverageEnable(<span class="NDLSystemFont">efd::Bool</span> alphaToCoverageEnable)</p>
<p class="NDLRefMemberDescription">Set BlendState AlphaToCoverage render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1aa8756be9984b03b266a44404c4e25d65"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetBSAlphaToCoverageEnable(<span class="NDLSystemFont">efd::Bool</span>& alphaToCoverageEnable) const</p>
<p class="NDLRefMemberDescription">Output the BlendState AlphaToCoverage render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a818262c0d67fbc931933aad4926248c4"></a>
<p class="NDLRefMemberFunction">void  RemoveBSAlphaToCoverageEnable()</p>
<p class="NDLRefMemberDescription">Remove the BlendState AlphaToCoverage render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a758814c08aa071c20706d03901f27f90"></a>
<p class="NDLRefMemberFunction">void  SetBSIndependentBlendEnable(<span class="NDLSystemFont">efd::Bool</span> independentBlendEnable)</p>
<p class="NDLRefMemberDescription">Set BlendState IndependentBlendEnable render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1ab6cb2c52662d4e0d7afa188fb1c5d3d1"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetBSIndependentBlendEnable(<span class="NDLSystemFont">efd::Bool</span>& independentBlendEnable) const</p>
<p class="NDLRefMemberDescription">Output the BlendState IndependentBlendEnable render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a13e9f6f48582c224ae9e5718c097a700"></a>
<p class="NDLRefMemberFunction">void  RemoveBSIndependentBlendEnable()</p>
<p class="NDLRefMemberDescription">Remove the BlendState IndependentBlendEnable render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a2741f2cb0400fe6222a13a39638d1fd3"></a>
<p class="NDLRefMemberFunction">void  SetBSBlendEnable(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget, <br/><span class="NDLSystemFont">efd::Bool</span> blendEnable)</p>
<p class="NDLRefMemberDescription">Set BlendState BlendEnable render state for the given render target in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a21cef12ff958681d7eb001d4a56026f1"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetBSBlendEnable(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget, <br/><span class="NDLSystemFont">efd::Bool</span>& blendEnable) const</p>
<p class="NDLRefMemberDescription">Output the BlendState BlendEnable render state for the given render target in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1ae295fc2f764af1c652788454aeb49f4c"></a>
<p class="NDLRefMemberFunction">void  RemoveBSBlendEnable(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget)</p>
<p class="NDLRefMemberDescription">Remove the BlendState BlendEnable render state for the given render target from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a116729e9c69fd40b2848b468ba076753"></a>
<p class="NDLRefMemberFunction">void  SetBSSrcBlend(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget, <br/>D3D11_BLEND blend)</p>
<p class="NDLRefMemberDescription">Set BlendState SrcBlend render state for the given render target in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a1926c6121b2f82d1414fa90a2799059f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetBSSrcBlend(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget, <br/>D3D11_BLEND& blend) const</p>
<p class="NDLRefMemberDescription">Output the BlendState SrcBlend render state for the given render target in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1aad7776333793645372993e2f1ed3cde5"></a>
<p class="NDLRefMemberFunction">void  RemoveBSSrcBlend(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget)</p>
<p class="NDLRefMemberDescription">Remove the BlendState SrcBlend render state for the given render target from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a578ce69688db53c794cb44b6925d3bb3"></a>
<p class="NDLRefMemberFunction">void  SetBSDestBlend(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget, <br/>D3D11_BLEND blend)</p>
<p class="NDLRefMemberDescription">Set BlendState DestBlend render state for the given render target in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a406ffcc933ebdd1009eb5f122738144c"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetBSDestBlend(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget, <br/>D3D11_BLEND& blend) const</p>
<p class="NDLRefMemberDescription">Output the BlendState DestBlend render state for the given render target in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a8a14de001564a4273e2295ded233abfb"></a>
<p class="NDLRefMemberFunction">void  RemoveBSDestBlend(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget)</p>
<p class="NDLRefMemberDescription">Remove the BlendState DestBlend render state for the given render target from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a45e202b8b3c8cfb016bef55a37dcc3e0"></a>
<p class="NDLRefMemberFunction">void  SetBSBlendOp(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget, <br/>D3D11_BLEND_OP blendOp)</p>
<p class="NDLRefMemberDescription">Set BlendState BlendOp render state for the given render target in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a64e5d080a48903b55b46c761220f2612"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetBSBlendOp(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget, <br/>D3D11_BLEND_OP& blendOp) const</p>
<p class="NDLRefMemberDescription">Output the BlendState BlendOp render state for the given render target in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1ab27bc112d746f101d7ef3eeebab09db4"></a>
<p class="NDLRefMemberFunction">void  RemoveBSBlendOp(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget)</p>
<p class="NDLRefMemberDescription">Remove the BlendState BlendOp render state for the given render target from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a6924eafbfeeb8c84c26f2a5ff022b689"></a>
<p class="NDLRefMemberFunction">void  SetBSSrcBlendAlpha(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget, <br/>D3D11_BLEND blend)</p>
<p class="NDLRefMemberDescription">Set BlendState SrcBlendAlpha render state for the given render target in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1ac52f64e935e2b9a2ecb077b13fe7e025"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetBSSrcBlendAlpha(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget, <br/>D3D11_BLEND& blend) const</p>
<p class="NDLRefMemberDescription">Output the BlendState SrcBlendAlpha render state for the given render target in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a0db55d63068462b6e0418cf241ce4de6"></a>
<p class="NDLRefMemberFunction">void  RemoveBSSrcBlendAlpha(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget)</p>
<p class="NDLRefMemberDescription">Remove the BlendState SrcBlendAlpha render state for the given render target from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1afb5ac69558b5238bdcae40e17339787a"></a>
<p class="NDLRefMemberFunction">void  SetBSDestBlendAlpha(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget, <br/>D3D11_BLEND blend)</p>
<p class="NDLRefMemberDescription">Set BlendState DestBlendAlpha render state for the given render target in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a35749a0d871daacd65e1a11df45d107e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetBSDestBlendAlpha(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget, <br/>D3D11_BLEND& blend) const</p>
<p class="NDLRefMemberDescription">Output the BlendState DestBlendAlpha render state for the given render target in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a761d081d5a483579483f929dcf71591c"></a>
<p class="NDLRefMemberFunction">void  RemoveBSDestBlendAlpha(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget)</p>
<p class="NDLRefMemberDescription">Remove the BlendState DestBlendAlpha render state for the given render target from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1adb01ce5453bdc58269ce75372122c2a9"></a>
<p class="NDLRefMemberFunction">void  SetBSBlendOpAlpha(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget, <br/>D3D11_BLEND_OP blendOp)</p>
<p class="NDLRefMemberDescription">Set BlendState BlendOpAlpha render state for the given render target in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1acd5e2f736adfeb69d694ed56ba059742"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetBSBlendOpAlpha(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget, <br/>D3D11_BLEND_OP& blendOp) const</p>
<p class="NDLRefMemberDescription">Output the BlendState BlendOpAlpha render state for the given render target in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a3f58b97420a691b383400414a25b4195"></a>
<p class="NDLRefMemberFunction">void  RemoveBSBlendOpAlpha(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget)</p>
<p class="NDLRefMemberDescription">Remove the BlendState BlendOpAlpha render state for the given render target from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a78ba540715bbae266cc9d9de64cabe7d"></a>
<p class="NDLRefMemberFunction">void  SetBSRenderTargetWriteMask(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a59a3838ab5cdfe87f98f5b8371e4e91d">efd::UInt8</a></span> writeMask)</p>
<p class="NDLRefMemberDescription">Set BlendState RenderTargetWriteMask render state for the given render target in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a5c5fb33841a928904dd35e71d03ab880"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetBSRenderTargetWriteMask(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a59a3838ab5cdfe87f98f5b8371e4e91d">efd::UInt8</a></span>& writeMask) const</p>
<p class="NDLRefMemberDescription">Output the BlendState RenderTargetWriteMask render state for the given render target in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a5fe1baebd5b8efcaf7a95a7008738853"></a>
<p class="NDLRefMemberFunction">void  RemoveBSRenderTargetWriteMask(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> renderTarget)</p>
<p class="NDLRefMemberDescription">Remove the BlendState RenderTargetWriteMask render state for the given render target from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1acec02a45cae958cc4bebe4f40525f181"></a>
<p class="NDLRefMemberFunction">void  SetBlendFactor(const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> blendFactor)</p>
<p class="NDLRefMemberDescription">Set Blend Factor render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a23489c0c6803213a0c3d202b327b4758"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetBlendFactor(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> blendFactor) const</p>
<p class="NDLRefMemberDescription">Output the Blend Factor render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a345c139d02f8bb3c55d5a72426a6f7a9"></a>
<p class="NDLRefMemberFunction">void  RemoveBlendFactor()</p>
<p class="NDLRefMemberDescription">Remove the Blend Factor render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1ae29d62cbb39ac1e11f7008fccedcfc03"></a>
<p class="NDLRefMemberFunction">void  SetSampleMask(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> sampleMask)</p>
<p class="NDLRefMemberDescription">Set Sample Mask render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a477671ba22c968550172fe092a162a8c"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetSampleMask(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& sampleMask) const</p>
<p class="NDLRefMemberDescription">Output the Sample Mask render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a78053ce4680eb3f4f225ce43a443f1f2"></a>
<p class="NDLRefMemberFunction">void  RemoveSampleMask()</p>
<p class="NDLRefMemberDescription">Remove the Sample Mask render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a785815fda8046530ba04beaa3b300e0a"></a>
<p class="NDLRefMemberFunction">void  SetDSSDepthEnable(<span class="NDLSystemFont">efd::Bool</span> depthEnable)</p>
<p class="NDLRefMemberDescription">Set DepthStencilState DepthEnable render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a2e3856ae841b1948bd0d7ab85344246e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetDSSDepthEnable(<span class="NDLSystemFont">efd::Bool</span>& depthEnable) const</p>
<p class="NDLRefMemberDescription">Output the DepthStencilState DepthEnable render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1ae8cd2cc992b15e9125a28e327ea2eb64"></a>
<p class="NDLRefMemberFunction">void  RemoveDSSDepthEnable()</p>
<p class="NDLRefMemberDescription">Remove the DepthStencilState DepthEnable render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a82f95a9bc7b29cf071088bfce28a8132"></a>
<p class="NDLRefMemberFunction">void  SetDSSDepthWriteMask(D3D11_DEPTH_WRITE_MASK depthWriteMask)</p>
<p class="NDLRefMemberDescription">Set DepthStencilState DepthWriteMask render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a77df461a6d3d94e4dbb2ad2ee251d5de"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetDSSDepthWriteMask(D3D11_DEPTH_WRITE_MASK& depthWriteMask) const</p>
<p class="NDLRefMemberDescription">Output the DepthStencilState DepthWriteMask render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a10bd1499dafc9e8d71c83dd99202e028"></a>
<p class="NDLRefMemberFunction">void  RemoveDSSDepthWriteMask()</p>
<p class="NDLRefMemberDescription">Remove the DepthStencilState DepthWriteMask render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a4bef1a1fee045d062ef83e4a735b3cd8"></a>
<p class="NDLRefMemberFunction">void  SetDSSDepthFunc(D3D11_COMPARISON_FUNC depthFunc)</p>
<p class="NDLRefMemberDescription">Set DepthStencilState DepthFunc render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1aa72364e5750cfe3d16e627d87e07ba95"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetDSSDepthFunc(D3D11_COMPARISON_FUNC& depthFunc) const</p>
<p class="NDLRefMemberDescription">Output the DepthStencilState DepthFunc render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1aa26e3a67f8b3a64da5a1b40c0155c5f9"></a>
<p class="NDLRefMemberFunction">void  RemoveDSSDepthFunc()</p>
<p class="NDLRefMemberDescription">Remove the DepthStencilState DepthFunc render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a99dede44ea2af1a5219116e3281858fc"></a>
<p class="NDLRefMemberFunction">void  SetDSSStencilEnable(<span class="NDLSystemFont">efd::Bool</span> stencilEnable)</p>
<p class="NDLRefMemberDescription">Set DepthStencilState StencilEnable render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a02b19ffecc44a21d4c75472d3e2bb204"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetDSSStencilEnable(<span class="NDLSystemFont">efd::Bool</span>& stencilEnable) const</p>
<p class="NDLRefMemberDescription">Output the DepthStencilState StencilEnable render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a9a35459077af08c95d41c7abd126536c"></a>
<p class="NDLRefMemberFunction">void  RemoveDSSStencilEnable()</p>
<p class="NDLRefMemberDescription">Remove the DepthStencilState StencilEnable render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a4ca55e727ca51df887771b2e0e4aeaec"></a>
<p class="NDLRefMemberFunction">void  SetDSSStencilReadMask(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a59a3838ab5cdfe87f98f5b8371e4e91d">efd::UInt8</a></span> stencilReadMask)</p>
<p class="NDLRefMemberDescription">Set DepthStencilState StencilReadMask render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a38b34fd5f7345a78d8afd2efe79d2103"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetDSSStencilReadMask(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a59a3838ab5cdfe87f98f5b8371e4e91d">efd::UInt8</a></span>& stencilReadMask) const</p>
<p class="NDLRefMemberDescription">Output the DepthStencilState StencilReadMask render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a4efdbb123b140ce70cfde939d16cd31e"></a>
<p class="NDLRefMemberFunction">void  RemoveDSSStencilReadMask()</p>
<p class="NDLRefMemberDescription">Remove the DepthStencilState StencilReadMask render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a59a3a15e93960641154f8672174270d8"></a>
<p class="NDLRefMemberFunction">void  SetDSSStencilWriteMask(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a59a3838ab5cdfe87f98f5b8371e4e91d">efd::UInt8</a></span> stencilWriteMask)</p>
<p class="NDLRefMemberDescription">Set DepthStencilState StencilWriteMask render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1afd6f76dd1b686f36211c220a6b417e36"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetDSSStencilWriteMask(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a59a3838ab5cdfe87f98f5b8371e4e91d">efd::UInt8</a></span>& stencilWriteMask) const</p>
<p class="NDLRefMemberDescription">Output the DepthStencilState StencilWriteMask render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1aa3384b121ee6a35b572fe2926e189f36"></a>
<p class="NDLRefMemberFunction">void  RemoveDSSStencilWriteMask()</p>
<p class="NDLRefMemberDescription">Remove the DepthStencilState StencilWriteMask render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1af828b5c4be8216b1c84e7c232cea3615"></a>
<p class="NDLRefMemberFunction">void  SetDSSFrontFaceStencilFailOp(D3D11_STENCIL_OP stencilOp)</p>
<p class="NDLRefMemberDescription">Set DepthStencilState StencilFailOp render state for front-facing triangles in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a2d7304bc1072b96b29aa1ce48329d453"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetDSSFrontFaceStencilFailOp(D3D11_STENCIL_OP& stencilOp) const</p>
<p class="NDLRefMemberDescription">Output the DepthStencilState StencilFailOp render state for front-facing triangles in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a4b2f2488a66d4cf8c119fa6209864ae7"></a>
<p class="NDLRefMemberFunction">void  RemoveDSSFrontFaceStencilFailOp()</p>
<p class="NDLRefMemberDescription">Remove the DepthStencilState StencilFailOp render state for front-facing triangles from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a5953195ed70d82fe99d01357d759a638"></a>
<p class="NDLRefMemberFunction">void  SetDSSFrontFaceStencilDepthFailOp(D3D11_STENCIL_OP stencilOp)</p>
<p class="NDLRefMemberDescription">Set DepthStencilState StencilDepthFailOp render state for front-facing triangles in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1aea3b65a4476dbefbe17969f92d29f69b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetDSSFrontFaceStencilDepthFailOp(D3D11_STENCIL_OP& stencilOp) const</p>
<p class="NDLRefMemberDescription">Output the DepthStencilState StencilDepthFailOp render state for front-facing triangles in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a3f8f459ab18311526b126d140d4e5970"></a>
<p class="NDLRefMemberFunction">void  RemoveDSSFrontFaceStencilDepthFailOp()</p>
<p class="NDLRefMemberDescription">Remove the DepthStencilState StencilDepthFailOp render state for front-facing triangles from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a2e416fb4e6463ead5fcffa77d65d8a0b"></a>
<p class="NDLRefMemberFunction">void  SetDSSFrontFaceStencilPassOp(D3D11_STENCIL_OP stencilOp)</p>
<p class="NDLRefMemberDescription">Set DepthStencilState StencilPassOp render state for front-facing triangles in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1af1943af769d894aa8940de3ec38feb87"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetDSSFrontFaceStencilPassOp(D3D11_STENCIL_OP& stencilOp) const</p>
<p class="NDLRefMemberDescription">Output the DepthStencilState StencilPassOp render state for front-facing triangles in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1af45fa7b7b0607c18052c10e9b4a8afd6"></a>
<p class="NDLRefMemberFunction">void  RemoveDSSFrontFaceStencilPassOp()</p>
<p class="NDLRefMemberDescription">Remove the DepthStencilState StencilPassOp render state for front-facing triangles from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a0d710dab36600bea78df62d1ce2c0737"></a>
<p class="NDLRefMemberFunction">void  SetDSSFrontFaceStencilFunc(D3D11_COMPARISON_FUNC eStencilFunc)</p>
<p class="NDLRefMemberDescription">Set DepthStencilState StencilFunc render state for front-facing triangles in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1aa8f7fbdfc08fdea021b9d8f30fd97791"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetDSSFrontFaceStencilFunc(D3D11_COMPARISON_FUNC& eStencilFunc) const</p>
<p class="NDLRefMemberDescription">Output the DepthStencilState StencilFunc render state for front-facing triangles in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1ac1e65560725d9d3b9c12eedaafa85a16"></a>
<p class="NDLRefMemberFunction">void  RemoveDSSFrontFaceStencilFunc()</p>
<p class="NDLRefMemberDescription">Remove the DepthStencilState StencilFunc render state for front-facing triangles from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1ab8b2a838fbc162f688eb9c330aa1b964"></a>
<p class="NDLRefMemberFunction">void  SetDSSBackFaceStencilFailOp(D3D11_STENCIL_OP stencilOp)</p>
<p class="NDLRefMemberDescription">Set DepthStencilState StencilFailOp render state for back-facing triangles in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1aaf9596d4d08a30ee940f432aca3c1a07"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetDSSBackFaceStencilFailOp(D3D11_STENCIL_OP& stencilOp) const</p>
<p class="NDLRefMemberDescription">Output the DepthStencilState StencilFailOp render state for back-facing triangles in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a0abd6836cd0abbd14095ec37059ee746"></a>
<p class="NDLRefMemberFunction">void  RemoveDSSBackFaceStencilFailOp()</p>
<p class="NDLRefMemberDescription">Remove the DepthStencilState StencilFailOp render state for back-facing triangles from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a7028a5c06c1a31ab2297845656887426"></a>
<p class="NDLRefMemberFunction">void  SetDSSBackFaceStencilDepthFailOp(D3D11_STENCIL_OP stencilOp)</p>
<p class="NDLRefMemberDescription">Set DepthStencilState eStencilDepthFailOp render state for back-facing triangles in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a6ba16de4438d5d077c5c798d78c2a422"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetDSSBackFaceStencilDepthFailOp(D3D11_STENCIL_OP& stencilOp) const</p>
<p class="NDLRefMemberDescription">Output the DepthStencilState eStencilDepthFailOp render state for back-facing triangles in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1ad8594f55e781bcde5fae7cfe49c043cb"></a>
<p class="NDLRefMemberFunction">void  RemoveDSSBackFaceStencilDepthFailOp()</p>
<p class="NDLRefMemberDescription">Remove the DepthStencilState eStencilDepthFailOp render state for back-facing triangles from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1ae5ad5fb32040f875df13f283010b9ab7"></a>
<p class="NDLRefMemberFunction">void  SetDSSBackFaceStencilPassOp(D3D11_STENCIL_OP stencilOp)</p>
<p class="NDLRefMemberDescription">Set DepthStencilState StencilPassOp render state for back-facing triangles in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a9d3a12afc6e21697cf88f1af4bb9fd9d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetDSSBackFaceStencilPassOp(D3D11_STENCIL_OP& stencilOp) const</p>
<p class="NDLRefMemberDescription">Output the DepthStencilState StencilPassOp render state for back-facing triangles in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1aee691a8578dd9384af462a3d72d2da77"></a>
<p class="NDLRefMemberFunction">void  RemoveDSSBackFaceStencilPassOp()</p>
<p class="NDLRefMemberDescription">Remove the DepthStencilState StencilPassOp render state for back-facing triangles from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1ad374624032a8e36302fe2d80b6360f37"></a>
<p class="NDLRefMemberFunction">void  SetDSSBackFaceStencilFunc(D3D11_COMPARISON_FUNC eStencilFunc)</p>
<p class="NDLRefMemberDescription">Set DepthStencilState StencilFunc render state for back-facing triangles in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1ac0e0d3bb10e600f50a37b0892d7a40de"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetDSSBackFaceStencilFunc(D3D11_COMPARISON_FUNC& eStencilFunc) const</p>
<p class="NDLRefMemberDescription">Output the DepthStencilState StencilFunc render state for back-facing triangles in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a10e4f26fea34b01624eba29d770c8000"></a>
<p class="NDLRefMemberFunction">void  RemoveDSSBackFaceStencilFunc()</p>
<p class="NDLRefMemberDescription">Remove the DepthStencilState StencilFunc render state for back-facing triangles from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1af47789175ec88fc1f9db57d39e9373da"></a>
<p class="NDLRefMemberFunction">void  SetStencilRef(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> stencilRef)</p>
<p class="NDLRefMemberDescription">Set Stencil Ref render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a2db88e006e7856854216da67564db57a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetStencilRef(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& stencilRef) const</p>
<p class="NDLRefMemberDescription">Output the Stencil Ref render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a86099da0afebf12c73434cbfc84aa2d0"></a>
<p class="NDLRefMemberFunction">void  RemoveStencilRef()</p>
<p class="NDLRefMemberDescription">Remove the Stencil Ref render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1afb9d0d4c206e8a69166ae61a8261adc2"></a>
<p class="NDLRefMemberFunction">void  SetRSFillMode(D3D11_FILL_MODE fillMode)</p>
<p class="NDLRefMemberDescription">Set RasterizerState FillMode render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a501c40edee7e8bd4617db87761fe6d50"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetRSFillMode(D3D11_FILL_MODE& fillMode) const</p>
<p class="NDLRefMemberDescription">Output the RasterizerState FillMode render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1aad44fd19052cd39ca44347fdb3a82b1c"></a>
<p class="NDLRefMemberFunction">void  RemoveRSFillMode()</p>
<p class="NDLRefMemberDescription">Remove the RasterizerState FillMode render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a5921be0ac5602296eb1b60ae5b566eb3"></a>
<p class="NDLRefMemberFunction">void  SetRSCullMode(D3D11_CULL_MODE cullMode)</p>
<p class="NDLRefMemberDescription">Set RasterizerState CullMode render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a9fccd47e08901a9cd333b8416047abd1"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetRSCullMode(D3D11_CULL_MODE& cullMode) const</p>
<p class="NDLRefMemberDescription">Output the RasterizerState CullMode render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a4ce2d508f9a1968cdf42b9f991301f96"></a>
<p class="NDLRefMemberFunction">void  RemoveRSCullMode()</p>
<p class="NDLRefMemberDescription">Remove the RasterizerState CullMode render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a504c920dd87220c45d30344f09e15b72"></a>
<p class="NDLRefMemberFunction">void  SetRSFrontCounterClockwise(<span class="NDLSystemFont">efd::Bool</span> frontCounterClockwise)</p>
<p class="NDLRefMemberDescription">Set RasterizerState FrontCounterClockwise render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1ad98109e70a9c05b552faef5f447655a8"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetRSFrontCounterClockwise(<span class="NDLSystemFont">efd::Bool</span>& frontCounterClockwise) const</p>
<p class="NDLRefMemberDescription">Output the RasterizerState FrontCounterClockwise render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a141f372a49627f98f437af9623ab38f3"></a>
<p class="NDLRefMemberFunction">void  RemoveRSFrontCounterClockwise()</p>
<p class="NDLRefMemberDescription">Remove the RasterizerState FrontCounterClockwise render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a472f74388e2dfb2ed06b952f51001905"></a>
<p class="NDLRefMemberFunction">void  SetRSDepthBias(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span> depthBias)</p>
<p class="NDLRefMemberDescription">Set RasterizerState DepthBias render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a3bcdf87592b96717f207d6cdee48164c"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetRSDepthBias(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span>& depthBias) const</p>
<p class="NDLRefMemberDescription">Output the RasterizerState DepthBias render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a65f564d7099ece4d8dbebbb7a7563c46"></a>
<p class="NDLRefMemberFunction">void  RemoveRSDepthBias()</p>
<p class="NDLRefMemberDescription">Remove the RasterizerState DepthBias render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a5c145b3d224c3a06cefa8b5dfde6ecd4"></a>
<p class="NDLRefMemberFunction">void  SetRSDepthBiasClamp(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> depthBiasClamp)</p>
<p class="NDLRefMemberDescription">Set RasterizerState DepthBiasClamp render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1abfccba459e80e1ec38bbf57327d3fbe6"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetRSDepthBiasClamp(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>& depthBiasClamp) const</p>
<p class="NDLRefMemberDescription">Output the RasterizerState DepthBiasClamp render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1acc7848ad02deea7006c43c3952d9a674"></a>
<p class="NDLRefMemberFunction">void  RemoveRSDepthBiasClamp()</p>
<p class="NDLRefMemberDescription">Remove the RasterizerState DepthBiasClamp render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1ab320d8b865ad2bb12e3abab50b7f355e"></a>
<p class="NDLRefMemberFunction">void  SetRSSlopeScaledDepthBias(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> slopeScaledDepthBias)</p>
<p class="NDLRefMemberDescription">Set RasterizerState SlopeScaledDepthBias render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1afac96f5d17a3f50e98b683f2189c5e46"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetRSSlopeScaledDepthBias(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>& slopeScaledDepthBias) const</p>
<p class="NDLRefMemberDescription">Output the RasterizerState SlopeScaledDepthBias render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1ab16db79e6adbaef04eca291b491636c6"></a>
<p class="NDLRefMemberFunction">void  RemoveRSSlopeScaledDepthBias()</p>
<p class="NDLRefMemberDescription">Remove the RasterizerState SlopeScaledDepthBias render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a3c67380db5c52c9393ca352256cfa3a6"></a>
<p class="NDLRefMemberFunction">void  SetRSDepthClipEnable(<span class="NDLSystemFont">efd::Bool</span> depthClipEnable)</p>
<p class="NDLRefMemberDescription">Set RasterizerState DepthClipEnable render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a8d10bb3c9d05870aba2159c4d0db69bf"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetRSDepthClipEnable(<span class="NDLSystemFont">efd::Bool</span>& depthClipEnable) const</p>
<p class="NDLRefMemberDescription">Output the RasterizerState DepthClipEnable render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a6235c15c6f39047847f419b882aa2c55"></a>
<p class="NDLRefMemberFunction">void  RemoveRSDepthClipEnable()</p>
<p class="NDLRefMemberDescription">Remove the RasterizerState DepthClipEnable render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a5fdecf1f80d19b94a50bf52e49ea79b7"></a>
<p class="NDLRefMemberFunction">void  SetRSScissorEnable(<span class="NDLSystemFont">efd::Bool</span> scissorEnable)</p>
<p class="NDLRefMemberDescription">Set RasterizerState ScissorEnable render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a74f7b6ba83e74aac5585084965486fc8"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetRSScissorEnable(<span class="NDLSystemFont">efd::Bool</span>& scissorEnable) const</p>
<p class="NDLRefMemberDescription">Output the RasterizerState ScissorEnable render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a7b857497ab0340c4bf9f3c5892839fae"></a>
<p class="NDLRefMemberFunction">void  RemoveRSScissorEnable()</p>
<p class="NDLRefMemberDescription">Remove the RasterizerState ScissorEnable render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a20285b12d5d68c9758ec0f3f1c62dc27"></a>
<p class="NDLRefMemberFunction">void  SetRSMultisampleEnable(<span class="NDLSystemFont">efd::Bool</span> multisampleEnable)</p>
<p class="NDLRefMemberDescription">Set RasterizerState MultisampleEnable render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a466deb5fbc81fed5cdba2b1813fa3397"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetRSMultisampleEnable(<span class="NDLSystemFont">efd::Bool</span>& multisampleEnable) const</p>
<p class="NDLRefMemberDescription">Output the RasterizerState MultisampleEnable render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a2b2ed9cabe9a009a10e75802dba29cdf"></a>
<p class="NDLRefMemberFunction">void  RemoveRSMultisampleEnable()</p>
<p class="NDLRefMemberDescription">Remove the RasterizerState MultisampleEnable render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a53d72e17f5b199648bfe8b9003ca829d"></a>
<p class="NDLRefMemberFunction">void  SetRSAntialiasedLineEnable(<span class="NDLSystemFont">efd::Bool</span> antialiasedLineEnable)</p>
<p class="NDLRefMemberDescription">Set RasterizerState AntialiasedLineEnable render state in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a614ab611088f8011e1618aa51c6104a0"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetRSAntialiasedLineEnable(<span class="NDLSystemFont">efd::Bool</span>& antialiasedLineEnable) const</p>
<p class="NDLRefMemberDescription">Output the RasterizerState AntialiasedLineEnable render state in the render state group, and return whether or not that render state has actually been set in the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a03918f2012c28713cd5ae16bee4681bb"></a>
<p class="NDLRefMemberFunction">void  RemoveRSAntialiasedLineEnable()</p>
<p class="NDLRefMemberDescription">Remove the RasterizerState AntialiasedLineEnable render state from the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a5746628b0c7e0f1e37341761a5b6d952"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="ecr__D3D11RenderStateGroup__Sampler.htm">Sampler</a></span>*  AddSampler(const <span class="NDLSystemFont"><a href="../efd/efd__FixedString.htm">efd::FixedString</a></span>& samplerName)</p>
<p class="NDLRefMemberDescription">Add a new <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateGroup__Sampler.htm">Sampler</a></span> object with the given name to track sampler states. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1acb0650f86a50453f0515214142faafb8"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="ecr__D3D11RenderStateGroup__Sampler.htm">Sampler</a></span>*  GetSampler(const <span class="NDLSystemFont"><a href="../efd/efd__FixedString.htm">efd::FixedString</a></span>& samplerName) const</p>
<p class="NDLRefMemberDescription">Return the <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateGroup__Sampler.htm">Sampler</a></span> object with the given name, or NULL if one does not exist. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a18782b39b639460d8a30e6f7e14c8869"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  RemoveSampler(const <span class="NDLSystemFont"><a href="../efd/efd__FixedString.htm">efd::FixedString</a></span>& samplerName)</p>
<p class="NDLRefMemberDescription">Remove the <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateGroup__Sampler.htm">Sampler</a></span> object with the given name, and return whether or not a match was found on the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1ac80938f61c53972d5226ef032705bbb7"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  RemoveSampler(<span class="NDLSystemFont"><a href="ecr__D3D11RenderStateGroup__Sampler.htm">Sampler</a></span>* pSampler)</p>
<p class="NDLRefMemberDescription">Remove the given <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateGroup__Sampler.htm">Sampler</a></span> object, and return whether or not a match was found on the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a0cf07cda185b22343d89d5d3c3eb318e"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateGroup__Sampler.htm">Sampler</a></span>*  GetFirstSampler() const</p>
<p class="NDLRefMemberDescription">Return the first <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateGroup__Sampler.htm">Sampler</a></span> object on the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a7a1a4076859d01e75f72ebf48efbb2b9"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateGroup__Sampler.htm">Sampler</a></span>*  GetNextSampler(const <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateGroup__Sampler.htm">Sampler</a></span>* pSampler) const</p>
<p class="NDLRefMemberDescription">Return the next <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateGroup__Sampler.htm">Sampler</a></span> object on the render state group. </p>

<a name="classecr_1_1_d3_d11_render_state_group_1a0a434a005ade161989df6fc9b0abb3b7"></a>
<p class="NDLRefMemberFunction">void  SetBlendStateDesc(<br/>const D3D11_BLEND_DESC& blendDesc, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> validFlags, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a59a3838ab5cdfe87f98f5b8371e4e91d">efd::UInt8</a></span> renderTargetValidFlags)</p>
<p class="NDLRefMemberDescription">Set a blend state desc on a render state group at once, rather than through individual states. </p>
<p class="NDLRefMemberDetailedDescription">The data in the provided blend state desc and valid flags will overwrite the data currently stored in the render state group.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">blendDesc</span></td>
    <td>The blend state desc to set. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">validFlags</span></td>
    <td>The set of flags from <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateManager.htm#classecr_1_1_d3_d11_render_state_manager_1abe011ff8086a84209d655bb15ffba328">D3D11RenderStateManager::BlendStateValidFlags</a></span> that indicate which states in the blend state desc are valid. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">renderTargetValidFlags</span></td>
    <td>An array of flags from <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateManager.htm#classecr_1_1_d3_d11_render_state_manager_1a6909e7b8e760fae65d0b8ad325e917e1">D3D11RenderStateManager::BlendStateRenderTargetValidFlags</a></span> that indicate which render states are valid for each render target. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_1_1_d3_d11_render_state_group_1a8c6fc3d13dc885c1be76321c30a82ff0"></a>
<p class="NDLRefMemberFunction">void  GetBlendStateDesc(<br/>D3D11_BLEND_DESC& blendDesc, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& validFlags, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a59a3838ab5cdfe87f98f5b8371e4e91d">efd::UInt8</a></span> renderTargetValidFlags) const</p>
<p class="NDLRefMemberDescription">Returns the currently set blend state desc on a render state group. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">blendDesc</span></td>
    <td>Outputs the blend state desc. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">validFlags</span></td>
    <td>Outputs the set of flags from <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateManager.htm#classecr_1_1_d3_d11_render_state_manager_1abe011ff8086a84209d655bb15ffba328">D3D11RenderStateManager::BlendStateValidFlags</a></span> that indicate which states in the blend state desc are valid. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">renderTargetValidFlags</span></td>
    <td>Outputs an array of flags from <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateManager.htm#classecr_1_1_d3_d11_render_state_manager_1a6909e7b8e760fae65d0b8ad325e917e1">D3D11RenderStateManager::BlendStateRenderTargetValidFlags</a></span> that indicate which render states are valid for each render target. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_1_1_d3_d11_render_state_group_1aceb9229e3d8c1c2aae68ee5280a6fce9"></a>
<p class="NDLRefMemberFunction">void  SetDepthStencilStateDesc(<br/>const D3D11_DEPTH_STENCIL_DESC& depthStencilDesc, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> validFlags)</p>
<p class="NDLRefMemberDescription">Set a depth stencil state desc on a render state group at once, rather than through individual states. </p>
<p class="NDLRefMemberDetailedDescription">The data in the provided depth stencil state desc and valid flags will overwrite the data currently stored in the render state group.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">depthStencilDesc</span></td>
    <td>The depth stencil state desc to set. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">validFlags</span></td>
    <td>The set of flags from <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateManager.htm#classecr_1_1_d3_d11_render_state_manager_1a80c9c516eac131a0653d0bb0fa89e5ff">D3D11RenderStateManager::DepthStencilStateValidFlags</a></span> that indicate which states in the depth stencil state desc are valid. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_1_1_d3_d11_render_state_group_1acedcbcec01fc43267586526c6cdea382"></a>
<p class="NDLRefMemberFunction">void  GetDepthStencilStateDesc(<br/>D3D11_DEPTH_STENCIL_DESC& depthStencilDesc, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& validFlags) const</p>
<p class="NDLRefMemberDescription">Returns the currently set depth stencil state desc. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">depthStencilDesc</span></td>
    <td>Outputs the depth stencil state desc. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">validFlags</span></td>
    <td>Outputs the set of flags from <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateManager.htm#classecr_1_1_d3_d11_render_state_manager_1a80c9c516eac131a0653d0bb0fa89e5ff">D3D11RenderStateManager::DepthStencilStateValidFlags</a></span> that indicate which states in the depth stencil state desc are valid. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_1_1_d3_d11_render_state_group_1a45a0f6c8813dbfb15729d67a60d3e8e9"></a>
<p class="NDLRefMemberFunction">void  SetRasterizerStateDesc(<br/>const D3D11_RASTERIZER_DESC& rasterizerDesc, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> validFlags)</p>
<p class="NDLRefMemberDescription">Set a rasterizer state desc on a render state group at once, rather than through individual states. </p>
<p class="NDLRefMemberDetailedDescription">The data in the provided rasterizer state desc and valid flags will overwrite the data currently stored in the render state group.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">rasterizerDesc</span></td>
    <td>The rasterizer state desc to set. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">validFlags</span></td>
    <td>The set of flags from <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateManager.htm#classecr_1_1_d3_d11_render_state_manager_1accec602e807e7444b37eabace8606d5a">D3D11RenderStateManager::RasterizerStateValidFlags</a></span> that indicate which states in the rasterizer state desc are valid. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_1_1_d3_d11_render_state_group_1a74ffdee619eea65096fd8e8ded374f72"></a>
<p class="NDLRefMemberFunction">void  GetRasterizerStateDesc(<br/>D3D11_RASTERIZER_DESC& rasterizerDesc, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& validFlags) const</p>
<p class="NDLRefMemberDescription">Returns the currently set rasterizer state desc. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">rasterizerDesc</span></td>
    <td>Outputs the rasterizer state desc. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">validFlags</span></td>
    <td>Outputs the set of flags from <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateManager.htm#classecr_1_1_d3_d11_render_state_manager_1accec602e807e7444b37eabace8606d5a">D3D11RenderStateManager::RasterizerStateValidFlags</a></span> that indicate which states in the rasterizer state desc are valid. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_1_1_d3_d11_render_state_group_1ab4254c687e5625e79b6b9f9e851ac14f"></a>
<p class="NDLRefMemberFunction">void  SetSamplerDesc(<br/><span class="NDLSystemFont"><a href="../efd/efd__FixedString.htm">efd::FixedString</a></span>& samplerName, <br/>const D3D11_SAMPLER_DESC& samplerDesc, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> samplerValidFlags)</p>
<p class="NDLRefMemberDescription">Set a sampler desc on a sampler in a render state group at once, rather than through individual states. </p>
<p class="NDLRefMemberDetailedDescription">The data in the provided sampler desc and valid flags will overwrite the data currently stored in the sampler.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">samplerName</span></td>
    <td>The name of the sampler to affect. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">samplerDesc</span></td>
    <td>The sampler desc to set. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">samplerValidFlags</span></td>
    <td>The set of flags from <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateManager.htm#classecr_1_1_d3_d11_render_state_manager_1a15e5ad98e89dde9c9b51c5b619f5cef0">D3D11RenderStateManager::SamplerValidFlags</a></span> that indicate which states in the sampler desc are valid. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_1_1_d3_d11_render_state_group_1a7f190e3b98b7d8acb8c85747df62bddf"></a>
<p class="NDLRefMemberFunction">void  GetSamplerDesc(<br/><span class="NDLSystemFont"><a href="../efd/efd__FixedString.htm">efd::FixedString</a></span>& samplerName, <br/>D3D11_SAMPLER_DESC& samplerDesc, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& samplerValidFlags) const</p>
<p class="NDLRefMemberDescription">Returns the currently set sampler desc for a sampler. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">samplerName</span></td>
    <td>The name of the sampler to affect. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">samplerDesc</span></td>
    <td>Outputs the sampler desc. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">samplerValidFlags</span></td>
    <td>Outputs the set of flags from <span class="NDLSystemFont"><a href="ecr__D3D11RenderStateManager.htm#classecr_1_1_d3_d11_render_state_manager_1a15e5ad98e89dde9c9b51c5b619f5cef0">D3D11RenderStateManager::SamplerValidFlags</a></span> that indicate which states in the sampler desc are valid. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_1_1_d3_d11_render_state_group_1ac6283054701dacfeb46411ca295642d7"></a>
<p class="NDLRefMemberFunction">void  ResetRenderStates()</p>
<p class="NDLRefMemberDescription">Clear out all render states currently set on the render state group, and release all sampler objects. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ecr::D3D11GPUProgramCache</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">ecr::D3D11GPUProgramCache</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiGPUProgramCache.htm">NiGPUProgramCache</a></span></p>


<p class="NDLRefHeaderFile">&lt;D3D11GPUProgramCache.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classecr_1_1_d3_d11_g_p_u_program_cache.gif" alt="Inheritance graph for ecr::D3D11GPUProgramCache"/>
  <p class="FigureCaption">Inheritance graph for ecr::D3D11GPUProgramCache</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">D3D11-specific implementation of <span class="NDLSystemFont"><a href="../NiMain/NiGPUProgramCache.htm">NiGPUProgramCache</a></span>. </p>

<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classecr_1_1_d3_d11_g_p_u_program_cache_1a296742de3ade1c85b9c5981b84d55609"></a>
<p class="NDLRefMemberFunction">D3D11GPUProgramCache(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> version, <br/>const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1add86b31b043c249b287806395efeecd4">efd::Char</a></span>* pWorkingDir, <br/><span class="NDLSystemFont"><a href="../NiMain/NiGPUProgram.htm">NiGPUProgram::ProgramType</a></span> shaderType, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__FixedString.htm">efd::FixedString</a></span>& shaderProfile, <br/>const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1add86b31b043c249b287806395efeecd4">efd::Char</a></span>* pMaterialIdentifier, <br/><span class="NDLSystemFont">efd::Bool</span> autoWriteToDisk, <br/><span class="NDLSystemFont">efd::Bool</span> writeDebugHLSLFile, <br/><span class="NDLSystemFont">efd::Bool</span> isLocked, <br/><span class="NDLSystemFont">efd::Bool</span> loadShaders)</p>
<p class="NDLRefMemberDescription">Constructor that creates a new program cache. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">version</span></td>
    <td>Version ID of the cache, used to ensure backwards compatibility when loading existing cache files. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pWorkingDir</span></td>
    <td>Working directory for the shader cache file </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">shaderType</span></td>
    <td>The type of shader program this cache will manage. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">shaderProfile</span></td>
    <td>Shader profile used to compile the shader programs. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pMaterialIdentifier</span></td>
    <td>A unique name that identifies the <span class="NDLSystemFont"><a href="../NiMain/NiMaterial.htm">NiMaterial</a></span> that this cache will manage. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">autoWriteToDisk</span></td>
    <td>If true, the cache will automatically write its compiled shaders into the cache file on disk after they are compiled. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">writeDebugHLSLFile</span></td>
    <td>If true, then an additional .hlsl file will be written to disk each time a shader program is generated, and that file can be used to debug the shader program. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">isLocked</span></td>
    <td>If true, the cache will not compile new programs, but will provide programs already in the cache file. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">loadShaders</span></td>
    <td>If true, then the cache will attempt to load any cache file at the file location that it would ordinarily write its cache to, and add the loaded shaders to its own cache. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classecr_1_1_d3_d11_g_p_u_program_cache_1afa3af57f2faf1b6ceb2f276a3c482f2b"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../NiMain/NiGPUProgram.htm">NiGPUProgram</a></span>*  GenerateProgram(<br/>const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1add86b31b043c249b287806395efeecd4">efd::Char</a></span>* pName, <br/>const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1add86b31b043c249b287806395efeecd4">efd::Char</a></span>* pProgramText, <br/><span class="NDLSystemFont"><a href="../NiMain/NiTObjectPtrSet.htm">NiTObjectPtrSet</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">NiMaterialResourcePtr</a></span>&gt;& uniformResources)</p>
<p class="NDLRefMemberDescription">This method compiles the input text into a shader program. </p>
<p class="NDLRefMemberDetailedDescription">If the <span class="NDLSystemFont">D3D11GPUProgramCache</span> was created with autoWriteToDisk set to true, the cache will automatically write the compiled program and variables to the cache file.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pName</span></td>
    <td>The name of the shader program. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pProgramText</span></td>
    <td>The text of the shader program. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uniformResources</span></td>
    <td>Outputs the uniform variables used by the program </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The compiled shader program. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_1_1_d3_d11_g_p_u_program_cache_1a39204924684b56adafb1965ff1998a53"></a>
<p class="NDLRefMemberFunction">virtual const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1add86b31b043c249b287806395efeecd4">efd::Char</a></span>*  GetPlatformSpecificCodeID() const</p>
<p class="NDLRefMemberDescription">Returns "hlsl", indicating the shader language this shader program cache expects. </p>

<a name="classecr_1_1_d3_d11_g_p_u_program_cache_1a452fbadaf33d4c4bfd9eee0cc809e490"></a>
<p class="NDLRefMemberFunction">virtual const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1add86b31b043c249b287806395efeecd4">efd::Char</a></span>*  GetPlatform() const</p>
<p class="NDLRefMemberDescription">Returns "D3D11", identifying this platform. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

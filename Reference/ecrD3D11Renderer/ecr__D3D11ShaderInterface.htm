<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ecr::D3D11ShaderInterface</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">ecr::D3D11ShaderInterface</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiShader.htm">NiShader</a></span></p>


<p class="NDLRefHeaderFile">&lt;D3D11ShaderInterface.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classecr_1_1_d3_d11_shader_interface.gif" alt="Inheritance graph for ecr::D3D11ShaderInterface"/>
  <p class="FigureCaption">Inheritance graph for ecr::D3D11ShaderInterface</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal"><span class="NDLSystemFont">D3D11ShaderInterface</span> is the interface for D3D11-specific NiShader-derived objects. </p>
<p class="NDLNormal">It is a pure interface class, and the lowest level at which an application can derive their own shaders from. </p>

<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classecr_1_1_d3_d11_shader_interface_1a39a62bb856ef28883289852dcb00bd04"></a>
<p class="NDLRefMemberFunction">D3D11ShaderInterface()</p>
<p class="NDLRefMemberDescription">Constructor. </p>

<a name="classecr_1_1_d3_d11_shader_interface_1a5362ae1264f2e1be22685c61578ba0a5"></a>
<p class="NDLRefMemberFunction">virtual ~D3D11ShaderInterface()</p>
<p class="NDLRefMemberDescription">Destructor. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classecr_1_1_d3_d11_shader_interface_1a49cb3734193c77278256d84b2ca766c0"></a>
<p class="NDLRefMemberFunction">virtual void  DestroyRendererData() = 0</p>
<p class="NDLRefMemberDescription">Virtual function called when the renderer data is being destroyed, to give the shader a chance to release any data/objects that are tied to the device at this point. </p>

<a name="classecr_1_1_d3_d11_shader_interface_1a77309fdc56de4f39cd4a18784185a1ff"></a>
<p class="NDLRefMemberFunction">virtual void  RecreateRendererData() = 0</p>
<p class="NDLRefMemberDescription">Virtual function called when the renderer data is being reconstruted, to give the shader a chance to recreate any data/objects that are tied to the device at this point. </p>

<a name="classecr_1_1_d3_d11_shader_interface_1afe7ab911f3d10d22cec4bea053038c22"></a>
<p class="NDLRefMemberFunction">virtual const <span class="NDLSystemFont">D3DX11_STATE_BLOCK_MASK</span>*  GetStateBlockMask(const <span class="NDLSystemFont"><a href="../NiMain/NiRenderCallContext.htm">NiRenderCallContext</a></span>& callContext) const</p>
<p class="NDLRefMemberDescription">Return a mask indicating which render states this shader will set. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

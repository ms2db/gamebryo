<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ecr::D3D11DeviceState</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">ecr::D3D11DeviceState</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__MemObject.htm">efd::MemObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;D3D11DeviceState.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classecr_1_1_d3_d11_device_state.gif" alt="Inheritance graph for ecr::D3D11DeviceState"/>
  <p class="FigureCaption">Inheritance graph for ecr::D3D11DeviceState</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Manager responsible for maintaining references to D3D11 state objects that are set on a device context. </p>
<p class="NDLNormal"><span class="NDLSystemFont">D3D11DeviceState</span> shadows the state on a device context to prevent redundant state changes, and it also ensures that state objects on the device are not unintentionally released while they are still set on the context.</p>
<p class="NDLNormal">It is not necessary for applications that want to set state on the device directly to use the <span class="NDLSystemFont">D3D11DeviceState</span>, but they may. If they do not, then the application will need to manually ensure that state object are not accidentally released while on the device. In addition, the application may choose to clear the state objects from the <span class="NDLSystemFont">D3D11DeviceState</span> for states that the application will set manually so Gamebryo will not inadvertantly retain these no-longer-used state objects and prevent them from being be released. If applications do update device state without going through <span class="NDLSystemFont">D3D11DeviceState</span>, they may need to call InvalidateDeviceState afterwards in order to let Gamebryo know that the device state that it is maintaining is no longer up to date. </p>

<a name="protected_attributes"></a>
<p class="NDLRefHead1">Protected Attributes</p>


<a name="classecr_1_1_d3_d11_device_state_1a55a8bc60163912339ce8b827f6f46f68"></a>
<p class="NDLRefMemberFunction">ID3D11DeviceContext*  m_pDeviceContext</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1ac9ee9137c3d94de4664906903c4355dc"></a>
<p class="NDLRefMemberFunction">ID3D11BlendState*  m_pBlendState</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1ac9cbc1743cedf28b99ea7109ba706a8d"></a>
<p class="NDLRefMemberFunction">ID3D11DepthStencilState*  m_pDepthStencilState</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1a9e58b75bd7a03ca0c26ede81c4d2f1f0"></a>
<p class="NDLRefMemberFunction">ID3D11RasterizerState*  m_pRasterizerState</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1a52b17735a2838773ade280fcf94ecb73"></a>
<p class="NDLRefMemberFunction">ID3D11SamplerState*  m_samplerArray[NiGPUProgram::PROGRAM_MAX][D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT]</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1a099c1cbda357d0b8af268de8488fbea6"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  m_blendFactor[4]</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1a13cd80bb04770756fc4f3c9cdb16d032"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  m_sampleMask</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1ab27cb69f19f99dc5a054841738f0c94c"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  m_stencilRef</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1a306ed439f52bfb9a722a5526e7954d83"></a>
<p class="NDLRefMemberFunction">ID3D11ShaderResourceView*  m_resourceArray[NiGPUProgram::PROGRAM_MAX][D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT]</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1af68e6c6e4f6a65a5b109700c27fb8229"></a>
<p class="NDLRefMemberFunction">ID3D11Buffer*  m_bufferArray[NiGPUProgram::PROGRAM_MAX][D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COUNT]</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1aa5dfa6da06fee692a024a02b1acc9bcb"></a>
<p class="NDLRefMemberFunction">ID3D11ClassInstance*  m_classInstanceArray[NiGPUProgram::PROGRAM_MAX][D3D11_SHADER_MAX_INTERFACES]</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1a382d34d8726e03feab6cf6833773ea43"></a>
<p class="NDLRefMemberFunction">ID3D11UnorderedAccessView*  m_csUnorderedAccessViews[D3D11_PS_CS_UAV_REGISTER_COUNT]</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1a8ad622c66c8bfa311c89168d28e376e5"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  m_classInstanceCount[NiGPUProgram::PROGRAM_MAX]</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1ab0e9d10e39a85b311a8ca34224e8896a"></a>
<p class="NDLRefMemberFunction">ID3D11VertexShader*  m_pVertexShader</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1a56d26e7d828d1077a9f58524d5fa6f5c"></a>
<p class="NDLRefMemberFunction">ID3D11HullShader*  m_pHullShader</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1aef844da1637630a720c7081627e15bda"></a>
<p class="NDLRefMemberFunction">ID3D11DomainShader*  m_pDomainShader</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1a0e39f955630851ecc3a6e3b403b49832"></a>
<p class="NDLRefMemberFunction">ID3D11GeometryShader*  m_pGeometryShader</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1a8d621d06836bd3996fcf0c1fff915308"></a>
<p class="NDLRefMemberFunction">ID3D11PixelShader*  m_pPixelShader</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1a21585c0768059fd08f5cb0449ceab511"></a>
<p class="NDLRefMemberFunction">ID3D11ComputeShader*  m_pComputeShader</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1af0a4d43a163d535bdce5690efe59dbae"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  m_blendStateUnchanged</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1a1d418c893a8cb551263dc012b3a90fd1"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  m_depthStencilStateUnchanged</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1af3337f91845305dade0ff97891056ef0"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont">efd::Bool</span>  m_isHSDSSupported</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1a83576b3b2c7bdc70536c6be437c1c45a"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont">efd::Bool</span>  m_isGSSupported</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1a055f6b9d7b341ea09982a74f7647f26f"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont">efd::Bool</span>  m_isCSSupported</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1ab63a48c3a4fba3e908acc323edcdf26c"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont">efd::Bool</span>  m_isCSDownLevel</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1a97444b85146497a8a29644175d92d610"></a>
<p class="NDLRefMemberFunction">void  OMSetBlendState(<br/>ID3D11BlendState* pBlendState, <br/>const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> blendFactor, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> sampleMask)</p>
<p class="NDLRefMemberDescription">Sets the ID3D11BlendState, blend factor, and sample mask on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>
<p class="NDLRefMemberDetailedDescription">Render state objects </p>

<a name="classecr_1_1_d3_d11_device_state_1a4e365012217881767b529fccf2f93053"></a>
<p class="NDLRefMemberFunction">void  OMGetBlendState(<br/>ID3D11BlendState ** pBlendState, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> blendFactor, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>* pSampleMask) const</p>
<p class="NDLRefMemberDescription">Retrieves the ID3D11BlendState, blend factor, and sample mask currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a0a793b269838841a3fe980844c617695"></a>
<p class="NDLRefMemberFunction">void  OMClearBlendState()</p>
<p class="NDLRefMemberDescription">Remove the currently set ID3D11BlendState from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a4d22d31bf2e13fc6b568f70316893c13"></a>
<p class="NDLRefMemberFunction">void  OMSetDepthStencilState(<br/>ID3D11DepthStencilState* pDepthStencilState, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> stencilRef)</p>
<p class="NDLRefMemberDescription">Sets the ID3D11DepthStencilState and stencil reference on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a847638b9df817c961adf135f084d281a"></a>
<p class="NDLRefMemberFunction">void  OMGetDepthStencilState(<br/>ID3D11DepthStencilState ** pDepthStencilState, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>* pStencilRef) const</p>
<p class="NDLRefMemberDescription">Retrieves the ID3D11DepthStencilState and stencil reference currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1af4b7d9d376bc70bf4dbadea8a991cf9f"></a>
<p class="NDLRefMemberFunction">void  OMClearDepthStencilState()</p>
<p class="NDLRefMemberDescription">Remove the currently set ID3D11DepthStencilState from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1abb181c793de0b004f2759fbd9f39bcb0"></a>
<p class="NDLRefMemberFunction">void  RSSetState(ID3D11RasterizerState* pRasterizerState)</p>
<p class="NDLRefMemberDescription">Sets the ID3D11RasterizerState on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a6c46c36302cbb5466f8e82a170afbb23"></a>
<p class="NDLRefMemberFunction">void  RSGetState(ID3D11RasterizerState ** pRasterizerState) const</p>
<p class="NDLRefMemberDescription">Retrieves the ID3D11RasterizerState currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1ae230b72d796179658ed14be9cd44ba5f"></a>
<p class="NDLRefMemberFunction">void  RSClearState()</p>
<p class="NDLRefMemberDescription">Remove the currently set ID3D11RasterizerState from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a4c7c6fc6f5064140c558f1643832a325"></a>
<p class="NDLRefMemberFunction">void  VSSetSamplers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numSamplers, <br/>ID3D11SamplerState *const* pSamplers)</p>
<p class="NDLRefMemberDescription">Samplers. </p>
<p class="NDLRefMemberDetailedDescription">Sets the vertex shader samplers on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a92ac8f1d266fc3f85a06cf4345eefdf3"></a>
<p class="NDLRefMemberFunction">void  VSGetSamplers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numSamplers, <br/>ID3D11SamplerState ** pSamplers) const</p>
<p class="NDLRefMemberDescription">Retrieves the vertex shader samplers currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a9f8c132f52d657313f6d3c5c2ddd3d19"></a>
<p class="NDLRefMemberFunction">void  VSClearSamplers()</p>
<p class="NDLRefMemberDescription">Remove the currently set vertex shader samplers from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1ae4a18c3dbd29df0217535af3a7920fe2"></a>
<p class="NDLRefMemberFunction">void  HSSetSamplers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numSamplers, <br/>ID3D11SamplerState *const* pSamplers)</p>
<p class="NDLRefMemberDescription">Sets the hull shader samplers on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a172cb4c71b43fbf3bd85d1bfa3f17b1a"></a>
<p class="NDLRefMemberFunction">void  HSGetSamplers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numSamplers, <br/>ID3D11SamplerState ** pSamplers) const</p>
<p class="NDLRefMemberDescription">Retrieves the hull shader samplers currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a4c8ecd6cf688a9f649b66dc9ba1a58a8"></a>
<p class="NDLRefMemberFunction">void  HSClearSamplers()</p>
<p class="NDLRefMemberDescription">Remove the currently set hull shader samplers from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a61c716acaab3652cb05e91bee50b05f0"></a>
<p class="NDLRefMemberFunction">void  DSSetSamplers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numSamplers, <br/>ID3D11SamplerState *const* pSamplers)</p>
<p class="NDLRefMemberDescription">Sets the domain shader samplers on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1ad839132a145fa64c4e80a5ece6399341"></a>
<p class="NDLRefMemberFunction">void  DSGetSamplers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numSamplers, <br/>ID3D11SamplerState ** pSamplers) const</p>
<p class="NDLRefMemberDescription">Retrieves the domain shader samplers currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a03e4f5b97e3d86388d41ea31ab917012"></a>
<p class="NDLRefMemberFunction">void  DSClearSamplers()</p>
<p class="NDLRefMemberDescription">Remove the currently set domain shader samplers from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a615317986e59164007d99471c98d1fb7"></a>
<p class="NDLRefMemberFunction">void  GSSetSamplers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numSamplers, <br/>ID3D11SamplerState *const* pSamplers)</p>
<p class="NDLRefMemberDescription">Sets the geometry shader samplers on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1afe5581c36280786b496d7e18d427f4ac"></a>
<p class="NDLRefMemberFunction">void  GSGetSamplers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numSamplers, <br/>ID3D11SamplerState ** pSamplers) const</p>
<p class="NDLRefMemberDescription">Retrieves the geometry shader samplers currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a628d5afb07e828fc2b898ccc8fb5beec"></a>
<p class="NDLRefMemberFunction">void  GSClearSamplers()</p>
<p class="NDLRefMemberDescription">Remove the currently set geometry shader samplers from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a564f72b16e23ba284b214cc8a3c59469"></a>
<p class="NDLRefMemberFunction">void  PSSetSamplers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numSamplers, <br/>ID3D11SamplerState *const* pSamplers)</p>
<p class="NDLRefMemberDescription">Sets the pixel shader samplers on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1af0eb748c9afbf2c5ca7bcbf419a24dd4"></a>
<p class="NDLRefMemberFunction">void  PSGetSamplers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numSamplers, <br/>ID3D11SamplerState ** pSamplers) const</p>
<p class="NDLRefMemberDescription">Retrieves the pixel shader samplers currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a2536e026b5c4875d6b85959dc6f830c7"></a>
<p class="NDLRefMemberFunction">void  PSClearSamplers()</p>
<p class="NDLRefMemberDescription">Remove the currently set pixel shader samplers from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a385e142eed7f6cfd08d4d93a0488ccd7"></a>
<p class="NDLRefMemberFunction">void  CSSetSamplers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numSamplers, <br/>ID3D11SamplerState *const* pSamplers)</p>
<p class="NDLRefMemberDescription">Sets the compute shader samplers on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1ab885b1ea6b86535e5e7f325a19aab489"></a>
<p class="NDLRefMemberFunction">void  CSGetSamplers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numSamplers, <br/>ID3D11SamplerState ** pSamplers) const</p>
<p class="NDLRefMemberDescription">Retrieves the compute shader samplers currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a93ae080f522d39e63f1a0e8f786e8ade"></a>
<p class="NDLRefMemberFunction">void  CSClearSamplers()</p>
<p class="NDLRefMemberDescription">Remove the currently set compute shader samplers from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a1fe1dd872e04972bf24657b1b94d5161"></a>
<p class="NDLRefMemberFunction">void  VSSetShaderResources(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numViews, <br/>ID3D11ShaderResourceView *const* pResourceViews)</p>
<p class="NDLRefMemberDescription">Shader resources/textures. </p>
<p class="NDLRefMemberDetailedDescription">Sets the vertex shader resources on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1ae52545ae3f1a48e672ab41361c62e14d"></a>
<p class="NDLRefMemberFunction">void  VSGetShaderResources(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numViews, <br/>ID3D11ShaderResourceView ** pResourceViews) const</p>
<p class="NDLRefMemberDescription">Retrieves the vertex shader resources currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a040f7e5ec2b54615115ac43285bbfe3a"></a>
<p class="NDLRefMemberFunction">void  VSClearShaderResources()</p>
<p class="NDLRefMemberDescription">Remove the currently set vertex shader resources from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a74bcb8113f144d031169e45620e8b1b4"></a>
<p class="NDLRefMemberFunction">void  HSSetShaderResources(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numViews, <br/>ID3D11ShaderResourceView *const* pResourceViews)</p>
<p class="NDLRefMemberDescription">Sets the hull shader resources on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1ac08a5bd3b910d0b2a9732fd601b9d2df"></a>
<p class="NDLRefMemberFunction">void  HSGetShaderResources(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numViews, <br/>ID3D11ShaderResourceView ** pResourceViews) const</p>
<p class="NDLRefMemberDescription">Retrieves the hull shader resources currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a09532d78b7f43fcc06b3005bcf0a3df0"></a>
<p class="NDLRefMemberFunction">void  HSClearShaderResources()</p>
<p class="NDLRefMemberDescription">Remove the currently set hull shader resources from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a3ec40e87198b79c760be5b31a43cbc0c"></a>
<p class="NDLRefMemberFunction">void  DSSetShaderResources(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numViews, <br/>ID3D11ShaderResourceView *const* pResourceViews)</p>
<p class="NDLRefMemberDescription">Sets the domain shader resources on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a213428305af210143d795690e63c9c6b"></a>
<p class="NDLRefMemberFunction">void  DSGetShaderResources(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numViews, <br/>ID3D11ShaderResourceView ** pResourceViews) const</p>
<p class="NDLRefMemberDescription">Retrieves the domain shader resources currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a179abd31d3832c65f24fe4d710d9d930"></a>
<p class="NDLRefMemberFunction">void  DSClearShaderResources()</p>
<p class="NDLRefMemberDescription">Remove the currently set domain shader resources from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a82b51fc033c66f4c213e7fb7ac44bd15"></a>
<p class="NDLRefMemberFunction">void  GSSetShaderResources(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numViews, <br/>ID3D11ShaderResourceView *const* pResourceViews)</p>
<p class="NDLRefMemberDescription">Sets the geometry shader resources on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1addb1d009475bb8f9e360d94c8856f443"></a>
<p class="NDLRefMemberFunction">void  GSGetShaderResources(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numViews, <br/>ID3D11ShaderResourceView ** pResourceViews) const</p>
<p class="NDLRefMemberDescription">Retrieves the geometry shader resources currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1ab396030764c6537efadfe6b98496b6eb"></a>
<p class="NDLRefMemberFunction">void  GSClearShaderResources()</p>
<p class="NDLRefMemberDescription">Remove the currently set geometry shader resources from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a57a65c8c5bf3ebb1ee887eaaa7d88bda"></a>
<p class="NDLRefMemberFunction">void  PSSetShaderResources(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numViews, <br/>ID3D11ShaderResourceView *const* pResourceViews)</p>
<p class="NDLRefMemberDescription">Sets the pixel shader resources on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a13bbfb5122a2ef54cd80b0c44fa6696c"></a>
<p class="NDLRefMemberFunction">void  PSGetShaderResources(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numViews, <br/>ID3D11ShaderResourceView ** pResourceViews) const</p>
<p class="NDLRefMemberDescription">Retrieves the pixel shader resources currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a1e78daa00e5603c9eae67b0891fb46c4"></a>
<p class="NDLRefMemberFunction">void  PSClearShaderResources()</p>
<p class="NDLRefMemberDescription">Remove the currently set pixel shader resources from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a022ef3613097f3100b0acbdb938f0ef5"></a>
<p class="NDLRefMemberFunction">void  CSSetShaderResources(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numViews, <br/>ID3D11ShaderResourceView *const* pResourceViews)</p>
<p class="NDLRefMemberDescription">Sets the compute shader resources on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1afc611d82d81d051c0e837e24867df98a"></a>
<p class="NDLRefMemberFunction">void  CSGetShaderResources(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numViews, <br/>ID3D11ShaderResourceView ** pResourceViews) const</p>
<p class="NDLRefMemberDescription">Retrieves the compute shader resources currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a1f7c472fadb8658bb5e5de6b6ae16753"></a>
<p class="NDLRefMemberFunction">void  CSClearShaderResources()</p>
<p class="NDLRefMemberDescription">Remove the currently set compute shader resources from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a8919dbd16cb22e61a60e1a4bf0360b76"></a>
<p class="NDLRefMemberFunction">void  VSSetConstantBuffers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numBuffers, <br/>ID3D11Buffer *const* pConstantBuffers)</p>
<p class="NDLRefMemberDescription">Shader constant buffers. </p>
<p class="NDLRefMemberDetailedDescription">Sets the vertex shader constant buffers on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a41e75c83297712fecaaed1aebf2f6023"></a>
<p class="NDLRefMemberFunction">void  VSGetConstantBuffers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numBuffers, <br/>ID3D11Buffer ** pConstantBuffers) const</p>
<p class="NDLRefMemberDescription">Retrieves the vertex shader constant buffers currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a539aa27ef5bf54c2f263cfda347b92c4"></a>
<p class="NDLRefMemberFunction">void  VSClearConstantBuffers()</p>
<p class="NDLRefMemberDescription">Remove the currently set vertex shader constant buffers from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1ac2e5c44813f3322a6eabf6bbf97c4bcf"></a>
<p class="NDLRefMemberFunction">void  HSSetConstantBuffers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numBuffers, <br/>ID3D11Buffer *const* pConstantBuffers)</p>
<p class="NDLRefMemberDescription">Sets the hull shader constant buffers on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1ac5a8761dc1a95e60fab5d8d53e238028"></a>
<p class="NDLRefMemberFunction">void  HSGetConstantBuffers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numBuffers, <br/>ID3D11Buffer ** pConstantBuffers) const</p>
<p class="NDLRefMemberDescription">Retrieves the hull shader constant buffers currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1af17d587d9c754abb149ccf4861b80bd7"></a>
<p class="NDLRefMemberFunction">void  HSClearConstantBuffers()</p>
<p class="NDLRefMemberDescription">Remove the currently set hull shader constant buffers from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a909b596b500f8bc3ccd921548717e08a"></a>
<p class="NDLRefMemberFunction">void  DSSetConstantBuffers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numBuffers, <br/>ID3D11Buffer *const* pConstantBuffers)</p>
<p class="NDLRefMemberDescription">Sets the domain shader constant buffers on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a0262b7c3309c5f1eb9844111768c6c4c"></a>
<p class="NDLRefMemberFunction">void  DSGetConstantBuffers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numBuffers, <br/>ID3D11Buffer ** pConstantBuffers) const</p>
<p class="NDLRefMemberDescription">Retrieves the domain shader constant buffers currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a4b360f583339a297e05fd8a24c2f79d5"></a>
<p class="NDLRefMemberFunction">void  DSClearConstantBuffers()</p>
<p class="NDLRefMemberDescription">Remove the currently set domain shader constant buffers from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a8778000cd8fd6dff35737cd552fe4ff5"></a>
<p class="NDLRefMemberFunction">void  GSSetConstantBuffers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numBuffers, <br/>ID3D11Buffer *const* pConstantBuffers)</p>
<p class="NDLRefMemberDescription">Sets the geometry shader constant buffers on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a47ddeba48cbd894bf44c65b0727ded96"></a>
<p class="NDLRefMemberFunction">void  GSGetConstantBuffers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numBuffers, <br/>ID3D11Buffer ** pConstantBuffers) const</p>
<p class="NDLRefMemberDescription">Retrieves the geometry shader constant buffers currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1aefbb8b578336759680aae7851f788144"></a>
<p class="NDLRefMemberFunction">void  GSClearConstantBuffers()</p>
<p class="NDLRefMemberDescription">Remove the currently set geometry shader constant buffers from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a4ab72740a867bf6e9887377ba14e29fc"></a>
<p class="NDLRefMemberFunction">void  PSSetConstantBuffers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numBuffers, <br/>ID3D11Buffer *const* pConstantBuffers)</p>
<p class="NDLRefMemberDescription">Sets the pixel shader constant buffers on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1ae0a69ce1032854815e7e882642d32196"></a>
<p class="NDLRefMemberFunction">void  PSGetConstantBuffers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numBuffers, <br/>ID3D11Buffer ** pConstantBuffers) const</p>
<p class="NDLRefMemberDescription">Retrieves the pixel shader constant buffers currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a76f4e798770bdf000b4e67eb3f4c27cc"></a>
<p class="NDLRefMemberFunction">void  PSClearConstantBuffers()</p>
<p class="NDLRefMemberDescription">Remove the currently set pixel shader constant buffers from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a4eea631181435286d0a3d8b704e76268"></a>
<p class="NDLRefMemberFunction">void  CSSetConstantBuffers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numBuffers, <br/>ID3D11Buffer *const* pConstantBuffers)</p>
<p class="NDLRefMemberDescription">Sets the compute shader constant buffers on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a2c76a7f369042c19f2b279be0b25f64c"></a>
<p class="NDLRefMemberFunction">void  CSGetConstantBuffers(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numBuffers, <br/>ID3D11Buffer ** pConstantBuffers) const</p>
<p class="NDLRefMemberDescription">Retrieves the compute shader constant buffers currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a6167038d60eaa39954804166a3e79b49"></a>
<p class="NDLRefMemberFunction">void  CSClearConstantBuffers()</p>
<p class="NDLRefMemberDescription">Remove the currently set compute shader constant buffers from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a699f02737b3a691b1bbd40a1e2986dac"></a>
<p class="NDLRefMemberFunction">void  VSSetShader(<br/>ID3D11VertexShader* pVertexShader, <br/>ID3D11ClassInstance *const* pClassInstances = NULL, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numClassInstances = 0)</p>
<p class="NDLRefMemberDescription">Shader programs. </p>
<p class="NDLRefMemberDetailedDescription">Sets the vertex shader program on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a63894b4ff4d646b7bcd49dd9edaa0456"></a>
<p class="NDLRefMemberFunction">void  VSGetShader(<br/>ID3D11VertexShader ** pVertexShader, <br/>ID3D11ClassInstance ** pClassInstances, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>* pNumClassInstances) const</p>
<p class="NDLRefMemberDescription">Retrieves the vertex shader program and ID3D11ClassInstance array currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a8e3ddba69f344073f38ccd48973f3a33"></a>
<p class="NDLRefMemberFunction">ID3D11VertexShader*  VSGetShader() const</p>
<p class="NDLRefMemberDescription">Retrieves the vertex shader program currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1ad5c7f79616d441f335054375a63a73af"></a>
<p class="NDLRefMemberFunction">ID3D11ClassInstance *const*  VSGetShaderClassInstances() const</p>
<p class="NDLRefMemberDescription">Retrieve the array of vertex shader ID3D11ClassInstance objects currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1abe4d5aa2bcf479f47cdd6b7eefb9d63a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  VSGetShaderClassInstanceCount() const</p>
<p class="NDLRefMemberDescription">Retrieve the number of entries in the vertex shader ID3D11ClassInstance array currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a93b399995e9d09174b9c48c1f4cd041b"></a>
<p class="NDLRefMemberFunction">void  VSClearShader()</p>
<p class="NDLRefMemberDescription">Remove the currently set vertex shader and ID3D11ClassInstance array from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a8d0d1c5c3882f67089e7a3350d7ab3f3"></a>
<p class="NDLRefMemberFunction">void  HSSetShader(<br/>ID3D11HullShader* pPixelShader, <br/>ID3D11ClassInstance *const* pClassInstances = NULL, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numClassInstances = 0)</p>
<p class="NDLRefMemberDescription">Sets the hull shader program on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a074e0506abec4cc40ce37e6d64dea48b"></a>
<p class="NDLRefMemberFunction">void  HSGetShader(<br/>ID3D11HullShader ** pPixelShader, <br/>ID3D11ClassInstance ** pClassInstances, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>* pNumClassInstances) const</p>
<p class="NDLRefMemberDescription">Retrieves the hull shader program and ID3D11ClassInstance array currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a88c347f25587d50e66b64979f28d5d8b"></a>
<p class="NDLRefMemberFunction">ID3D11HullShader*  HSGetShader() const</p>
<p class="NDLRefMemberDescription">Retrieves the hull shader program currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a8a8fbf4244fcc9732efac49f8626f5e6"></a>
<p class="NDLRefMemberFunction">ID3D11ClassInstance *const*  HSGetShaderClassInstances() const</p>
<p class="NDLRefMemberDescription">Retrieve the array of hull shader ID3D11ClassInstance objects currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a1b380c4ab6265dc31c843a849b54e0f9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  HSGetShaderClassInstanceCount() const</p>
<p class="NDLRefMemberDescription">Retrieve the number of entries in the hull shader ID3D11ClassInstance array currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a03ca0e75b0b9be2bb98ae328fcd9c312"></a>
<p class="NDLRefMemberFunction">void  HSClearShader()</p>
<p class="NDLRefMemberDescription">Remove the currently set hull shader and ID3D11ClassInstance array from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1ab87f519bcf9d9d316f680994882b66a3"></a>
<p class="NDLRefMemberFunction">void  DSSetShader(<br/>ID3D11DomainShader* pPixelShader, <br/>ID3D11ClassInstance *const* pClassInstances = NULL, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numClassInstances = 0)</p>
<p class="NDLRefMemberDescription">Sets the domain shader program on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a5c86dbd63fc8a031757372cd14e8777e"></a>
<p class="NDLRefMemberFunction">void  DSGetShader(<br/>ID3D11DomainShader ** pPixelShader, <br/>ID3D11ClassInstance ** pClassInstances, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>* pNumClassInstances) const</p>
<p class="NDLRefMemberDescription">Retrieves the domain shader program and ID3D11ClassInstance array currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1ac26d03ec7d8e0280375ff495c843d57f"></a>
<p class="NDLRefMemberFunction">ID3D11DomainShader*  DSGetShader() const</p>
<p class="NDLRefMemberDescription">Retrieves the domain shader program currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1aef0091dd4edcdb5778372499315437b5"></a>
<p class="NDLRefMemberFunction">ID3D11ClassInstance *const*  DSGetShaderClassInstances() const</p>
<p class="NDLRefMemberDescription">Retrieve the array of domain shader ID3D11ClassInstance objects currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1abf7129084ee3a9873226427296f9fd34"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  DSGetShaderClassInstanceCount() const</p>
<p class="NDLRefMemberDescription">Retrieve the number of entries in the domain shader ID3D11ClassInstance array currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a595159dce652a4d145995f534d2c7ddb"></a>
<p class="NDLRefMemberFunction">void  DSClearShader()</p>
<p class="NDLRefMemberDescription">Remove the currently set domain shader and ID3D11ClassInstance array from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a63bc1d3a6721f9a7e1c7448343adeafb"></a>
<p class="NDLRefMemberFunction">void  GSSetShader(<br/>ID3D11GeometryShader* pGeometryShader, <br/>ID3D11ClassInstance *const* pClassInstances = NULL, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numClassInstances = 0)</p>
<p class="NDLRefMemberDescription">Sets the geometry shader program on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1ae670490ec3e01172966756cabc9a0284"></a>
<p class="NDLRefMemberFunction">void  GSGetShader(<br/>ID3D11GeometryShader ** pGeometryShader, <br/>ID3D11ClassInstance ** pClassInstances, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>* pNumClassInstances) const</p>
<p class="NDLRefMemberDescription">Retrieves the geometry shader program and ID3D11ClassInstance array currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a4641f34c705bd5a7910d01939a2b6cfa"></a>
<p class="NDLRefMemberFunction">ID3D11GeometryShader*  GSGetShader() const</p>
<p class="NDLRefMemberDescription">Retrieves the geometry shader program currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a6a2280b20b8d5e75cb16bd99aec8894b"></a>
<p class="NDLRefMemberFunction">ID3D11ClassInstance *const*  GSGetShaderClassInstances() const</p>
<p class="NDLRefMemberDescription">Retrieve the array of geometry shader ID3D11ClassInstance objects currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a08734bf3e1277f5406631a68c616ad4a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GSGetShaderClassInstanceCount() const</p>
<p class="NDLRefMemberDescription">Retrieve the number of entries in the geometry shader ID3D11ClassInstance array currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a1b90c8881af2542aa6c23d0f6cc592e1"></a>
<p class="NDLRefMemberFunction">void  GSClearShader()</p>
<p class="NDLRefMemberDescription">Remove the currently set geometry shader and ID3D11ClassInstance array from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a0317de315acefa65103ee3d5603d0cd2"></a>
<p class="NDLRefMemberFunction">void  PSSetShader(<br/>ID3D11PixelShader* pPixelShader, <br/>ID3D11ClassInstance *const* pClassInstances = NULL, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numClassInstances = 0)</p>
<p class="NDLRefMemberDescription">Sets the pixel shader program on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1ad1b911851f1244db6534438d3ed45f8f"></a>
<p class="NDLRefMemberFunction">void  PSGetShader(<br/>ID3D11PixelShader ** pPixelShader, <br/>ID3D11ClassInstance ** pClassInstances, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>* pNumClassInstances) const</p>
<p class="NDLRefMemberDescription">Retrieves the pixel shader program and ID3D11ClassInstance array currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1abdd8655c642d510985e37989c427d1db"></a>
<p class="NDLRefMemberFunction">ID3D11PixelShader*  PSGetShader() const</p>
<p class="NDLRefMemberDescription">Retrieves the pixel shader program currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a29dcd6def7f7c3327a81ada15a29fa22"></a>
<p class="NDLRefMemberFunction">ID3D11ClassInstance *const*  PSGetShaderClassInstances() const</p>
<p class="NDLRefMemberDescription">Retrieve the array of pixel shader ID3D11ClassInstance objects currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a244e586a9e2dc6008d492e8317f67a17"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  PSGetShaderClassInstanceCount() const</p>
<p class="NDLRefMemberDescription">Retrieve the number of entries in the pixel shader ID3D11ClassInstance array currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a2b108f1412d41dea2c2d0e03795955eb"></a>
<p class="NDLRefMemberFunction">void  PSClearShader()</p>
<p class="NDLRefMemberDescription">Remove the currently set pixel shader and ID3D11ClassInstance array from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1ae6f62455cd736009428c90fd808b89c2"></a>
<p class="NDLRefMemberFunction">void  CSSetShader(<br/>ID3D11ComputeShader* pPixelShader, <br/>ID3D11ClassInstance *const* pClassInstances = NULL, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numClassInstances = 0)</p>
<p class="NDLRefMemberDescription">Sets the compute shader program on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a26cfefd68f24d4e62022573510c176be"></a>
<p class="NDLRefMemberFunction">void  CSGetShader(<br/>ID3D11ComputeShader ** pPixelShader, <br/>ID3D11ClassInstance ** pClassInstances, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>* pNumClassInstances) const</p>
<p class="NDLRefMemberDescription">Retrieves the compute shader program and ID3D11ClassInstance array currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a3b0969bb421018b92bf45d41b1e310f7"></a>
<p class="NDLRefMemberFunction">ID3D11ComputeShader*  CSGetShader() const</p>
<p class="NDLRefMemberDescription">Retrieves the compute shader program currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a839905cdfa606e1b03660192e51821f4"></a>
<p class="NDLRefMemberFunction">ID3D11ClassInstance *const*  CSGetShaderClassInstances() const</p>
<p class="NDLRefMemberDescription">Retrieve the array of compute shader ID3D11ClassInstance objects currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a456446bc19abaa4e8af1d2a3b53150d1"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  CSGetShaderClassInstanceCount() const</p>
<p class="NDLRefMemberDescription">Retrieve the number of entries in the compute shader ID3D11ClassInstance array currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1a4f868ae001e922c6936e7c0473a9828a"></a>
<p class="NDLRefMemberFunction">void  CSClearShader()</p>
<p class="NDLRefMemberDescription">Remove the currently set compute shader and ID3D11ClassInstance array from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a79ee71c31d8e319eed63373faac4a41b"></a>
<p class="NDLRefMemberFunction">void  CSSetUnorderedAccessViews(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numUAVs, <br/>ID3D11UnorderedAccessView *const* pUAVs, <br/>const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>* pUAVInitialCounts)</p>
<p class="NDLRefMemberDescription">Sets the compute shader unordered access views on the <span class="NDLSystemFont">D3D11DeviceState</span> and the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a8da6e64175db7478a18a38ab098d675b"></a>
<p class="NDLRefMemberFunction">void  CSGetUnorderedAccessViews(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> startSlot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> numUAVs, <br/>ID3D11UnorderedAccessView ** pUAVs) const</p>
<p class="NDLRefMemberDescription">Retrieves the compute shader unordered access views currently set on the <span class="NDLSystemFont">D3D11DeviceState</span>, which may not match the state set on the device context itself. </p>

<a name="classecr_1_1_d3_d11_device_state_1ace6cb41274d4c49ef0f5607b7fdd9ca1"></a>
<p class="NDLRefMemberFunction">void  CSClearUnorderedAccessViews()</p>
<p class="NDLRefMemberDescription">Remove the currently set compute shader unordered access views from the <span class="NDLSystemFont">D3D11DeviceState</span> and from the device context. </p>

<a name="classecr_1_1_d3_d11_device_state_1a6aef14830b8641d3d811733c2f8542bf"></a>
<p class="NDLRefMemberFunction">void  InvalidateDeviceState()</p>
<p class="NDLRefMemberDescription">Invalidate the entire device state stored on the <span class="NDLSystemFont">D3D11DeviceState</span>. </p>
<p class="NDLRefMemberDetailedDescription">This may cause resources set on the device context to be released, if the <span class="NDLSystemFont">D3D11DeviceState</span> kept the only reference. </p>

<a name="classecr_1_1_d3_d11_device_state_1a90faef3fb424ef58fab1678526474ff4"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">D3D11DeviceState</span>&  operator=(const <span class="NDLSystemFont">D3D11DeviceState</span>& other)</p>
<p class="NDLRefMemberDescription">Assignment operator to fix a build warning - do not use. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

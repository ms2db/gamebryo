<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egmToolServices::ToolTerrainService</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egmToolServices::ToolTerrainService</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../egmTerrain/egmTerrain__TerrainService.htm">egmTerrain::TerrainService</a></span></p>


<p class="NDLRefHeaderFile">&lt;ToolTerrainService.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegm_tool_services_1_1_tool_terrain_service.gif" alt="Inheritance graph for egmToolServices::ToolTerrainService"/>
  <p class="FigureCaption">Inheritance graph for egmToolServices::ToolTerrainService</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">The tool terrain service implements the TerrainService and provides extra functionalities that allow tools such as toolbench to create and edit a <span class="NDLSystemFont"><a href="../NiTerrain/NiTerrain.htm">NiTerrain</a></span> object and all other related object (Materials). </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegm_tool_services_1_1_tool_terrain_service_1ab2c9ae60bad6d2b3cea229490257b80a"></a>
<p class="NDLRefMemberFunction">ToolTerrainService()</p>
<p class="NDLRefMemberDescription">Constructor for the terrain tool service. </p>
<p class="NDLRefMemberDetailedDescription">Sets up tool time data structures and ensures the run-time terrain engine is prepared for tool time editing. </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1ac1629ad1e5a1822f91b51e6002c61f1f"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">efd::Bool</span>  CreateNewMaterialPackage(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& packageName, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& packageLocation)</p>
<p class="NDLRefMemberDescription">Creates a new material package and adds it to the terrain's service list of known material packages. </p>
<p class="NDLRefMemberDetailedDescription">Note, packages are not actually attached to the terrain entity until a surface from a package is actually painted onto the terrain. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">packageName</span></td>
    <td>Name of the package. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">packageLocation</span></td>
    <td>File path in the asset web to save the package file. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if new package was successfully created, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1abdb0e238a6cc88d36cc71d2c3464071e"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">efd::Bool</span>  SaveMaterialPackage(const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& packageName)</p>
<p class="NDLRefMemberDescription">Saves the material package with the specified name. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">packageName</span></td>
    <td>Name of the material package to save. If a material package does not exist with the specified name, a message is logged and the method is a no-op. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1aff3f5d1bc9919d9efe06616763944c15"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">efd::Bool</span>  SaveMaterialPackage(<span class="NDLSystemFont"><a href="../NiTerrain/NiSurfacePackage.htm">NiSurfacePackage</a></span>* pPackage)</p>
<p class="NDLRefMemberDescription">Saves the specified material package. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pPackage</span></td>
    <td>Package to save. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the package was saved, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1ada2c451b0638730e4739579915dbc234"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">efd::Bool</span>  CreateNewMaterial(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& packageName, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& materialName)</p>
<p class="NDLRefMemberDescription">Creates a new terrain material and adds it to the specified package. </p>
<p class="NDLRefMemberDetailedDescription">A package with the specified name must have already been created. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">Creating a new material does not assign it to the terrain entity. This occurs when a material is first painted onto the terrain or manually assigned to the terrain. </p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">packageName</span></td>
    <td>Name of the material package. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">materialName</span></td>
    <td>Unique name to assign to the material. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the material was created, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1a32081bc814068332d7627a2a62a9a850"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">efd::Bool</span>  ChangeMaterialName(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& packageName, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& oldMaterialName, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& newMaterialName)</p>
<p class="NDLRefMemberDescription">Changes the name of an existing material. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">packageName</span></td>
    <td>Name of the material package containing the material. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">oldMaterialName</span></td>
    <td>Old name of the material. This name is used to find the existing material to rename. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">newMaterialName</span></td>
    <td>New name to give to the material. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if successful, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1aa58c2de0a8661248b9b5ca5ab56f29da"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">efd::Bool</span>  RemoveMaterial(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& packageName, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& materialName)</p>
<p class="NDLRefMemberDescription">Removes an exiting terrain material from the existing package. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">packageName</span></td>
    <td>Name of the material package. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">materialName</span></td>
    <td>Name of the material to remove. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the material was removed, false if either the material package was not found or the material with the specified name could not be found. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1a8eb763e024423a5da7e6ff04bc22b67d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  CanDeleteMaterial(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& packageNameUTF8, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& materialNameUTF8)</p>
<p class="NDLRefMemberDescription">Checks whether a specific material can be deleted or not. </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1a2bb0feea2281b4069c43b279fb692bb2"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  IsMaterialUsed(const <span class="NDLSystemFont"><a href="../NiTerrain/NiSurface.htm">NiSurface</a></span>* pSurface)</p>
<p class="NDLRefMemberDescription">Checks whether or not a material is used on the terrain. </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1aed9a6e4d58dae1d50a9bf1c4b0888bb9"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">efd::Bool</span>  AssignMaterialTexture(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& packageName, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& materialName, <br/><span class="NDLSystemFont"><a href="../NiTerrain/NiSurface.htm#class_ni_surface_1a12b3ca34aa6d07ea1246da72a73c0931">NiSurface::SurfaceMapID</a></span> tMapType, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& fullPath, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& assetId)</p>
<p class="NDLRefMemberDescription">Assigns the specified texture to the specified map slot on the terrain surface material. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<p class="NDLRefMemberDetailedDescription">The asset id is persisted when a terrain surface material is saved, not the absolute path. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">packageName</span></td>
    <td>Name of the material package owning the material. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">materialName</span></td>
    <td>Name of the material which which to assign the texture. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">tMapType</span></td>
    <td>Map slot with which to assign the texture. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fullPath</span></td>
    <td>Full path to the texture file. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">assetId</span></td>
    <td>Asset id of the texture. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1aa19b88fdaeb29a5b5c8a96b57a70df7c"></a>
<p class="NDLRefMemberFunction">virtual void  AddBrushTypeOverlay(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& brushTypeName, <br/><span class="NDLSystemFont"><a href="../NiMain/NiNode.htm">NiNode</a></span>* pOverlayObj)</p>
<p class="NDLRefMemberDescription">Adds a new brush type overlay mesh to the service. </p>
<p class="NDLRefMemberDetailedDescription">Brush type overlays render a representation of the brush type being painted on the terrain. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">brushTypeName</span></td>
    <td>Name of the brush type. Used as a key to find an overlay for a given brush type. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pOverlayObj</span></td>
    <td>Render-able object assigned to the terrain edit gizmo when a brush type overlay is set to active. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1a20493451973f3ed6d5562bd8c39b7b9a"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">efd::Bool</span>  SetBrushTypeOverlayActive(const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& brushTypeName)</p>
<p class="NDLRefMemberDescription">Sets the gizmo mesh on the terrain edit gizmo to the overlay mesh of the brush type matching the specified name. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">brushTypeName</span></td>
    <td>Brush type name or key used to find the correct overlay mesh. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the overlay mesh was set, false if an overlay mesh mapping to the specified brush type name could not be found. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1a359fd019f96493ec5a662a682f53d9b1"></a>
<p class="NDLRefMemberFunction">virtual void  UpdateStandardBrushParams(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> innerRadius, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> outerRadius, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> brushSize)</p>
<p class="NDLRefMemberDescription">Updates the inner and outer radius parameters on the standard brush type gizmo. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">innerRadius</span></td>
    <td>Radius in the range [0..1] of the inner radius. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">outerRadius</span></td>
    <td>Radius in the range [0..1] of the outer radius. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">brushSize</span></td>
    <td>Size of the brush in world units. This value is multiplied by the inner and outer radius to get the inner and outer radius in world units. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1a993b7a6cb9803c63dab1397a1c1cb8bb"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">efd::Bool</span>  CreateTerrainAsset(<br/><span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span> archivePath, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> terrainSize, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> cellSize, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> materialMaskSize, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> lowDetailTextureSize, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> minElevation, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> maxElevation, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> vertexSpacing, <br/><span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& terrainAssetPath)</p>
<p class="NDLRefMemberDescription">Creates a terrain with the specified values. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">archivePath</span></td>
    <td>the root path of the terrain asset </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">terrainSize</span></td>
    <td>Size of each sector of terrain. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">cellSize</span></td>
    <td>Size of each cell within a sector. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">materialMaskSize</span></td>
    <td>Size of the material mask applied on a per cell basis. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">lowDetailTextureSize</span></td>
    <td>Size of the low detail diffuse and normal map textures displayed on a distant terrain sector. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">minElevation</span></td>
    <td>Minimum height of the terrain. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">maxElevation</span></td>
    <td>Maximum height of the terrain. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">vertexSpacing</span></td>
    <td>Distance between vertices on the horizontal plane. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">terrainAssetPath</span></td>
    <td>The calculated terrain's new asset path </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1ad21db539a6c379ebfd2aa654bdebd573"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">efd::Bool</span>  SaveTerrain(<br/><span class="NDLSystemFont"><a href="../egf/egf__Entity.htm">egf::Entity</a></span>* pEntity, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& terrainPath)</p>
<p class="NDLRefMemberDescription">Persists the current terrain entity. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pEntity</span></td>
    <td>the terrain entity that needs to be saved. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">terrainPath</span></td>
    <td>The path to the terrain file. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the data was saved successfully, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1af7d944cd0deaf1f049162c35572dfb06"></a>
<p class="NDLRefMemberFunction">virtual void  SetNewMinMaxElevation(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> minElevation, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> maxElevation)</p>
<p class="NDLRefMemberDescription">Adjusts the min/max elevation of the terrain and rebuilds the geometry based on the new values. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">minElevation</span></td>
    <td>The minimum height the terrain is capable of being </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">maxElevation</span></td>
    <td>The minimum height the terrain is capable of being </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1aa1a309e626376d1895f1c756311a614d"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../NiMain/NiNode.htm">NiNode</a></span>*  CreateStandardOverlayMesh()</p>
<p class="NDLRefMemberDescription">Creates a mesh composed of lines representing two circles, one for the inner radius of the brush and one for the outer radius of the brush. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>An <span class="NDLSystemFont"><a href="../NiMesh/NiMesh.htm">NiMesh</a></span> representing the standard brush type. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1a061128699a8eabcee7a0a4c371c5b9da"></a>
<p class="NDLRefMemberFunction">void  EnableAirbrushMode(<span class="NDLSystemFont">efd::Bool</span> isEnabled)</p>
<p class="NDLRefMemberDescription">Enables or disables the airbrush painting mode. </p>
<p class="NDLRefMemberDetailedDescription">When enabled, paint operations occur even if the mouse is not moving and the left mouse button is held down. </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1a6418123c69279c34be04c39181a09892"></a>
<p class="NDLRefMemberFunction">void  InvertBrushColor(<span class="NDLSystemFont">efd::Bool</span> invert)</p>
<p class="NDLRefMemberDescription">Controls whether the terrain gizmo should display inverted colors. </p>
<p class="NDLRefMemberDetailedDescription">Occurs when the painting direction changes (when ctrl key is pressed or released) </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1aefa9ccfebbcd2d08e961607bfb60a2fa"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsTerrainEditGizmoActive()</p>
<p class="NDLRefMemberDescription">Checks with the <span class="NDLSystemFont"><a href="egmToolServices__GizmoService.htm">GizmoService</a></span> whether the <span class="NDLSystemFont"><a href="egmToolServices__TerrainEditGizmo.htm">TerrainEditGizmo</a></span> is active or not. </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1a15823509afa34c21485696218daceb84"></a>
<p class="NDLRefMemberFunction">void  ForceUpdateLowDetailTextures()</p>
<p class="NDLRefMemberDescription">Force the terrain to render it's low detail textures. </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1a835b6640e76e90f802ba6cb737f84eaf"></a>
<p class="NDLRefMemberFunction">void  ForceUpdateRenderContexts()</p>
<p class="NDLRefMemberDescription">Force the render contexts of the renderer service to re-draw themselves. </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1a2870f89cf7f7a0ec7319bb53cf93dfdf"></a>
<p class="NDLRefMemberFunction">void  SetDebugMode(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> debugMode)</p>
<p class="NDLRefMemberDescription">Set the debug flags to control the debug modes of the terrain shader. </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1a03e4ba6e0f3ae4128145c330246a8d85"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetLastIntersectedSector(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a78e418e4217f674682471407609a8aa8">efd::SInt16</a></span>& sectorX, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a78e418e4217f674682471407609a8aa8">efd::SInt16</a></span>& sectorY)</p>
<p class="NDLRefMemberDescription">Get the index of the sector that was last intersected by the terrain edit gizmo. </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1a631e4d73a09f4a5c8d6e08041705efae"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetTerrainMaterialIntersectionData(<br/><span class="NDLSystemFont"><a href="../efd/efd__Point2.htm">efd::Point2</a></span>& sectorID, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& leafID, <br/><span class="NDLSystemFont"><a href="../efd/efd__vector.htm">efd::vector</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&gt;& materialList)</p>
<p class="NDLRefMemberDescription">Function that fills in information according to the data kept since the last <span class="NDLSystemFont"><a href="egmToolServices__TerrainEditGizmo.htm">TerrainEditGizmo</a></span> tick. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">sectorID</span></td>
    <td>the sector index we collided with. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">leafID</span></td>
    <td>the cell ID we collided with. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">materialList</span></td>
    <td>a vector containing the names of all the surfaces on the leaf. Names are a concatenation following the format PackageName.SurfaceName </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>Returns true if all the data was found and false otherwise </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1a8b21c5f1a3a900a58b51a342a9b05b7e"></a>
<p class="NDLRefMemberFunction">void  RemoveMaterialFromLeaf(<br/><span class="NDLSystemFont"><a href="../efd/efd__Point2.htm">efd::Point2</a></span> sectorID, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> leafID, <br/><span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span> materialName)</p>
<p class="NDLRefMemberDescription">Removes a given material from a give leaf. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">sectorID</span></td>
    <td>the index of the sector where the leaf can be found. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">leafID</span></td>
    <td>the index of the leaf we want to remove the material from. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">materialName</span></td>
    <td>the material name we want to remove. The name is a concatenation following the format PackageName.SurfaceName </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1a71e21688cd11ec341553611d8a8b64d7"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  RemoveMaterialFromTerrain(<br/><span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span> packageNameUTF8, <br/><span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span> materialNameUTF8)</p>
<p class="NDLRefMemberDescription">Removes the given material from all terrains. </p>
<p class="NDLRefMemberDetailedDescription">This function first resolves what surface to remove using the package and material name parameters.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">packageNameUTF8</span></td>
    <td>name of the package the material belongs too </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">materialNameUTF8</span></td>
    <td>name of the material to remove </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1a4188db42a28177e3d33d10a320ec85f9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  RemoveMaterialFromTerrain(const <span class="NDLSystemFont"><a href="../NiTerrain/NiSurface.htm">NiSurface</a></span>* pSurface)</p>
<p class="NDLRefMemberDescription">Removes the given surface from all registered terrains. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pSurface</span></td>
    <td>the surface to remove. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1a6f77a0034df3efc731e15e25efa884f2"></a>
<p class="NDLRefMemberFunction">void  DisplayPaintingGuide(<span class="NDLSystemFont">bool</span> enable)</p>
<p class="NDLRefMemberDescription">Sets the flag to control whether the painting guide should be displayed or not. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">enable</span></td>
    <td>flag to display the painting guide. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1a2b06c66950ea343f7a645e1c35e1614a"></a>
<p class="NDLRefMemberFunction">void  RequestPaintingGuideRebuild()</p>
<p class="NDLRefMemberDescription">Requests the painting guide to be rebuild from the loaded sectors. </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1afc13143bb4726cd17e6447fbf953d189"></a>
<p class="NDLRefMemberFunction">void  GetSurfaceMaskData(<br/><span class="NDLSystemFont"><a href="../efd/efd__Point2.htm">efd::Point2</a></span> sectorIndex, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> leafID, <br/><span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span> materialNameUTF8, <br/><span class="NDLSystemFont"><a href="../NiTerrain/NiTerrainDeformationBuffer.htm">SurfaceMaskBuffer</a></span>* pMaskBuffer, <br/><span class="NDLSystemFont"><a href="../NiTerrain/NiTerrainDeformationBuffer.htm">SurfaceMaskBuffer</a></span>* pSumBuffer)</p>
<p class="NDLRefMemberDescription">Retrieves the appropriate material data for the leaf defined by leafID and belonging to the given sectorIndex. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">sectorIndex</span></td>
    <td>the index of the sector the leaf belongs to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">leafID</span></td>
    <td>the ID of the leaf we want the material data for. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">materialNameUTF8</span></td>
    <td>the name of the material we want data for </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pMaskBuffer</span></td>
    <td>Return parameter that holds the requested data can not be NULL) </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pSumBuffer</span></td>
    <td>Return parameter that holds the material mask sums </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1a8bcdb2fc57395dd9ad172031fcbfb80b"></a>
<p class="NDLRefMemberFunction">void  SetSurfaceMaskData(<br/><span class="NDLSystemFont"><a href="../efd/efd__Point2.htm">efd::Point2</a></span> sectorIndex, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> leafID, <br/><span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span> materialNameUTF8, <br/><span class="NDLSystemFont"><a href="../NiTerrain/NiTerrainDeformationBuffer.htm">SurfaceMaskBuffer</a></span>* pBuffer, <br/><span class="NDLSystemFont"><a href="../NiTerrain/NiTerrainDeformationBuffer.htm">SurfaceMaskBuffer</a></span>* pSumBuffer)</p>
<p class="NDLRefMemberDescription">Sets the material data for the leaf defined by leafID and belonging to the given sectorIndex. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">sectorIndex</span></td>
    <td>the index of the sector the leaf belongs to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">leafID</span></td>
    <td>the ID of the leaf we want to modify with the given data. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">materialNameUTF8</span></td>
    <td>the name of the material we are setting the data to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pBuffer</span></td>
    <td>Holds the material blending data </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pSumBuffer</span></td>
    <td>Holds the required sum data </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_terrain_service_1a1c0eb3e730c31c834ff2f2ec07f76f85"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  SetPaintingGuideTexture(<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span> fileName)</p>
<p class="NDLRefMemberDescription">Accesses the Painting Guide and sets the texture to use. </p>
<a name="active_surface_management"></a>
<p class="NDLRefHead1">Active surface management</p>


<a name="classegm_tool_services_1_1_tool_terrain_service_1a2bf0997d949cd355b75a60f3a5b51354"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetNumActiveSurfaces() const</p>
<p class="NDLRefMemberDescription">Gets number of active surfaces. </p>
<p class="NDLRefMemberDetailedDescription">A surface is active if a brush is active that has a valid surface mapped to it. </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1af8c38aae3e21fcf3e16c4742b5100f42"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiTerrain/NiSurface.htm">NiSurface</a></span>*  GetActiveSurfaceAt(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> index)</p>
<p class="NDLRefMemberDescription">Gets the active surface at the specified index. </p>
<p class="NDLRefMemberDetailedDescription">The list of active surfaces are used to control the highlighting of the painting guide. </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1afa5e64f42c513ded1dee3c420ff631cb"></a>
<p class="NDLRefMemberFunction">void  AddActiveSurface(<span class="NDLSystemFont"><a href="../NiTerrain/NiSurface.htm">NiSurface</a></span>* pSurfaceMaterial)</p>
<p class="NDLRefMemberDescription">Add a surface to the list of active surfaces. </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1a030cbcb1e29c85e8f45b296698ce8c30"></a>
<p class="NDLRefMemberFunction">void  RemoveActiveSurface(<span class="NDLSystemFont"><a href="../NiTerrain/NiSurface.htm">NiSurface</a></span>* pSurfaceMaterial)</p>
<p class="NDLRefMemberDescription">Remove a surface from the list of active surfaces. </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1a04eecd83d0e2c9ac74f24573fbb3bee4"></a>
<p class="NDLRefMemberFunction">void  ClearActiveSurfaces()</p>
<p class="NDLRefMemberDescription">Clear the list of active surfaces. </p>
<a name="terrain_deformation"></a>
<p class="NDLRefHead1">Terrain deformation</p>


<a name="classegm_tool_services_1_1_tool_terrain_service_1a4f381ef82ee9293b74ea0cdbff819bdf"></a>
<p class="NDLRefMemberFunction">virtual void  ApplyToHeightMap(<span class="NDLSystemFont"><a href="../NiTerrain/NiTerrainDeformationBuffer.htm">HeightMapBuffer</a></span>* pHeightMap)</p>
<p class="NDLRefMemberDescription">Apply the data stored in the heightmap buffer to the terrain. </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1a5c0ddf3ab7e6e2f0dd55527ee12d34d6"></a>
<p class="NDLRefMemberFunction">void  ApplyMaterialMask(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& surfaceName, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& packageName, <br/><span class="NDLSystemFont"><a href="../NiTerrain/NiTerrainDeformationBuffer.htm">SurfaceMaskBuffer</a></span>* pMaskBuffer, <br/><span class="NDLSystemFont"><a href="../NiTerrain/NiTerrainDeformationBuffer.htm">SurfaceMaskBuffer</a></span>* pMaskSumBuffer)</p>
<p class="NDLRefMemberDescription">Apply the data stored in the surface mask buffer to the terrain. </p>
<a name="terrain_sector_streaming"></a>
<p class="NDLRefHead1">Terrain sector streaming</p>


<a name="classegm_tool_services_1_1_tool_terrain_service_1a1543eca83bda27bd2f48f6900daf92a1"></a>
<p class="NDLRefMemberFunction">virtual void  UnloadSector(<br/><span class="NDLSystemFont"><a href="../NiTerrain/NiTerrain.htm">NiTerrain</a></span>* pTerrain, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a78e418e4217f674682471407609a8aa8">efd::SInt16</a></span> sectorX, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a78e418e4217f674682471407609a8aa8">efd::SInt16</a></span> sectorY)</p>
<p class="NDLRefMemberDescription">Request that the sector at the given index be unloaded. </p>
<p class="NDLRefMemberDetailedDescription">In the tool terrain service, this will also cause any changes to the sector to be saved to disk. </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1a9d9a7162d9ab3536ec09e3094e1ed78a"></a>
<p class="NDLRefMemberFunction">void  CreateSector(<br/><span class="NDLSystemFont"><a href="../NiTerrain/NiTerrain.htm">NiTerrain</a></span>* pTerrain, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a78e418e4217f674682471407609a8aa8">efd::SInt16</a></span> sectorX, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a78e418e4217f674682471407609a8aa8">efd::SInt16</a></span> sectorY)</p>
<p class="NDLRefMemberDescription">Request that a sector be created at the given index. </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1a30323da9d0812aa279cf000a5b9e2ede"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsSectorLODLoaded(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a78e418e4217f674682471407609a8aa8">efd::SInt16</a></span> sectorX, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a78e418e4217f674682471407609a8aa8">efd::SInt16</a></span> sectorY, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span> lod)</p>
<p class="NDLRefMemberDescription">Check if the sector at the given index has been loaded to a certain level of detail. </p>

<a name="classegm_tool_services_1_1_tool_terrain_service_1a8c7c7e8f5164851e63881596fc42a11b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsSectorOnDisk(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a78e418e4217f674682471407609a8aa8">efd::SInt16</a></span> sectorX, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a78e418e4217f674682471407609a8aa8">efd::SInt16</a></span> sectorY)</p>
<p class="NDLRefMemberDescription">Check to see if the sector at the given index is available on disk. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

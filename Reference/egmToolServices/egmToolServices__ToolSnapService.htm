<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egmToolServices::ToolSnapService</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egmToolServices::ToolSnapService</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__ISystemService.htm">efd::ISystemService</a></span></p>


<p class="NDLRefHeaderFile">&lt;ToolSnapService.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegm_tool_services_1_1_tool_snap_service.gif" alt="Inheritance graph for egmToolServices::ToolSnapService"/>
  <p class="FigureCaption">Inheritance graph for egmToolServices::ToolSnapService</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">The <span class="NDLSystemFont">ToolSnapService</span> is responsible for maintaining a list of snap points and snapping to those points as requested. </p>
<p class="NDLNormal">These snap points can be created in the art package by artists and used to assist in positioning entities in tools.</p>
<p class="NDLNormal">In order for two entities to snap together, they need to both have at least one snap point. The snap point system has a "stickiness" radius that defines how close two entities must be before a "snap" operation occurs. When the snap occurs, the two snap points are made to be coincident. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegm_tool_services_1_1_tool_snap_service_1a6a353c4804f22fb3d55adb0c84026129"></a>
<p class="NDLRefMemberFunction">ToolSnapService()</p>
<p class="NDLRefMemberDetailedDescription">Basic constructor </p>

<a name="classegm_tool_services_1_1_tool_snap_service_1a75e0638d9a402db735991ce388341012"></a>
<p class="NDLRefMemberFunction">virtual void  OnSceneGraphAdded(<br/>const <span class="NDLSystemFont"><a href="../ecr/ecr__SceneGraphAddedMessage.htm">ecr::SceneGraphAddedMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">This handler is invoked whenever the SceneGraphService registers a new scene graph object. </p>
<p class="NDLRefMemberDetailedDescription">This service then recurses over the scene graph to determine if any snap points exist.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The notification message containing the scene graph that was added. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">targetChannel</span></td>
    <td>The target category on which the message arrived. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_snap_service_1a33b5e73a062d188842b5dc720c30eb18"></a>
<p class="NDLRefMemberFunction">virtual void  OnSceneGraphRemoved(<br/>const <span class="NDLSystemFont"><a href="../ecr/ecr__SceneGraphRemovedMessage.htm">ecr::SceneGraphRemovedMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">This handler is invoked whenever the SceneGraphService unregisters a scene graph object. </p>
<p class="NDLRefMemberDetailedDescription">This service then releases any snap points that were contained.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The notification message containing the scene graph that was removed. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">targetChannel</span></td>
    <td>The target category on which the message arrived. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_snap_service_1a68436bb3d7fbc60dc9b6b27368ce9f44"></a>
<p class="NDLRefMemberFunction">void  BeginSnap(<span class="NDLSystemFont"><a href="../egf/egf__Entity.htm">egf::Entity</a></span>* pEntity)</p>
<p class="NDLRefMemberDescription">When beginning a translation event, snapping must be activated by this method. </p>
<p class="NDLRefMemberDetailedDescription">This will notify the service that it needs to begin rendering proxies as the objects move in space and snap points fall within the visualization bounds.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pEntity</span></td>
    <td>The entity that is the focus of the snapping. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_snap_service_1a17f2962467111db5dcca538f18dc29ec"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  SnapToPoints(<br/><span class="NDLSystemFont"><a href="../egf/egf__Entity.htm">egf::Entity</a></span>* pEntity, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& startPoint, <br/><span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& translate)</p>
<p class="NDLRefMemberDescription">When performing a translation event, snapping is computed by this method. </p>
<p class="NDLRefMemberDetailedDescription">It compares the current entity with all other entities with snap points. If there is any overlap, it will test to see if a snap occurred. If so, the new snap point is returned by the translate argument.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pEntity</span></td>
    <td>The notification message containing the scene graph that was removed. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">startPoint</span></td>
    <td>The target category on which the message arrived. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">translate</span></td>
    <td>The computed translation to achieve "snapping" </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>Determine whether or not the snap occurred. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_snap_service_1a3b96cd7db25f05575d9a571040669477"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  ClosestSnapToRay(<br/><span class="NDLSystemFont"><a href="../egf/egf__Entity.htm">egf::Entity</a></span>* pEntity, <br/><span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span> origin, <br/><span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span> direction, <br/><span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& snapPosition)</p>
<p class="NDLRefMemberDescription">Given a ray, compute the snap point that it comes closest to if it comes within the snap radius of any snap point. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pEntity</span></td>
    <td>The entity to use the result. Any snap points associated with this entity will be ignored </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">origin</span></td>
    <td>The origin of the input ray </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">direction</span></td>
    <td>The direction of the input ray. This should be a unit vector </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">snapPosition</span></td>
    <td>The resulting world position of the closest snap point </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>Whether or not a snap occurred. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_tool_services_1_1_tool_snap_service_1aba52b6f8b3106c6bc88c601399b7c94c"></a>
<p class="NDLRefMemberFunction">void  EndSnap()</p>
<p class="NDLRefMemberDescription">When completing a translation event, snapping must be deactivated by this method. </p>
<p class="NDLRefMemberDetailedDescription">This will hide any snap point proxies. </p>

<a name="classegm_tool_services_1_1_tool_snap_service_1a6d5063d265a04270fded59b63c46d939"></a>
<p class="NDLRefMemberFunction">float  GetStickinessRadius() const</p>
<p class="NDLRefMemberDescription">Get how close two entities must be before a "snap" operation occurs. </p>
<p class="NDLRefMemberDetailedDescription">May be called during OnPreInit or OnInit. </p>

<a name="classegm_tool_services_1_1_tool_snap_service_1adda287859cdeee29ee5f5b039b2cc968"></a>
<p class="NDLRefMemberFunction">void  SetStickinessRadius(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> radius)</p>
<p class="NDLRefMemberDescription">Set how close two entities must be before a "snap" operation occurs. </p>
<p class="NDLRefMemberDetailedDescription">May be called during OnPreInit or OnInit. </p>

<a name="classegm_tool_services_1_1_tool_snap_service_1afd880cbbe12cb5ac2fb4968719e2e32e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetSnapPointEnabled() const</p>
<p class="NDLRefMemberDescription">Get whether or not we enable the snap points. </p>
<p class="NDLRefMemberDetailedDescription">May be called during OnPreInit or OnInit. </p>

<a name="classegm_tool_services_1_1_tool_snap_service_1af0e4717326101c875d7f4a1f851723d5"></a>
<p class="NDLRefMemberFunction">void  SetSnapPointEnabled(<span class="NDLSystemFont">bool</span> enabled)</p>
<p class="NDLRefMemberDescription">Set whether or not we enable the snap points. </p>
<p class="NDLRefMemberDetailedDescription">May be called during OnPreInit or OnInit. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

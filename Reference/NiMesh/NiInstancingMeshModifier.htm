<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiInstancingMeshModifier</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiInstancingMeshModifier</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="NiMeshModifier.htm">NiMeshModifier</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiInstancingMeshModifier.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_instancing_mesh_modifier.gif" alt="Inheritance graph for NiInstancingMeshModifier"/>
  <p class="FigureCaption">Inheritance graph for NiInstancingMeshModifier</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This mesh modifier provides per frame instancing capabilities in Gamebryo. </p>
<p class="NDLNormal">Specificity, this mesh modifier is responsible for updating the transform data stream of the instanced mesh, updating the bounding volume of the instanced mesh, and performing per instance culling of individual instances if requested. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_instancing_mesh_modifier_1ad4ac49dcb1fdc24836fa76ecb02a40f3"></a>
<p class="NDLRefMemberFunction">NiInstancingMeshModifier()</p>
<p class="NDLRefMemberDetailedDescription">Constructor. </p>

<a name="class_ni_instancing_mesh_modifier_1acef8da8456d95e688cc24330de08dfe2"></a>
<p class="NDLRefMemberFunction">virtual ~NiInstancingMeshModifier()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_instancing_mesh_modifier_1aa266c1a834f01d1508690f40f6cbe673"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetPerInstaceCulling()</p>
<p class="NDLRefMemberDescription">Returns whether per-instance culling is enabled. </p>

<a name="class_ni_instancing_mesh_modifier_1abbe8901f5cc98857c6ed378804d42b79"></a>
<p class="NDLRefMemberFunction">void  SetPerInstanceCulling(<span class="NDLSystemFont">bool</span> bPerInstanceCulling)</p>
<p class="NDLRefMemberDescription">Sets the mesh modifier to use per-instance culling (false by default). </p>
<p class="NDLRefMemberDetailedDescription">This enables culling of individual instances. </p>

<a name="class_ni_instancing_mesh_modifier_1a032090ef3d131913ff6f94d09db6ae1a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetStaticBounds()</p>
<p class="NDLRefMemberDescription">Returns whether the bounds for the instanced mesh referenced by the mesh modifier is static. </p>

<a name="class_ni_instancing_mesh_modifier_1a4c827bdf46bf1e74400ed0962d989362"></a>
<p class="NDLRefMemberFunction">void  SetStaticBounds(<span class="NDLSystemFont">bool</span> bStaticBounds)</p>
<p class="NDLRefMemberDescription">Sets the bounding volume for the instanced mesh referenced by the mesh modifier to static (false by default). </p>
<p class="NDLRefMemberDetailedDescription">This eliminates the need for the mesh modifier to recalculate the bounds when a transforms change. </p>

<a name="class_ni_instancing_mesh_modifier_1ac46989041c70a813fabea8944f79685b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  AreInstanceNodesUsed()</p>
<p class="NDLRefMemberDescription">Returns whether instance nodes, <span class="NDLSystemFont"><a href="NiMeshHWInstance.htm">NiMeshHWInstance</a></span>, objects are being used to represent the transforms for the instances of the instanced mesh. </p>

<a name="class_ni_instancing_mesh_modifier_1a8c26ff63956c5619d2eefdf17db3e409"></a>
<p class="NDLRefMemberFunction">void  MarkInstanceNodeTranformsDirty()</p>
<p class="NDLRefMemberDescription">Flags the instancing node, <span class="NDLSystemFont"><a href="NiMeshHWInstance.htm">NiMeshHWInstance</a></span>, transforms as dirty. </p>
<p class="NDLRefMemberDetailedDescription">This will force the mesh modifier to update the transforms data stream with the transforms of the <span class="NDLSystemFont"><a href="NiMeshHWInstance.htm">NiMeshHWInstance</a></span> objects. </p>

<a name="class_ni_instancing_mesh_modifier_1a5bb06723aa5aea5ee19b36263b729b95"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  AreInstanceNodeTranformsDirty()</p>
<p class="NDLRefMemberDescription">Returns whether the instance node, <span class="NDLSystemFont"><a href="NiMeshHWInstance.htm">NiMeshHWInstance</a></span>, transforms are dirty. </p>

<a name="class_ni_instancing_mesh_modifier_1aa05d3606fe64e7385a562d9e9d971049"></a>
<p class="NDLRefMemberFunction">void  AddMeshInstance(<span class="NDLSystemFont"><a href="NiMeshHWInstance.htm">NiMeshHWInstance</a></span>* pkHWInstance)</p>
<p class="NDLRefMemberDescription">Adds an <span class="NDLSystemFont"><a href="NiMeshHWInstance.htm">NiMeshHWInstance</a></span> object to the list of <span class="NDLSystemFont"><a href="NiMeshHWInstance.htm">NiMeshHWInstance</a></span> objects that are used to represent the transforms for the instances of the instanced mesh. </p>

<a name="class_ni_instancing_mesh_modifier_1a7e62a7b1018313331a80cfa66de673d0"></a>
<p class="NDLRefMemberFunction">void  RemoveMeshInstance(<span class="NDLSystemFont"><a href="NiMeshHWInstance.htm">NiMeshHWInstance</a></span>* pkHWInstance)</p>
<p class="NDLRefMemberDescription">Removes an <span class="NDLSystemFont"><a href="NiMeshHWInstance.htm">NiMeshHWInstance</a></span> object to the list of <span class="NDLSystemFont"><a href="NiMeshHWInstance.htm">NiMeshHWInstance</a></span> objects that are used to represent the transforms for the instances of the instanced mesh. </p>

<a name="class_ni_instancing_mesh_modifier_1a4d09815d972fc2409899d117935ccc60"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  SetInstanceBoundScale(<br/>float* pkBoundScales, <br/><span class="NDLSystemFont">NiUInt32</span> uiScaleCount, <br/><span class="NDLSystemFont">NiUInt32</span> uiInstanceOffset = 0)</p>
<p class="NDLRefMemberDescription">Manually sets the scale for the instances' bounding volumes. </p>
<p class="NDLRefMemberDetailedDescription">This scale represents the scale applied in an instance's transform. Since the scale is encoded in the transformation matrix the instance culling kernel needs to be explicitly provided the scale for each instance. This scale will then be applied to the bounding volume when per instance culling is used. These scales will be automatically extracted if <span class="NDLSystemFont"><a href="NiMeshHWInstance.htm">NiMeshHWInstance</a></span> nodes are used. Otherwise they need to be manually set via this method. If they are not set a default scale of 1.0 will be used.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkBoundScales</span></td>
    <td>Pointer to an array of floats that represent the scales to be set. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiScaleCount</span></td>
    <td>Number of scales that will be set. There must be at least a count of uiScaleCount scales available in the array referenced by pkBoundScales. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiInstanceOffset</span></td>
    <td>Offset, in instances, into the scale data stream that the pkBoundScales data will be copied too. The sum of uiScaleCount and uiInstanceOffset can not be greater than the maximum number of instances. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>Whether or not the scale were successfully set. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_instancing_mesh_modifier_1abe955049dbe4fc7663ae409ba192a387"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  AreRequirementsMet(<br/><span class="NDLSystemFont"><a href="NiMesh.htm">NiMesh</a></span>* pkMesh, <br/>NiSystemDesc::RendererID ePlatform) const</p>
<p class="NDLRefMemberDescription">This method checks if the mesh is suitable for instancing. </p>
<p class="NDLRefMemberDetailedDescription">If it returns false, the modifier may be removed from the mesh. </p>

<a name="class_ni_instancing_mesh_modifier_1a5129ad82f99814277fb0538cb8a7624b"></a>
<p class="NDLRefMemberFunction">virtual void  RetrieveRequirements(<span class="NDLSystemFont"><a href="NiMeshRequirements.htm">NiMeshRequirements</a></span>& kRequirements) const</p>
<p class="NDLRefMemberDescription">Retrieves the requirements from the mesh modifier. </p>

<a name="class_ni_instancing_mesh_modifier_1afb89c22e681cf0f8ab2ad35a979ddb23"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  RequiresMaterialOption(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kMaterialOption, <br/><span class="NDLSystemFont">bool</span>& bResult) const</p>
<p class="NDLRefMemberDescription">RequiresMaterialOption may be used by materials to determine whether or not they are expected to do some work. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if the kMaterialOption is <span class="NDLSystemFont"><a href="../NiMain/NiRenderObjectMaterialOption.htm">NiRenderObjectMaterialOption::TRANSFORM_INSTANCED()</a></span>, otherwise false. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_instancing_mesh_modifier_1a70596b6b9d1bd6d0555d29aeda6a64ba"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiMesh.htm">NiMesh</a></span>*  GetAffectedMesh()</p>
<p class="NDLRefMemberDescription">Returns the mesh affected by the modifier. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>MutableLockPolicy</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">MutableLockPolicy</p>


<p class="NDLRefHeaderFile">&lt;NiDataStreamLockPolicy.h&gt;</p>


<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Implements the locking policy used by <span class="NDLSystemFont"><a href="NiDataStream.htm">NiDataStream</a></span> subclasses with mutable read/write access. </p>
<p class="NDLNormal">This is a template class - the template argument must be a sub-class of <span class="NDLSystemFont"><a href="NiDataStream.htm">NiDataStream</a></span>. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_mutable_lock_policy_1ae8d138ff7c93fb5e8d9ed989fda4e7ed"></a>
<p class="NDLRefMemberFunction">MutableLockPolicy()</p>
<p class="NDLRefMemberDescription">Constructor. </p>

<a name="class_mutable_lock_policy_1a6012e4e02630aee6a688079891b5d81a"></a>
<p class="NDLRefMemberFunction">void*  LockRead(<br/>TDataStream* pkDS, <br/><span class="NDLSystemFont">bool</span> bForceRead)</p>
<p class="NDLRefMemberDescription">Locks the stream for read access and returns a pointer to the data. </p>

<a name="class_mutable_lock_policy_1a2389b8b99253c7939e90c47b996e3777"></a>
<p class="NDLRefMemberFunction">void*  LockWrite(<br/>TDataStream* pkDS, <br/><span class="NDLSystemFont">bool</span> bForceWrite)</p>
<p class="NDLRefMemberDescription">Locks the stream for write access and returns a pointer to the data. </p>

<a name="class_mutable_lock_policy_1a9cb6f7b1106a07e72510c784fb2d475b"></a>
<p class="NDLRefMemberFunction">void*  LockReadWrite(<br/>TDataStream* pkDS, <br/><span class="NDLSystemFont">bool</span> bForceRead, <br/><span class="NDLSystemFont">bool</span> bForceWrite)</p>
<p class="NDLRefMemberDescription">Locks the stream for read/write access and returns a pointer to the data. </p>

<a name="class_mutable_lock_policy_1abc9ff5b31f785b90bf9a83351130cc9a"></a>
<p class="NDLRefMemberFunction">void  UnlockRead(<br/>TDataStream* pkDS, <br/><span class="NDLSystemFont">bool</span> bForceRead)</p>
<p class="NDLRefMemberDescription">Unlocks a stream that was previously locked for read access. </p>

<a name="class_mutable_lock_policy_1a27f710e28a3b99f1d0e2b8a3dec6005e"></a>
<p class="NDLRefMemberFunction">void  UnlockWrite(<br/>TDataStream* pkDS, <br/><span class="NDLSystemFont">bool</span> bForceWrite)</p>
<p class="NDLRefMemberDescription">Unlocks a stream that was previously locked for write access. </p>

<a name="class_mutable_lock_policy_1a1a79d8b2c50bc8ede8f92b7f0f8783f9"></a>
<p class="NDLRefMemberFunction">void  UnlockReadWrite(<br/>TDataStream* pkDS, <br/><span class="NDLSystemFont">bool</span> bForceRead, <br/><span class="NDLSystemFont">bool</span> bForceWrite)</p>
<p class="NDLRefMemberDescription">Unlocks a stream that was previously locked for read/write access. </p>

<a name="class_mutable_lock_policy_1aa6a2e454994f7061eaad5f77b65098e7"></a>
<p class="NDLRefMemberFunction">void  Delete(TDataStream* pkDS)</p>
<p class="NDLRefMemberDescription">In debug builds, asserts that the stream is not locked and hence is safe to delete. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

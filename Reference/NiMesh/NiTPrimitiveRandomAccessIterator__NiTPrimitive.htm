<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiTPrimitiveRandomAccessIterator::NiTPrimitive</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiTPrimitiveRandomAccessIterator::NiTPrimitive</p>


<p class="NDLRefHeaderFile">&lt;NiTPrimitiveRandomAccessIterator.h&gt;</p>


<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Nested class meant to contain the indices for a given primitive. </p>

<a name="public_attributes"></a>
<p class="NDLRefHead1">Public Attributes</p>


<a name="class_ni_t_primitive_random_access_iterator_1_1_ni_t_primitive_1aa3d02449ffc832aeb7371ae9543c4fe0"></a>
<p class="NDLRefMemberFunction">ITERATOR_TYPE  m_kBuffer</p>
<p class="NDLRefMemberDescription">Index iterator. </p>

<a name="class_ni_t_primitive_random_access_iterator_1_1_ni_t_primitive_1ade1590c1fee73d2f2b3c9337880d2688"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  m_uiPrimIndexCount</p>
<p class="NDLRefMemberDescription">Number of indices in the given primitive. </p>

<a name="class_ni_t_primitive_random_access_iterator_1_1_ni_t_primitive_1ac7c96b08c018efe189d5c344d2c29673"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiBool</span>  m_bReverseOddWindings</p>
<p class="NDLRefMemberDescription">Should the index buffer reverse the order it provides indices for odd primitives? </p>

<a name="class_ni_t_primitive_random_access_iterator_1_1_ni_t_primitive_1ac715004f13b5d41f375fd36f34a77a18"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiBool</span>  m_bIsOdd</p>
<p class="NDLRefMemberDescription">Is the current primitive an odd number? </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_t_primitive_random_access_iterator_1_1_ni_t_primitive_1a8a1f8f623575d04ffda0086436050485"></a>
<p class="NDLRefMemberFunction">NiTPrimitive(<br/>const ITERATOR_TYPE& iter, <br/><span class="NDLSystemFont">NiUInt32</span> uiPrimIndexCount, <br/><span class="NDLSystemFont">NiBool</span> bReverseOddWindings, <br/><span class="NDLSystemFont">NiBool</span> bIsOdd)</p>
<p class="NDLRefMemberDescription">Constructor. for consuming an index buffer to generate primitives. </p>

<a name="class_ni_t_primitive_random_access_iterator_1_1_ni_t_primitive_1a12c80bb288de77e228dfd170b36033c7"></a>
<p class="NDLRefMemberFunction">NiTPrimitive(<br/>const <span class="NDLSystemFont">NiTPrimitive</span>& kOther, <br/><span class="NDLSystemFont">NiBool</span> bReverseOddWindings, <br/><span class="NDLSystemFont">NiBool</span> bIsOdd)</p>
<p class="NDLRefMemberDescription">Pseudo-copy constructor. </p>

<a name="class_ni_t_primitive_random_access_iterator_1_1_ni_t_primitive_1a42af9caac1ae6879b7652f73ef2593b8"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  count() const</p>
<p class="NDLRefMemberDescription">Return the number of indices in this primitive. </p>

<a name="class_ni_t_primitive_random_access_iterator_1_1_ni_t_primitive_1ac5a06ff76d3a3cc6f8b2fbe2816340b6"></a>
<p class="NDLRefMemberFunction">INDEX_TYPE  operator[](<span class="NDLSystemFont">NiUInt32</span> stIndex) const</p>
<p class="NDLRefMemberDescription">Return the value of the primitive at the specified array index. </p>

<a name="class_ni_t_primitive_random_access_iterator_1_1_ni_t_primitive_1aa44d44a20969064fab66cf1644755d36"></a>
<p class="NDLRefMemberFunction">INDEX_TYPE  GetAt(<span class="NDLSystemFont">NiUInt32</span> stIndex) const</p>
<p class="NDLRefMemberDescription">Alternative mechanism for consuming the primitive's indices. </p>

<a name="class_ni_t_primitive_random_access_iterator_1_1_ni_t_primitive_1abc9bbe30b2f2f0077676d62c81f2b118"></a>
<p class="NDLRefMemberFunction">void  Get(<br/>INDEX_TYPE* pkBuffer, <br/><span class="NDLSystemFont">NiUInt32</span> uiBufferSize) const</p>
<p class="NDLRefMemberDescription">Method for retrieving all indices at once. </p>

<a name="class_ni_t_primitive_random_access_iterator_1_1_ni_t_primitive_1ae6848be140eb6889f6bea925529612d9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsDegenerate() const</p>
<p class="NDLRefMemberDescription">Determines whether or not this is a degenerate primitive. </p>

<a name="class_ni_t_primitive_random_access_iterator_1_1_ni_t_primitive_1a7ed96c230d1cc0ff893bc4613d93165f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  ContainsRestart(INDEX_TYPE kRestartToken)</p>
<p class="NDLRefMemberDescription">Determine if this primitive contains the given token. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

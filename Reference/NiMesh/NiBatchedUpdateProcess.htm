<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiBatchedUpdateProcess</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiBatchedUpdateProcess</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="NiMeshUpdateProcess.htm">NiMeshUpdateProcess</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiBatchedUpdateProcess.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_batched_update_process.gif" alt="Inheritance graph for NiBatchedUpdateProcess"/>
  <p class="FigureCaption">Inheritance graph for NiBatchedUpdateProcess</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Update process for use when batch updating multiple independent scene graphs. </p>
<p class="NDLNormal">Unlike <span class="NDLSystemFont"><a href="NiMeshUpdateProcess.htm">NiMeshUpdateProcess</a></span>, this class will not flush accumulated task groups at the end of a call to Update. Instead, all task groups will be flushed when an explicit call to <span class="NDLSystemFont"><a href="NiBatchedUpdateProcess.htm#class_ni_batched_update_process_1aabdbd00b27fc37b0a2079de7b3af4285">Flush()</a></span> is made. Hence, the use of this update process may result in fewer, larger workflow submissions to Floodgate, which may be more efficient. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_batched_update_process_1a4af8551b251f08e84591b89eeefc32a4"></a>
<p class="NDLRefMemberFunction">NiBatchedUpdateProcess(<span class="NDLSystemFont"><a href="../NiFloodgate/NiSPWorkflowManager.htm">NiSPWorkflowManager</a></span>* pkWorkflowManager = NULL)</p>
<p class="NDLRefMemberDescription">Constructs a new <span class="NDLSystemFont">NiBatchedUpdateProcess</span> object. </p>
<p class="NDLRefMemberDetailedDescription">If no workflow manager is specified, it will create an internal workflow manager with default parameters that will be owned by this object. Otherwise, this object will use the passed-in workflow manager, but will not own it. </p>

<a name="class_ni_batched_update_process_1a6103d89a7c4954095e5ea74b4968ad25"></a>
<p class="NDLRefMemberFunction">virtual ~NiBatchedUpdateProcess()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_batched_update_process_1ab3c757bbc54d6105bd1067a1435897f9"></a>
<p class="NDLRefMemberFunction">virtual void  PreUpdate(<span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkObject)</p>
<p class="NDLRefMemberDescription">Perform work before an object is updated. </p>
<p class="NDLRefMemberDetailedDescription">This implementation intentionally does no work in PreUpdate. </p>

<a name="class_ni_batched_update_process_1a58e6d21f52fda84ecc3e6a18120c6ee3"></a>
<p class="NDLRefMemberFunction">virtual void  PostUpdate(<span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkObject)</p>
<p class="NDLRefMemberDescription">Perform work after an object is updated. </p>
<p class="NDLRefMemberDetailedDescription">This implementation intentionally does no work in PostUpdate. </p>

<a name="class_ni_batched_update_process_1aabdbd00b27fc37b0a2079de7b3af4285"></a>
<p class="NDLRefMemberFunction">void  Flush()</p>
<p class="NDLRefMemberDescription">Flushes accumulated task groups to the associated workflow manager. </p>
<p class="NDLRefMemberDetailedDescription">This function should be called immediately after all of the scene graph nodes have been updated, but before moving on to other work, such as culling or rendering, to maximize latency hiding. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

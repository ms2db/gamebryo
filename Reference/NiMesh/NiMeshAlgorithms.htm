<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiMeshAlgorithms</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiMeshAlgorithms</p>


<p class="NDLRefHeaderFile">&lt;NiMeshAlgorithms.h&gt;</p>


<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">A class containing static templated functions for performing various algorithms on <span class="NDLSystemFont"><a href="NiMesh.htm">NiMesh</a></span> objects. </p>

<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="class_ni_mesh_algorithms_1aeba55b3032ecff29aa95e281da281c87"></a>
<p class="NDLRefMemberFunction">template &lt;typename TRegionFunctor  &gt; static <span class="NDLSystemFont">bool</span>  ForEachUniqueRegion(<br/><span class="NDLSystemFont"><a href="NiMesh.htm">NiMesh</a></span>* pkMesh, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kSemantic, <br/><span class="NDLSystemFont">NiUInt32</span> uiSemanticIndex, <br/>TRegionFunctor& kFunc, <br/><span class="NDLSystemFont">NiUInt8</span> ucLockMask)</p>
<p class="NDLRefMemberDescription">For each sub-mesh within the <span class="NDLSystemFont"><a href="NiMesh.htm">NiMesh</a></span>, call the supplied functor for every region in the sub-mesh, unless that region has already been called for a different sub-mesh in which case it is not called again. </p>
<p class="NDLRefMemberDetailedDescription">The TRegionFunctor could be either a function or a class. The signature for a function would be:</p>
<p class="NDLRefMemberDetailedDescription">void CustomRegionFunction( void* pRegionDataBegin, void* pRegionDataEnd, NiUInt32 uiStride, <span class="NDLSystemFont"><a href="NiDataStreamElement.htm#class_ni_data_stream_element_1a4a4822c6a137f25713f304012b600d20">NiDataStreamElement::Format</a></span> eFormat)</p>
<p class="NDLRefMemberDetailedDescription">The signature for a class with an overloaded () function:</p>
<p class="NDLRefMemberDetailedDescription">class ClassRegionFunctor { public: void operator () ( void* pRegionDataBegin, void* pRegionDataEnd, NiUInt32 uiStride, <span class="NDLSystemFont"><a href="NiDataStreamElement.htm#class_ni_data_stream_element_1a4a4822c6a137f25713f304012b600d20">NiDataStreamElement::Format</a></span> eFormat) { } }; </p>
<a name="primitive-based_foreach_functions."></a>
<p class="NDLRefHead1">Primitive-Based Foreach Functions.</p>

<p class="NDLRefMemberDescription">The TPrimitiveFunctor could be either a function or a class.</p>
<p class="NDLRefMemberDescription">The signature for a function would be:</p>
<p class="NDLRefMemberDescription">bool CustomPrimitiveFunction(const NiUInt32* pIndices, NiUInt32 uiIndexCount, NiUInt32 uiPrimitiveIdx, NiUInt16 uiSubMesh)</p>
<p class="NDLRefMemberDescription">The signature for a class with an overloaded () function:</p>
<p class="NDLRefMemberDescription">class PrimitiveFunctor { public: bool operator () (const NiUInt32* pIndices, NiUInt32 uiIndexCount, NiUInt32 uiPrimitiveIdx, NiUInt16 uiSubMesh) { } };</p>
<p class="NDLRefMemberDescription">The pIndices array contains the vertex indices for the primitive, uiIndexCount is the number of indices, uiPrimitiveIndex is as index for the primitive in it's sub-mesh (given in uiSubMesh). The first primitive (triangle, for instance) in the sub-mesh is 0, the next triangle is 1, and so on. uiPrimitiveIndex is NOT an index into the INDEX data stream.</p>
<p class="NDLRefMemberDescription"></p>

<a name="class_ni_mesh_algorithms_1a1b5d629436467632e47653bce6ae321e"></a>
<p class="NDLRefMemberFunction">template &lt;typename TPrimitiveFunctor  &gt; static <span class="NDLSystemFont">bool</span>  ForEachPrimitiveAllSubmeshes(<br/><span class="NDLSystemFont"><a href="NiMesh.htm">NiMesh</a></span>* pkMesh, <br/>TPrimitiveFunctor& kFunctor, <br/><span class="NDLSystemFont">NiUInt8</span> ucLockMask = NiDataStream::LOCK_READ, <br/><span class="NDLSystemFont">bool</span> bAllowEarlyOut = false)</p>
<p class="NDLRefMemberDescription">Primitive foreach that visits the primitives for each submesh (static function). </p>

<a name="class_ni_mesh_algorithms_1a88549ecd9352cfd2050a1e7f5f5854e4"></a>
<p class="NDLRefMemberFunction">template &lt;typename TPrimitiveFunctor  &gt; static <span class="NDLSystemFont">bool</span>  ForEachPrimitiveOneSubmesh(<br/><span class="NDLSystemFont"><a href="NiMesh.htm">NiMesh</a></span>* pkMesh, <br/><span class="NDLSystemFont">NiUInt16</span> uiSubMesh, <br/>TPrimitiveFunctor& kFunctor, <br/><span class="NDLSystemFont">NiUInt8</span> ucLockMask = NiDataStream::LOCK_READ, <br/><span class="NDLSystemFont">bool</span> bAllowEarlyOut = false)</p>
<p class="NDLRefMemberDescription">Primitive foreach that visits the primitives for a specific sub-mesh (static function). </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

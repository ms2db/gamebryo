<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiDebugVisualizationClick</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiDebugVisualizationClick</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiRenderClick.htm">NiRenderClick</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiDebugVisualizationClick.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_debug_visualization_click.gif" alt="Inheritance graph for NiDebugVisualizationClick"/>
  <p class="FigureCaption">Inheritance graph for NiDebugVisualizationClick</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class implements a simple debug geometry visualizer that can be easily integrated into the Frame Rendering System to display additional information about a scene. </p>
<p class="NDLNormal">Here is an example of how to use this code in an NiApplication derived application: 
<pre>    // Create the debug click
    m_spDebugGeometryClick = NiNew NiDebugVisualizationClick();
    m_spDebugGeometryClick-&gt;SetName(&quot;Debug visualization click.&quot;);
    m_spDebugGeometryClick-&gt;SetCamera(m_spCamera);
    m_spDebugGeometryClick-&gt;SetClearAllBuffers(false);
    m_spDebugGeometryClick-&gt;ClearScene();

    // Create a render step to hold the click and append it to the frame
    NiDefaultClickRenderStep* pkDebugStep = NiNew NiDefaultClickRenderStep;
    pkDebugStep-&gt;SetName(&quot;Debug visualization step.&quot;);
    pkDebugStep-&gt;AppendRenderClick(m_spDebugGeometryClick);
    EE_ASSERT(m_spFrame);
    m_spFrame-&gt;AppendRenderStep(pkDebugStep);

    // Process the scene to build up a list of things to visualize
    m_spDebugGeometryClick-&gt;ProcessScene(m_spScene, NiDebugVisualizationClick::ALL_MASK);
</pre>
</p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>
<a name="class_ni_debug_visualization_click_1a1fcf4ecaf9031b410e94e53f89935204"></a>
<p class=NDLRefHead2>NiDebugVisualizationClick::Flags</p>


<p class="NDLRefMemberDescription">Visualization mode flags. These may be combined. </p>


<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">POINT_LIGHT_MASK</span></td>
    <td>Display point lights. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">DIRECTIONAL_LIGHT_MASK</span></td>
    <td>Display directional lights. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">SPOT_LIGHT_MASK</span></td>
    <td>Display spot lights. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">LIGHT_MASK</span></td>
    <td>Display all lights (combination of light flags). </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">CAMERA_MASK</span></td>
    <td>Display cameras. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">BOUNDS_MASK</span></td>
    <td>Display bounding spheres for nodes. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">BONE_MASK</span></td>
    <td>Display bones. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">NODE_MASK</span></td>
    <td>Display nodes. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">CONNECTION_MASK</span></td>
    <td>Display hierarchy connections. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">ALL_MASK</span></td>
    <td>Display all information (combination of other flags). </td>
</tr>

  </tbody>
</table>
</div>


<a name="public_static_attributes"></a>
<p class="NDLRefHead1">Public Static Attributes</p>


<a name="class_ni_debug_visualization_click_1a908726510c62d13d4744738d932879df"></a>
<p class="NDLRefMemberFunction">static const <span class="NDLSystemFont"><a href="../NiMain/NiRTTI.htm">NiRTTI</a></span>  ms_RTTI</p>
<p class="NDLRefMemberFunction"></p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_debug_visualization_click_1a0b34740519968bd1de525593cb85eea6"></a>
<p class="NDLRefMemberFunction">virtual const <span class="NDLSystemFont"><a href="../NiMain/NiRTTI.htm">NiRTTI</a></span>*  GetRTTI() const</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_ni_debug_visualization_click_1a7dda912f051d55b44944eb975aadfd7f"></a>
<p class="NDLRefMemberFunction">NiDebugVisualizationClick(<span class="NDLSystemFont">NiUInt8</span> uiMask = ALL_MASK)</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_ni_debug_visualization_click_1a733e5c1abb772538b43b483064a476f7"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetViewPointLights() const</p>
<p class="NDLRefMemberDescription">Used to check whether point lights will be visualized when this click is rendered. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if point light visualizations will be rendered, false if they will not. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1a5b0995522a918fe7659959c5ebe0e680"></a>
<p class="NDLRefMemberFunction">void  SetViewPointLights(<span class="NDLSystemFont">bool</span> bNewValue)</p>
<p class="NDLRefMemberDescription">Used to set whether point lights will be visualized when this click is rendered. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">bNewValue</span></td>
    <td>True if point light visualizations should be rendered, false if they will not. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1a408430eae88d87d1a6a94a719bdf462e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetViewDirectionalLights() const</p>
<p class="NDLRefMemberDescription">Used to check whether directional lights will be visualized when this click is rendered. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if directional light visualizations will be rendered, false if they will not. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1a29f2f0975f69e94ba908728dd0aee572"></a>
<p class="NDLRefMemberFunction">void  SetViewDirectionalLights(<span class="NDLSystemFont">bool</span> bNewValue)</p>
<p class="NDLRefMemberDescription">Used to set whether directional lights will be visualized when this click is rendered. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">bNewValue</span></td>
    <td>True if directional light visualizations should be rendered, false if they will not. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1af08c2cd5110bcf58a042a6f2725d0e6d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetViewSpotLights() const</p>
<p class="NDLRefMemberDescription">Used to check whether spot lights will be visualized when this click is rendered. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if spot light visualizations will be rendered, false if they will not. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1a06df0cdf482c9416b0cfdc37c11d8cfd"></a>
<p class="NDLRefMemberFunction">void  SetViewSpotLights(<span class="NDLSystemFont">bool</span> bNewValue)</p>
<p class="NDLRefMemberDescription">Used to set whether spot lights will be visualized when this click is rendered. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">bNewValue</span></td>
    <td>True if spot light visualizations should be rendered, false if they will not. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1a6a786e286d281ea0f02c9c5f818d8aae"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetViewCameras() const</p>
<p class="NDLRefMemberDescription">Used to check whether cameras will be visualized when this click is rendered. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if camera visualizations will be rendered, false if they will not. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1aae517d4ec3492ce13f84ce659b9ea288"></a>
<p class="NDLRefMemberFunction">void  SetViewCameras(<span class="NDLSystemFont">bool</span> bNewValue)</p>
<p class="NDLRefMemberDescription">Used to set whether cameras will be visualized when this click is rendered. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">bNewValue</span></td>
    <td>True if camera visualizations should be rendered, false if they will not. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1af35d4040c9c27d20616b46387736832e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetViewBounds() const</p>
<p class="NDLRefMemberDescription">Used to check whether bounding spheres will be visualized when this click is rendered. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if bounding sphere visualizations will be rendered, false if they will not. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1ad317e858e00d02afe40505b3f6d1bc44"></a>
<p class="NDLRefMemberFunction">void  SetViewBounds(<span class="NDLSystemFont">bool</span> bNewValue)</p>
<p class="NDLRefMemberDescription">Used to set whether bounding spheres will be visualized when this click is rendered. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">bNewValue</span></td>
    <td>True if bounding sphere visualizations should be rendered, false if they will not. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1a7c891031ec20deddbccf625304b9b054"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetViewBones() const</p>
<p class="NDLRefMemberDescription">Used to check whether nodes affecting a skinned mesh bones will be visualized as bones when this click is rendered. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if bone visualizations will be rendered, false if they will not. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1a5cc24847623d3c38d118b36a6fde0f59"></a>
<p class="NDLRefMemberFunction">void  SetViewBones(<span class="NDLSystemFont">bool</span> bNewValue)</p>
<p class="NDLRefMemberDescription">Used to set whether nodes affecting a skinned mesh bones will be visualized when this click is rendered. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">bNewValue</span></td>
    <td>True if bone visualizations should be rendered, false if they will not. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1a473b219c34c8912233bb4116a7611e61"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetViewNodes() const</p>
<p class="NDLRefMemberDescription">Used to check whether nodes will be visualized when this click is rendered. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if node visualizations will be rendered, false if they will not. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1a9b2b42ce3157a08b5d3fd11c6fd362ff"></a>
<p class="NDLRefMemberFunction">void  SetViewNodes(<span class="NDLSystemFont">bool</span> bNewValue)</p>
<p class="NDLRefMemberDescription">Used to set whether nodes will be visualized when this click is rendered. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">bNewValue</span></td>
    <td>True if node visualizations should be rendered, false if they will not. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1a208e808f0b34847906138ff03f5ba023"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetViewConnections() const</p>
<p class="NDLRefMemberDescription">Used to check whether hierarchical connections between nodes will be visualized as colored lines when this click is rendered. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if hierarchical connection visualizations will be rendered, false if they will not. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1a1971fcd35778056baa7614b52a1940e6"></a>
<p class="NDLRefMemberFunction">void  SetViewConnections(<span class="NDLSystemFont">bool</span> bNewValue)</p>
<p class="NDLRefMemberDescription">Used to set whether nodes will be visualized when this click is rendered. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">bNewValue</span></td>
    <td>True if node visualizations should be rendered, false if they will not. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1a240758934f923cc125e2b680e885c274"></a>
<p class="NDLRefMemberFunction">void  AddRoot(<span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkRoot)</p>
<p class="NDLRefMemberDescription">Used to add a scene root node that will be searched for items to be visualized by a subsequent call to the ProcessScene function. </p>
<p class="NDLRefMemberDetailedDescription">Note that the list of items to be visualized will not be updated until ProcessScene is called.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkRoot</span></td>
    <td>The root node of the scene to add to the list of scenes which will be searched for objects to visualize. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1af972a74cb3830ff053724b3eb06224e3"></a>
<p class="NDLRefMemberFunction">void  RemoveRoot(<span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkRoot)</p>
<p class="NDLRefMemberDescription">Used to remove a scene root node from the search for items to be visualized by a subsequent call to the ProcessScene function. </p>
<p class="NDLRefMemberDetailedDescription">Note that the list of items to be visualized will not be updated until ProcessScene is called.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkRoot</span></td>
    <td>The root node of the scene to remove from the list of scenes which will be searched for objects to visualize. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1a228b8e10861acf6958320dabe9e9f98c"></a>
<p class="NDLRefMemberFunction">void  ClearRoots()</p>
<p class="NDLRefMemberDescription">Used to remove all scene root nodes from the search for items to be visualized by a subsequent call to the ProcessScene function. </p>
<p class="NDLRefMemberDetailedDescription">Note that the list of items to be visualized will not be updated until ProcessScene is called. </p>

<a name="class_ni_debug_visualization_click_1a5618ff4bd9ef0ec2e27d76de7fcd1176"></a>
<p class="NDLRefMemberFunction">void  ProcessScene()</p>
<p class="NDLRefMemberDescription">Internally records a list of items to visualize by recursively parsing the scenes previously added with the AddRoot function. </p>
<p class="NDLRefMemberDetailedDescription">If the scene changes, or if AddRoot, RemoveRoot, or ClearRoots are called, this function should be called again to apply the changes to the list of objects to visualize. </p>

<a name="class_ni_debug_visualization_click_1ac361feca2e28239c81be62163f878e91"></a>
<p class="NDLRefMemberFunction">virtual unsigned int  GetNumObjectsDrawn() const</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_ni_debug_visualization_click_1a822fd0907a3317e7c5b8ea39b0374121"></a>
<p class="NDLRefMemberFunction">virtual float  GetCullTime() const</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_ni_debug_visualization_click_1ade987a396bdc2f674507003374501713"></a>
<p class="NDLRefMemberFunction">virtual float  GetRenderTime() const</p>
<p class="NDLRefMemberFunction"></p>
<a name="camera_control"></a>
<p class="NDLRefHead1">Camera control</p>


<a name="class_ni_debug_visualization_click_1a58231b2255f8c537e0015c40a9b57677"></a>
<p class="NDLRefMemberFunction">void  SetCamera(<span class="NDLSystemFont"><a href="../NiMain/NiCamera.htm">NiCamera</a></span>* pkCamera)</p>
<p class="NDLRefMemberDescription">Set the camera to use when rendering the debug visualization. </p>

<a name="class_ni_debug_visualization_click_1a0517d69735756f7e0a2c2ea6c3187c8d"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../NiMain/NiCamera.htm">NiCamera</a></span>*  GetCamera() const</p>
<p class="NDLRefMemberDescription">Get the camera that will be used to render the debug visualization. </p>

<a name="class_ni_debug_visualization_click_1a925c846757c4fb7aa61074e1042f7892"></a>
<p class="NDLRefMemberFunction">void  ExtendCameraNearAndFar(<span class="NDLSystemFont"><a href="../NiMain/NiCamera.htm">NiCamera</a></span>* pkCamera) const</p>
<p class="NDLRefMemberDescription">Set the camera to use when rendering the debug visualization. </p>
<a name="screen_scale_control"></a>
<p class="NDLRefHead1">Screen scale control</p>


<a name="class_ni_debug_visualization_click_1a84bc389e317ef138790d9dbfec42fd49"></a>
<p class="NDLRefMemberFunction">void  SetScreenMultiplier(float fScreenMultiplier)</p>
<p class="NDLRefMemberDescription">The camera and light debug visualizations all have a default scale set by <span class="NDLSystemFont"><a href="NiImmediateModeMacro.htm#class_ni_immediate_mode_macro_1a7ce4b0e26a60c64e40dac626d07a50bf">NiImmediateModeMacro::GetScreenScaleFactor()</a></span>. </p>
<p class="NDLRefMemberDetailedDescription">This can be further scaled up or down by specifying a screen scale multipler</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">fScreenMultiplier</span></td>
    <td>Multiplier value (1.0 = no adjustment) </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_debug_visualization_click_1aae6e45ed45b5e92edd95dcc72b171322"></a>
<p class="NDLRefMemberFunction">float  GetScreenMultiplier() const</p>
<p class="NDLRefMemberDescription">Get the current screen scale multiplier. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

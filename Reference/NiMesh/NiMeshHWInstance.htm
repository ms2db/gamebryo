<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiMeshHWInstance</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiMeshHWInstance</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiMeshHWInstance.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_mesh_h_w_instance.gif" alt="Inheritance graph for NiMeshHWInstance"/>
  <p class="FigureCaption">Inheritance graph for NiMeshHWInstance</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class represents an object that can be used to represent an instance of a hardware instanced mesh in a scene graph. </p>
<p class="NDLNormal"><span class="NDLSystemFont">NiMeshHWInstance</span> objects work with a scene graph just like NiAVObjects, meaning they inherit their transform from their parent nodes. This allows an application to populate a scene graph with <span class="NDLSystemFont">NiMeshHWInstance</span> objects that represent the instances of a mesh, and work with them like any other <span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_mesh_h_w_instance_1a240852a6ca0f5c1c22a51df0b0495dc6"></a>
<p class="NDLRefMemberFunction">NiMeshHWInstance(<span class="NDLSystemFont"><a href="NiMesh.htm">NiMesh</a></span>* pkMesh)</p>
<p class="NDLRefMemberDescription">Constructor that allows the master mesh to be specified. </p>
<p class="NDLRefMemberDetailedDescription">Note this does not inform the master mesh that a <span class="NDLSystemFont">NiMeshHWInstance</span> is referencing it. <span class="NDLSystemFont"><a href="NiInstancingUtilities.htm#class_ni_instancing_utilities_1a3e682d7ee4623e0060ab5adc507a4ca0">NiInstancingUtilities::AddMeshInstance()</a></span> will still need to be called. </p>

<a name="class_ni_mesh_h_w_instance_1abf098e9cc889f3d862f15b17897942f4"></a>
<p class="NDLRefMemberFunction">NiMeshHWInstance()</p>
<p class="NDLRefMemberDescription">Default constructor. </p>

<a name="class_ni_mesh_h_w_instance_1acff2472fc2098b82f6f674ad9f8530c5"></a>
<p class="NDLRefMemberFunction">virtual ~NiMeshHWInstance()</p>
<p class="NDLRefMemberDescription">Virtual destructor. </p>

<a name="class_ni_mesh_h_w_instance_1a8d76b040fd9860d648cd6d699857f178"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiMesh.htm">NiMesh</a></span>*  GetMesh()</p>
<p class="NDLRefMemberDescription">Returns the instanced mesh that this object represents. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

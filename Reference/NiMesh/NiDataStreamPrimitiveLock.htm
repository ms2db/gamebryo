<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiDataStreamPrimitiveLock</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiDataStreamPrimitiveLock</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__MemObject.htm">efd::MemObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiDataStreamPrimitiveLock.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_data_stream_primitive_lock.gif" alt="Inheritance graph for NiDataStreamPrimitiveLock"/>
  <p class="FigureCaption">Inheritance graph for NiDataStreamPrimitiveLock</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class encapsulates locking the index buffer and iterating through all of the primitives associated with a given mesh. </p>
<p class="NDLNormal">Supported primitive configurations are: indexed or non-indexed primitives, 16bit and 32bit index types, and all known <span class="NDLSystemFont"><a href="../NiMain/NiPrimitiveType.htm">NiPrimitiveType::Type</a></span> types. This class will lock upon construction and will unlock upon destruction.</p>
<p class="NDLNormal">
<p class="NDLNormal">If iteration of individual elements in a region is desired, use <span class="NDLSystemFont"><a href="NiDataStreamLock.htm">NiDataStreamLock</a></span>. If iteration over submeshes is desired instead of regions, use <span class="NDLSystemFont"><a href="NiDataStreamElementLock.htm">NiDataStreamElementLock</a></span> instead. </p></p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_data_stream_primitive_lock_1a0b442205c56de9320228933b9bf232b9"></a>
<p class="NDLRefMemberFunction">NiDataStreamPrimitiveLock(<br/><span class="NDLSystemFont"><a href="NiMesh.htm">NiMesh</a></span>* pkMesh, <br/><span class="NDLSystemFont">NiUInt8</span> uiLockMask = NiDataStream::LOCK_WRITE)</p>
<p class="NDLRefMemberDescription">Constructs an <span class="NDLSystemFont">NiDataStreamPrimitiveLock</span> from a <span class="NDLSystemFont"><a href="NiMesh.htm">NiMesh</a></span> that automatically locks upon construction. </p>
<p class="NDLRefMemberDetailedDescription">Use IndexBufferLocked to check that the constructor succeeded in locking the index buffer.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkMesh</span></td>
    <td><span class="NDLSystemFont"><a href="NiMesh.htm">NiMesh</a></span> to lock for access. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiLockMask</span></td>
    <td>Mask indicating lock flags. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_data_stream_primitive_lock_1a5d02ef1796a2c121ffb15ba3e926af8c"></a>
<p class="NDLRefMemberFunction">NiDataStreamPrimitiveLock(const <span class="NDLSystemFont">NiDataStreamPrimitiveLock</span>& kOther)</p>
<p class="NDLRefMemberDescription">Copy constructor. </p>
<p class="NDLRefMemberDetailedDescription">This will lock using the data from kOther. The underlying data stream will be locked a second time. </p>

<a name="class_ni_data_stream_primitive_lock_1a7890c40ca223f8d9ca9a22732e9915c7"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiDataStreamPrimitiveLock</span>&  operator=(const <span class="NDLSystemFont">NiDataStreamPrimitiveLock</span>& kRHS)</p>
<p class="NDLRefMemberDescription">Assignment operator. </p>
<p class="NDLRefMemberDetailedDescription">The underlying data stream will be locked a second time. </p>

<a name="class_ni_data_stream_primitive_lock_1a15d06b7934f0aee3424eb3bfb3a39c79"></a>
<p class="NDLRefMemberFunction">virtual ~NiDataStreamPrimitiveLock()</p>
<p class="NDLRefMemberDescription">Virtual destructor. </p>

<a name="class_ni_data_stream_primitive_lock_1ac9a8db5653087df1274a640fa02e5c87"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTPrimitiveRandomAccessIterator.htm">NiIndexedPrimitiveIterator32</a></span>  BeginIndexed32(<span class="NDLSystemFont">NiUInt32</span> uiSubmeshIdx = 0) const</p>
<p class="NDLRefMemberDescription">Gets a 32bit indexed begin iterator for accessing primitives in the locked data stream for the specified sub-mesh. </p>

<a name="class_ni_data_stream_primitive_lock_1aa36785c512c64c2f2f6caf2d3c90aa70"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTPrimitiveRandomAccessIterator.htm">NiIndexedPrimitiveIterator32</a></span>  EndIndexed32(<span class="NDLSystemFont">NiUInt32</span> uiSubmeshIdx = 0) const</p>
<p class="NDLRefMemberDescription">Gets a 32bit indexed end iterator for accessing primitives in the locked data stream for the specified sub-mesh. </p>

<a name="class_ni_data_stream_primitive_lock_1aa35b721df8bb95895c9ef5d537d309e1"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTPrimitiveRandomAccessIterator.htm">NiIndexedPrimitiveIterator16</a></span>  BeginIndexed16(<span class="NDLSystemFont">NiUInt32</span> uiSubmeshIdx = 0) const</p>
<p class="NDLRefMemberDescription">Gets a 16bit indexed begin iterator for accessing primitives in the locked data stream for the specified sub-mesh. </p>

<a name="class_ni_data_stream_primitive_lock_1aadf1df13d0af238c9fa097be380ed08b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTPrimitiveRandomAccessIterator.htm">NiIndexedPrimitiveIterator16</a></span>  EndIndexed16(<span class="NDLSystemFont">NiUInt32</span> uiSubmeshIdx = 0) const</p>
<p class="NDLRefMemberDescription">Gets a 16bit indexed end iterator for accessing primitives in the locked data stream for the specified sub-mesh. </p>

<a name="class_ni_data_stream_primitive_lock_1a8244489a6227b72bceef733bd2ad3d91"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTPrimitiveRandomAccessIterator.htm">NiNonIndexedPrimitiveIterator32</a></span>  BeginNonIndexed32(<span class="NDLSystemFont">NiUInt32</span> uiSubmeshIdx = 0) const</p>
<p class="NDLRefMemberDescription">Gets a 32bit non-indexed begin iterator for accessing primitives in the locked data stream for the specified sub-mesh. </p>

<a name="class_ni_data_stream_primitive_lock_1a436737241b8a939e8daebc639828feaf"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTPrimitiveRandomAccessIterator.htm">NiNonIndexedPrimitiveIterator32</a></span>  EndNonIndexed32(<span class="NDLSystemFont">NiUInt32</span> uiSubmeshIdx = 0) const</p>
<p class="NDLRefMemberDescription">Gets a 32bit non-indexed end iterator for accessing primitives in the locked data stream for the specified sub-mesh. </p>

<a name="class_ni_data_stream_primitive_lock_1aa5a67f1c14e8cea7a24277b570d4ef2b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTPrimitiveRandomAccessIterator.htm">NiNonIndexedPrimitiveIterator16</a></span>  BeginNonIndexed16(<span class="NDLSystemFont">NiUInt32</span> uiSubmeshIdx = 0) const</p>
<p class="NDLRefMemberDescription">Gets a 16bit non-indexed begin iterator for accessing primitives in the locked data stream for the specified sub-mesh. </p>

<a name="class_ni_data_stream_primitive_lock_1aee7826c41aa023c3f47558ab1b2d0e09"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTPrimitiveRandomAccessIterator.htm">NiNonIndexedPrimitiveIterator16</a></span>  EndNonIndexed16(<span class="NDLSystemFont">NiUInt32</span> uiSubmeshIdx = 0) const</p>
<p class="NDLRefMemberDescription">Gets a 16bit non-indexed end iterator for accessing primitives in the locked data stream for the specified sub-mesh. </p>

<a name="class_ni_data_stream_primitive_lock_1a6071aa12caa1b21878c32e6ee9a56c2a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  count(<span class="NDLSystemFont">NiUInt32</span> uiSubmeshIdx = 0) const</p>
<p class="NDLRefMemberDescription">Get number of primitives for the specified sub-mesh, which assumes a valid lock. </p>

<a name="class_ni_data_stream_primitive_lock_1aa4d5042827f05431cafa547d47bb2091"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiMain/NiPrimitiveType.htm">NiPrimitiveType::Type</a></span>  GetPrimitiveType() const</p>
<p class="NDLRefMemberDescription">Get the primitive type of the mesh this lock was created on. </p>

<a name="class_ni_data_stream_primitive_lock_1a07206a5347c024109d6598cc66fa0dc0"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  GetSubmeshCount() const</p>
<p class="NDLRefMemberDescription">Get the submesh count. </p>

<a name="class_ni_data_stream_primitive_lock_1a9d285bfad6060197af836597e44c99f0"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IndexBufferExists() const</p>
<p class="NDLRefMemberDescription">Returns true if the index buffer exists. </p>

<a name="class_ni_data_stream_primitive_lock_1aa509bffba67afd15cf93d4729c7032ac"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IndexBufferLocked() const</p>
<p class="NDLRefMemberDescription">Determine if the index buffer was locked. </p>

<a name="class_ni_data_stream_primitive_lock_1a95482aa67efb8540e8c64a5836bf9ffe"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  Has16BitIndexBuffer() const</p>
<p class="NDLRefMemberDescription">Returns whether or not the index buffer exists and supports a 16-bit iterator. </p>

<a name="class_ni_data_stream_primitive_lock_1a9f6174b85c83eaeacf57465f049d1b45"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  Has32BitIndexBuffer() const</p>
<p class="NDLRefMemberDescription">Returns whether or not the index buffer exists and supports a 32-bit iterator. </p>

<a name="class_ni_data_stream_primitive_lock_1a02ebd7b9f6fbd8be02e33620da4a4284"></a>
<p class="NDLRefMemberFunction">void  Unlock()</p>
<p class="NDLRefMemberDescription">Unlock the datastream before destruction. </p>
<p class="NDLRefMemberDetailedDescription">Generally, when the class is destroyed, it will unlock itself. If the user doesn't wish to scope the lock accordingly, they can add a call the unlock method. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiImmediateModeMacro</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiImmediateModeMacro</p>


<p class="NDLRefHeaderFile">&lt;NiImmediateModeMacro.h&gt;</p>


<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Contains methods for submitting pre-defined, immediate mode geometry to an <span class="NDLSystemFont"><a href="NiImmediateModeAdapter.htm">NiImmediateModeAdapter</a></span>. </p>
<p class="NDLNormal">These macros can be very useful in rendering debug geometry. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_immediate_mode_macro_1afed4921ddc9136601354159a70ce093a"></a>
<p class="NDLRefMemberFunction">NiImmediateModeMacro(<span class="NDLSystemFont"><a href="NiImmediateModeAdapter.htm">NiImmediateModeAdapter</a></span>& kAdapter)</p>
<p class="NDLRefMemberDescription">Constructor. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kAdapter</span></td>
    <td>The <span class="NDLSystemFont"><a href="NiImmediateModeAdapter.htm">NiImmediateModeAdapter</a></span> to use. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_immediate_mode_macro_1afb2aff65b9c693ecf5f8f849244b32fa"></a>
<p class="NDLRefMemberFunction">virtual ~NiImmediateModeMacro()</p>
<p class="NDLRefMemberDescription">Virtual destructor. </p>

<a name="class_ni_immediate_mode_macro_1a7ce4b0e26a60c64e40dac626d07a50bf"></a>
<p class="NDLRefMemberFunction">float  GetScreenScaleFactor(const <span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkObj) const</p>
<p class="NDLRefMemberDescription">Utility function for calculating a view-dependent scale multiplier. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>Returns the scale factor needed to scale the <span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span> to fit to the screen size of the <span class="NDLSystemFont"><a href="NiImmediateModeAdapter.htm">NiImmediateModeAdapter</a></span> object's camera. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="class_ni_immediate_mode_macro_1a5943444d7208f5c22e9c2f4a644b9067"></a>
<p class="NDLRefMemberFunction">static float  GetScreenScaleFactor(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkObj, <br/>const <span class="NDLSystemFont"><a href="NiImmediateModeAdapter.htm">NiImmediateModeAdapter</a></span>* pkAdapter)</p>
<p class="NDLRefMemberDescription">Static utility function for calculating a view-dependent scale multiplier. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>Returns the scale factor needed to scale the <span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span> to fit to the screen size of the <span class="NDLSystemFont"><a href="NiImmediateModeAdapter.htm">NiImmediateModeAdapter</a></span> object's camera. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="camera,_light,_and_rotational_frame_generation"></a>
<p class="NDLRefHead1">Camera, light, and rotational frame generation</p>


<a name="class_ni_immediate_mode_macro_1abf4ce1c37bd3cb818d38ddaf2679aefa"></a>
<p class="NDLRefMemberFunction">void  WireCamera(<br/><span class="NDLSystemFont"><a href="../NiMain/NiCamera.htm">NiCamera</a></span>* pkCamera, <br/>float fScaleMult)</p>
<p class="NDLRefMemberDescription">Creates a wireframe camera. </p>

<a name="class_ni_immediate_mode_macro_1a045fca06401ca441d6768cda0a47f9cb"></a>
<p class="NDLRefMemberFunction">void  WireFrustum(<span class="NDLSystemFont"><a href="../NiMain/NiCamera.htm">NiCamera</a></span>* pkCamera)</p>
<p class="NDLRefMemberDescription">Creates a wireframe frustum for a given camera. </p>

<a name="class_ni_immediate_mode_macro_1a2c6c80857d8600e3afbbb0f7da199092"></a>
<p class="NDLRefMemberFunction">void  WireFrustum(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiFrustum.htm">NiFrustum</a></span>& kFrust, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiTransform.htm">NiTransform</a></span>& kTrans)</p>
<p class="NDLRefMemberDescription">Creates a wireframe frustum for a frustum with a specified transform. </p>

<a name="class_ni_immediate_mode_macro_1a135611594a94968c3082921d7dacfdeb"></a>
<p class="NDLRefMemberFunction">void  WirePointLight(<br/><span class="NDLSystemFont"><a href="../NiMain/NiPointLight.htm">NiPointLight</a></span>* pkLight, <br/>float fScaleMult)</p>
<p class="NDLRefMemberDescription">Creates a point light. </p>

<a name="class_ni_immediate_mode_macro_1a9258c5c3df25a5b4f473751190a19f0b"></a>
<p class="NDLRefMemberFunction">void  WireSpotLight(<br/><span class="NDLSystemFont"><a href="../NiMain/NiSpotLight.htm">NiSpotLight</a></span>* pkLight, <br/>float fScaleMult)</p>
<p class="NDLRefMemberDescription">Creates a spot light. </p>

<a name="class_ni_immediate_mode_macro_1a99ae8b0b915d2868248cff990ba65859"></a>
<p class="NDLRefMemberFunction">void  WireDirectionalLight(<br/><span class="NDLSystemFont"><a href="../NiMain/NiDirectionalLight.htm">NiDirectionalLight</a></span>* pkLight, <br/>float fScaleMult)</p>
<p class="NDLRefMemberDescription">Creates a directional light. </p>

<a name="class_ni_immediate_mode_macro_1a3d836334eebcab9774e0f97beaac3a13"></a>
<p class="NDLRefMemberFunction">void  RotationalFrame(<br/><span class="NDLSystemFont"><a href="../NiMain/NiTransform.htm">NiTransform</a></span>& kTrans, <br/>float fScaleMult)</p>
<p class="NDLRefMemberDescription">Creates the three axes comprising a rotational frame at the world-space position of the transformation. </p>
<p class="NDLRefMemberDetailedDescription">The scale of kTrans is ignored and fScaleMult is used instead. </p>

<a name="class_ni_immediate_mode_macro_1a33b75a221cef31b079caa34f627ffb43"></a>
<p class="NDLRefMemberFunction">void  WireHierarchy(<br/><span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* pkScene, <br/>float fScaleMult, <br/><span class="NDLSystemFont">bool</span> bBones, <br/><span class="NDLSystemFont">bool</span> bNodes, <br/><span class="NDLSystemFont">bool</span> bConnections)</p>
<p class="NDLRefMemberDescription">Creates a visualization of a node hierarchy. </p>
<p class="NDLRefMemberDetailedDescription">Bones, node positions, and connecting lines showing hierarchical relationships can optionally be included. </p>

<a name="class_ni_immediate_mode_macro_1abf1659f6945418d08c834c145c3fede3"></a>
<p class="NDLRefMemberFunction">void  WireBoneHierarchy(<br/><span class="NDLSystemFont"><a href="NiMesh.htm">NiMesh</a></span>* pkMesh, <br/>float fScaleMult = 1.0f)</p>
<p class="NDLRefMemberDescription">Creates a bone hierarchy rendering if the mesh has a skin modifier attached. </p>
<a name="cone/box_generation"></a>
<p class="NDLRefHead1">Cone/box generation</p>

<p class="NDLRefMemberDescription"></p>
<p class="NDLRefMemberDescription">The cone length is along the x-axis. The vector from the tip of the cone to the base is parallel to the positive x-axis. The tip of the cone starts at the local-space origin. </p>

<a name="class_ni_immediate_mode_macro_1ac5dcd0a1783e7233324badf0289a704a"></a>
<p class="NDLRefMemberFunction">void  SolidCone(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiTransform.htm">NiTransform</a></span>& kLocalTrans, <br/>float fLength, <br/>float fRadius, <br/>unsigned int uiNumSlices)</p>
<p class="NDLRefMemberDescription">Creates a solid cone. </p>

<a name="class_ni_immediate_mode_macro_1aa9818666658cf310ac2a3fb820ca7e7f"></a>
<p class="NDLRefMemberFunction">void  WireCone(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiTransform.htm">NiTransform</a></span>& kLocalTrans, <br/>float fLength, <br/>float fRadius, <br/>unsigned int uiNumSlices)</p>
<p class="NDLRefMemberDescription">Creates a wireframe cone. </p>

<a name="class_ni_immediate_mode_macro_1aed574a4c2cf04e5c9d1ab0a2661da57e"></a>
<p class="NDLRefMemberFunction">void  SolidBox(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiTransform.htm">NiTransform</a></span>& kLocalTrans, <br/>float fX, <br/>float fY, <br/>float fZ)</p>
<p class="NDLRefMemberDescription">Creates a solid box. </p>

<a name="class_ni_immediate_mode_macro_1a834a1427a5facce5791f5fb2b26a30b8"></a>
<p class="NDLRefMemberFunction">void  WireBox(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiTransform.htm">NiTransform</a></span>& kLocalTrans, <br/>float fX, <br/>float fY, <br/>float fZ)</p>
<p class="NDLRefMemberDescription">Creates a wireframe box. </p>
<a name="sphere_generation"></a>
<p class="NDLRefHead1">Sphere generation</p>


<a name="class_ni_immediate_mode_macro_1a48ff654f573f86782d0480c65b282972"></a>
<p class="NDLRefMemberFunction">void  SolidSphere(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kCenter, <br/>float fRadius, <br/>unsigned int uiNumSlices, <br/>unsigned int uiNumStacks)</p>
<p class="NDLRefMemberDescription">Creates a solid sphere. </p>

<a name="class_ni_immediate_mode_macro_1a5fdf14f250c2828a5505a4f12519e43d"></a>
<p class="NDLRefMemberFunction">void  WireSphere(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kCenter, <br/>float fRadius, <br/>unsigned int uiNumSlices, <br/>unsigned int uiNumStacks)</p>
<p class="NDLRefMemberDescription">Creates a wireframe sphere. </p>

<a name="class_ni_immediate_mode_macro_1a1dba4283b922c7d849012fe9bf2ccb36"></a>
<p class="NDLRefMemberFunction">void  WireCircle(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kCenter, <br/>float fRadius, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kAxis1, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kAxis2, <br/>unsigned int uiNumSlices = 32)</p>
<p class="NDLRefMemberDescription">Creates a circle oriented in a plane. </p>

<a name="class_ni_immediate_mode_macro_1a63962abbd80e7f12b7058cd153034a51"></a>
<p class="NDLRefMemberFunction">void  WireBounds(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kCenter, <br/>float fRadius, <br/>unsigned int uiNumSlices = 32)</p>
<p class="NDLRefMemberDescription">Creates a wireframe bounding volume (3 axis-aligned circles). </p>

<a name="class_ni_immediate_mode_macro_1a5cd9b3f91a8757ef2f749ffd949c07bf"></a>
<p class="NDLRefMemberFunction">void  WireBounds(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiBound.htm">NiBound</a></span>& kBound, <br/>unsigned int uiNumSlices = 32)</p>
<p class="NDLRefMemberDescription">Creates a wireframe bounding volume (3 axis-aligned circles). </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

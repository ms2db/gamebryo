<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiTerrain Library Release Notes</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->

<!--(Begin Links)===================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>NiTerrain Library Release Notes</h1>

<p><a href="#Added_Features_and_Fixed_Bugs">Added Features,
Changed Behavior, and Fixed Bugs</a></p>

<p><a href="#Known_Issues_and_Limitations">Known Issues and
Limitations</a></p>

<p><a href="#Troubleshooting_issues">Troubleshooting Issues</a></p>

<a name="Added_Features_and_Fixed_Bugs" id=
"Added_Features_and_Fixed_Bugs"></a><h2>Added Features, Changed Behavior, and Fixed Bugs</h2>

<h3>Gamebryo LightSpeed 3.2</h3>

  <ul>
    <li>A bug in which the Terrain PhysX setup code would crash if there was no surface
      material has been fixed. Terrain PhysX materials will be the default PhysX material
      (index 0) if there is a problem with the surface.</li>
    <li>Improved texturing: </li>
    <ul>
      <li>Added support for many materials per sector. A total of 4 materials per cell on
        a sector are now supported, where cells are equivalent to blocks in the original
        system. </li>
      <li>Added support for specular textures in surfaces. </li>
      <li>A low detail normal map now renders on distant cells of the terrain to improve
        detail in the distance. </li>
      <li>Fixed a number of bugs in the terrain shader. </li>
    </ul>
  </ul>
  <ul>
    <li>Improved performance </li>
    <ul>
      <li>Refactor of the <span class="NDLSystemFont">NiTerrainDataLeaf</span>/<span 
          class="NDLSystemFont">NiTerrainBlock</span> into the 
        <span class="NDLSystemFont"><a href="NiTerrain.htm">NiTerrainCell</a></span> hierarch.
      </li>
      <li>Low detail diffuse textures now render on distant terrain cells (reducing shader
        cost). </li>
      <li>Improved the memory footprint of the terrain geometry stream. </li>
      <li>Improved the efficicency of the 2D ray testing routine </li>
    </ul>
  </ul>
  <ul>
    <li>Improved storage/streaming </li>
    <ul>
      <li>Implemented a new terrain multi-threaded streaming system. </li>
      <li>Implemented a new, leaner file format. </li>
    </ul>
  </ul>
  <ul>
    <li>Improved flexibility and extensibility </li>
    <ul>
      <li>Added support for new resource managers to be added. </li>
      <li>Added support for different storage policies to be added. </li>
      <li>Added support for custom file formats to be specified. </li>
      <li>Added support for custom storage compression to be defined.</li>
      <li>Added support for resource listener objects for reporting. </li>
      <li>Added support for streaming listener objects for reporting. </li>
      <li>Added support for storage and streaming of custom data to associate with the terrain.</li>
    </ul>
    <li><span class="NDLSystemFont"><a href="NiTerrain.htm">NiTerrain</a></span> library no longer
      supports the <span class="NDLSystemFont">NiEntity</span> 
      framework. The 
      <span class="NDLSystemFont">NiTerrainComponent</span> and <span class="NDLSystemFont">NiTerrainSectorComponent</span> classes have been removed.</li>
  </ul>

  <p>Please refer to <a href="../../Convert/Previous/Converting_to_Gamebryo_3_2_Overview.htm#NiTerrainChanges">Converting to Gamebryo LightSpeed 3.2 Overview:Changes in NiTerrain</a> for information on how to 
  migrate existing terrain assets and applications to the new terrain library.</p>

<h3>Gamebryo LightSpeed 3.1</h3>

<ul>
  <li>None in this release.</li>
</ul>

<h3>Gamebryo LightSpeed 3.0</h3>

<ul>
    <li>Added support for terrain to cast and receive
    shadows.</li>

    <li>Added the NiTerrainCullingProcessor class. If NiTerrain
    library is linked into an application the
    NiTerrainCullingProcessor will be used by the shadowing
    system. The NiTerrainCullingProcessor allows for rendering
    the terrain to a shadow map at a specific level of detail
    regardless of camera and light positions if desired.</li>

    <li>Added a new mechanism to the <span class=
    "NDLSystemFont">NiTerrainInteractor</span> class for querying
    terrain metadata. The <span class="NDLSystemFont">
    QueryMetaData</span> method uses the visitor pattern to
    allow inspection of metadata without the expensive copy step
    that the legacy methods required. For an example of use,
    check out the <a href=
    "../../Learn/MangledMetal/mm_intro.htm">MangledMetal</a> full
    demo.</li>

    <li>Added support for multiple light sources of any type to
    affect the terrain.</li>

    <li>Fixed a bug with improper blending between masks and
    distribution masks.</li>

    <li>Added a method to the terrain block class to allow the
    user to override the terrain material and/or replace it with
    a custom material.</li>

    <li>Split NiTerrain into generic library (<a class=
    "NDLSystemFont" href=
    "Introduction_to_NiTerrain_Class_Reference.htm">NiTerrain</a>)
    and NiEntity-based library(<span class=
    "NDLSystemFont">
    NiTerrainComponent</span>).</li>
</ul>

<h3>Gamebryo 2.6.0</h3>

<ul>
    <li>The terrain library is no longer tightly bound to the
    NiEntity system, it is now possible to create and add a
    terrain directly to a scene graph.

        <ul>
            <li>Terrain library now has a new class <a href=
            "../NiTerrain/NiTerrain.htm">NiTerrain</a>, deriving
            from NiNode, representing a terrain object</li>

            <li>
            NiTerrainSectorComponent is now deprecated and
            should not be used. Sectors can be added to a terrain
            via the <a href=
            "../NiTerrain/NiTerrain.htm">NiTerrain</a> class
            directly.</li>
        </ul>
    </li>

    <li>Terrain manipulation functionality mostly moved from
    NiTerrainComponent and NiTerrainSectorComponent to NiTerrain and NiTerrainSector
    classes.</li>

    <li>New class <a href="../NiTerrain/NiWater.htm">NiWater</a>,
    deriving from NiNode, represents a water plane.

        <ul>
            <li>Most water functionality moved from the
            NiWaterComponent to the new <a href=
            "../NiTerrain/NiWater.htm">NiWater</a> class.</li>
        </ul>
    </li>

    <li>Meta Data has been extended to support 'Blended' meta
    data values, when conflicts occur. More details on this can
    be found in the <a href=
    "../../Programmer/NiTerrain/NiTerrain_Meta_Data_System.htm">meta-data
    documentation</a>.</li>

    <li>Added a new "bias" parameter when creating a terrain
    decal allowing the user to adjust the z-buffer bias for that
    decal.</li>

    <li>A new <a href=
    "../NiTerrain/NiTerrainConfiguration.htm">NiTerrainConfiguration</a>
    class has been implemented which defines how the terrain
    should be created in memory. Currently this is fixed
    depending on the current platform, however, future versions
    of Gamebryo will allow this configuration object to be
    changed by the user depending on performance and memory
    constraints.</li>

    <li>Terrain mesh data streams have been re-configured such
    that there is one data stream per loaded level of
    detail.</li>

    <li>Add a new property on the water component, "Normal Animation Speed"
    allowing the designer to control the speed of animation of the normal
    maps.</li>

    <li>New LOD options now exist, allowing the user to tweak the
    LOD system to their specific needs. Block visibility can now
    be dictated by distance from camera in: 2D, 2.5D or 3D
    distance vectors.</li>

    <li>LOD Scale can now be set to any value between 0 and
    infinity (not inclusive), through the use of
    NiTerrain::SetLODScale.</li>

    <li>Distribution Mask map added to the terrain material, to
    allow artists finer control over the blending between
    different materials.</li>

    <li>Added ability in the <a href=
    "../NiTerrain/NiTerrainMaterial.htm">NiTerrainMaterial</a> to
    remove normal and parallax maps on shader model 2.x video
    cards.</li>

    <li><a href=
    "../NiTerrain/NiTerrainMaterial.htm">NiTerrainMaterial</a>
    descriptor modified to support the new LOD modes and the
    addition of distribution masks; shader caches should
    automatically be re-built.</li>

    <li>Added PhysX support to NiTerrain. PhysX objects can now
    interact with the terrain as with any other PhysX object. The
    terrain is stored in PhysX as a collection of height fields.

        <ul>
            <li>An optional PhysX plug-in can be built for Scene
            Designer, allowing an artist to bake PhysX data into
            the sector archive directory for shorter load
            times.</li>
        </ul>
    </li>

    <li>Procedural Filtering of terrain brushes has been added to Scene
    Designer, which allows a user to limit editing of the terrain
    to with-in specific height and slope constraints.</li>

    <li>A Mask Stamp tool has been added to Scene Designer, to allow an artist
    to use a brush shape other than a circle. Masks can be any
    common image format supported by Gamebryo and can be
    scale/rotated uniformly or randomly.</li>

    <li>Documentation improvements.</li>

    <li>Improved performance of painting terrain materials by
    increasing the size of hash maps used for indexing the mask
    pixels.</li>

    <li>Decreased memory usage of Scene Designer when painting on
    the terrain, as well as increasing the accuracy of the memory
    usage tracker.</li>

    <li>'Memory Warning' color on brush outline in Scene Designer
    to warn an artist that they should start a new 'brush
    stroke'.</li>

    <li>'Edit Terrain Material' window can now be resized.</li>

    <li>Terrain Demo</a> has been updated to use new art assets.</li>

    <li>Added a PhysXTerrainDemo application.</li>

    <li>Fixed a bug where the texture UV's on the terrain were
    flipped. Terrain materials no longer appear to be
    inverted.</li>

    <li>Fixed a bug where terrain material layers would sometimes
    show up incorrectly when a material was removed.</li>

    <li>Fixed a bug causing the terrain index buffer to
    incorrectly calculate the size of its indices.</li>

    <li>Fixed a possible crash bug in Scene Designer when
    removing a material from the terrain.</li>

    <li>Fixed a bug where undo-ing a terrain material painting
    operation would occasionally corrupt the visibility of the
    lower layers.</li>

    <li>Terrain editing is now disabled when the scene is opened
    in read-only mode in Scene Designer.</li>
</ul>

<h3>Gamebryo 2.5.0</h3>

<ul>
    <li>This version includes the first phase of an out of the
    box terrain engine for Gamebryo. This library contains the
    run-time terrain code which relies on the NiEntity system.
    For a more in depth review of the terrain system along with
    the features and limitations of this version please refer to
    <a href=
    "../../Programmer/NiTerrain/Introduction_to_NiTerrain_Library.htm">
    Introduction to NiTerrain Library</a>. Additionally there is
    a sample showing the basic steps involved in loading and
    interacting with a terrain at run-time. Refer to Introduction
    to the Terrain Demo for a description of the terrain
    demo.</li>
</ul>

<a name="Known_Issues_and_Limitations" id="Known_Issues_and_Limitations"></a><h2>Known Issues and Limitations</h2>

<ul>
    <li>The NiWater system is not integrated with World Builder. Furthermore, the run-time code
    supporting this system has not been thoroughly tested with the latest LightSpeed release. Until
    this feature is revisited, consider the NiWater code a reference point that may need attention
    for game use.
    </li>
    <li>NiTerrain has message boxes that may cause issues at
    game-time. If users encounter these errors, please override
    NiMessageBox to suppress the errors.</li>
</ul>

  <h2>
    <a id=Troubleshooting_issues name=Troubleshooting_issues></a> Troubleshooting Issues
  </h2>
  <h3>
    Application shutdown issues
  </h3>
  <p>A common issue when using the terrain system occurs when shutting down an application. The 
  application may appear to deadlock, and become unresponsive. This may occur if the terrain's 
  static data (<span class="NDLSystemFont">NiTerrainSDM</span>) is shut down before all the 
    <span class="NDLSystemFont"><a href="NiTerrain.htm">NiTerrain</a></span> objects have been destroyed. To 
  diagnose this issue, simply hit the pause button in Visual Studio when the application deadlocks. 
  Verify that the <span class="NDLSystemFont"><a href="NiTerrain.htm">NiTerrain</a></span> object is currently executing its destructor and hence is causing the 
  deadlock. If this is the case, then check the call stack to see what is causing the 
    <span class="NDLSystemFont"><a href="NiTerrain.htm">NiTerrain</a></span> 
  destructor to be called after the SDM data has been destroyed and fix the application such that 
  the SDM data is either destroyed after that event, or clean up your references to the 
    <span class="NDLSystemFont"><a href="NiTerrain.htm">NiTerrain</a></span> 
  object before the SDM shut down is executed.</p>
  <h3>
    Threaded renderer access issues
  </h3>
  <p>Ensure that your <span class="NDLSystemFont"><a href="NiTerrain.htm">NiTerrain</a></span> objects are created by the same thread that creates the 
    <span class="NDLSystemFont">NiRenderer</span> 
  object, and that all Updates of the <span class="NDLSystemFont"><a href="NiTerrain.htm">NiTerrain</a></span> object occur through that same thread.</p>
  <br>
  
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiFragmentLighting::PixelDescriptor</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiFragmentLighting::PixelDescriptor</p>


<p class="NDLRefHeaderFile">&lt;NiFragmentLighting.h&gt;</p>


<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Lighting pixel descriptor used to describe the application of lighting in the generation of a pixel shader (see <span class="NDLSystemFont"><a href="NiFragmentLighting__Descriptor.htm">Descriptor</a></span> for more information). </p>

<a name="public_attributes"></a>
<p class="NDLRefHead1">Public Attributes</p>


<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1afbf2dfd23d81b26fe28178d8eac85f85"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  uiNumPointLights</p>
<p class="NDLRefMemberDescription">The number of point lights. </p>

<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1abfffbed446d9e818c22b6352d8879d15"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  uiNumDirectionalLights</p>
<p class="NDLRefMemberDescription">The number of directional lights. </p>

<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1a12350ca776b4854fd6df0a51c5aa59b2"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  uiNumSpotLights</p>
<p class="NDLRefMemberDescription">The number of spot lights. </p>

<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1a8197a16d248df8d0c0d90f8a2ae13689"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiFragmentLighting.htm#class_ni_fragment_lighting_1a1de7738e2ce40ad73d4c6e59734b489a">AmbDiffEmissiveEnum</a></span>  eAmbDiffEmissive</p>
<p class="NDLRefMemberDescription">The ambiant, diffuse and emissive enum. </p>

<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1ab5a77c726872df77fa03706a07fc9f22"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiFragmentLighting.htm#class_ni_fragment_lighting_1a8f9a10036b5e47d8d88d1a068888d87f">LightingModeEnum</a></span>  eLightingMode</p>
<p class="NDLRefMemberDescription">The lighting mode enum. </p>

<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1a1261aa3624de97b440570681da3c516a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiFragmentLighting.htm#class_ni_fragment_lighting_1ad9f095a96fcf93d98faa12c78552cb62">ApplyMode</a></span>  eApplyMode</p>
<p class="NDLRefMemberDescription">The application mode enum. </p>

<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1a435d0033323ef1491244d451fdf5581b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  bApplyAmbient</p>
<p class="NDLRefMemberDescription">Whether to apply the ambient color or not. </p>

<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1a3bfba4c0ed7532af4142e6754cac448d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  bApplyEmissive</p>
<p class="NDLRefMemberDescription">Whether to apply the emissive coloe or not. </p>

<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1ad661e899ee86d6d4cbb8e40d8629740f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  bSpecularOn</p>
<p class="NDLRefMemberDescription">Is specularity used. </p>

<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1a2cfed7a01744187f9f12b6e4fac8adb3"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  bPerVertexForLights</p>
<p class="NDLRefMemberDescription">Process using per vertex lighting. </p>

<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1af3f80dfbaafe291b1aeda9f9ececd578"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  bPSSMSliceTransitionEnabled</p>
<p class="NDLRefMemberDescription">Use PSSM slice transition algorithm. </p>

<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1a38052413eacdf4c59c6510b4f64656b5"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt16</span>  usPSSMSliceCount</p>
<p class="NDLRefMemberDescription">Number of PSSM slices. </p>

<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1aec1bd505536194f66572916e67afb463"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt16</span>  usPSSMWhichLight</p>
<p class="NDLRefMemberDescription">Which light to use with PSSM. </p>

<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1a39e318a4ecb1523f0e536c94cc89e3c6"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  uiShadowMapBitfield</p>
<p class="NDLRefMemberDescription">The shadow map bitfiled. </p>

<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1a22cf113d296faf35c6fdd8670a036871"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt16</span>  usShadowTechnique</p>
<p class="NDLRefMemberDescription">The shadow technique to be used. </p>
<a name="pixel_shader_requires_the_following_inputs"></a>
<p class="NDLRefHead1">Pixel shader requires the following inputs</p>


<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1a7d663cd9f46d9f4cc7142c58dbb33bba"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  bInputWorldView</p>
<p class="NDLRefMemberDescription">Requires the world view input. </p>

<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1a395ded9591703b1cc7ba7fc50f084d04"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  bInputWorldPos</p>
<p class="NDLRefMemberDescription">Requires the world position as input. </p>

<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1a4a895f75c42fdd692c0cb37dcbce2245"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  bInputWorldNormal</p>
<p class="NDLRefMemberDescription">Requires the worls normal as input. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="struct_ni_fragment_lighting_1_1_pixel_descriptor_1a3c99563e50eaf80ea14495e194843c9a"></a>
<p class="NDLRefMemberFunction">PixelDescriptor()</p>
<p class="NDLRefMemberFunction"></p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiTerrainSectorFileVersion3</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiTerrainSectorFileVersion3</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="NiTerrainSectorFileVersion5.htm">NiTerrainSectorFileVersion5</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiTerrainSectorFileVersion3.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_terrain_sector_file_version3.gif" alt="Inheritance graph for NiTerrainSectorFileVersion3"/>
  <p class="FigureCaption">Inheritance graph for NiTerrainSectorFileVersion3</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">The class is used to iterate over and write terrain sector files. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_terrain_sector_file_version3_1a46065c0843a883710c24d623794e3541"></a>
<p class="NDLRefMemberFunction">virtual ~NiTerrainSectorFileVersion3()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_terrain_sector_file_version3_1aaa63070780e85f889fa60436ce45b85b"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  NextBlock()</p>
<p class="NDLRefMemberDescription">Read in the next block of information from the file This version performs the old method of getting the next block, and uses the ObjectSize in the old fashion (object size being the length of an object per vertex) the new definition is the size of each field in the file, as it should be for endian aware files. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">Can only be called on a file opened for read access</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if the next block was successfully read. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_version3_1a4164e99b834394b64258c61c2d420928"></a>
<p class="NDLRefMemberFunction">virtual void*  GetStreamData(<br/><span class="NDLSystemFont"><a href="NiTerrainSectorFileVersion5.htm#class_ni_terrain_sector_file_version5_1a7f0b7e2c4a65ed3b3bf07940e20f796b">StreamType</a></span> kStreamID, <br/><span class="NDLSystemFont">NiUInt32</span>& uiDataLength)</p>
<p class="NDLRefMemberDescription">Get the data for a particular stream of information in the current block. </p>
<p class="NDLRefMemberDetailedDescription">This function is overridden from the parent to specifically handle the old methods for storing blend masks. It will also supply an empty stream for the low detail texture (generally the low detail texture will be regenerated under scene designer anyway).</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">Can only be called on a readable file</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kStreamID</span></td>
    <td>The ID of the stream to set the data for. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiDataLength</span></td>
    <td>A reference to a variable to place the length of the stream in.</td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A pointer to the data stored in the stream. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

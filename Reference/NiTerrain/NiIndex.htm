<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiIndex</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiIndex</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__MemObject.htm">efd::MemObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiIndex.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_index.gif" alt="Inheritance graph for NiIndex"/>
  <p class="FigureCaption">Inheritance graph for NiIndex</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">A simple class that represents an X-Y index in a 2D grid, which provides some common arithmetic operators. </p>

<a name="friend_members"></a>
<p class="NDLRefHead1">Friend Members</p>


<a name="class_ni_index_1a6b8c17faf5794593eee9b833ef55e7f9"></a>
<p class="NDLRefMemberFunction">friend <span class="NDLSystemFont">NiIndex</span>  operator*(<br/><span class="NDLSystemFont">NiUInt32</span> uiScalar, <br/>const <span class="NDLSystemFont">NiIndex</span>& pt)</p>
<p class="NDLRefMemberDescription">Element-wise multiplication by scalar and index. </p>
<a name="public_attributes"></a>
<p class="NDLRefHead1">Public Attributes</p>


<a name="class_ni_index_1a0afaacd73db192f5e8c6815750848ce0"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  x</p>
<p class="NDLRefMemberDescription">X component. </p>

<a name="class_ni_index_1a8bdacc5bd1b179ba94882e24db8bc1d6"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  y</p>
<p class="NDLRefMemberDescription">Y component. </p>
<a name="public_static_attributes"></a>
<p class="NDLRefHead1">Public Static Attributes</p>


<a name="class_ni_index_1acd6bd11b56d08869defc2bdff17b4f11"></a>
<p class="NDLRefMemberFunction">static const <span class="NDLSystemFont">NiIndex</span>  ZERO</p>
<p class="NDLRefMemberDescription">Static index with both X and Y as zero. </p>

<a name="class_ni_index_1a9ea6552984ef4f4f1a7714d67eb24398"></a>
<p class="NDLRefMemberFunction">static const <span class="NDLSystemFont">NiIndex</span>  UNIT</p>
<p class="NDLRefMemberDescription">Static index with both X and Y as one. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_index_1a7fa02535461b83fece0df4526a3d79c3"></a>
<p class="NDLRefMemberFunction">NiIndex()</p>
<p class="NDLRefMemberDescription">Default constructor, initializes values to zero. </p>

<a name="class_ni_index_1a8251bed354b9a1f91777392c45071a66"></a>
<p class="NDLRefMemberFunction">NiIndex(<br/><span class="NDLSystemFont">NiUInt32</span> _x, <br/><span class="NDLSystemFont">NiUInt32</span> _y)</p>
<p class="NDLRefMemberDescription">Parameterized constructor. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">_x</span></td>
    <td>Initial value for the x component </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">_y</span></td>
    <td>Initial value for the y component </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_index_1a67e4f9c8386556bf51bdaaa62bfa85bd"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator==(const <span class="NDLSystemFont">NiIndex</span>& kPt) const</p>
<p class="NDLRefMemberDescription">Equality check against another index. </p>

<a name="class_ni_index_1a296059fac454994e9ef9289bc10a7d96"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator!=(const <span class="NDLSystemFont">NiIndex</span>& kPt) const</p>
<p class="NDLRefMemberDescription">Inequality check against another index. </p>

<a name="class_ni_index_1a100921806de597d7bffa0d84c6f9e366"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiIndex</span>  operator+(const <span class="NDLSystemFont">NiIndex</span>& kPt) const</p>
<p class="NDLRefMemberDescription">Element-wise addition of given index. </p>

<a name="class_ni_index_1a32c7fa258eaa7109de7d9b838799df01"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiIndex</span>  operator-(const <span class="NDLSystemFont">NiIndex</span>& kPt) const</p>
<p class="NDLRefMemberDescription">Element-wise subtraction of given index. </p>

<a name="class_ni_index_1ab8038c407a8d55edc62c890727a8b448"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  operator*(const <span class="NDLSystemFont">NiIndex</span>& kPt) const</p>
<p class="NDLRefMemberDescription">Sum of element-wise multiplication. </p>

<a name="class_ni_index_1afafc2ad160fd1ae8fdfe0fceaa0377bb"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiIndex</span>  operator*(<span class="NDLSystemFont">NiUInt32</span> uiScalar) const</p>
<p class="NDLRefMemberDescription">Multiplication of each element by given scalar. </p>

<a name="class_ni_index_1a33bacfc5b32bd4177943ade8e4e2b7ff"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiIndex</span>  operator/(<span class="NDLSystemFont">NiUInt32</span> uiScalar) const</p>
<p class="NDLRefMemberDescription">Division of each element by given scalar. </p>

<a name="class_ni_index_1a612d3d5e54e8999226b67a3021fa7588"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiIndex</span>&  operator+=(const <span class="NDLSystemFont">NiIndex</span>& kPt)</p>
<p class="NDLRefMemberDescription">Element-wise addition of index to this index. </p>

<a name="class_ni_index_1a59c141e1524409fe6dfb09b5467fe0e7"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiIndex</span>&  operator-=(const <span class="NDLSystemFont">NiIndex</span>& kPt)</p>
<p class="NDLRefMemberDescription">Element-wise subtraction of index to this index. </p>

<a name="class_ni_index_1a87f57bddab121b21a13aa759ff960497"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiIndex</span>&  operator*=(<span class="NDLSystemFont">NiUInt32</span> uiScalar)</p>
<p class="NDLRefMemberDescription">Element-wise multiplication by scalar to this index. </p>

<a name="class_ni_index_1a6538a2ca11c66a2408a6311bd6267f8f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiIndex</span>&  operator/=(<span class="NDLSystemFont">NiUInt32</span> uiScalar)</p>
<p class="NDLRefMemberDescription">Element-wise division by scalar to this index. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiTerrainSectorFile</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiTerrainSectorFile</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiRefObject.htm">NiRefObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiTerrainSectorFile.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_terrain_sector_file.gif" alt="Inheritance graph for NiTerrainSectorFile"/>
  <p class="FigureCaption">Inheritance graph for NiTerrainSectorFile</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">A class to abstract the storage of sector data to the disk. </p>
<p class="NDLNormal">By overloading this class different file formats can be introduced. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>


<a name="class_ni_terrain_sector_file_1a82512a8a2d20b0ac6a27159dc57a425a"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont">NiUInt32</span>  FileVersion</p>
<p class="NDLRefMemberDescription">Version type for storing the file version. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_terrain_sector_file_1aa63e4407112bb863bb0c72f63a5ea2ea"></a>
<p class="NDLRefMemberFunction">virtual ~NiTerrainSectorFile()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_terrain_sector_file_1ab1a201c89f6f412778897861715bf338"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="NiTerrainSectorFile.htm#class_ni_terrain_sector_file_1a82512a8a2d20b0ac6a27159dc57a425a">FileVersion</a></span>  GetFileVersion() const = 0</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>the version of the file being written/read. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1a65e168d69047e976c6d4192a38126109"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  IsReady() const</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>true if file is ready to be written/read. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1a13cf0eec1d7dca74a7d78a373d559ddc"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  IsWritable() const</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>true if the file has been opened for write access. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1aa3e35f913f025f02211f28baf85f359e"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  Initialize()</p>
<p class="NDLRefMemberDescription">Initialize the file by opening files, reading the first bit of data, or checking for access to mandatory files. </p>
<p class="NDLRefMemberDetailedDescription">This function is usually called immediately after instantiation of the object. NOTE: This function is for internal use only and under most cicumstances should not be called by a user. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>true if the class was successfully initialized. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1a4bb701cf78b7a205806b45b1c5cff608"></a>
<p class="NDLRefMemberFunction">virtual void  Close()</p>
<p class="NDLRefMemberDescription">Close the file, this function causes any unfinished files to be completed and closed off. </p>
<p class="NDLRefMemberDetailedDescription">Every file must have this function called on it if it was successfully opened. </p>

<a name="class_ni_terrain_sector_file_1af91ddb80006a172bd695ddbc48028beb"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="NiTerrainSectorFile.htm#class_ni_terrain_sector_file_1a82512a8a2d20b0ac6a27159dc57a425a">FileVersion</a></span>  GetCurrentVersion()</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>the file version of the file currently being manipulated </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1a57911b237ed01bd12ee685258e16b8c3"></a>
<p class="NDLRefMemberFunction">virtual void  GetFilePaths(<span class="NDLSystemFont"><a href="../efd/efd__set.htm">efd::set</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&gt;& kFilePaths) = 0</p>
<p class="NDLRefMemberDescription">Return the set of files that are relevant to this format. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kFilePaths</span></td>
    <td>A set to populate with the list of filepaths that this file spans. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1a4903bc47faab947babe7232f872fde2b"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  Precache(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiBeginLevel, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiEndLevel, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiData)</p>
<p class="NDLRefMemberDescription">Request certain data to be pre-cached. </p>
<p class="NDLRefMemberDetailedDescription">This function must be called with the data that will be required before any read operations may be performed.</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">Whilst a data field may be requested, it may not be available in this file. Use the IsDataReady function to determine if the data is available after calling precache.</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiBeginLevel</span></td>
    <td>The first LOD level that the user wants data from </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiEndLevel</span></td>
    <td>The last LOD level that the user wants data from </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiData</span></td>
    <td>A set of flags denoting what data fields are required to be loaded. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if successful </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1af325c87882ae62e6deeb591e511dae27"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  IsDataReady(<span class="NDLSystemFont"><a href="NiTerrainSectorFile__DataField.htm#struct_ni_terrain_sector_file_1_1_data_field_1a823e33bb63b6f8f02fab5fde3433a2dc">DataField::Value</a></span> eDataField)</p>
<p class="NDLRefMemberDescription">Query the file to see if a certain data field is available to be read. </p>
<p class="NDLRefMemberDetailedDescription">In order for this function to return true, the relevant data field must have been pre-cached successfully in a previous call to Precache.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">eDataField</span></td>
    <td>The data field to test for. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>whether the requested data is ready </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1a115552f398426cb5266ff1f13a184ef0"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  ReadSectorConfig(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& uiSectorWidthInVerts, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& uiNumLOD)</p>
<p class="NDLRefMemberDescription">Read the sector configuration from the file. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiSectorWidthInVerts</span></td>
    <td>A reference to an integer that will receive the width of a sector in verts according to this file. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiNumLOD</span></td>
    <td>A reference to an integer that will receive the number of LOD stored in this sector. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if the data was successfully read </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1a4ce75d7b0c5c1f31ac09fe163f276179"></a>
<p class="NDLRefMemberFunction">virtual void  WriteSectorConfig(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiSectorWidthInVerts, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiNumLOD)</p>
<p class="NDLRefMemberDescription">Write the sector configuration to the file. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiSectorWidthInVerts</span></td>
    <td>The width of the sector in verts </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiNumLOD</span></td>
    <td>The number of LOD stored in the sector </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1ae4112dc36b7b7b722ecababf9d62368c"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  ReadHeights(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a2ed07576a2c351e88e18847f247b5705">efd::UInt16</a></span>* pusHeights, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiDataLength)</p>
<p class="NDLRefMemberDescription">Read the sector's height map from file into the supplied buffer. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pusHeights</span></td>
    <td>The height map buffer to read the data into </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiDataLength</span></td>
    <td>The number of elements stored in the buffer. (Must be equal to sectorWidth* sectorWidth) </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if the data was successfully read </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1af378faaf9d81f1ce9f9da6bf88d05dba"></a>
<p class="NDLRefMemberFunction">virtual void  WriteHeights(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a2ed07576a2c351e88e18847f247b5705">efd::UInt16</a></span>* pusHeights, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiDataLength)</p>
<p class="NDLRefMemberDescription">Write the sector's height map to the file from the supplied buffer. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pusHeights</span></td>
    <td>The height map buffer </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiDataLength</span></td>
    <td>The number of elements stored in the buffer. (Must be equal to sectorWidth* sectorWidth) </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1acea782b9b3741c1f4e3788dc27fbd5fa"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  ReadNormals(<br/><span class="NDLSystemFont"><a href="../efd/efd__Point2.htm">efd::Point2</a></span>* pkNormals, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiDataLength)</p>
<p class="NDLRefMemberDescription">Read the sector's normals from the file into the specified buffer. </p>
<p class="NDLRefMemberDetailedDescription">The normals are compressed by not storing the Z value. (calculate Z based on what it needs to be to make the normal a unit vector)</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkNormals</span></td>
    <td>The normal buffer </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiDataLength</span></td>
    <td>the number of elements stored in the buffer </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if the data was successfully read </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1a3967a14ca673bb6300ed39aa1b151b91"></a>
<p class="NDLRefMemberFunction">virtual void  WriteNormals(<br/><span class="NDLSystemFont"><a href="../efd/efd__Point2.htm">efd::Point2</a></span>* pkNormals, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiDataLength)</p>
<p class="NDLRefMemberDescription">Write the sector's normals to the file from the specified buffer The normals are compressed by not storing the Z value. </p>
<p class="NDLRefMemberDetailedDescription">(calculate Z based on what it needs to be to make the normal a unit vector)</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkNormals</span></td>
    <td>The normal buffer </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiDataLength</span></td>
    <td>the number of elements stored in the buffer </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1ae4d9a22920bec4e555ae1032205dc425"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  ReadTangents(<br/><span class="NDLSystemFont"><a href="../efd/efd__Point2.htm">efd::Point2</a></span>* pkTangents, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiDataLength)</p>
<p class="NDLRefMemberDescription">Read the sector's tangents from the file into the specified buffer. </p>
<p class="NDLRefMemberDetailedDescription">The tangents are compressed by not storing the Y value (assumed 0).</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkTangents</span></td>
    <td>The normal buffer </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiDataLength</span></td>
    <td>the number of elements stored in the buffer </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if the data was successfully read </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1a8b640f9b924d1c7e96050465a433bf64"></a>
<p class="NDLRefMemberFunction">virtual void  WriteTangents(<br/><span class="NDLSystemFont"><a href="../efd/efd__Point2.htm">efd::Point2</a></span>* pkTangents, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiDataLength)</p>
<p class="NDLRefMemberDescription">Write the sector's tangents to the file from the specified buffer. </p>
<p class="NDLRefMemberDetailedDescription">The tangents are compressed by not storing the Y value (assumed 0).</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkTangents</span></td>
    <td>The tangent buffer </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiDataLength</span></td>
    <td>the number of elements stored in the buffer </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1aba844885b95c69660adb2cc93977947e"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  ReadBlendMask(<span class="NDLSystemFont"><a href="../NiMain/NiPixelData.htm">NiPixelData</a></span> *& pkBlendMask)</p>
<p class="NDLRefMemberDescription">Read the sector's blend mask from the file. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkBlendMask</span></td>
    <td>the pointer to return the blend mask into. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if the data was successfully read. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1a1a26721e7e76b1ac88191fab9663b614"></a>
<p class="NDLRefMemberFunction">virtual void  WriteBlendMask(<span class="NDLSystemFont"><a href="../NiMain/NiPixelData.htm">NiPixelData</a></span>* pkBlendMask)</p>
<p class="NDLRefMemberDescription">Write the sector's blend mask to the file. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkBlendMask</span></td>
    <td>The blend mask </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1a9b69a112182c4c45fb99836452652051"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  ReadLowDetailDiffuseMap(<span class="NDLSystemFont"><a href="../NiMain/NiPixelData.htm">NiPixelData</a></span> *& pkLowDetailDiffuse)</p>
<p class="NDLRefMemberDescription">Read the sector's low detail diffuse map from the file. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkLowDetailDiffuse</span></td>
    <td>the pointer to return the map into. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if the data was successfully read. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1a3ac95c58ef42cd02309807054e3d4009"></a>
<p class="NDLRefMemberFunction">virtual void  WriteLowDetailDiffuseMap(<span class="NDLSystemFont"><a href="../NiMain/NiPixelData.htm">NiPixelData</a></span>* pkLowDetailDiffuse)</p>
<p class="NDLRefMemberDescription">Write the sector's low detail diffuse map to the file. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkLowDetailDiffuse</span></td>
    <td>The low detail diffuse map </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1a688bea23c3d67f3a7c771de7f1960f0e"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  ReadLowDetailNormalMap(<span class="NDLSystemFont"><a href="../NiMain/NiPixelData.htm">NiPixelData</a></span> *& pkLowDetailNormal)</p>
<p class="NDLRefMemberDescription">Read the sector's low detail normal map from the file. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkLowDetailNormal</span></td>
    <td>the pointer to return the map into. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if the data was successfully read. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1ae68a9561c33f6ed05ef37e153ee7e4b7"></a>
<p class="NDLRefMemberFunction">virtual void  WriteLowDetailNormalMap(<span class="NDLSystemFont"><a href="../NiMain/NiPixelData.htm">NiPixelData</a></span>* pkLowDetailNormal)</p>
<p class="NDLRefMemberDescription">Write the sector's low detail normal map to the file. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkLowDetailNormal</span></td>
    <td>The low detail normal map </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1a459ab8f9177ba5257758aac3ae063fa7"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  ReadCellSurfaceIndex(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiCellRegionID, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiNumCells, <br/><span class="NDLSystemFont"><a href="NiTerrainSectorFile__LeafData.htm">LeafData</a></span>* pkLeafData)</p>
<p class="NDLRefMemberDescription">Read the surface index of a range of leaf cells from the file. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiCellRegionID</span></td>
    <td>The first leaf to read into the buffer </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiNumCells</span></td>
    <td>The number of cells to read </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkLeafData</span></td>
    <td>The buffer to read the data into (must be allocated) </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if the data was successfully read. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1afef24d5a123f930b566fda016d503971"></a>
<p class="NDLRefMemberFunction">virtual void  WriteCellSurfaceIndex(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiCellRegionID, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiNumCells, <br/><span class="NDLSystemFont"><a href="NiTerrainSectorFile__LeafData.htm">LeafData</a></span>* pkLeafData)</p>
<p class="NDLRefMemberDescription">Write the surface index of a range of leaf cells to the file. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiCellRegionID</span></td>
    <td>The first leaf to write to the file </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiNumCells</span></td>
    <td>The number of cells to write </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkLeafData</span></td>
    <td>The buffer to write the data from </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1a90d0fded8a27656a45a07e0283503e50"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  ReadCellBoundData(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiCellRegionID, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiNumCells, <br/><span class="NDLSystemFont"><a href="NiTerrainSectorFile__CellData.htm">CellData</a></span>* pkCellData)</p>
<p class="NDLRefMemberDescription">Read the bounding information of a range of cells from the file. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiCellRegionID</span></td>
    <td>The first cell to read into the buffer </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiNumCells</span></td>
    <td>The number of cells to read </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkCellData</span></td>
    <td>The buffer to read the data into (must be allocated) </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if the data was successfully read. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1a01513363f50711ee5f65503f65e1b0b6"></a>
<p class="NDLRefMemberFunction">virtual void  WriteCellBoundData(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiCellRegionID, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiNumCells, <br/><span class="NDLSystemFont"><a href="NiTerrainSectorFile__CellData.htm">CellData</a></span>* pkCellData)</p>
<p class="NDLRefMemberDescription">Write the bounding information of a range of cells to the file. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiCellRegionID</span></td>
    <td>The first cell to write to the file </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiNumCells</span></td>
    <td>The number of cells to write </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkCellData</span></td>
    <td>The buffer to write the data from </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1ae4b6efad420291fded477868c049dc72"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  ReadTerrainSectorPhysXData(<br/><span class="NDLSystemFont"><a href="../efd/efd__map.htm">efd::map</a></span>&lt;<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>, <span class="NDLSystemFont"><a href="NiPhysXMaterialMetaData.htm">NiPhysXMaterialMetaData</a></span>&gt;& kMaterialMap, <br/><span class="NDLSystemFont"><a href="NiTerrainSectorPhysXData.htm">NiTerrainSectorPhysXData</a></span> *& pkSampleData)</p>
<p class="NDLRefMemberDescription">Reads in the physx data for the sector. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kMaterialMap</span></td>
    <td>The material data we are going to return </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkSampleData</span></td>
    <td>The physx data for each sector samples that we are going to return. This parameter should not yet be allocated </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if the data was successfully read. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_file_1ac66b65474817ebf34e8d32858e8928d1"></a>
<p class="NDLRefMemberFunction">virtual void  WriteTerrainSectorPhysXData(<br/><span class="NDLSystemFont"><a href="../efd/efd__map.htm">efd::map</a></span>&lt;<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>, <span class="NDLSystemFont"><a href="NiPhysXMaterialMetaData.htm">NiPhysXMaterialMetaData</a></span>&gt; kMaterialMap, <br/><span class="NDLSystemFont"><a href="NiTerrainSectorPhysXData.htm">NiTerrainSectorPhysXData</a></span>* pkSampleData)</p>
<p class="NDLRefMemberDescription">Writes in the physx data for the sector. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kMaterialMap</span></td>
    <td>The material data we are going to write </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkSampleData</span></td>
    <td>The physx data for each sector samples that we are going to write. This should not be null. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="class_ni_terrain_sector_file_1a9b74abb088edf7a12cf4e5708c1c3960"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">NiTerrainSectorFile</span>*  Open(<br/>const char* pcTerrainArchive, <br/><span class="NDLSystemFont">NiInt32</span> iSectorX, <br/><span class="NDLSystemFont">NiInt32</span> iSectorY, <br/><span class="NDLSystemFont">bool</span> bWriteAccess = false)</p>
<p class="NDLRefMemberDescription">Create a <span class="NDLSystemFont">NiTerrainSectorFile</span> object capable of traversing the data stored in the given file. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pcTerrainArchive</span></td>
    <td>the path to a sector file to open for iteration </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">iSectorX</span></td>
    <td>the X index of the sector to open </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">iSectorY</span></td>
    <td>the Y index of the sector to open </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bWriteAccess</span></td>
    <td>set to true if we are going to output to a file. can only read OR write at once, not both.</td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>a pointer to the opened sector file. This is null if opening failed </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

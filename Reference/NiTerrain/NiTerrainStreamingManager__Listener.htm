<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiTerrainStreamingManager::Listener</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiTerrainStreamingManager::Listener</p>


<p class="NDLRefHeaderFile">&lt;NiTerrainStreamingManager.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_terrain_streaming_manager_1_1_listener.gif" alt="Inheritance graph for NiTerrainStreamingManager::Listener"/>
  <p class="FigureCaption">Inheritance graph for NiTerrainStreamingManager::Listener</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">A listener class used to collect error information about the streaming process and provide a possible hook for metrics. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>


<a name="class_ni_terrain_streaming_manager_1_1_listener_1a3f5dd9711345e6b2d37f63a7a2b12b35"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="NiTerrainStreamingTask__TaskType.htm">NiTerrainStreamingTask::TaskType</a></span>  TaskType</p>
<p class="NDLRefMemberDescription">Quick reference to a TaskType object. </p>

<a name="class_ni_terrain_streaming_manager_1_1_listener_1a6ab106a486294dc127f792571e562923"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="NiTerrainStreamingTask__Status.htm">NiTerrainStreamingTask::Status</a></span>  Status</p>
<p class="NDLRefMemberDescription">Quick reference to a Status object. </p>

<a name="class_ni_terrain_streaming_manager_1_1_listener_1a26a2d428654733ca912e4f3f0b13fe1a"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="NiTerrainSector.htm#class_ni_terrain_sector_1a1205b2987581a4589b998ce18c080147">NiTerrainSector::SectorID</a></span>  SectorID</p>
<p class="NDLRefMemberDescription">Quick reference to a SectorID object. </p>

<a name="class_ni_terrain_streaming_manager_1_1_listener_1af9cb6753e574ba849b30a47b29b6a2ef"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a845df149ec80fc0bf36f875ece09ef9d">efd::UInt64</a></span>  TaskID</p>
<p class="NDLRefMemberDescription">Quick reference to a TaskID object. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_terrain_streaming_manager_1_1_listener_1a4d5031f8a09ac152c237612ba410af47"></a>
<p class="NDLRefMemberFunction">virtual ~Listener()</p>
<p class="NDLRefMemberDescription">Virtual destructor. </p>

<a name="class_ni_terrain_streaming_manager_1_1_listener_1a013a1996f1702bddbcd57035e66228e4"></a>
<p class="NDLRefMemberFunction">virtual void  IncRefCount() = 0</p>
<p class="NDLRefMemberDescription">Reference counting incrementation. </p>

<a name="class_ni_terrain_streaming_manager_1_1_listener_1a384903f29b8634c579e034f99a9a9b49"></a>
<p class="NDLRefMemberFunction">virtual void  DecRefCount() = 0</p>
<p class="NDLRefMemberDescription">Reference counting decrementation. </p>

<a name="class_ni_terrain_streaming_manager_1_1_listener_1a65f11ecc73741259ca03ec6072123c78"></a>
<p class="NDLRefMemberFunction">virtual void  ReportStartTask(<br/><span class="NDLSystemFont"><a href="NiTerrainStreamingManager__Listener.htm#class_ni_terrain_streaming_manager_1_1_listener_1af9cb6753e574ba849b30a47b29b6a2ef">TaskID</a></span> kTaskID, <br/><span class="NDLSystemFont"><a href="NiTerrainStreamingManager__Listener.htm#class_ni_terrain_streaming_manager_1_1_listener_1a26a2d428654733ca912e4f3f0b13fe1a">SectorID</a></span> kSectorID, <br/><span class="NDLSystemFont"><a href="NiTerrainStreamingTask__TaskType.htm#struct_ni_terrain_streaming_task_1_1_task_type_1a1170d18ae8613bcb169b6ff943965d26">TaskType::VALUE</a></span> eTaskType)</p>
<p class="NDLRefMemberDescription">This function is called whenever a streaming task is started. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kTaskID</span></td>
    <td>The task ID used to link reporting calls together. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kSectorID</span></td>
    <td>The unique ID of the sector being manipulated in this task </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">eTaskType</span></td>
    <td>The type of task being executed on the sector </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_streaming_manager_1_1_listener_1a41ccb3443ec98592656d002df4bf0fd7"></a>
<p class="NDLRefMemberFunction">virtual void  ReportTaskStatus(<br/><span class="NDLSystemFont"><a href="NiTerrainStreamingManager__Listener.htm#class_ni_terrain_streaming_manager_1_1_listener_1af9cb6753e574ba849b30a47b29b6a2ef">TaskID</a></span> kTaskID, <br/><span class="NDLSystemFont"><a href="NiTerrainStreamingTask__TaskType.htm#struct_ni_terrain_streaming_task_1_1_task_type_1a1170d18ae8613bcb169b6ff943965d26">TaskType::VALUE</a></span> eTaskType, <br/><span class="NDLSystemFont"><a href="NiTerrainStreamingTask__Status.htm#struct_ni_terrain_streaming_task_1_1_status_1a8e42e6c9b361f7ce7b162ae2bfd6451e">Status::VALUE</a></span> eStatus)</p>
<p class="NDLRefMemberDescription">This function is called whenever a streaming task's status is updated. </p>
<p class="NDLRefMemberDetailedDescription">Different status values relate to different stages in the streaming process and are different for each task type.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kTaskID</span></td>
    <td>The task ID used to link reporting calls together. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">eTaskType</span></td>
    <td>The type of task being executed on the sector </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">eStatus</span></td>
    <td>The new status of the task </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_streaming_manager_1_1_listener_1ae80a56270e4bf87fb9e1feafdd1be5f1"></a>
<p class="NDLRefMemberFunction">virtual void  ReportFinishTask(<br/><span class="NDLSystemFont"><a href="NiTerrainStreamingManager__Listener.htm#class_ni_terrain_streaming_manager_1_1_listener_1af9cb6753e574ba849b30a47b29b6a2ef">TaskID</a></span> kTaskID, <br/><span class="NDLSystemFont"><a href="NiTerrainStreamingTask__TaskType.htm#struct_ni_terrain_streaming_task_1_1_task_type_1a1170d18ae8613bcb169b6ff943965d26">TaskType::VALUE</a></span> eTaskType, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiErrorCode)</p>
<p class="NDLRefMemberDescription">This function is called whenever a streaming task is completed. </p>
<p class="NDLRefMemberDetailedDescription">The error code returned allows errors in the streaming process to be reported.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kTaskID</span></td>
    <td>The task ID used to link reporting calls together. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">eTaskType</span></td>
    <td>The type of task being executed on the sector </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiErrorCode</span></td>
    <td>The final errorcode reported by the streaming process </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiSurfacePackage</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiSurfacePackage</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiRefObject.htm">NiRefObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiSurfacePackage.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_surface_package.gif" alt="Inheritance graph for NiSurfacePackage"/>
  <p class="FigureCaption">Inheritance graph for NiSurfacePackage</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">A surface package contains a set of surfaces (<span class="NDLSystemFont"><a href="NiSurface.htm">NiSurface</a></span>) to be used in the terrain engine. </p>
<p class="NDLNormal">A package can be saved to and loaded from an XML file, which contains the actual surface definitions. The texture paths used by the surfaces in the XML file should be relative to the location of the package, not the application. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_surface_package_1af6723a348ebd4d1a1792f45bee5d1250"></a>
<p class="NDLRefMemberFunction">virtual ~NiSurfacePackage()</p>
<p class="NDLRefMemberDescription">Destructor. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="class_ni_surface_package_1ac67e017a5c105a5a66cc0b3510eece10"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">NiSurfacePackage</span>*  Create(const <span class="NDLSystemFont"><a href="../NiMain/NiString.htm">NiString</a></span>& kPackageName)</p>
<p class="NDLRefMemberDescription">Create a new surface package with the specified name. </p>
<a name="package_manipulation"></a>
<p class="NDLRefHead1">Package manipulation</p>


<a name="class_ni_surface_package_1a71801270b22cff876683aedb18a46afa"></a>
<p class="NDLRefMemberFunction">void  UnloadSurfaces()</p>
<p class="NDLRefMemberDescription">Delete all contained surfaces from memory and removes them from the package. </p>
<p class="NDLRefMemberDetailedDescription">Only call this function if the surfaces are not currently in use elsewhere.</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">Since the surfaces are immediately deleted, care must be taken to un-assign any existing user pointers. </p></p>

<a name="class_ni_surface_package_1ad5faef8dc8d2c372f2f6da1b8732361a"></a>
<p class="NDLRefMemberFunction">const char*  GetFilename() const</p>
<p class="NDLRefMemberDescription">Get the relative or absolute XML file path that this package will load from and save data to. </p>

<a name="class_ni_surface_package_1acd41639987d61ac17696ca67deb0dd94"></a>
<p class="NDLRefMemberFunction">const char*  GetAssetID() const</p>
<p class="NDLRefMemberDescription">Get the Asset ID that this package can be uniquely identified by. </p>

<a name="class_ni_surface_package_1ac4c14e3f5effea4cd660999266326532"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../NiMain/NiString.htm">NiString</a></span>&  GetName() const</p>
<p class="NDLRefMemberDescription">Get the visible name of this surface package, to be used in browsers, error messages etc. </p>

<a name="class_ni_surface_package_1abb8dda45b32e8b943d51756328b42203"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetIteration() const</p>
<p class="NDLRefMemberDescription">Get the iteration value of this package. </p>

<a name="class_ni_surface_package_1a025ce835ea41c57b1e12fce36c305611"></a>
<p class="NDLRefMemberFunction">void  MarkDirty(<span class="NDLSystemFont">bool</span> bDirty)</p>
<p class="NDLRefMemberDescription">Mark this package as dirty. </p>
<a name="surface_manipulation"></a>
<p class="NDLRefHead1">Surface manipulation</p>


<a name="class_ni_surface_package_1a60366112572e640d6157e41c34a67b24"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  CreateSurface(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiString.htm">NiString</a></span>& kName, <br/><span class="NDLSystemFont"><a href="NiSurface.htm">NiSurface</a></span> *& pkSurface)</p>
<p class="NDLRefMemberDescription">Create a new blank surface with the given name and adds it to this package. </p>
<p class="NDLRefMemberDetailedDescription">If the given meta data store is null then the default static store is used. If a surface already exists by the given name, no new surface is created.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kName</span></td>
    <td>Name given to the new surface. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkSurface</span></td>
    <td>Pointer to the newly created surface. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the surface was successfully added to the package, otherwise false. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_surface_package_1a1a82d798e20060f8b86eec69d768dc44"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  PrecompileSurfaces()</p>
<p class="NDLRefMemberDescription">Compile all surfaces contained in the package. </p>
<p class="NDLRefMemberDetailedDescription">This will load all images from disk into memory for ALL contained surfaces into compressed runtime data.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if at least 1 surface was compiled, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_surface_package_1a9665842abd36fcba05955f9b9404d9ad"></a>
<p class="NDLRefMemberFunction">void  GetSurfaces(<span class="NDLSystemFont"><a href="../NiMain/NiTPrimitiveSet.htm">NiTPrimitiveSet</a></span>&lt;<span class="NDLSystemFont"><a href="NiSurface.htm">NiSurface</a></span>*&gt;& kSurfaces) const</p>
<p class="NDLRefMemberDescription">Populate the given set with pointers to all surfaces that are currently within this package. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kSurfaces</span></td>
    <td>Set to be populated with pointers to all loaded surfaces. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_surface_package_1a94a3e1ed262beeda79ec261212fad595"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetSurface(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiString.htm">NiString</a></span>& kName, <br/><span class="NDLSystemFont"><a href="NiSurface.htm">NiSurface</a></span> *& pkSurface) const</p>
<p class="NDLRefMemberDescription">Find a surface contained in this package with the given name. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kName</span></td>
    <td>Name of the surface to find. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkSurface</span></td>
    <td>Pointer to the found surface. Set to 0 if no surface is found </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if a surface was found, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_surface_package_1a1f6ce56713c50001409fac59cb777859"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  RenameSurface(<br/><span class="NDLSystemFont"><a href="NiSurface.htm">NiSurface</a></span>* pkSurface, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiString.htm">NiString</a></span>& kNewSurfaceName)</p>
<p class="NDLRefMemberDescription">Attempt to rename the given surface within this package. </p>
<p class="NDLRefMemberDetailedDescription">If a surface already exists with the new name, or the initial surface is not contained within this package, the surface will not be renamed.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkSurface</span></td>
    <td>Surface, contained in this package, to rename. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kNewSurfaceName</span></td>
    <td>New name to set to the given surface. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the surface was successfully renamed, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_surface_package_1a661aa628528cee16aa8cb774313a1c70"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  ClaimSurface(<span class="NDLSystemFont"><a href="NiSurface.htm">NiSurface</a></span>* pkSurface)</p>
<p class="NDLRefMemberDescription">Move the given surface from its current package to this one. </p>
<p class="NDLRefMemberDetailedDescription">If a surface already exists in this package with the same name, the surface will not be moved. This function will also update the actual surface to reflect the package change.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkSurface</span></td>
    <td>Surface to move into this package. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the surface was successfully moved, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_surface_package_1afb599d8a8dbc682e6c947b318ec9c53b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  ReleaseSurface(<span class="NDLSystemFont"><a href="NiSurface.htm">NiSurface</a></span>* pkSurface)</p>
<p class="NDLRefMemberDescription">Remove the given surface from this package, but do not delete it. </p>
<p class="NDLRefMemberDetailedDescription">By calling this function, the user is taking ownership of the surface. If the surface is not found within this package, no action is taken. This function will also update the actual surface to reflect the package release.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkSurface</span></td>
    <td>Surface to remove from this package. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the surface was found and released successfully, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_surface_package_1aacfa7a05f0e7507a59f787c0f1d7e8ab"></a>
<p class="NDLRefMemberFunction">void  UnloadSurface(const <span class="NDLSystemFont"><a href="../NiMain/NiString.htm">NiString</a></span>& kName)</p>
<p class="NDLRefMemberDescription">Deletes the surface with the given name from memory. </p>
<p class="NDLRefMemberDetailedDescription">If no surface was found with the given name, no action is taken.</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">Since the surface is immediately deleted, care must be taken to un-assign any existing user pointers. </p></p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

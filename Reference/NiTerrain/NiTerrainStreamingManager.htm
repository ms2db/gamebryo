<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiTerrainStreamingManager</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiTerrainStreamingManager</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiRefObject.htm">NiRefObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiTerrainStreamingManager.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_terrain_streaming_manager.gif" alt="Inheritance graph for NiTerrainStreamingManager"/>
  <p class="FigureCaption">Inheritance graph for NiTerrainStreamingManager</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class represents the workhorse of the terrain streaming mechanism. </p>
<p class="NDLNormal">It manages a list of jobs to have executing for each sector and handles how a thread pool of workers are divided up to process the pending jobs. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>


<a name="class_ni_terrain_streaming_manager_1a3e74e4bf6c1ef03aea5fc32224459777"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont"><a href="NiTerrainStreamingManager__Listener.htm">Listener</a></span>&gt;  ListenerPtr</p>
<p class="NDLRefMemberDescription">Defines a smartpointer for the <span class="NDLSystemFont"><a href="NiTerrainStreamingManager__Listener.htm">Listener</a></span> class. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_terrain_streaming_manager_1ae9a56df512667cdd8918707b9a88cc21"></a>
<p class="NDLRefMemberFunction">NiTerrainStreamingManager()</p>
<p class="NDLRefMemberDescription">Constructor. </p>

<a name="class_ni_terrain_streaming_manager_1a74e16377c58d875eea8fdce3c5d6f9a7"></a>
<p class="NDLRefMemberFunction">~NiTerrainStreamingManager()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_terrain_streaming_manager_1a7f912d53416e7b23ae315d6a94afc509"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  RequestRebuildSector(<br/><span class="NDLSystemFont"><a href="NiTerrainSector.htm">NiTerrainSector</a></span>* pkSector, <br/><span class="NDLSystemFont"><a href="../NiMain/NiRect.htm">NiRect</a></span>&lt;<span class="NDLSystemFont">NiInt32</span>&gt; kChangedRegion)</p>
<p class="NDLRefMemberDescription">Request that the streaming manager rebuild the geometry of a portion of the given sector. </p>
<p class="NDLRefMemberDetailedDescription">The region given is in heightmap pixels, and is an inclusive range. This function will block until the rebuild has been completed.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkSector</span></td>
    <td>the sector to rebuild </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kChangedRegion</span></td>
    <td>the region of the heightmap that needs rebuilding </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if the task was successfully submitted </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_streaming_manager_1aa0bbc8faaeb364d927be793477b04e29"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  RequestPageSector(<br/><span class="NDLSystemFont"><a href="NiTerrainSector.htm">NiTerrainSector</a></span>* pkSector, <br/><span class="NDLSystemFont">NiInt32</span> iTargetLOD, <br/><span class="NDLSystemFont">bool</span> bWaitForCompletion = false)</p>
<p class="NDLRefMemberDescription">Request that a sector be paged in or out of memory from disk. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkSector</span></td>
    <td>the sector to page </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">iTargetLOD</span></td>
    <td>the LOD that the sector should be loaded to (-1 is unloaded and removed) </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bWaitForCompletion</span></td>
    <td>if true, this function will block until the task is completed </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if the task was successfully submitted </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_streaming_manager_1a8ae88844175979705406bce7e872fa15"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  RequestCreateBlankSector(<br/><span class="NDLSystemFont"><a href="NiTerrainSector.htm">NiTerrainSector</a></span>* pkSector, <br/><span class="NDLSystemFont">bool</span> bWaitForCompletion = false)</p>
<p class="NDLRefMemberDescription">Request that a sector be given blank geometry. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkSector</span></td>
    <td>the sector to create </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bWaitForCompletion</span></td>
    <td>if true, this function will block until the task is completed </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if the task was successfully submitted </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_streaming_manager_1afad12ebcc1e34e16cfdb4468b727e5f2"></a>
<p class="NDLRefMemberFunction">void  PerformRendererThreadTasks(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiMaxNumTasksToProcess = 0)</p>
<p class="NDLRefMemberDescription">Performs any lock/unlock operations or sector removal tasks that may be pending. </p>
<p class="NDLRefMemberDetailedDescription">All these tasks must be called from the renderer/update thread. This function is the entry point for that thread to execute the tasks waiting on it.</p>
<p class="NDLRefMemberDetailedDescription">NOTE: If the max tasks = 0 then all tasks are executed </p>

<a name="class_ni_terrain_streaming_manager_1acce01b64748a05dd7f17d9a2930261cf"></a>
<p class="NDLRefMemberFunction">void  Abort()</p>
<p class="NDLRefMemberDescription">Attempts to cancel any tasks, then runs until all queued tasks have been completed. </p>
<p class="NDLRefMemberDetailedDescription">This is a blocking function, returning only when all tasks have been completed. </p>

<a name="class_ni_terrain_streaming_manager_1ae5a51744678e040ec0a94a8abd020014"></a>
<p class="NDLRefMemberFunction">void  WaitForAllTasksCompleted()</p>
<p class="NDLRefMemberDescription">Waits for all tasks that have been submitted to the loading manager to be completed. </p>

<a name="class_ni_terrain_streaming_manager_1af9606bc7a9448b7395af98b43395f2ac"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  PollSectorStreamingStatus(<span class="NDLSystemFont"><a href="NiTerrainSector.htm">NiTerrainSector</a></span>* pkSector)</p>
<p class="NDLRefMemberDescription">Returns true if the specified sector is currently in the process of streaming. </p>

<a name="class_ni_terrain_streaming_manager_1ac246e400a7b777d553e0d795392cd29b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  PollStreamingStatus()</p>
<p class="NDLRefMemberDescription">Returns true if any streaming tasks are currently executing. </p>

<a name="class_ni_terrain_streaming_manager_1abdfe744db24911334dab75ee5df65217"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">ListenerPtr</a></span>  SetListener(<span class="NDLSystemFont"><a href="NiTerrainStreamingManager__Listener.htm">Listener</a></span>* pkListener)</p>
<p class="NDLRefMemberDescription">Sets a listener object that will receive events on the progress of tasks. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>The original listener object </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_streaming_manager_1ae2ff91de8afb986fd7077c61c12911b2"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTerrainStreamingManager__Listener.htm">Listener</a></span>*  GetListener()</p>
<p class="NDLRefMemberDescription">Returns the current streaming listener object that receives task progress events. </p>

<a name="class_ni_terrain_streaming_manager_1a05b85b9fde539c45ff574273fcebbb03"></a>
<p class="NDLRefMemberFunction">void  SetNumWorkers(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiNumWorkers)</p>
<p class="NDLRefMemberDescription">Sets the number of worker threads to use in processing streaming. </p>
<p class="NDLRefMemberDetailedDescription">A value of 0 will remove all threaded functionality of the streaming system. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

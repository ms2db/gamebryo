<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiMetaDataStore</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiMetaDataStore</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__MemObject.htm">efd::MemObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiMetaDataStore.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_meta_data_store.gif" alt="Inheritance graph for NiMetaDataStore"/>
  <p class="FigureCaption">Inheritance graph for NiMetaDataStore</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">The metadata store is used to map key names to data-types. </p>
<p class="NDLNormal">Use this class to manage the data-types for a group of metadata objects within a particular scope. For example, A MetaDataStore at the Terrain level to manage data-types for all MetaData objects used in the Terrain system. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>


<a name="class_ni_meta_data_store_1a11083815224e450d8581c0d8fb7fb4c1"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="NiMetaData.htm#class_ni_meta_data_1ab0ff309ed812964c5635560fbb729b37">NiMetaData::KeyType</a></span>  KeyType</p>
<p class="NDLRefMemberDescription">Convenience type for key types. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_meta_data_store_1a4c3016e0c93ad092ba06a70f34e0856e"></a>
<p class="NDLRefMemberFunction">NiMetaDataStore()</p>
<p class="NDLRefMemberDescription">Default constructor. </p>

<a name="class_ni_meta_data_store_1aa0ac7474f4b61a69ce7e50262071e109"></a>
<p class="NDLRefMemberFunction">~NiMetaDataStore()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_meta_data_store_1a70be3c18cdab2d4733f3a90d429c10a4"></a>
<p class="NDLRefMemberFunction">void  GetAvailableKeys(<span class="NDLSystemFont"><a href="../NiMain/NiTObjectSet.htm">NiTObjectSet</a></span>&lt;<span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>&gt;& kKeySet) const</p>
<p class="NDLRefMemberDescription">Create a list of key names for which this store has type mappings assigned. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kKeySet</span></td>
    <td>The set to which the key names shall be added. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="class_ni_meta_data_store_1ae55ec86232fe8b0e5045bc8aa9365d20"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">NiMetaDataStore</span>*  GetInstance()</p>
<p class="NDLRefMemberDescription">Retrieve a pointer to the default singleton meta data store. </p>
<p class="NDLRefMemberDetailedDescription">This function will create a store if none exists so far. </p>
<a name="key_data_types"></a>
<p class="NDLRefHead1">Key Data Types</p>


<a name="class_ni_meta_data_store_1ad7e2bde00a1be81e96a703e75d1b50ba"></a>
<p class="NDLRefMemberFunction">void  SetKeyType(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kKey, <br/><span class="NDLSystemFont"><a href="NiMetaData.htm#class_ni_meta_data_1ab0ff309ed812964c5635560fbb729b37">KeyType</a></span> kType)</p>
<p class="NDLRefMemberDescription">Map a KeyName to a particular KeyType. </p>
<p class="NDLRefMemberDetailedDescription"><span class="NDLSystemFont"><a href="NiMetaData.htm">NiMetaData</a></span> objects referring to this store will use this mapping to determine what data should be stored for this key.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kKey</span></td>
    <td>The key name to be mapped. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kType</span></td>
    <td>The type associated with the given key </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_meta_data_store_1a2a9d66693250d71d38ece1bedc2003b9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetKeyType(<br/>const <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kKey, <br/><span class="NDLSystemFont"><a href="NiMetaData.htm#class_ni_meta_data_1ab0ff309ed812964c5635560fbb729b37">KeyType</a></span>& kType) const</p>
<p class="NDLRefMemberDescription">Get the KeyType for a particular KeyName. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kKey</span></td>
    <td>The key name to get the type for. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kType</span></td>
    <td>The type associated with the given key </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_meta_data_store_1af22f80ced3671c492df02f5c8d31005c"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  RemoveKey(const <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kKey)</p>
<p class="NDLRefMemberDescription">Remove the key name to key type mapping from the store. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">This function will iterate through all MetaData objects referencing this store and remove any references to this key</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kKey</span></td>
    <td>The key to remove. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if a valid key name to key type mapping was found and removed. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_meta_data_store_1a2850335db3db3f8ae150e0724f1b2760"></a>
<p class="NDLRefMemberFunction">void  RemoveAll()</p>
<p class="NDLRefMemberDescription">Remove all type mappings from this MetaDataStore. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">This function will iterate through all MetaData objects referencing this store and remove any references to these keys. </p></p>
<a name="manage_metadata_instances"></a>
<p class="NDLRefHead1">Manage MetaData Instances</p>


<a name="class_ni_meta_data_store_1a823594c65866f89196f020bb69cc7bf7"></a>
<p class="NDLRefMemberFunction">void  RegisterMetaData(<span class="NDLSystemFont"><a href="NiMetaData.htm">NiMetaData</a></span>* kMetaData)</p>
<p class="NDLRefMemberDescription">Notify this store object of a metadata object that is referencing it for type information. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kMetaData</span></td>
    <td>a pointer to the metadata object referencing the store </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_meta_data_store_1a3ba5136b9350fc5ce3771cb0f3e2dc59"></a>
<p class="NDLRefMemberFunction">void  UnregisterMetaData(<span class="NDLSystemFont"><a href="NiMetaData.htm">NiMetaData</a></span>* kMetaData)</p>
<p class="NDLRefMemberDescription">Notify this store object of a metadata object that is no longer maintaining a reference to it. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kMetaData</span></td>
    <td>Metadata object to unregister. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_meta_data_store_1af2fb5b06544133c7212a3f8a4070226e"></a>
<p class="NDLRefMemberFunction">void  ClearKey(const <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kKey)</p>
<p class="NDLRefMemberDescription">Remove all the key entries from all MetaData objects referencing this store. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kKey</span></td>
    <td>The name of the key to clear. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_meta_data_store_1af249a43cb18f06a0480e36556b680b95"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  ValidateKeys()</p>
<p class="NDLRefMemberDescription">Force all the MetaData objects to validate the data stored in them. </p>
<p class="NDLRefMemberDetailedDescription">Each metadata will check the keys and make sure that the right type of data is stored for the key. If the key does not have valid data stored, then that entry will be removed.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>false if an invalid entry was found in the process. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_meta_data_store_1a81610adebb076df82d505799f4f5d9f3"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  ValidateKeys() const</p>
<p class="NDLRefMemberDescription">Force all the MetaData objects to validate the data stored in them. </p>
<p class="NDLRefMemberDetailedDescription">Each metadata will check the keys and make sure that the right type of data is stored for the key.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>false if an invalid entry was found in the process. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

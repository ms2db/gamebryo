<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiTerrainSector</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiTerrainSector</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiNode.htm">NiNode</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiTerrainSector.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_terrain_sector.gif" alt="Inheritance graph for NiTerrainSector"/>
  <p class="FigureCaption">Inheritance graph for NiTerrainSector</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">The Terrain Sector is a manager class for a collection of terrain cells, contained within a quadtree. </p>
<p class="NDLNormal">An <span class="NDLSystemFont">NiTerrainSector</span> object keeps track of data streams, surface masks and the quad-tree of cells themselves.</p>
<p class="NDLNormal">This class should not be interacted with directly by the end application for anything other than attaching dynamic effects, lights, shadowing etc. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>


<a name="class_ni_terrain_sector_1a1205b2987581a4589b998ce18c080147"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont">NiUInt32</span>  SectorID</p>
<p class="NDLRefMemberDetailedDescription">Type to identify a single sector on a terrain </p>

<a name="class_ni_terrain_sector_1ac88944f6616a5b23f1404d4fd5ca4805"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont"><a href="NiTerrainSector__HeightMap.htm">HeightMap</a></span>&gt;  HeightMapPtr</p>
<p class="NDLRefMemberDescription">Smartpointer to the <span class="NDLSystemFont"><a href="NiTerrainSector__HeightMap.htm">HeightMap</a></span> class. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="class_ni_terrain_sector_1af440a472487fc7ecd52510b875268a83"></a>
<p class="NDLRefMemberFunction">static void  GenerateSectorID(<br/><span class="NDLSystemFont">NiInt16</span> sIndexX, <br/><span class="NDLSystemFont">NiInt16</span> sIndexY, <br/><span class="NDLSystemFont"><a href="NiTerrainSector.htm#class_ni_terrain_sector_1a1205b2987581a4589b998ce18c080147">SectorID</a></span>& kSectorID)</p>
<p class="NDLRefMemberDescription">Generate a sectorID from a sector's coordinates. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">sIndexX</span></td>
    <td>The sector's X coordinate </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">sIndexY</span></td>
    <td>The sector's Y coordinate </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kSectorID</span></td>
    <td>the generated sectorID </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a20d8c484638248f8c2090ef355088dcf"></a>
<p class="NDLRefMemberFunction">static void  GenerateSectorIndex(<br/>const <span class="NDLSystemFont"><a href="NiTerrainSector.htm#class_ni_terrain_sector_1a1205b2987581a4589b998ce18c080147">SectorID</a></span>& kSectorID, <br/><span class="NDLSystemFont">NiInt16</span>& sIndexX, <br/><span class="NDLSystemFont">NiInt16</span>& sIndexY)</p>
<p class="NDLRefMemberDescription">Extract the sector's coordinates from a sector ID. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kSectorID</span></td>
    <td>The sectorID to extract the data from </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">sIndexX</span></td>
    <td>The sector's X coordinate </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">sIndexY</span></td>
    <td>The sector's Y coordinate </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_terrain_sector_1ac97ff44b93608d348e25e1c2832f82d7"></a>
<p class="NDLRefMemberFunction">NiTerrainSector(<span class="NDLSystemFont">bool</span> bIsDeformable = false)</p>
<p class="NDLRefMemberDescription">Default constructor. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">bIsDeformable</span></td>
    <td>Defines whether the sector is deformable or not. Thismust be true if the terrain will be modified at runtime. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a59e42d6fdd3f52ec542511fbd2a2c677"></a>
<p class="NDLRefMemberFunction">virtual ~NiTerrainSector()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_terrain_sector_1ac7465850fe293e216cc4b083dc64d4e7"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTerrain.htm">NiTerrain</a></span>*  GetTerrain()</p>
<p class="NDLRefMemberDescription">Gets the Terrain object that this sector belongs to. </p>

<a name="class_ni_terrain_sector_1a4aaabc15ba3f64d577915cec8d4868c5"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="NiTerrain.htm">NiTerrain</a></span>*  GetTerrain() const</p>
<p class="NDLRefMemberDescription">Gets the Terrain object that this sector belongs to. </p>

<a name="class_ni_terrain_sector_1a68944e10bdc2272897c876a0c085d49d"></a>
<p class="NDLRefMemberFunction">void  SetTerrain(<span class="NDLSystemFont"><a href="NiTerrain.htm">NiTerrain</a></span>* pkTerrain)</p>
<p class="NDLRefMemberDescription">Sets the Terrain object that this sector belongs to. </p>

<a name="class_ni_terrain_sector_1aeb1cf3ef0b2d407957688f90dcdf17a2"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTerrainSector.htm#class_ni_terrain_sector_1a1205b2987581a4589b998ce18c080147">SectorID</a></span>  GetSectorID()</p>
<p class="NDLRefMemberDescription">Get the sector ID of this sector within it's parent terrain. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>This sector's ID </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a4f11247c6eec1edaeea4f02c17bc2cc9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  ProcessLOD(<span class="NDLSystemFont"><a href="../NiMain/NiCullingProcess.htm">NiCullingProcess</a></span>& kCuller)</p>
<p class="NDLRefMemberDescription">Adds all visible blocks to the visible set defined in the given culling process. </p>
<p class="NDLRefMemberDetailedDescription">Frustum culling and quadtree based LOD culling are performed in this function, according to the camera provided by the culling process.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kCuller</span></td>
    <td>The culling process to use during culling. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if this sector drew anything. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a807e874704143b66d5d443b2e043cf9d"></a>
<p class="NDLRefMemberFunction">void  ProcessBorders()</p>
<p class="NDLRefMemberDescription">After calculating the LOD, this function should be called to allow appropriate stitching to occur between blocks of different LODs. </p>

<a name="class_ni_terrain_sector_1a71da974f5267fb4fff8ea549fb0be471"></a>
<p class="NDLRefMemberFunction">void  GetVertexAt(<br/>const NiTerrainPositionRandomAccessIterator& kIterator, <br/><span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kVertex, <br/>const <span class="NDLSystemFont"><a href="NiIndex.htm">NiIndex</a></span>& kIndex, <br/><span class="NDLSystemFont">NiUInt32</span> uiLevel = NiTerrainUtils::ms_uiMAX_LOD) const</p>
<p class="NDLRefMemberDescription">Find the world position from vertex data at the given index and detail level. </p>
<p class="NDLRefMemberDetailedDescription">This function is computationally expensive and should be avoided in critical paths.</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">The given index must be in the sector scope, at detail level 0. If no vertex exists at the given index in the requested detail level, an assertion is thrown.</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kIterator</span></td>
    <td>The stream iterator to use </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kVertex</span></td>
    <td>Discovered position, or undefined if no vertex exists at the requested index for this detail level </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kIndex</span></td>
    <td>Sector scope index of the vertex from which to retrieve the world position </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiLevel</span></td>
    <td>Detail level from which to retrieve the vertex </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a7a53a063f0a5af4ed2a49c28005abb8c"></a>
<p class="NDLRefMemberFunction">float  GetHeightAt(<br/>const NiTerrainPositionRandomAccessIterator& kIterator, <br/>const <span class="NDLSystemFont"><a href="NiIndex.htm">NiIndex</a></span>& kIndex, <br/><span class="NDLSystemFont">NiUInt32</span> uiLevel = NiTerrainUtils::ms_uiMAX_LOD) const</p>
<p class="NDLRefMemberDescription">Get the height value of the vertex specified by the given sector scope index, at the specified detail level. </p>
<p class="NDLRefMemberDetailedDescription">If the given index is invalid at the specified detail level, an assertion is thrown and the height is undefined.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kIterator</span></td>
    <td>The stream iterator to use </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kIndex</span></td>
    <td>Sector scope index of the vertex from which to retrieve the world position </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiLevel</span></td>
    <td>Detail level from which to retrieve the vertex </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The height value we are looking for </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1ad119b5c9f3dec12a6b82018b120a3e55"></a>
<p class="NDLRefMemberFunction">void  GetSectorIndex(<br/><span class="NDLSystemFont">NiInt16</span>& sXIndex, <br/><span class="NDLSystemFont">NiInt16</span>& sYIndex) const</p>
<p class="NDLRefMemberDescription">Find the X and Y position of the sector in the terrain list. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">sXIndex</span></td>
    <td>the X position of the sector </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">sYIndex</span></td>
    <td>the Y position of the sector </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a506a40ab11222aeb7ff476e14fca78d4"></a>
<p class="NDLRefMemberFunction">void  SetSectorIndex(<br/><span class="NDLSystemFont">NiInt16</span> sXIndex, <br/><span class="NDLSystemFont">NiInt16</span> sYIndex)</p>
<p class="NDLRefMemberDescription">Set the X and Y position of the sector in the terrain list. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">sXIndex</span></td>
    <td>the X position to set the sector at </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">sYIndex</span></td>
    <td>the Y position to set the sector at </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a188d868d25b519554dfcb340991ea506"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiTerrainSector</span>*  GetAdjacentSector(<span class="NDLSystemFont">NiUInt32</span> uiBorder) const</p>
<p class="NDLRefMemberDescription">Get the sector that borders this sector according to the border description passed in. </p>
<p class="NDLRefMemberDetailedDescription">The border descriptions are identical to those used for NiTerrainDataLeafs.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiBorder</span></td>
    <td>the border we want the adjacent sector for </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The adjacent terrain sector </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1af3b86bc3e04d6d234ea1fff5e8b0f1c5"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiBool</span>  GetUsingShortIndexBuffer()</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>true if this sector is currently using a 16 bit index buffer, false if using 32 bit. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a4b961f847f7d1a0e3f35acd2fda3b443"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiBool</span>  GetUsingShortIndexBuffer() const</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>true if this sector is currently using a 16 bit index buffer, false if using 32 bit (const version). </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a1b0a90d83d943d6623a887af540dcb66"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  HasShapeChangedLastUpdate()</p>
<p class="NDLRefMemberDescription">This function will return true if during the last update a deformation or translation/scaling/rotation of the terrain occurred. </p>
<p class="NDLRefMemberDetailedDescription">This function is useful in determining when to update any water objects associated with this terrain.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>true if the terrain has changed </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a926c52959e789999de7db4bbebabd355"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  HasPagingData() const</p>
<p class="NDLRefMemberDescription">Function that returns true if the sector has a paging data and therefore if the sector is using paging. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>true if the sector is paging </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a3bf43ffce4b93d4df32aef75d1b0a5af"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetSurfaceMask(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiSurfaceIndex, <br/><span class="NDLSystemFont"><a href="NiTerrainDeformationBuffer.htm">SurfaceMaskBuffer</a></span>* pkBuffer, <br/><span class="NDLSystemFont"><a href="NiTerrainDeformationBuffer.htm">SurfaceMaskBuffer</a></span>* pkMaskSumBuffer, <br/><span class="NDLSystemFont"><a href="NiTerrainDataSnapshot.htm">NiTerrainDataSnapshot</a></span>* pkSnapshot = NULL)</p>
<p class="NDLRefMemberDescription">Populate the surface mask buffer with the relevant mask data for the given surface index. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiSurfaceIndex</span></td>
    <td>the index of the surface to fetch the mask for </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkBuffer</span></td>
    <td>the buffer to populate with the information </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkMaskSumBuffer</span></td>
    <td>the buffer to populate with the sample sum information </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkSnapshot</span></td>
    <td>The cells current data buffers </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1aa18c03a63ddf196e4da207d6657f2315"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  SetSurfaceMask(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiSurfaceIndex, <br/><span class="NDLSystemFont"><a href="NiTerrainDeformationBuffer.htm">SurfaceMaskBuffer</a></span>* pkMaskBuffer, <br/><span class="NDLSystemFont"><a href="NiTerrainDeformationBuffer.htm">SurfaceMaskBuffer</a></span>* pkMaskSumBuffer)</p>
<p class="NDLRefMemberDescription">Update the surface mask of a particular surface on the terrain. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiSurfaceIndex</span></td>
    <td>the index of the surface to fetch the mask for </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkMaskBuffer</span></td>
    <td>the buffer holding the information to populate the individual channel from </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkMaskSumBuffer</span></td>
    <td>the buffer holding the information to populate the sample sum from </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>false if we are not ready for painting </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a8b4bd2c1eca14356f8f1426a632ed8f7"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  AddSurface(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiSurfaceIndex, <br/><span class="NDLSystemFont"><a href="../NiMain/NiRect.htm">NiRect</a></span>&lt;<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span>&gt; kAffectedSectorRange, <br/><span class="NDLSystemFont"><a href="../NiMain/NiRect.htm">NiRect</a></span>&lt;<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span>&gt; kMaskRegion)</p>
<p class="NDLRefMemberDescription">Add the specified surface to the cells in the given region. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiSurfaceIndex</span></td>
    <td>the index of the surface to fetch the mask for </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kAffectedSectorRange</span></td>
    <td>sector scope region affected by the given surface </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kMaskRegion</span></td>
    <td>The mask region affected by the given surface </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a5b9122e1f494aedad6cb0ccc20b9085c"></a>
<p class="NDLRefMemberFunction">void  SetShapeChangedLastUpdate(<span class="NDLSystemFont">bool</span> bChanged)</p>
<p class="NDLRefMemberDescription">Flag this sector as having changed in the last update. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">bChanged</span></td>
    <td>whether the sector changed or not </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1aa7d6570a85d37b1ee32ea275b0a79f19"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetSurfaceOpacity(<br/>const <span class="NDLSystemFont"><a href="NiSurface.htm">NiSurface</a></span>* pkSurface, <br/>const <span class="NDLSystemFont"><a href="../NiMain/NiPoint3.htm">NiPoint3</a></span>& kWorldLocation, <br/><span class="NDLSystemFont">NiUInt8</span>& ucValue, <br/><span class="NDLSystemFont">NiUInt32</span> uiDetailLevel = NiTerrainUtils::ms_uiMAX_LOD, <br/><span class="NDLSystemFont">bool</span> bSearchLowerDetail = true) const</p>
<p class="NDLRefMemberDescription">Retrieve the opacity (from 0 to 255) of the given surface on this sector at the local position derived from the specified world location. </p>
<p class="NDLRefMemberDetailedDescription">Only the X and Y components of the local position are taken into account. If no valid surface mask is found at the given location for the specified detail level and bIncludeLowerDetail is set to true, the function will search up the tree for the first valid mask to use.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkSurface</span></td>
    <td>Surface to find surface mask for. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kWorldLocation</span></td>
    <td>World location, which will be converted to terrain space for checking X and Y against the terrain. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">ucValue</span></td>
    <td>Opacity (0 to 255) of the found mask pixel, or 0 if no valid mask was found. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiDetailLevel</span></td>
    <td>Detail level to check for a mask. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bSearchLowerDetail</span></td>
    <td>If true, search up the quadtree for a valid mask if none is found at the specified level.</td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if a valid mask pixel was found. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a9817d848d72f9fa4113f748a6add978d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  PrepareForPainting(<br/>const <span class="NDLSystemFont"><a href="NiSurface.htm">NiSurface</a></span>* pkSurface, <br/><span class="NDLSystemFont">NiUInt32</span>* puiErrorCode = 0)</p>
<p class="NDLRefMemberDescription">Make sure that the sector is ready to be painted upon. </p>
<p class="NDLRefMemberDetailedDescription">This may involve creating a new renderable low detail texture.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkSurface</span></td>
    <td>pointer to the surface to be used for painting </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">puiErrorCode</span></td>
    <td>Error code giving information on failure </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a6b5d219b9a37fb7dcbabbe5ca05b6e9c"></a>
<p class="NDLRefMemberFunction">void  NotifySurfaceChanged(<span class="NDLSystemFont">NiUInt32</span> uiSurfaceIndex)</p>
<p class="NDLRefMemberDescription">This will cause all blocks using the given surface to update any shader maps and constants derived from the surface. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiSurfaceIndex</span></td>
    <td>the surface index for the changed surface </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a3b10402ccb2cb2f4d0919163f0e2ed0a"></a>
<p class="NDLRefMemberFunction">void  RemoveSurface(<span class="NDLSystemFont">NiUInt32</span> uiSurfaceIndex)</p>
<p class="NDLRefMemberDescription">Remove the given surface from this terrain, also removing associated masks. </p>
<p class="NDLRefMemberDetailedDescription">All surfaces below the given surface will be moved up to fill the gap.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiSurfaceIndex</span></td>
    <td>the surface index to remove </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a2a78da8ca89996578312e8f5382081c3"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiInt32</span>  AddSurface(const <span class="NDLSystemFont"><a href="NiSurface.htm">NiSurface</a></span>* pkSurface)</p>
<p class="NDLRefMemberDescription">Adds a surface to the parent terrain's surface index. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkSurface</span></td>
    <td>the surface to add. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>the surface index we added the surface at </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1aa54840481ad32aab69641f9bf43daa74"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="NiSurface.htm">NiSurface</a></span>*  GetSurfaceAt(<span class="NDLSystemFont">NiUInt32</span> uiIndex)</p>
<p class="NDLRefMemberDescription">Get the surface that corresponds to the supplied index. </p>
<p class="NDLRefMemberDetailedDescription">This function queries the parent terrain for the relevant information.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiIndex</span></td>
    <td>the index of the surface to retrieve </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>pointer to the surface found </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1aadf2fac58f6b71670ba6b47ad8c09fb1"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiInt32</span>  GetSurfaceIndex(const <span class="NDLSystemFont"><a href="NiSurface.htm">NiSurface</a></span>* pkSurface)</p>
<p class="NDLRefMemberDescription">Get the index that is used to represent the supplied surface on this sector. </p>
<p class="NDLRefMemberDetailedDescription">This function queries the parent terrain for the relevant information.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkSurface</span></td>
    <td>the surface to fetch the index of </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>the Index of the surface found </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a5666c7b635e93c07d5afb3166fe3cde8"></a>
<p class="NDLRefMemberFunction">void  RemoveAllSurfaces()</p>
<p class="NDLRefMemberDescription">Removes all surfaces used by this sector. </p>

<a name="class_ni_terrain_sector_1ad1f99528fd033f6863617ad08664d84d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTerrainSector__HeightMap.htm">HeightMap</a></span>*  GetHeightMap()</p>
<p class="NDLRefMemberDescription">Get the height map that was used when generating this sector. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>the height map for this sector </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a5d44d089f88aac6ea6d49ce00f1603ca"></a>
<p class="NDLRefMemberFunction">void  SetHeightMap(<span class="NDLSystemFont"><a href="NiTerrainSector__HeightMap.htm">HeightMap</a></span>* pkHeightMap)</p>
<p class="NDLRefMemberDescription">Set the height map to use when generating this sector. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkHeightMap</span></td>
    <td>the new heightmap </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a064bd5413032d192c723e3a7c947a55c"></a>
<p class="NDLRefMemberFunction">void  NotifyHeightMapRegionChanged(<span class="NDLSystemFont"><a href="../NiMain/NiRect.htm">NiRect</a></span>&lt;<span class="NDLSystemFont">NiInt32</span>&gt; kRegion)</p>
<p class="NDLRefMemberDescription">Notify the sector that it's height map has changed over a particular region. </p>
<p class="NDLRefMemberDetailedDescription">This function will not return until the geometry in the region has been rebuilt.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kRegion</span></td>
    <td>A rectangle using pixel coordinates of the pixels that have changed </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a1217ec13d4796c8c8815f39e66be86fc"></a>
<p class="NDLRefMemberFunction">void  GetHeightMap(<br/><span class="NDLSystemFont"><a href="NiTerrainDeformationBuffer.htm">HeightMapBuffer</a></span>* pkBuffer, <br/><span class="NDLSystemFont"><a href="NiTerrainDataSnapshot.htm">NiTerrainDataSnapshot</a></span>* pkSnapshot = NULL)</p>
<p class="NDLRefMemberDescription">Copy the data from the heightmap out into the relevant region of the buffer. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkBuffer</span></td>
    <td>the Sector's heightmap </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkSnapshot</span></td>
    <td>the sector's cells current data buffers </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1ac856fa8826d53670fc6ef334908b8ae1"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiMain/NiRect.htm">NiRect</a></span>&lt;<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span>&gt;  SetHeightMap(<span class="NDLSystemFont"><a href="NiTerrainDeformationBuffer.htm">HeightMapBuffer</a></span>* pkBuffer)</p>
<p class="NDLRefMemberDescription">Copy the data from the heightmap buffer into the relevant region of the heightmap and notify the streaming of the update. </p>
<p class="NDLRefMemberDetailedDescription">Returns the vert region of this sector that changed.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkBuffer</span></td>
    <td>the heightmap to copy data from </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>the vertex region on this sector that changed </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a93a244e55252ee474d04d9d5bb9cf43d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  CreateBlankGeometry()</p>
<p class="NDLRefMemberDescription">An entry point into the loading system which creates a terrain with a continuous 0.0 height. </p>
<p class="NDLRefMemberDetailedDescription">The size of the created terrain is defined from the current block size and LOD level settings defined in the sector data.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>true if successful </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a586c46945b5b078df41c437c928d2b13"></a>
<p class="NDLRefMemberFunction">void  SetLowDetailTextureSize(<span class="NDLSystemFont">NiUInt32</span> uiSize)</p>
<p class="NDLRefMemberDescription">Set the low detail texture size. </p>
<p class="NDLRefMemberDetailedDescription">The low detail texture will be recreated with this new size</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">Texture size must be a power of 2</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiSize</span></td>
    <td>the low detail texture's new size </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a555bef25ae5c580db63b592fb77d2dda"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  GetLowDetailTextureSize() const</p>
<p class="NDLRefMemberDescription">Get the low detail texture size. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>the low detail texture's size </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1abc3d255398e493c15f0e136049d26ba5"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetMaxLoadedCellIndex(<span class="NDLSystemFont">NiUInt32</span>& uiIndex) const</p>
<p class="NDLRefMemberDescription">Returns the highest valid cell index in the cell array (m_kCellArray). </p>
<p class="NDLRefMemberDetailedDescription">This will take into account the highest loaded LOD. If no loaded cells exist, this function returns -1.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiIndex</span></td>
    <td>The heighest valid cell index </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if successful </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a064568a8833581edce1ef2b0111aae96"></a>
<p class="NDLRefMemberFunction">void  SetIsDeformable(<span class="NDLSystemFont">bool</span> bIsDeformable)</p>
<p class="NDLRefMemberDescription">Define whether or not this sector can be deformed. </p>
<p class="NDLRefMemberDetailedDescription">Will initialize the dynamic stream cache if necessary.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">bIsDeformable</span></td>
    <td>whether the sector should be deformable or not </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1abdf6500f5dc782f2f979f047c5601467"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTerrainCell.htm">NiTerrainCell</a></span>*  GetCellContaining(<br/>const <span class="NDLSystemFont"><a href="NiIndex.htm">NiIndex</a></span>& kIndex, <br/><span class="NDLSystemFont">NiUInt32</span> uiDetailLevel) const</p>
<p class="NDLRefMemberDescription">Find the cell that contains the given index at the specified level. </p>
<p class="NDLRefMemberDetailedDescription">In border cases where an index may be found in multiple leaves, the cell with the smallest region ID takes precedence.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kIndex</span></td>
    <td>the Index that is contained by the cell </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiDetailLevel</span></td>
    <td>level the cell belongs to </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The cell we were looking for </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a6f932437154019b1de384456520a6f1a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTerrainCell.htm">NiTerrainCell</a></span>*  GetCell(<span class="NDLSystemFont">NiUInt32</span> uiCellID) const</p>
<p class="NDLRefMemberDescription">Retrieve a non-const pointer to a cell corresponding to the given block ID (LOD Space indexing - Siblings are not stored sequentially). </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiCellID</span></td>
    <td>the Id for the cell we are looking for </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>the cell found </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a27c332c0d67557862563d2b685174b18"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTerrainCell.htm">NiTerrainCell</a></span>*  GetCellByRegion(<span class="NDLSystemFont">NiUInt32</span> uiCellID) const</p>
<p class="NDLRefMemberDescription">Retrieve a non-const pointer to a cell corresponding to the given region ID. </p>
<p class="NDLRefMemberDetailedDescription">(QuadTree Space indexing ie. First child = uiLeafID* 4 + 1)</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiCellID</span></td>
    <td>the Id for the cell we are looking for </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>the cell found </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1adfa3525e343d6b30230216fc11cdf923"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  GetCellOffset(<span class="NDLSystemFont">NiUInt32</span> uiDetailLevel) const</p>
<p class="NDLRefMemberDescription">Returns the offset in the internal cell array for a leaf at the given detail level. </p>
<p class="NDLRefMemberDetailedDescription">This value is used to generate the cell region ID.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiDetailLevel</span></td>
    <td>The level we want the offset for </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>cell id offset </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a87bde2c03321fb30fe336e177a712ecf"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  GetNumCells() const</p>
<p class="NDLRefMemberDescription">Returns the maximium number of cells that this sector manages when all levels of detail are loaded. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>the number of cells </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a4cc76b3429f25c7f5ad6627b9323a222"></a>
<p class="NDLRefMemberFunction">const NiTerrainSectorData*  GetSectorData() const</p>
<p class="NDLRefMemberDescription">Retrieve the sector settings object. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>the terrain sector data </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1acb937b0b0dba92e9ffaae1feabaca36f"></a>
<p class="NDLRefMemberFunction">NiTerrainSectorData*  GetSectorData()</p>
<p class="NDLRefMemberDescription">Retrieve the sector settings object. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>the terrain sector data </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1ac74086422252b77d968ba17328aa2cb0"></a>
<p class="NDLRefMemberFunction">void  SetMinMaxVisibleLOD(<br/><span class="NDLSystemFont">NiUInt32</span> uiMinLOD, <br/><span class="NDLSystemFont">NiUInt32</span> uiMaxLOD)</p>
<p class="NDLRefMemberDescription">Define that the LOD of the cells added to the visible set must lie between the given min and max LOD. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiMinLOD</span></td>
    <td>the minimum visible LOD </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiMaxLOD</span></td>
    <td>the maximum visible LOD </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1aa8a47fcf4ace4f7d80e782d534aff5e0"></a>
<p class="NDLRefMemberFunction">void  SetFormat(<br/><span class="NDLSystemFont">NiUInt32</span> uiBlockSize, <br/><span class="NDLSystemFont">NiUInt32</span> uiNumLOD)</p>
<p class="NDLRefMemberDescription">Change the dimensions of each block, and dictate how many levels of LOD exist. </p>
<p class="NDLRefMemberDetailedDescription">An attempt is made to preserve data, but some detail may be lost.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiBlockSize</span></td>
    <td>the new size for each block </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiNumLOD</span></td>
    <td>the number of level of details </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a97d71130cb6f1f775b766abc154f6822"></a>
<p class="NDLRefMemberFunction">void  DestroySupportingData()</p>
<p class="NDLRefMemberDescription">Unload all supporting data that is not tied to a specific level of detail. </p>
<p class="NDLRefMemberDetailedDescription">This function must be called before changing any of the terrain's basic settings (ie. blocksize). </p>

<a name="class_ni_terrain_sector_1a1a96d6c761f2dee269ffffcf541d9df9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  CollideWithRay2D(<br/><span class="NDLSystemFont"><a href="NiRay.htm">NiRay</a></span>& kRay, <br/><span class="NDLSystemFont">NiUInt32</span> uiDetailLOD) const</p>
<p class="NDLRefMemberDescription">Attempt to collide a Terrain space 2D ray with the sector, at the given detail level. </p>
<p class="NDLRefMemberDetailedDescription">Any collision data is stored in the ray itself.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kRay</span></td>
    <td>the ray to use for the collision. Resulting data will be set in this object </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiDetailLOD</span></td>
    <td>the level of detail to collide with </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if a collision occurred at the given detail level. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a40cca5a2e5418bb665591be099aaabe0"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  CollideWithRay(<br/><span class="NDLSystemFont"><a href="NiRay.htm">NiRay</a></span>& kRay, <br/><span class="NDLSystemFont">NiUInt32</span> uiDetailLOD = 0) const</p>
<p class="NDLRefMemberDescription">Attempt to collide a Terrain space ray with the sector, at the given detail level. </p>
<p class="NDLRefMemberDetailedDescription">Any collision data is stored in the ray itself.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kRay</span></td>
    <td>the ray to use for the collision. Resulting data will be set in this object </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiDetailLOD</span></td>
    <td>the level of detail to collide with </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if a collision occurred at the given detail level. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a3e01bd98b28b1216685b162152a0f24d"></a>
<p class="NDLRefMemberFunction">void  QueueCellForLowDetailUpdate(<span class="NDLSystemFont"><a href="NiTerrainCell.htm">NiTerrainCell</a></span>* pkCell)</p>
<p class="NDLRefMemberDescription">Add a cell to the list of cells to be rendered during the next low detail texture render. </p>
<p class="NDLRefMemberDetailedDescription">Note this is a queue, so a number of renders may have to occur before this cell is rendered.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkCell</span></td>
    <td>Pointer to the cell to queue for update </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1ab3c006dd92e58773a5236e6b1ce89a3e"></a>
<p class="NDLRefMemberFunction">void  QueueAllCellsForLowDetailUpdate()</p>
<p class="NDLRefMemberDescription">Add all cells in the sector to the list of cells to be rendered during the next low detail texture render. </p>

<a name="class_ni_terrain_sector_1a622dd8e0a57ff22b15841dfecc78a541"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  AppendRenderClicks(<br/><span class="NDLSystemFont"><a href="../NiMain/NiDefaultClickRenderStep.htm">NiDefaultClickRenderStep</a></span>* pkStep, <br/><span class="NDLSystemFont">NiInt32</span>& iMaxNumCells, <br/><span class="NDLSystemFont">NiUInt32</span>* puiErrorCode)</p>
<p class="NDLRefMemberDescription">Appends the latest render clicks that the terrain requires to be executed to the given render click step. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkStep</span></td>
    <td>the step to add the render click to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">iMaxNumCells</span></td>
    <td>the maximum number of cell updated </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">puiErrorCode</span></td>
    <td>Error code returned upon failure </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if successful </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1ad640b5b01d4ae3b219af03f64a8803d6"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiMain/NiNode.htm">NiNode</a></span>*  GetLowDetailScene()</p>
<p class="NDLRefMemberDescription">Get the low detail scene used by this sector to render it's low detail textures. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>NULL if no painting data has been created for this sector </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1ad229d82e184895f9d79ce49f05a5fb6c"></a>
<p class="NDLRefMemberFunction">void  CreatePagingData()</p>
<p class="NDLRefMemberDescription">This function should only be called by <span class="NDLSystemFont"><a href="NiTerrain.htm#class_ni_terrain_1af19120501e89d1a4b4b52cd2a7e4e874">NiTerrain::PageSector</a></span> since this data should only be present on the sector if we are paging. </p>
<p class="NDLRefMemberDetailedDescription">It will create the paging data for the sector after a new sector was created. </p>

<a name="class_ni_terrain_sector_1aea454a309f551aa7125ea87ad5846ede"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiMain/NiTexture.htm">NiTexture</a></span>*  GetTexture(<span class="NDLSystemFont"><a href="NiTerrainResourceManager__TextureType.htm#struct_ni_terrain_resource_manager_1_1_texture_type_1af7c56f974327b769cf7a20ad1bf6edba">NiTerrainCell::TextureType::Value</a></span> eTexType)</p>
<p class="NDLRefMemberDescription">Fetches the relevant texture from the root cell. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">eTexType</span></td>
    <td>the texture type we want to retrieve </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>the Texture that was found </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_sector_1a7824baf8712c6fdce60c1fa77e3e096b"></a>
<p class="NDLRefMemberFunction">void  SetLeafMaskUsage(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiCellID, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiChannel, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiUsage)</p>
<p class="NDLRefMemberDescription">Set the mask usage information for a specific channel on a cell in the painting data. </p>

<a name="class_ni_terrain_sector_1a9681a4e7f8d9222fc6c7b8e1386257ec"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetLeafMaskUsage(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiCellID, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiChannel)</p>
<p class="NDLRefMemberDescription">Get the mask usage information for a specific channel on a cell in the painting data. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

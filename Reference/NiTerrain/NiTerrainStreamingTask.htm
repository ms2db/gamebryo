<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiTerrainStreamingTask</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiTerrainStreamingTask</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiRefObject.htm">NiRefObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiTerrainStreamingTask.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_terrain_streaming_task.gif" alt="Inheritance graph for NiTerrainStreamingTask"/>
  <p class="FigureCaption">Inheritance graph for NiTerrainStreamingTask</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class contains all the functionality required to load, unload or rebuild a terrain. </p>
<p class="NDLNormal">It consists of a set of jobs, each in the form of a function. Most jobs are not parallelizable, in that it can only be split up into a single work unit. The building task can be split up into multiple work units, which can run over multiple threads. When a job is split, it will not be removed from the relevant queue until all work units have been allocated threads. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_terrain_streaming_task_1a71118c8b76d15d73e91c7fc0bdec4dae"></a>
<p class="NDLRefMemberFunction">NiTerrainStreamingTask()</p>
<p class="NDLRefMemberDescription">Constructor. </p>

<a name="class_ni_terrain_streaming_task_1a20372efd833637b64c56864f0baf8d5d"></a>
<p class="NDLRefMemberFunction">~NiTerrainStreamingTask()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_terrain_streaming_task_1ab498ae2c5fb67f68f4f5972b36bafe40"></a>
<p class="NDLRefMemberFunction">void  ToString(<br/>const char* pcPrefix, <br/><span class="NDLSystemFont"><a href="../NiMain/NiString.htm">NiString</a></span>& kString)</p>
<p class="NDLRefMemberDescription">Helper function to generate strings for debugging output. </p>

<a name="class_ni_terrain_streaming_task_1a9ca7ef6b248214477dd874b173ac3a92"></a>
<p class="NDLRefMemberFunction">void  Initialize()</p>
<p class="NDLRefMemberDescription">Call this function after creating a task and configuring it before submitting it to a queue for processing. </p>

<a name="class_ni_terrain_streaming_task_1a6c22be596ee84eb59ad2974749b40c66"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  Cancel()</p>
<p class="NDLRefMemberDescription">Attempt to cancel this task. Returns true if successfull. </p>

<a name="class_ni_terrain_streaming_task_1aed98157e9d5797a514650798ac37a9b6"></a>
<p class="NDLRefMemberFunction">void  Close()</p>
<p class="NDLRefMemberDescription">Close this task. This will signal any threads waiting on the completion of this task. </p>

<a name="class_ni_terrain_streaming_task_1a9ee3d111259246e5d2fa2e911654c241"></a>
<p class="NDLRefMemberFunction">void  WaitForClose()</p>
<p class="NDLRefMemberDescription">Pause the current thread until another thread closes this task. </p>

<a name="class_ni_terrain_streaming_task_1a5fe415241730c470adcb34274f8077b4"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsClosed()</p>
<p class="NDLRefMemberDescription">Query if the task has been closed. </p>

<a name="class_ni_terrain_streaming_task_1a99ad53351b29ba534ba8e8c0222f4d90"></a>
<p class="NDLRefMemberFunction">void  CalculateBuildHeightsRegion(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiStreamWidth)</p>
<p class="NDLRefMemberDescription">Calculate the region to build heights over. </p>

<a name="class_ni_terrain_streaming_task_1a28311c4d32af95c5667125ff621abc4c"></a>
<p class="NDLRefMemberFunction">void  CalculateBuildLightingRegion(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiStreamWidth)</p>
<p class="NDLRefMemberDescription">Calculate the region to build lighting over. </p>
<a name="job_parallelization_(work_units)"></a>
<p class="NDLRefHead1">Job Parallelization (work units)</p>


<a name="class_ni_terrain_streaming_task_1aae58b21d8e2706f4252d71fe49bc7df5"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  GetCurrentTotalWorkUnits() const</p>
<p class="NDLRefMemberDescription">Get the total number of work units to be executed on this task in its current state. </p>

<a name="class_ni_terrain_streaming_task_1a4c3228f520183650b236f9dc5337f50e"></a>
<p class="NDLRefMemberFunction">void  SetMaxWorkUnits(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiNumWorkUnits)</p>
<p class="NDLRefMemberDescription">Set the maximum number of work units this task can generate per state. </p>

<a name="class_ni_terrain_streaming_task_1a47af8b3595cce8c05637acdebee76658"></a>
<p class="NDLRefMemberFunction">void  StartWorkUnit()</p>
<p class="NDLRefMemberDescription">Start a single work unit. </p>

<a name="class_ni_terrain_streaming_task_1a830a89ed92607abdd22cc547547702f0"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  CompleteWorkUnit()</p>
<p class="NDLRefMemberDescription">Complete a work unit. </p>
<a name="task_processing_pipeline_stages"></a>
<p class="NDLRefHead1">Task processing pipeline stages</p>


<a name="class_ni_terrain_streaming_task_1a1fd78f6a3febafba86dbcc8270ab15a0"></a>
<p class="NDLRefMemberFunction">void  Preload()</p>
<p class="NDLRefMemberDescription">Preload data from disk for the execution of this task. </p>

<a name="class_ni_terrain_streaming_task_1ad07ceec98200e479ea7cb6b181a99f3a"></a>
<p class="NDLRefMemberFunction">void  LoadBuffers()</p>
<p class="NDLRefMemberDescription">Decode the data from disk into usable buffers. </p>

<a name="class_ni_terrain_streaming_task_1ad0bcb7f07fc2790683d2ac84bc536cb8"></a>
<p class="NDLRefMemberFunction">void  BuildBlendMasks()</p>
<p class="NDLRefMemberDescription">Build the blend mask textures for the sector. </p>

<a name="class_ni_terrain_streaming_task_1afc532642f5dd5e439edfd0e432e13d9b"></a>
<p class="NDLRefMemberFunction">void  BuildHeights(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiWorkUnit)</p>
<p class="NDLRefMemberDescription">Build the heightmap for this sector. </p>

<a name="class_ni_terrain_streaming_task_1a6bd886e00cfc5e458bc764794cdfbd75"></a>
<p class="NDLRefMemberFunction">void  BuildLighting(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiWorkUnit)</p>
<p class="NDLRefMemberDescription">Build the lighting for this sector. </p>

<a name="class_ni_terrain_streaming_task_1ab4f1a298ead7c0421119f179b84d806f"></a>
<p class="NDLRefMemberFunction">void  BuildLowDetailNormalMap()</p>
<p class="NDLRefMemberDescription">Build the low detail normal map for this sector. </p>

<a name="class_ni_terrain_streaming_task_1a32c983c969ab49e63b7feaedb243b662"></a>
<p class="NDLRefMemberFunction">void  AcquireLocks()</p>
<p class="NDLRefMemberDescription">Acquire the locks for the sector's data. </p>

<a name="class_ni_terrain_streaming_task_1a5c7d84098989c7ac8376303e087a5cc7"></a>
<p class="NDLRefMemberFunction">void  PopulateStreams()</p>
<p class="NDLRefMemberDescription">Populate the sector's data streams with the loaded buffers. </p>

<a name="class_ni_terrain_streaming_task_1adf9737e021856d314271d839548b208b"></a>
<p class="NDLRefMemberFunction">void  ReleaseLocks()</p>
<p class="NDLRefMemberDescription">Release the locks on the sectors's data. </p>

<a name="class_ni_terrain_streaming_task_1a5b5a767831b7e551365a24f0acb27b31"></a>
<p class="NDLRefMemberFunction">void  UnloadStreams()</p>
<p class="NDLRefMemberDescription">Unload the data from the streams in the sector. </p>

<a name="class_ni_terrain_streaming_task_1ab37649d644eefa618c08e46696bb3444"></a>
<p class="NDLRefMemberFunction">void  RemoveFromTerrain()</p>
<p class="NDLRefMemberDescription">Remove the sector from the terrain. </p>

<a name="class_ni_terrain_streaming_task_1ae50711254d0903e2ca156b9b356f121d"></a>
<p class="NDLRefMemberFunction">void  CompleteTask(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiErrorCode)</p>
<p class="NDLRefMemberDescription">Flag the task as completed with a certain error code. </p>
<a name="task_configuration"></a>
<p class="NDLRefHead1">Task configuration</p>


<a name="class_ni_terrain_streaming_task_1a46fbc0c8b44e0428ec4eaef0ba2b9991"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTerrain.htm">NiTerrain</a></span>*  m_pkTerrain</p>
<p class="NDLRefMemberDescription">The terrain being operated upon. </p>

<a name="class_ni_terrain_streaming_task_1a7d738a50b5d6aac8b23fd19f4f98028c"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTerrainSector.htm">NiTerrainSector</a></span>*  m_pkSector</p>
<p class="NDLRefMemberDescription">The sector being operated upon. </p>

<a name="class_ni_terrain_streaming_task_1a14aba24d466f3c45fb4315a0e20e0960"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span>  m_iTargetLOD</p>
<p class="NDLRefMemberDescription">The target LOD for the task. </p>

<a name="class_ni_terrain_streaming_task_1af047791888d6cec2323df2ccc9780050"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span>  m_iOriginalLOD</p>
<p class="NDLRefMemberDescription">The original LOD of the sector before the task began execution. </p>

<a name="class_ni_terrain_streaming_task_1a71730e1a1038e61de6285bf575e5ac39"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiMain/NiRect.htm">NiRect</a></span>&lt;<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span>&gt;  m_kBuildRegion</p>
<p class="NDLRefMemberDescription">The build region of the task. </p>

<a name="class_ni_terrain_streaming_task_1a5eac0c4037c7eb136466bb6d718b0bb6"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  m_bRebuildFromHeightmap</p>
<p class="NDLRefMemberDescription">A flag to signal to rebuild the data on the terrain instead of loading it. </p>

<a name="class_ni_terrain_streaming_task_1a1e25f93660fee90f7d905c419dc68648"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  m_bCreateBlankHeightData</p>
<p class="NDLRefMemberDescription">A flag to signal to generate blank geometry data. </p>

<a name="class_ni_terrain_streaming_task_1a3a8cdf15a688358cb043ae1f7d354931"></a>
<p class="NDLRefMemberFunction">void  SetStatus(<span class="NDLSystemFont"><a href="NiTerrainStreamingTask__Status.htm#struct_ni_terrain_streaming_task_1_1_status_1a8e42e6c9b361f7ce7b162ae2bfd6451e">Status::VALUE</a></span> kStatus)</p>
<p class="NDLRefMemberDescription">Set the status of the task. </p>

<a name="class_ni_terrain_streaming_task_1a1bb659a96fd1d73f56c7ce3767785d04"></a>
<p class="NDLRefMemberFunction">void  SetSector(<span class="NDLSystemFont"><a href="NiTerrainSector.htm">NiTerrainSector</a></span>* pkSector)</p>
<p class="NDLRefMemberDescription">Set the sector to operate upon. </p>

<a name="class_ni_terrain_streaming_task_1a5aa4600067fde6e0a3ccfb7ffa3630b6"></a>
<p class="NDLRefMemberFunction">void  SetTargetLOD(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span> iTargetLOD)</p>
<p class="NDLRefMemberDescription">Set the level of detail to target in this task. </p>

<a name="class_ni_terrain_streaming_task_1a99d4389552d17df1ee169e2710a1597a"></a>
<p class="NDLRefMemberFunction">void  SetBuildRegion(<span class="NDLSystemFont"><a href="../NiMain/NiRect.htm">NiRect</a></span>&lt;<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span>&gt; kRegion)</p>
<p class="NDLRefMemberDescription">Set the region over which to build the data of a sector. </p>

<a name="class_ni_terrain_streaming_task_1a677d7aece44c65497b3e3ccea78145c1"></a>
<p class="NDLRefMemberFunction">void  SetWaiting(<span class="NDLSystemFont">bool</span> bWaiting)</p>
<p class="NDLRefMemberDescription">Set whether or not this task is currently waiting on a queue. </p>

<a name="class_ni_terrain_streaming_task_1a9c5763fd790bd93d929c1c551387d90b"></a>
<p class="NDLRefMemberFunction">void  SetCreateBlankHeightData(<span class="NDLSystemFont">bool</span> bCreateBlankHeightData)</p>
<p class="NDLRefMemberDescription">Set whether or not to use blank height data when loading. </p>

<a name="class_ni_terrain_streaming_task_1a4629fc61296ae0ac5b9944ca276c440a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTerrainStreamingTask__Status.htm#struct_ni_terrain_streaming_task_1_1_status_1a8e42e6c9b361f7ce7b162ae2bfd6451e">Status::VALUE</a></span>  GetStatus() const</p>
<p class="NDLRefMemberDescription">Query the task for it's status. </p>

<a name="class_ni_terrain_streaming_task_1a1edd5d98877ff22b3f88eac86eccd95a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTerrainStreamingTask__TaskType.htm#struct_ni_terrain_streaming_task_1_1_task_type_1a1170d18ae8613bcb169b6ff943965d26">TaskType::VALUE</a></span>  GetTaskType() const</p>
<p class="NDLRefMemberDescription">Query the task for it's type. </p>

<a name="class_ni_terrain_streaming_task_1ac6c906769b52fab7b7c67c66440b77a1"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTerrainSector.htm">NiTerrainSector</a></span>*  GetSector() const</p>
<p class="NDLRefMemberDescription">Query the task for the sector that it is operating upon. </p>

<a name="class_ni_terrain_streaming_task_1a9b583f83827bf27851c11f9c6f6c8a88"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTerrain.htm">NiTerrain</a></span>*  GetTerrain() const</p>
<p class="NDLRefMemberDescription">Query the task for the terrain that it is operating upon. </p>

<a name="class_ni_terrain_streaming_task_1af37007d09c6893e8e8374934125333eb"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiInt32</span>  GetTargetLOD() const</p>
<p class="NDLRefMemberDescription">Query the task for the level of detail is targeting. </p>

<a name="class_ni_terrain_streaming_task_1af39626703b41ec573b2ba906cf8f7612"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  GetErrorCode() const</p>
<p class="NDLRefMemberDescription">Query the task for its error code. </p>

<a name="class_ni_terrain_streaming_task_1ac8155638120f7f53945a35426601973e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetWaiting() const</p>
<p class="NDLRefMemberDescription">Query the task for its waiting state (false if it is currently executing). </p>

<a name="class_ni_terrain_streaming_task_1a52c1514efbac89e25c773cefa53a9744"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetComplete() const</p>
<p class="NDLRefMemberDescription">Query the state of the completion of the task. </p>

<a name="class_ni_terrain_streaming_task_1a17a079c5fe12fdaf297b2b54b46aa250"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetCreateBlankHeightData() const</p>
<p class="NDLRefMemberDescription">Query if the task will be creating blank height data. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiTerrainFile</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiTerrainFile</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiRefObject.htm">NiRefObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiTerrainFile.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_terrain_file.gif" alt="Inheritance graph for NiTerrainFile"/>
  <p class="FigureCaption">Inheritance graph for NiTerrainFile</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">The class is used to iterate over and write terrain sector files. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>


<a name="class_ni_terrain_file_1a9260a77e3d4b1f23fbc159f1ac994e99"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont">NiUInt32</span>  FileVersion</p>
<p class="NDLRefMemberDescription">Version type for storing the file version. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_terrain_file_1a58c30c617f4cd13f45a0933dcccafeed"></a>
<p class="NDLRefMemberFunction">virtual void  Close()</p>
<p class="NDLRefMemberDescription">This function must be called on all successfully opened files to signal that the file is no longer used. </p>
<p class="NDLRefMemberDetailedDescription">Some save files may use this function as a point at which to flush the data to disk. </p>

<a name="class_ni_terrain_file_1a0297cd60b4113627eec3dc3ef369f99f"></a>
<p class="NDLRefMemberFunction">virtual ~NiTerrainFile()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_terrain_file_1ade888730e148168c8af530f4b9428aaa"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiTerrainFile.htm#class_ni_terrain_file_1a9260a77e3d4b1f23fbc159f1ac994e99">FileVersion</a></span>  GetFileVersion() const</p>
<p class="NDLRefMemberDescription">Return the version of the file being written/read. </p>

<a name="class_ni_terrain_file_1a5cd448a3377ffc0b1d40d8352878aff8"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsReady() const</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>true if file is ready to be written/read. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_file_1a2c5cdcfc7eaa4f887924f45cd47e103d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsWritable() const</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>true if the file has been opened for write access. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_file_1add2b05491d228d5a8b6a25d14b0440ce"></a>
<p class="NDLRefMemberFunction">virtual void  GetFilePaths(<span class="NDLSystemFont"><a href="../efd/efd__set.htm">efd::set</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&gt;& kFilePaths) = 0</p>
<p class="NDLRefMemberDescription">Return the set of files that are relevant to this format. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kFilePaths</span></td>
    <td>A set to populate with the list of filepaths that this file spans. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_file_1a4e2656facc002919dd03cfb9c326424c"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  ReadConfiguration(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& uiSectorSize, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& uiNumLOD, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& uiMaskSize, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& uiLowDetailSize, <br/>float& fMinElevation, <br/>float& fMaxElevation, <br/>float& fVertexSpacing, <br/>float& fLowDetailSpecularPower, <br/>float& fLowDetailSpecularIntensity, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& uiSurfaceCount)</p>
<p class="NDLRefMemberDescription">Read the configuration of the terrain. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiSectorSize</span></td>
    <td>the size of the sector in verts </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiNumLOD</span></td>
    <td>the number of LOD on the stored terrain </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiMaskSize</span></td>
    <td>the size of blend masks per sector </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiLowDetailSize</span></td>
    <td>the size of low detail diffuse textures per sector </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fMinElevation</span></td>
    <td>the minimum elevation of the terrain </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fMaxElevation</span></td>
    <td>the maximum elevation of the terrain </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fVertexSpacing</span></td>
    <td>the spacing between verts of the terrain (XY scaling) </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fLowDetailSpecularPower</span></td>
    <td>the specular power of the low detail texture </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fLowDetailSpecularIntensity</span></td>
    <td>the specular intensity of the low detail texture </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiSurfaceCount</span></td>
    <td>the total number of surfaces in the terrain's surface index </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true when reading was successful </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_file_1a2e6e893bd71a8167cb3f48eb17129b20"></a>
<p class="NDLRefMemberFunction">virtual void  WriteConfiguration(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiSectorSize, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiNumLOD, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiMaskSize, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiLowDetailSize, <br/>float fMinElevation, <br/>float fMaxElevation, <br/>float fVertexSpacing, <br/>float fLowDetailSpecularPower, <br/>float fLowDetailSpecularIntensity, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiSurfaceCount)</p>
<p class="NDLRefMemberDescription">Write the configuration of the terrain. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiSectorSize</span></td>
    <td>the size of the sector in verts </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiNumLOD</span></td>
    <td>the number of LOD on the stored terrain </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiMaskSize</span></td>
    <td>the size of blend masks per sector </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiLowDetailSize</span></td>
    <td>the size of low detail diffuse textures per sector </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fMinElevation</span></td>
    <td>the minimum elevation of the terrain </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fMaxElevation</span></td>
    <td>the maximum elevation of the terrain </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fVertexSpacing</span></td>
    <td>the spacing between verts of the terrain (XY scaling) </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fLowDetailSpecularPower</span></td>
    <td>the specular power of the low detail texture </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fLowDetailSpecularIntensity</span></td>
    <td>the specular intensity of the low detail texture </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiSurfaceCount</span></td>
    <td>the total number of surfaces in the terrain's surface index </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_file_1a5dacd989df942dc998deb65ceed180e0"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  ReadSurface(<br/><span class="NDLSystemFont">NiUInt32</span> uiSurfaceIndex, <br/><span class="NDLSystemFont"><a href="NiTerrainAssetReference.htm">NiTerrainAssetReference</a></span>* pkPackageRef, <br/><span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>& kSurfaceID, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& uiIteration)</p>
<p class="NDLRefMemberDescription">Read the data related to a particular surface index. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiSurfaceIndex</span></td>
    <td>the index of the surface we are interested in </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkPackageRef</span></td>
    <td>A pointer to an reference object to receive the package details </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kSurfaceID</span></td>
    <td>A unique surface ID inside the given package </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiIteration</span></td>
    <td>The iteration of the package when the terrain was saved </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True when successful </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_file_1af7190a0e2768f6f28bb38d28e6ae0d57"></a>
<p class="NDLRefMemberFunction">virtual void  WriteSurface(<br/><span class="NDLSystemFont">NiUInt32</span> uiSurfaceIndex, <br/><span class="NDLSystemFont"><a href="NiTerrainAssetReference.htm">NiTerrainAssetReference</a></span>* pkPackageRef, <br/><span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span> kSurfaceID, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> uiIteration)</p>
<p class="NDLRefMemberDescription">Write the data related to a particular surface index. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiSurfaceIndex</span></td>
    <td>the index of the surface we are interested in </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pkPackageRef</span></td>
    <td>A pointer to a reference object that holds the package details </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kSurfaceID</span></td>
    <td>A unique surface ID inside the given package </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiIteration</span></td>
    <td>The iteration of the package being referenced </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="class_ni_terrain_file_1a788443fe6f3fdd64e12169b34b4f5c2e"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">NiTerrainFile</span>*  Open(<br/>const char* pcArchivePath, <br/><span class="NDLSystemFont">bool</span> bWriteAccess = false)</p>
<p class="NDLRefMemberDescription">Create a <span class="NDLSystemFont">NiTerrainFile</span> object capable of traversing the data stored in the given file. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pcArchivePath</span></td>
    <td>The archive path of the terrain </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bWriteAccess</span></td>
    <td>set to true if we are going to output to a file. can only read OR write at once, not both.</td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A pointer to the opened file. The pointer is null if the file could not be opened </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_file_1a842602d629cc83d36c16cb84b34116cc"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="NiTerrainFile.htm#class_ni_terrain_file_1a9260a77e3d4b1f23fbc159f1ac994e99">FileVersion</a></span>  GetCurrentVersion()</p>
<p class="NDLRefMemberDescription">function returning the file version that is currently in use </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>the Terrain's file version currently in use </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

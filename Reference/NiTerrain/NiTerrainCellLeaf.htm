<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiTerrainCellLeaf</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiTerrainCellLeaf</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="NiTerrainCell.htm">NiTerrainCell</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiTerrainCellLeaf.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_terrain_cell_leaf.gif" alt="Inheritance graph for NiTerrainCellLeaf"/>
  <p class="FigureCaption">Inheritance graph for NiTerrainCellLeaf</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class represents a small portion of a terrain sector at it's highest level of detail. </p>
<p class="NDLNormal">This class thus handles the rendering of high detail portions of the terrain and the storage of the surface information for that area. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>
<a name="class_ni_terrain_cell_leaf_1a6c65faf17e2a52f53538de548c3a65b8"></a>
<p class=NDLRefHead2>anonymous enum</p>




<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">MAX_NUM_SURFACES</span></td>
    <td>The maximum number of surfaces a single leaf can reference. </td>
</tr>

  </tbody>
</table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_terrain_cell_leaf_1aa350609d0506e5371fd4c39816f2597f"></a>
<p class="NDLRefMemberFunction">NiTerrainCellLeaf(<br/><span class="NDLSystemFont"><a href="NiTerrainSector.htm">NiTerrainSector</a></span>* pkSector, <br/><span class="NDLSystemFont">NiUInt32</span> uiLevel)</p>
<p class="NDLRefMemberDescription">Constructor. </p>

<a name="class_ni_terrain_cell_leaf_1a7a4effa7b007134facf0e180da333147"></a>
<p class="NDLRefMemberFunction">virtual ~NiTerrainCellLeaf()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_terrain_cell_leaf_1a77fab1db8fe50743c838b673c5a81b21"></a>
<p class="NDLRefMemberFunction">void  RemoveAllSurfaces()</p>
<p class="NDLRefMemberDescription">Remove all surfaces from this leaf and resets the surface and priority arrays. </p>

<a name="class_ni_terrain_cell_leaf_1adfc80ab52471a846980eac82a71a6fb5"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  ReplaceSurface(<br/>const <span class="NDLSystemFont"><a href="NiSurface.htm">NiSurface</a></span>* pkSurface, <br/><span class="NDLSystemFont">NiUInt32</span> uiPriority, <br/><span class="NDLSystemFont">bool</span> bForceReplace = false)</p>
<p class="NDLRefMemberDescription">Replaces the surface at a given priority with the given surface. </p>
<p class="NDLRefMemberDetailedDescription">If the surface doesn't exits, it will add it to the terrain and use the data of the surface at the given pririty. If the surface is already on the leaf it will remove the surface at the given priority and add the values to the existing surface</p>
<p class="NDLRefMemberDetailedDescription">This function will return false if we are attempting to replace a surface by the same surface.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkSurface</span></td>
    <td>The surface to replace with. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiPriority</span></td>
    <td>The position of the surface to replace. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bForceReplace</span></td>
    <td>Forces replacement without checking validity This should only be used if all leaves will have this surface replaced. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the replacement was successful, false if both surfaces are the same. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_cell_leaf_1af2d6082d317c14f9ad41fba5e2a69509"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetSurfacePriority(<br/>const <span class="NDLSystemFont"><a href="NiSurface.htm">NiSurface</a></span>* pkSurface, <br/><span class="NDLSystemFont">NiUInt32</span>& uiPriority) const</p>
<p class="NDLRefMemberDescription">Retrieves the current drawing priority of the given <span class="NDLSystemFont"><a href="NiSurface.htm">NiSurface</a></span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if the surface exists within this leaf. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_cell_leaf_1a13ae6cc34798a735ff49017c984a46ba"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetSurfacePriority(<br/><span class="NDLSystemFont">NiUInt32</span> uiSurfaceIndex, <br/><span class="NDLSystemFont">NiUInt32</span>& uiPriority) const</p>
<p class="NDLRefMemberDescription">Retrieves the current drawing priority of the given <span class="NDLSystemFont"><a href="NiSurface.htm">NiSurface</a></span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if the surface exists within this leaf. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_cell_leaf_1a85afa3956ac6550b2bff810df22007e1"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  GetSurfaceCount() const</p>
<p class="NDLRefMemberDescription">The number of surfaces that this leaf uses, at this level. </p>
<p class="NDLRefMemberDetailedDescription">Does not include inherited surfaces, only surfaces unique to this level.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>The number of surfaces used </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_cell_leaf_1a70cedffdde77d117dd36397635c58315"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="NiSurface.htm">NiSurface</a></span>*  GetSurface(<span class="NDLSystemFont">NiUInt32</span> uiPriority) const</p>
<p class="NDLRefMemberDescription">Gets the surface associated with the given mask priority. </p>
<p class="NDLRefMemberDetailedDescription">Does not take into account inherited surfaces from parents, only surfaces unique to this level.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiPriority</span></td>
    <td>Which surface to retrieve </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>A pointer to the surface in use at the given priority, or 0 if no valid surface was found. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_cell_leaf_1a301ebf76e5b0ff829be5ebd909394023"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiInt32</span>  GetSurfaceIndex(<span class="NDLSystemFont">NiUInt32</span> uiPriority) const</p>
<p class="NDLRefMemberDescription">Gets the surface index associated with the given priority. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiPriority</span></td>
    <td>Which surface to retrieve. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>the index of the requested surface. -1 if it could not be found. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_cell_leaf_1a6256cfde14487057c4d1b1071c71338d"></a>
<p class="NDLRefMemberFunction">void  MarkSurfaceMasksChanged(<span class="NDLSystemFont">bool</span> bCalcUV = false)</p>
<p class="NDLRefMemberDescription">Update the surface masks for the terrain. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">bCalcUV</span></td>
    <td>Indicates whether the UV sets need to be recalculated. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_cell_leaf_1a17c7b763b2da70d64b07ff9b2d5d86cc"></a>
<p class="NDLRefMemberFunction">void  GetTerrainSpaceRegion(<span class="NDLSystemFont"><a href="../NiMain/NiRect.htm">NiRect</a></span>&lt;<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aab8784cd0d3fb2fa32b479bd64702149">efd::SInt32</a></span>&gt;& kRegion)</p>
<p class="NDLRefMemberDescription">Function to determine the terrain space region of this leaf (useful for painting buffers). </p>

<a name="class_ni_terrain_cell_leaf_1aa0ae9c2cc442945052567f1cafc51d75"></a>
<p class="NDLRefMemberFunction">void  TakeSnapshot(<br/><span class="NDLSystemFont"><a href="NiTerrainDataSnapshot.htm">NiTerrainDataSnapshot</a></span>* pkSnapshot, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> eDataSet)</p>
<p class="NDLRefMemberDescription">Function to take a snapshot of a particular dataset on the cell. </p>
<a name="overridden_functions_for_the_case_of_a_leaf_cell_(including_high_detail_shader_data)"></a>
<p class="NDLRefHead1">Overridden functions for the case of a leaf cell (including high detail shader data)</p>

<p class="NDLRefMemberDescription"></p>
<p class="NDLRefMemberDescription"><span class="NDLSystemFont"><a href="NiTerrainCell.htm">NiTerrainCell</a></span></p>

<a name="class_ni_terrain_cell_leaf_1a5b07e95af9055bd37214112f3ae4b407"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  ProcessLOD()</p>
<p class="NDLRefMemberDescription">Recursively build the visible set of cells, adding it to the visible set stored in the sector data's rendering context. </p>
<p class="NDLRefMemberDetailedDescription">This function also prepares the 'drawn' member variables to be used in ProcessBorders.</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">To optimize, this function assumes that if any one child exists, all other children will be present.</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if this cell or any of its children are visible. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_cell_leaf_1aa913c335c7432a9073f66474c68dcc08"></a>
<p class="NDLRefMemberFunction">virtual void  Update()</p>
<p class="NDLRefMemberDescription">Apply any incremental changes that were made to this cell's bounds via the RecenterCountainingBounds function. </p>

<a name="class_ni_terrain_cell_leaf_1ad2ec267a0cccf94d47f1d15194577a79"></a>
<p class="NDLRefMemberFunction">virtual void  SetTextureRegion(<br/><span class="NDLSystemFont"><a href="../NiMain/NiPoint2.htm">NiPoint2</a></span> kOffset, <br/>float fScale, <br/><span class="NDLSystemFont"><a href="NiTerrainResourceManager__TextureType.htm#struct_ni_terrain_resource_manager_1_1_texture_type_1af7c56f974327b769cf7a20ad1bf6edba">NiTerrainCell::TextureType::Value</a></span> eTexType)</p>
<p class="NDLRefMemberDescription">Sets the offset and scale to be used by the cell for a texture region. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kOffset</span></td>
    <td>the offset for that texture </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">fScale</span></td>
    <td>the scale to use on that texture </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">eTexType</span></td>
    <td>the texture region to affect (can be the Blend mask for a leaf or the low detail texture. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_cell_leaf_1a17852271e4d34cc494bff3a19b990bbd"></a>
<p class="NDLRefMemberFunction">virtual void  SetTexture(<br/><span class="NDLSystemFont"><a href="../NiMain/NiTexture.htm">NiTexture</a></span>* pkTexture, <br/><span class="NDLSystemFont"><a href="NiTerrainResourceManager__TextureType.htm#struct_ni_terrain_resource_manager_1_1_texture_type_1af7c56f974327b769cf7a20ad1bf6edba">NiTerrainCell::TextureType::Value</a></span> eTexType)</p>
<p class="NDLRefMemberDescription">Sets the texture to use for a particular texture region. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkTexture</span></td>
    <td>the texture the texture region will point to </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">eTexType</span></td>
    <td>the texture region to affect (can be the Blend mask for a leaf or the low detail texture. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_cell_leaf_1a6afcdf07a0ebdbfdd91bd65676e59486"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../NiMain/NiTexture.htm">NiTexture</a></span>*  GetTexture(<span class="NDLSystemFont"><a href="NiTerrainResourceManager__TextureType.htm#struct_ni_terrain_resource_manager_1_1_texture_type_1af7c56f974327b769cf7a20ad1bf6edba">NiTerrainCell::TextureType::Value</a></span> eTexType)</p>
<p class="NDLRefMemberDescription">Gets the texture to use for a particular texture region. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">eTexType</span></td>
    <td>the texture region to affect (can be the Blend mask for a leaf or the low detail texture. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>pkTexture the texture the texture region will point to </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_cell_leaf_1acf1e9fb208f5cce0b3bb1ed8088ee37b"></a>
<p class="NDLRefMemberFunction">virtual const <span class="NDLSystemFont"><a href="NiTextureRegion.htm">NiTextureRegion</a></span>&  GetTextureRegion(<span class="NDLSystemFont"><a href="NiTerrainResourceManager__TextureType.htm#struct_ni_terrain_resource_manager_1_1_texture_type_1af7c56f974327b769cf7a20ad1bf6edba">NiTerrainCell::TextureType::Value</a></span> eType) const</p>
<p class="NDLRefMemberDescription">Functions that gets the texture region associated with the given type. </p>
<p class="NDLRefMemberDetailedDescription">Possible types are BLEND_MASK (for the Cell leaf only) LOW_RES_MASK or ALL_MASK. If ALL_MASK is given as a parameter, the low detail texture region will be returned.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">eType</span></td>
    <td>the texture region to affect (can be the Blend mask for a leaf or the low detail texture. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>the requested texture region </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_cell_leaf_1a44f6f2fd685847898a04b8e51f2b7ac1"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="NiTextureRegion.htm">NiTextureRegion</a></span>&  GetTextureRegion(<span class="NDLSystemFont"><a href="NiTerrainResourceManager__TextureType.htm#struct_ni_terrain_resource_manager_1_1_texture_type_1af7c56f974327b769cf7a20ad1bf6edba">NiTerrainCell::TextureType::Value</a></span> eType)</p>
<p class="NDLRefMemberDescription">Functions that gets the texture region associated with the given type. </p>
<p class="NDLRefMemberDetailedDescription">Possible types are BLEND_MASK (for the Cell leaf only) LOW_RES_MASK or ALL_MASK. If ALL_MASK is given as a parameter, the low detail texture region will be returned.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">eType</span></td>
    <td>the texture region to affect (can be the Blend mask for a leaf or the low detail texture. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>the requested texture region </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_cell_leaf_1ae0c1882c405407c82cbc3b3f371c0d2d"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">NiUInt8</span>  GetPixelAt(<br/><span class="NDLSystemFont"><a href="NiTerrainResourceManager__TextureType.htm#struct_ni_terrain_resource_manager_1_1_texture_type_1af7c56f974327b769cf7a20ad1bf6edba">NiTerrainCell::TextureType::Value</a></span> eType, <br/><span class="NDLSystemFont"><a href="NiIndex.htm">NiIndex</a></span> kCoordinates, <br/><span class="NDLSystemFont">NiUInt32</span> uiComponent) const</p>
<p class="NDLRefMemberDescription">Function that allows getting pixel values from the different texture regions. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">eType</span></td>
    <td>the texture region to affect (can be the Blend mask for a leaf or the low detail texture. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kCoordinates</span></td>
    <td>define the coordinates in the local texture space that we want to read the value at </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiComponent</span></td>
    <td>the channel of the texture we want the value for </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>returns the value found </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_cell_leaf_1a9462860a2e81f244273f8d64a8e95c16"></a>
<p class="NDLRefMemberFunction">virtual void  SetPixelAt(<br/><span class="NDLSystemFont"><a href="NiTerrainResourceManager__TextureType.htm#struct_ni_terrain_resource_manager_1_1_texture_type_1af7c56f974327b769cf7a20ad1bf6edba">NiTerrainCell::TextureType::Value</a></span> eType, <br/><span class="NDLSystemFont"><a href="NiIndex.htm">NiIndex</a></span> kCoordinates, <br/><span class="NDLSystemFont">NiUInt32</span> uiComponent, <br/><span class="NDLSystemFont">NiUInt8</span> ucNewValue)</p>
<p class="NDLRefMemberDescription">Function that allows setting pixel values for the different texture regions. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">eType</span></td>
    <td>the texture region to affect (can be the Blend mask for a leaf or the low detail texture. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">kCoordinates</span></td>
    <td>define the coordinates in the local texture space that we want to read the value at </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiComponent</span></td>
    <td>the channel of the texture we want the value for </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">ucNewValue</span></td>
    <td>out the new value we want to set </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_cell_leaf_1a4f9fc4c56a1d78553163d7ab33bc7d9a"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  DoAddSurface(<br/><span class="NDLSystemFont">NiUInt32</span> uiSurfaceIndex, <br/><span class="NDLSystemFont">NiUInt32</span> uiNewPriority)</p>
<p class="NDLRefMemberDescription">Virtual implementations of the Surface adding function. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiSurfaceIndex</span></td>
    <td>The index of the surface to add </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiNewPriority</span></td>
    <td>The priority the new surface should have </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true when successful </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_terrain_cell_leaf_1af81dd3723d217bf5248bcbe52c24e921"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  DoRemoveSurface(<span class="NDLSystemFont">NiUInt32</span> uiSurfaceIndex)</p>
<p class="NDLRefMemberDescription">Virtual implementations of the Surface removing function. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiSurfaceIndex</span></td>
    <td>The index of the surface to remove </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true when successful </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

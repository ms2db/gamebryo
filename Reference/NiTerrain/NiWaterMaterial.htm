<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiWaterMaterial</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiWaterMaterial</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiFragmentMaterial.htm">NiFragmentMaterial</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiWaterMaterial.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_water_material.gif" alt="Inheritance graph for NiWaterMaterial"/>
  <p class="FigureCaption">Inheritance graph for NiWaterMaterial</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This is an <span class="NDLSystemFont"><a href="../NiMain/NiFragmentMaterial.htm">NiFragmentMaterial</a></span> based material used for rendering a <span class="NDLSystemFont"><a href="NiWater.htm">NiWater</a></span> object. </p>
<p class="NDLNormal">This material will automatically generate the required shader based on the specified parameters. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>
<a name="class_ni_water_material_1a8a524e77d78c76b11aef80830be5a792"></a>
<p class=NDLRefHead2>anonymous enum</p>


<p class="NDLRefMemberDescription">Used for tracking the version of the terrain material. </p>


<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">VERTEX_VERSION</span></td>
    <td>Specifies the vertex shader version. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">PIXEL_VERSION</span></td>
    <td>Specifies the pixel shader version. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">GEOMETRY_VERSION</span></td>
    <td>Specifies the geometry shader version. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">MAX_LAYERS_PER_BLOCK</span></td>
    <td>Specifies the maximum number of layers per block. </td>
</tr>

  </tbody>
</table>
</div>

<a name="class_ni_water_material_1a306f016106356f810fbb8a40649c50e7"></a>
<p class=NDLRefHead2>NiWaterMaterial::ReflectionMode</p>




<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">REFLECTION_MODE_NONE</span></td>
    <td>Indicates no reflection. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">REFLECTION_MODE_CUBE_MAP</span></td>
    <td>Indicates to use cube map for the reflection mode. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">REFLECTION_MODE_PLANAR_PROJECTION</span></td>
    <td>Indicates to use planar projection for reflection mode. </td>
</tr>

  </tbody>
</table>
</div>

<a name="class_ni_water_material_1a1e8b1bd4ea4c6c5fdcfd435ddc56682c"></a>
<p class=NDLRefHead2>NiWaterMaterial::Fog</p>


<p class="NDLRefMemberDescription">Allows the water to have distance fog. </p>


<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">FOG_NONE</span></td>
    <td>Specifies no fog. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">FOG_LINEAR</span></td>
    <td>Specifies to use linear fog. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">FOG_SQUARED</span></td>
    <td>Specifies squared fog. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">FOG_MAX</span></td>
    <td>The maximum specifications for fog. </td>
</tr>

  </tbody>
</table>
</div>


<a name="public_static_attributes"></a>
<p class="NDLRefHead1">Public Static Attributes</p>


<a name="class_ni_water_material_1adb98e26d5b58b0e237087f5aa5b7c636"></a>
<p class="NDLRefMemberFunction">static const char*  REFLECTION_SHADER_CONSTANT</p>
<p class="NDLRefMemberDescription">Constants declared for the global shader constants used by the material. </p>
<p class="NDLRefMemberDetailedDescription">Reflection constant </p>

<a name="class_ni_water_material_1ab9a7484771b2b6f2ee8ba823a2c2f6dc"></a>
<p class="NDLRefMemberFunction">static const char*  SPECULARITY_SHADER_CONSTANT</p>
<p class="NDLRefMemberDescription">Specularity constant. </p>

<a name="class_ni_water_material_1ae9fdf349d852ea6fb5395f605a196085"></a>
<p class="NDLRefMemberFunction">static const char*  DISTURBANCE_SHADER_CONSTANT</p>
<p class="NDLRefMemberDescription">Water disturbance constant. </p>

<a name="class_ni_water_material_1adc33bb534a7250755e08cabfd0413a7a"></a>
<p class="NDLRefMemberFunction">static const char*  FOGDENSITY_SHADER_CONSTANT</p>
<p class="NDLRefMemberDescription">Fog density constant. </p>

<a name="class_ni_water_material_1a0a8019a86ca5fb708a3ed97ee692c9db"></a>
<p class="NDLRefMemberFunction">static const char*  FOGDISTANCE_SHADER_CONSTANT</p>
<p class="NDLRefMemberDescription">Fog Distance constant. </p>

<a name="class_ni_water_material_1afe65f4d72750a436488fb7c6785dbcbc"></a>
<p class="NDLRefMemberFunction">static const char*  FOGFALLOFF_SHADER_CONSTANT</p>
<p class="NDLRefMemberDescription">Fog fall off constant. </p>

<a name="class_ni_water_material_1acac591b0c9957e7dffc1d5fe269b1a38"></a>
<p class="NDLRefMemberFunction">static const char*  NORMALMAPOFFSET_SHADER_CONSTANT</p>
<p class="NDLRefMemberDescription">Normal map offset constant. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="class_ni_water_material_1a4661b6843feedf0c1458e73f7adadd36"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">NiWaterMaterial</span>*  Create()</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_ni_water_material_1aed435372245718c3351f90b0378a4e4e"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">bool</span>  DropPerPixelFogging(<br/><span class="NDLSystemFont"><a href="../NiMain/NiMaterialDescriptor.htm">NiMaterialDescriptor</a></span>* pkMaterialDescriptor, <br/><span class="NDLSystemFont"><a href="../NiMain/NiFragmentMaterial.htm">ReturnCode</a></span> eFailedRC, <br/>unsigned int uiFailedPass, <br/><span class="NDLSystemFont"><a href="../NiMain/NiFragmentMaterial__RenderPassDescriptor.htm">RenderPassDescriptor</a></span>* pkRenderPasses, <br/>unsigned int uiMaxCount, <br/>unsigned int& uiCount, <br/>unsigned int& uiFunctionData)</p>
<p class="NDLRefMemberDescription">This method switches environment fogging from per-pixel to vertex-based fogging. </p>

<a name="class_ni_water_material_1af89df8763d2706bee4020fced72076d9"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">bool</span>  UseWaterReplacementShader(<br/><span class="NDLSystemFont"><a href="../NiMain/NiMaterialDescriptor.htm">NiMaterialDescriptor</a></span>* pkMaterialDescriptor, <br/><span class="NDLSystemFont"><a href="../NiMain/NiFragmentMaterial.htm">ReturnCode</a></span> eFailedRC, <br/>unsigned int uiFailedPass, <br/><span class="NDLSystemFont"><a href="../NiMain/NiFragmentMaterial__RenderPassDescriptor.htm">RenderPassDescriptor</a></span>* pkRenderPasses, <br/>unsigned int uiMaxCount, <br/>unsigned int& uiCount, <br/>unsigned int& uiFunctionData)</p>
<p class="NDLRefMemberDescription">Shader fallback to be used when all other fallbacks fail. </p>
<p class="NDLRefMemberDetailedDescription">This fall back will resort to using one of the replacement shaders that was inserted into the shader cache at cache creation time. These represent bare bones shaders that are exist to allow an object to be rendered. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_water_material_1a8e383d026e6d4c6840b00c41aacded52"></a>
<p class="NDLRefMemberFunction">virtual ~NiWaterMaterial()</p>
<p class="NDLRefMemberFunction"></p>

<a name="class_ni_water_material_1ac93e1d3a0f4c20040ec517cf658c6fd6"></a>
<p class="NDLRefMemberFunction">virtual void  AddDefaultFallbacks()</p>
<p class="NDLRefMemberDescription">Inherited from <span class="NDLSystemFont"><a href="../NiMain/NiFragmentMaterial.htm">NiFragmentMaterial</a></span>. </p>
<p class="NDLRefMemberDetailedDescription">Creates the default fallback functions. </p>

<a name="class_ni_water_material_1a1776fbdf713bb2305a2bcce4dcda779a"></a>
<p class="NDLRefMemberFunction">virtual void  AddReplacementShaders()</p>
<p class="NDLRefMemberDescription">Populates the shader cache with a set of fall back shaders. </p>
<p class="NDLRefMemberDetailedDescription">Replacement shaders are 'fail safe'shaders that can be used when shader compilation can not be performed. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiStreamProcessor</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiStreamProcessor</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__MemObject.htm">efd::MemObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiStreamProcessor.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_stream_processor.gif" alt="Inheritance graph for NiStreamProcessor"/>
  <p class="FigureCaption">Inheritance graph for NiStreamProcessor</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Main interface for working with the Floodgate stream processing system. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>
<a name="class_ni_stream_processor_1a2d370aaf1ba509976a93878815fff7d3"></a>
<p class=NDLRefHead2>NiStreamProcessor::Priority</p>


<p class="NDLRefMemberDescription">Workflow dispatch priority hints. </p>

<p class="NDLRefMemberDetailedDescription">Higher priority is not a guarantee that the workflow will be executed first. </p>

<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">LOW</span></td>
    <td>&nbsp;</td>
</tr>
<tr>
    <td><span class="NDLSystemFont">MEDIUM</span></td>
    <td>&nbsp;</td>
</tr>
<tr>
    <td><span class="NDLSystemFont">HIGH</span></td>
    <td>&nbsp;</td>
</tr>
<tr>
    <td><span class="NDLSystemFont">IMMEDIATE</span></td>
    <td>&nbsp;</td>
</tr>
<tr>
    <td><span class="NDLSystemFont">NUM_PRIORITIES</span></td>
    <td>&nbsp;</td>
</tr>

  </tbody>
</table>
</div>



<a name="class_ni_stream_processor_1a95d8b05930b0515cdd417a939074d078"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont">NiUInt32</span>(*  DefineWorkerThreadCount)()</p>
<p class="NDLRefMemberDescription">Call-back function signature for determining the number of worker threads to be used by Floodgate. </p>

<a name="class_ni_stream_processor_1ac38483fb62386de6a6765c0442bdf305"></a>
<p class="NDLRefMemberFunction">typedef void(*  AssignDispatcherThreadAffinity)(NiProcessorAffinity &kProcessorAffinity)</p>
<p class="NDLRefMemberDescription">Call-back function signature for assigning the processor affinity for the dispatcher thread. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">kProcessorAffinity</span></td>
    <td>Input/Output. The NiProcessorAffinity that will be configured by this function. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_stream_processor_1a2013d5495a3c76b56d144b4d2e019420"></a>
<p class="NDLRefMemberFunction">~NiStreamProcessor()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_stream_processor_1a237d6912a2a6e8a60b6c155c5efabc64"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetParallelExecution()</p>
<p class="NDLRefMemberDescription">Returns whether or not Floodgate is using a parallel execution model. </p>

<a name="class_ni_stream_processor_1a2f6c6a161e61d9aed5339575164bcdc8"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  SetParallelExecution(<span class="NDLSystemFont">bool</span> bParallelExecution)</p>
<p class="NDLRefMemberDescription">Sets whether or not Floodgate should operate with a parallel execution model. </p>
<p class="NDLRefMemberDetailedDescription">Floodgate will operate with a parallel execution model by default. In general serial execution should only turned on when operating on a single core machine.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">bParallelExecution</span></td>
    <td>Boolean defining if parallel execution should be used. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>Returns if the execution model was set. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_stream_processor_1a3ec5dfc8c13153f0b969637d7256f397"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  SetWorkerThreadCount(<span class="NDLSystemFont">NiUInt32</span> uiWorkerThreadCount)</p>
<p class="NDLRefMemberDescription">Adjust the number of worker threads used. </p>
<p class="NDLRefMemberDetailedDescription">Specifying a worker thread count of zero will also shutdown the dispatcher thread and cause Floodgate to operate in serial mode.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiWorkerThreadCount</span></td>
    <td>NiUInt32 defining the number of desired worker threads. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>Returns if the worker thread count was successfully changed. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_stream_processor_1a28fd2652645afeea32f3ccaf415f6500"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  GetWorkerThreadCount()</p>
<p class="NDLRefMemberDescription">Returns the number of active worker threads. </p>

<a name="class_ni_stream_processor_1a70a3fb12d00a41bb07fa17861f5e23be"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  SetAffinity(const <span class="NDLSystemFont"><a href="../efd/efd__ProcessorAffinity.htm">NiProcessorAffinity</a></span>& kAffinity)</p>
<p class="NDLRefMemberDescription">Sets processor affinity. </p>

<a name="class_ni_stream_processor_1a572fa36bfba2b54537533bf6d618c0b3"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  SetPriority(NiThread::Priority ePriority)</p>
<p class="NDLRefMemberDescription">Sets thread priority. </p>

<a name="class_ni_stream_processor_1add75306fbfe59d4222eec2187332d99e"></a>
<p class="NDLRefMemberFunction">void  Clear(<span class="NDLSystemFont"><a href="NiSPWorkflow.htm">NiSPWorkflow</a></span>* pkWorkflow)</p>
<p class="NDLRefMemberDescription">Clears the given workflow from the queue. </p>

<a name="class_ni_stream_processor_1a4516c0c051c953aadbd84d1b0a797d9c"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  Poll(const <span class="NDLSystemFont"><a href="NiSPWorkflow.htm">NiSPWorkflow</a></span>* pkWorkflow)</p>
<p class="NDLRefMemberDescription">Determines if a workflow has completed. </p>

<a name="class_ni_stream_processor_1a12342b6b36f7a4d07bee421fa496d744"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  Wait(<br/>const <span class="NDLSystemFont"><a href="NiSPWorkflow.htm">NiSPWorkflow</a></span>* pkWorkflow, <br/><span class="NDLSystemFont">NiUInt32</span> uiTimeout = 0xFFFFFFFF)</p>
<p class="NDLRefMemberDescription">Waits for a workflow to complete with optional timeout. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkWorkflow</span></td>
    <td>Workflow to check for completion. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiTimeout</span></td>
    <td>Approximate timeout in microseconds. A timeout of zero will return immediately. The default timeout of 0xFFFFFFFF specifies an infinite wait. Note that since this function will attempt to yield the thread, the granularity of the timeout may be much larger than microseconds depending on the underlying speed of thread context switching per platform. Applications should not rely on this value for any form of accurate timing. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>Returns true if task completed; false if timeout expired. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_stream_processor_1a41e11a64666024eb9b607546facbe5be"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  Submit(<br/><span class="NDLSystemFont"><a href="NiSPWorkflow.htm">NiSPWorkflow</a></span>* pkWorkflow, <br/><span class="NDLSystemFont"><a href="NiStreamProcessor.htm#class_ni_stream_processor_1a2d370aaf1ba509976a93878815fff7d3">Priority</a></span> ePriority)</p>
<p class="NDLRefMemberDescription">Submits a workflow to be executed by the manager. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkWorkflow</span></td>
    <td>Workflow to submit for execution. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">ePriority</span></td>
    <td>Execution priority for the workflow. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>Returns true if the workflow was added; false if the queue was full and the workflow could not be added. The queue size should be increased if this condition is detected. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="class_ni_stream_processor_1a59eb00177b4d62b15ed9d76661c02d6c"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">NiStreamProcessor</span>*  Get()</p>
<p class="NDLRefMemberDescription">Gets the single managed instance. </p>

<a name="class_ni_stream_processor_1ac9254dee0686244c5757b0074be7e8e0"></a>
<p class="NDLRefMemberFunction">static void  SetDefineWorkerThreadCountFunc(<span class="NDLSystemFont"><a href="NiStreamProcessor.htm#class_ni_stream_processor_1a95d8b05930b0515cdd417a939074d078">DefineWorkerThreadCount</a></span> pfnCallback)</p>
<p class="NDLRefMemberDescription">Sets a callback method for Floodgate to use when determining the number of worker threads to create. </p>

<a name="class_ni_stream_processor_1a508dabb30d0a974d700a72054236fc6e"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="NiStreamProcessor.htm#class_ni_stream_processor_1a95d8b05930b0515cdd417a939074d078">DefineWorkerThreadCount</a></span>  GetDefineWorkerThreadCountFunc()</p>
<p class="NDLRefMemberDescription">Gets a callback method for Floodgate to use when determining the number of worker threads to create. </p>

<a name="class_ni_stream_processor_1a09c760ef33aefb24af62c3b294c57a7c"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">NiUInt32</span>  DefineWorkerThreadCountDefaultFunc()</p>
<p class="NDLRefMemberDescription">The default DefineWorkerThreadCount. </p>

<a name="class_ni_stream_processor_1aaab6b98713c675f4e62cff091f03055e"></a>
<p class="NDLRefMemberFunction">static void  SetDispatchThreadAffinityFunc(<span class="NDLSystemFont"><a href="NiStreamProcessor.htm#class_ni_stream_processor_1ac38483fb62386de6a6765c0442bdf305">AssignDispatcherThreadAffinity</a></span> pfnCallback)</p>
<p class="NDLRefMemberDescription">Sets a callback method for Floodgate to use when determining the thread affinity of the dispatcher thread. </p>

<a name="class_ni_stream_processor_1a7894de52cd048640ca981ee9173f19c7"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="NiStreamProcessor.htm#class_ni_stream_processor_1ac38483fb62386de6a6765c0442bdf305">AssignDispatcherThreadAffinity</a></span>  GetDispatchThreadAffinityFunc()</p>
<p class="NDLRefMemberDescription">Gets a callback method for Floodgate to use when determining the processor affinity of the dispatcher thread. </p>

<a name="class_ni_stream_processor_1ae41b13caaac6586ebce71cd71c0524cc"></a>
<p class="NDLRefMemberFunction">static void  AssignDispatcherThreadAffinityDefaultFunc(<span class="NDLSystemFont"><a href="../efd/efd__ProcessorAffinity.htm">NiProcessorAffinity</a></span>& kProcessorAffinity)</p>
<p class="NDLRefMemberDescription">The default AssignDispatcherThreadAffinity. </p>

<a name="class_ni_stream_processor_1a70b50919d64be4746416a43b821ed8ba"></a>
<p class="NDLRefMemberFunction">static NiSPWorkflowPtr  GetFreeWorkflow()</p>
<p class="NDLRefMemberDescription">Gets a workflow from the object pool. </p>
<p class="NDLRefMemberDetailedDescription">Calls <span class="NDLSystemFont"><a href="NiSPWorkflow.htm#class_ni_s_p_workflow_1a93e369fcea5501728a3a1dbeeeb56874">NiSPWorkflow::GetFreeWorkflow</a></span>. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiSPStream</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiSPStream</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__MemObject.htm">efd::MemObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiSPStream.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_s_p_stream.gif" alt="Inheritance graph for NiSPStream"/>
  <p class="FigureCaption">Inheritance graph for NiSPStream</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class represents an encapsulation of a data buffer for use with Floodgate. </p>
<p class="NDLNormal">Users of this class are encouraged to use the templated versions <span class="NDLSystemFont"><a href="NiTSPStream.htm">NiTSPStream</a></span> and <span class="NDLSystemFont"><a href="NiTSPFixedInput.htm">NiTSPFixedInput</a></span> for ease of stream creation. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_s_p_stream_1a51ee04c13bf2a113e1cae17b3162570b"></a>
<p class="NDLRefMemberFunction">NiSPStream(<br/>void* pvData = NULL, <br/><span class="NDLSystemFont">NiUInt32</span> uiStride = 0, <br/><span class="NDLSystemFont">NiUInt32</span> uiBlockCount = 0, <br/><span class="NDLSystemFont">bool</span> bIsFixedInput = false)</p>
<p class="NDLRefMemberDescription">Constructs a new <span class="NDLSystemFont">NiSPStream</span> from the parameters specified. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pvData</span></td>
    <td>Data to be referenced by the <span class="NDLSystemFont">NiSPStream</span>. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiStride</span></td>
    <td>The stride of the data. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiBlockCount</span></td>
    <td>Number of stride-sized elements in the <span class="NDLSystemFont">NiSPStream</span>. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bIsFixedInput</span></td>
    <td>If false, data should be decomposed; otherwise it is fixed. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_s_p_stream_1ac648aa9efe7449e8ac05b3bb5d642093"></a>
<p class="NDLRefMemberFunction">virtual ~NiSPStream()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_s_p_stream_1a77d871d8d799da0739dca2289986b680"></a>
<p class="NDLRefMemberFunction">void*  GetData()</p>
<p class="NDLRefMemberDescription">Returns a pointer to the data contained within the stream. </p>

<a name="class_ni_s_p_stream_1a4918c2f0e1a9db945cadd07a680e5e71"></a>
<p class="NDLRefMemberFunction">void  SetData(void* pvData)</p>
<p class="NDLRefMemberDescription">Sets the pointer to the data contained within the stream. </p>

<a name="class_ni_s_p_stream_1aeaafaaf9a0dd81a58c3325d3778ae45a"></a>
<p class="NDLRefMemberFunction">void  SetDataSource(<br/><span class="NDLSystemFont"><a href="NiSPDataStream.htm">NiSPDataStream</a></span>* pkDataStreamSource, <br/><span class="NDLSystemFont">bool</span> bAutoSetBlockCount = false, <br/><span class="NDLSystemFont">NiUInt32</span> uiRegionIdx = 0, <br/><span class="NDLSystemFont">NiUInt32</span> uiElementOffset = 0)</p>
<p class="NDLRefMemberDescription">Sets the data source (as opposed to the RAW pointer). </p>
<p class="NDLRefMemberDetailedDescription">The stride of this stream will always be taken from the data source and is assumed not to change after this call has been made.</p>
<p class="NDLRefMemberDetailedDescription">The data source pointer is not owned by the <span class="NDLSystemFont">NiSPStream</span> object. It is the responsibility of the calling code to manage the pointer. The data source pointer must remain valid (not deleted, for instance) until this <span class="NDLSystemFont">NiSPStream</span> object is deleted or another, possibly NULL, source is set.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkDataStreamSource</span></td>
    <td>Pointer to an object that implements the <span class="NDLSystemFont"><a href="NiSPDataStream.htm">NiSPDataStream</a></span> interface. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bAutoSetBlockCount</span></td>
    <td>Indicates if the block count should be determined from the <span class="NDLSystemFont"><a href="NiSPDataStream.htm">NiSPDataStream</a></span> or if it will be set manually. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiRegionIdx</span></td>
    <td>Region to use within the data source. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiElementOffset</span></td>
    <td>Offset in the stream at which the element being worked on starts. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_s_p_stream_1a8e99f33b9909a8dea2ed22c71ae93334"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiSPDataStream.htm">NiSPDataStream</a></span>*  GetDataSource() const</p>
<p class="NDLRefMemberDescription">Gets the data source (as opposed to the RAW pointer). </p>

<a name="class_ni_s_p_stream_1a7525d0432974c011f4f2e04dd7685323"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetAutoSetBlockCount() const</p>
<p class="NDLRefMemberDescription">Indicates if the block count should be automatically set based on the data source whenever it is locked. </p>

<a name="class_ni_s_p_stream_1ac0b78014a7fc5d02dc7dab2dcb04af32"></a>
<p class="NDLRefMemberFunction">void  SetAutoSetBlockCount(<span class="NDLSystemFont">bool</span> bAutoSetBlockCount)</p>
<p class="NDLRefMemberDescription">Sets the flag indicating whether or not the block count should be automatically set from the <span class="NDLSystemFont"><a href="NiSPDataStream.htm">NiSPDataStream</a></span> whenever it is locked. </p>

<a name="class_ni_s_p_stream_1ae81c8bac99f0b383e7fb0550a81b9d95"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  GetRegionIdx() const</p>
<p class="NDLRefMemberDescription">Gets region index to use with the data source. </p>

<a name="class_ni_s_p_stream_1a0d9d95bd02ce9e4bf98aef1c1d347351"></a>
<p class="NDLRefMemberFunction">void  SetRegionIdx(<span class="NDLSystemFont">NiUInt32</span> uiRegionIdx)</p>
<p class="NDLRefMemberDescription">Sets region index to use with the data source. </p>

<a name="class_ni_s_p_stream_1ae4407fef21dc038716a37badd478f237"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt32</span>  GetElementOffset() const</p>
<p class="NDLRefMemberDescription">Gets the element offset to use with the data source. </p>

<a name="class_ni_s_p_stream_1afad6cd4207bd72865a3c39241bffd6e3"></a>
<p class="NDLRefMemberFunction">void  SetElementOffset(<span class="NDLSystemFont">NiUInt32</span> uiElementOffset)</p>
<p class="NDLRefMemberDescription">Sets the element offset to use with the data source. </p>

<a name="class_ni_s_p_stream_1ac2664475c704463767304d86dff277b7"></a>
<p class="NDLRefMemberFunction">void  ClearTaskArrays()</p>
<p class="NDLRefMemberDescription">Clears the internal arrays of input and output tasks. </p>
<p class="NDLRefMemberDetailedDescription">For thread safety, functions internal to this class set entries in these arrays to zero rather than remove them. This function actually removes the entries. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

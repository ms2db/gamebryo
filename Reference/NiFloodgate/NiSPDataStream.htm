<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiSPDataStream</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiSPDataStream</p>


<p class="NDLRefHeaderFile">&lt;NiSPDataStream.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_s_p_data_stream.gif" alt="Inheritance graph for NiSPDataStream"/>
  <p class="FigureCaption">Inheritance graph for NiSPDataStream</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class defines the properties and functions that Floodgate requires of streams of data. </p>
<p class="NDLNormal">This is the interface class from which platform specific data streams are derived. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>
<a name="class_ni_s_p_data_stream_1a603a604c6efdbcc19636971f0875cbb3"></a>
<p class=NDLRefHead2>NiSPDataStream::SPLockType</p>


<p class="NDLRefMemberDescription">The types of lock observed by Floodgate. </p>

<p class="NDLRefMemberDetailedDescription">The enumeration should be "derived" by sub-classes, such as <span class="NDLSystemFont"><a href="../NiMesh/NiDataStream.htm">NiDataStream</a></span> in the <span class="NDLSystemFont"><a href="../NiMesh/NiMesh.htm">NiMesh</a></span> library. If updating, check for consistency. </p>

<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">LOCK_READ</span></td>
    <td>Data should be locked for reading. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">LOCK_WRITE</span></td>
    <td>Data should be locked for writing. </td>
</tr>

  </tbody>
</table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_s_p_data_stream_1aaa5e8ec192870b60f5ce70e020aa697c"></a>
<p class="NDLRefMemberFunction">virtual ~NiSPDataStream()</p>
<p class="NDLRefMemberDescription">Empty destructor to keep compilers happy. </p>

<a name="class_ni_s_p_data_stream_1adaa49e459e2700fb9d2a138e576e2b81"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">NiUInt32</span>  GetBlockCount(<span class="NDLSystemFont">NiUInt32</span> uiRegionIdx) const = 0</p>
<p class="NDLRefMemberDescription">Gets the block count for the specified region. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiRegionIdx</span></td>
    <td>Index of the region to lock. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_s_p_data_stream_1ab579b410a80ed6b5793bc581adfbd722"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">NiUInt32</span>  GetStride() const = 0</p>
<p class="NDLRefMemberDescription">Gets the stride of data in the stream. </p>
<a name="locking_methods"></a>
<p class="NDLRefHead1">Locking Methods</p>

<p class="NDLRefMemberDescription">Methods to assist with the locking and unlocking of <span class="NDLSystemFont"><a href="../NiMesh/NiDataStream.htm">NiDataStream</a></span> objects. </p>

<a name="class_ni_s_p_data_stream_1a39e07f71cc68985773d40c3240d3773e"></a>
<p class="NDLRefMemberFunction">virtual const void*  LockSource(<span class="NDLSystemFont">NiUInt32</span> uiRegionIdx) = 0</p>
<p class="NDLRefMemberDescription">Locks the <span class="NDLSystemFont"><a href="../NiMesh/NiDataStream.htm">NiDataStream</a></span> at the region specified. </p>
<p class="NDLRefMemberDetailedDescription">The form of lock is determined by calls to EnableWriteFlag and EnableReadFLag.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiRegionIdx</span></td>
    <td>Index of the region to lock. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_s_p_data_stream_1ad8515f996dfb3bf1972c84145173fc17"></a>
<p class="NDLRefMemberFunction">virtual void  UnlockSource() = 0</p>
<p class="NDLRefMemberDescription">Unlocks a data source locked with LockSource. </p>

<a name="class_ni_s_p_data_stream_1a0dd88173f4349a66ab8373908d545ecd"></a>
<p class="NDLRefMemberFunction">virtual void  EnableWriteFlag() = 0</p>
<p class="NDLRefMemberDescription">Enable the write lock flag for the stream. </p>
<p class="NDLRefMemberDetailedDescription">When this function is called, derived classes need to remember that they should lock for writing when LockSource is called. It is legal to lock for both reading and writing. </p>

<a name="class_ni_s_p_data_stream_1af357caccabd0e7522f6193b2d988bae8"></a>
<p class="NDLRefMemberFunction">virtual void  EnableReadFlag() = 0</p>
<p class="NDLRefMemberDescription">Enable the read lock flag for the stream. </p>
<p class="NDLRefMemberDetailedDescription">When this function is called, derived classes need to remember that they should lock for reading when LockSource is called. It is legal to lock for both reading and writing. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

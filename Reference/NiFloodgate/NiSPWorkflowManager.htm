<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiSPWorkflowManager</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiSPWorkflowManager</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiRefObject.htm">NiRefObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiSPWorkflowManager.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_s_p_workflow_manager.gif" alt="Inheritance graph for NiSPWorkflowManager"/>
  <p class="FigureCaption">Inheritance graph for NiSPWorkflowManager</p>
</div>
</p>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_s_p_workflow_manager_1aa0885b01f99c5e3f7f9f913f98106d0d"></a>
<p class="NDLRefMemberFunction">NiSPWorkflowManager(<br/>const <span class="NDLSystemFont">NiUInt16</span> uiSubmitThreshold, <br/>const <span class="NDLSystemFont"><a href="NiStreamProcessor.htm#class_ni_stream_processor_1a2d370aaf1ba509976a93878815fff7d3">NiStreamProcessor::Priority</a></span> eWorkflowPriority = NiStreamProcessor::MEDIUM, <br/>const <span class="NDLSystemFont">NiUInt32</span> uiNumTaskGroups = 3)</p>
<p class="NDLRefMemberDescription">Constructor. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiSubmitThreshold</span></td>
    <td>The minimum number of tasks to put in a single workflow before submitting the workflow. More tasks may be placed in the workflow if they are related. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">eWorkflowPriority</span></td>
    <td>The priority to use for submitted workflows. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiNumTaskGroups</span></td>
    <td>The number of task groups for which to allocate space. This is an approximate estimate used to size an internal map, and should be a prime number for good performance. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_s_p_workflow_manager_1aadd137717e7bf631b8123e90eac5d6f8"></a>
<p class="NDLRefMemberFunction">~NiSPWorkflowManager()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="class_ni_s_p_workflow_manager_1a49661db9ab3da0571afabecf13eb3655"></a>
<p class="NDLRefMemberFunction">void  SetSubmitThreshold(const <span class="NDLSystemFont">NiUInt16</span> uiSubmitThreshold)</p>
<p class="NDLRefMemberDescription">Set the submit threshold value. </p>
<p class="NDLRefMemberDetailedDescription">The submit threshold is the minimum number of tasks a workflow must have before it is automatically submitted. A workflow with fewer tasks can always be flushed to force submission.</p>
<p class="NDLRefMemberDetailedDescription">The submit threshold should be set on a per application, or even per workflow manager, basis to optimize the trade-off between delaying workflow submissions versus having maximally sized workflows. In cases where tasks are rapidly submitted to the manager and any given task can afford to wait a little on submission, the submit threshold can be larger. If tasks come in infrequently or it is important that each start as soon as possible, then the submit threshold should be lower.</p>
<p class="NDLRefMemberDetailedDescription">Note that on some platforms the submit threshold may need to be raised to limit the maximum number of workflows outstanding at any given moment. A higher threshold means more tasks per workflow and hence fewer workflows for a given application. </p>

<a name="class_ni_s_p_workflow_manager_1a1ade66732a4460a5a87b037d7ab84e31"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">NiUInt16</span>  GetSubmitThreshold() const</p>
<p class="NDLRefMemberDescription">Get the submit threshold value. </p>

<a name="class_ni_s_p_workflow_manager_1ac207cb81d07e01c0cbfab1fd9e65788e"></a>
<p class="NDLRefMemberFunction">void  SetWorkflowPriority(const <span class="NDLSystemFont"><a href="NiStreamProcessor.htm#class_ni_stream_processor_1a2d370aaf1ba509976a93878815fff7d3">NiStreamProcessor::Priority</a></span> ePriority)</p>
<p class="NDLRefMemberDescription">Set the priority used for submitted workflows. </p>

<a name="class_ni_s_p_workflow_manager_1a45a3b1659e5014b372a536f66d278687"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="NiStreamProcessor.htm#class_ni_stream_processor_1a2d370aaf1ba509976a93878815fff7d3">NiStreamProcessor::Priority</a></span>  GetWorkflowPriority() const</p>
<p class="NDLRefMemberDescription">Get the priority used for submitted workflows. </p>

<a name="class_ni_s_p_workflow_manager_1a55241a7929f1bbc36e077743c9453df4"></a>
<p class="NDLRefMemberFunction">NiSPWorkflowPtr  AddTask(<br/><span class="NDLSystemFont"><a href="NiSPTask.htm">NiSPTask</a></span>* pkTask, <br/>const <span class="NDLSystemFont">NiUInt32</span> uiTaskGroup, <br/>const <span class="NDLSystemFont">bool</span> bDelaySubmission)</p>
<p class="NDLRefMemberDescription">Adds a task. </p>
<p class="NDLRefMemberDetailedDescription">If the task group does not yet exist, it will be created. The workflow for the task may be submitted, so do not use this function if the task must be in the same workflow as other tasks.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkTask</span></td>
    <td>The task to add. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiTaskGroup</span></td>
    <td>The group the task belongs to. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bDelaySubmission</span></td>
    <td>If true, do not submit the task's workflow until the manager is flushed. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The workflow the task has been assigned to. This must be assigned to a smart pointer. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_s_p_workflow_manager_1aa0f8454bcb8c929f1345486fd6573066"></a>
<p class="NDLRefMemberFunction">NiSPWorkflowPtr  AddRelatedTask(<br/><span class="NDLSystemFont"><a href="NiSPTask.htm">NiSPTask</a></span>* pkTask, <br/>const <span class="NDLSystemFont">NiUInt32</span> uiTaskGroup, <br/>const <span class="NDLSystemFont">bool</span> bDelaySubmission)</p>
<p class="NDLRefMemberDescription">Adds one task of several that should go into a common workflow. </p>
<p class="NDLRefMemberDetailedDescription">If the task group does not yet exist, it will be created. This function can be called multiple times to add several tasks to the same workflow. You must call FinishRelatedTasks to indicate that a set of related tasks have all been added.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pkTask</span></td>
    <td>The task to add. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiTaskGroup</span></td>
    <td>The group the task belongs to. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bDelaySubmission</span></td>
    <td>If true, do not submit the task's workflow until the manager is flushed. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The workflow the task has been assigned to. This must be assigned to a smart pointer. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_s_p_workflow_manager_1a8db0f35b83561c1a32b7665881c1d992"></a>
<p class="NDLRefMemberFunction">void  FinishRelatedTasks(<br/>const <span class="NDLSystemFont">NiUInt32</span> uiTaskGroup, <br/>const <span class="NDLSystemFont">NiUInt32</span> uiTaskGroupMask)</p>
<p class="NDLRefMemberDescription">Finishes off submission of related tasks. </p>
<p class="NDLRefMemberDetailedDescription">If the workflow is full, it will be submitted or queued for later submission.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiTaskGroup</span></td>
    <td>The group the task belongs to. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiTaskGroupMask</span></td>
    <td>A mask used in matching up groups. The task group with ID KeyID will be flushed if (KeyID& uiTaskGroupMask) == (uiTaskGroup& uiTaskGroupMask) </td>
</tr>

        </tbody>
    </table>
</div>



<a name="class_ni_s_p_workflow_manager_1af976f09f424d75885820f3e37aea4130"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  FlushTaskGroup(<br/>const <span class="NDLSystemFont">NiUInt32</span> uiTaskGroup, <br/>const <span class="NDLSystemFont">NiUInt32</span> uiTaskGroupMask)</p>
<p class="NDLRefMemberDescription">Flushes all the tasks for the given group. </p>
<p class="NDLRefMemberDetailedDescription">Any delayed tasks are submitted, as are any other workflows that have not yet been submitted.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">uiTaskGroup</span></td>
    <td>The group to flush. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">uiTaskGroupMask</span></td>
    <td>A mask used in matching up groups. The task group with ID KeyID will be flushed if (KeyID& uiTaskGroupMask) == (uiTaskGroup& uiTaskGroupMask) </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the flush resulted in submission of any workflows. False otherwise. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

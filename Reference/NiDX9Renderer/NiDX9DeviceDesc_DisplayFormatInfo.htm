<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiDX9DeviceDesc::DisplayFormatInfo</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">
NiDX9DeviceDesc::DisplayFormatInfo</p>

<p class="NDLRefHeaderFile">&lt;NiDX9SystemDesc.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">DisplayFormatInfo</span> is a
nested class of <span class=
"NDLSystemFont">NiDX9DeviceDesc</span>, which is designed to
represent a single display format that the device can support as
a 3D display format. Functions in the class return closest
matches and supported depth/stencil formats, as well as the
support for windowed and fullscreen 3D rendering.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberDescription">There are no public
constructors, as only the Gamebryo DX9 renderer should create
instances of this class.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">bool
CanRenderFullscreen() const</p>

<p class="NDLRefMemberFunction">bool
CanRenderWindowed() const</p>

<p class="NDLRefMemberDescription">These functions return true if
the device returning this display format object can render either
fullscreen or windowed (respectively) to the given frame buffer
rendering format.</p>

<p class="NDLRefMemberFunction">D3DFORMAT GetFormat() const</p>

<p class="NDLRefMemberDescription">Returns the D3D format
represented by this display format descriptor (<span class=
"NDLSystemFont">D3DFMT_*</span>).</p>

<p class="NDLRefMemberFunction">NiDX9Renderer::DepthStencilFormat
FindClosestDepthStencil(unsigned int uiDesiredDepthBPP,
unsigned int uiDesiredStencilBPP) const</p>

<p class="NDLRefMemberDescription">Returns the closest
depth/stencil format that can be supported by the device given
the calling display format and desired depth buffer and stencil
buffer per-pixel depths (in bits per pixel). This version of the
function assumes that the device adapter format and rendering
buffer format are equal. This function returns the best-matching
Gamebryo depth/stencil format enumeration (<span class=
"NDLSystemFont">NiDX9Renderer::DSFMT_*</span>), or <span class=
"NDLSystemFont">DSFMT_UNKNOWN</span> if no match can be
found.</p>

<p class="NDLRefMemberFunction">NiDX9Renderer::DepthStencilFormat
FindClosestDepthStencil(D3DFORMAT eFBFormat,
unsigned int uiDesiredDepthBPP, unsigned int uiDesiredStencilBPP)
const</p>

<p class="NDLRefMemberDescription">Returns the closest
depth/stencil format that can be supported by the device given
the calling display format and desired depth buffer and stencil
buffer per-pixel depths (in bits per pixel). This version of the
function allows the device adapter format and rendering buffer
format to be different (which often happens with offscreen
renderers). This function returns the best-matching Gamebryo
depth/stencil format enumeration (<span class=
"NDLSystemFont">NiDX9Renderer::DSFMT_*</span>), or <span class=
"NDLSystemFont">DSFMT_UNKNOWN</span> if no match can be
found.</p>

<p class="NDLRefMemberFunction">bool IsDepthStencilValid(bool
bWindowed, D3DFORMAT eRenderFormat, D3DFORMAT eDepthFormat)
const</p>

<p class="NDLRefMemberDescription">Returns a Boolean value
indicating whether or not the display mode, frame buffer format,
and depth/stencil formats is valid on the current device. Note
that under DX9, the adapter display mode and the back buffer
rendering format may differ.</p>

<p class="NDLRefMemberFunction">unsigned int
GetMultiSampleQualityLevels(D3DMULTISAMPLE_TYPE eMultSampleType,
bool bWindowed, D3DFORMAT eRenderFormat, D3DFORMAT eDepthFormat)
const</p>

<p class="NDLRefMemberDescription">Returns the number of
multisample quality levels for the desired multisample type that
will work with the provided display mode, frame buffer format,
and depth/stencil formats on the current device.</p>

<p class="NDLRefMemberFunction">D3DMULTISAMPLE_TYPE
GetHighestMultiSampleType(bool bWindowed, D3DFORMAT
eRenderFormat, D3DFORMAT eDepthFormat) const</p>

<p class="NDLRefMemberDescription">Returns the highest maskable
multisample level that will work with the provided display mode,
frame buffer format, and depth/stencil formats can handle on the
current device.</p>

<p class="NDLRefMemberFunction">bool IsMultiSampleValid(bool
bWindowed, D3DMULTISAMPLE_TYPE eMultiSampleType,D3DFORMAT
eRenderFormat, D3DFORMAT eDepthFormat) const</p>

<p class="NDLRefMemberDescription">Returns a Boolean value
indicating whether or not given D3DMULTISAMPLE_TYPE value will
work with the give display mode, frame buffer format, and
depth/stencil formats on the current device.</p>

<p class="NDLRefHead1">Static Member Functions</p>

<p class="NDLRefMemberFunction">static void
GetDepthStencilBPPFromFormat(D3DFORMAT eD3DFormat,
unsigned int&amp; uiDepthBPP, unsigned int&amp; uiStencilBPP)</p>

<p class="NDLRefMemberDescription">This function "decodes" a D3D
depth/stencil format enumeration into two unsigned integers one
for the depth pixel depth, and one for the stencil pixel
depth.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

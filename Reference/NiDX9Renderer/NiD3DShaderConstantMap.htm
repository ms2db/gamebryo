<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiD3DShaderConstantMap</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<p class="NDLRefHeadClassTitle">NiD3DShaderConstantMap</p>

<p class="NDLRefParentage">: public <a href="../../Reference/NiMain/NiShaderConstantMap.htm">NiShaderConstantMap</a></p>

<p class="NDLRefHeaderFile">&lt;NiD3DShaderConstantMap.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiD3DShaderConstantMap</span> 
 manages one shader constant buffer. The constant 
 entries are stored in a set of arrays. There are NiRenderer::PHASE_COUNT arrays 
 in this set. This set of arrays is implemented in the class as the m_aspPhaseEntries 
 member. The entries are partitioned into sets to allow varying update frequency 
 per set. This feature is under development but the current work does
 provide a performance advantage.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiD3DShaderConstantMap(<a href="../../Reference/NiMain/NiGPUProgram.htm#ProgramType">NiGPUProgram::ProgramType</a> 
 eType)</p>

<p class="NDLRefMemberDescription">The default constructor creates an <span 
 class="NDLSystemFont">NiD3DShaderConstantMap</span> instance 
 for the given shader program type, setting it to a known state. </p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">bool GetModified()</p>

<p class="NDLRefMemberFunction">void SetModified(bool bModified)</p>

<p class="NDLRefMemberDescription">Get/set the flag indicating the map has 
 been modified. Currently, this flag is not used.</p>

<p class="NDLRefMemberFunction">NiD3DError GetLastError()</p>

<p class="NDLRefMemberDescription">Returns the error code for the last error 
 that occurred.</p>

<p class="NDLRefMemberFunction">unsigned int GetEntryCount()</p>

<p class="NDLRefMemberDescription">Gets the number of <span class="NDLSystemFont">NiD3DShaderConstantMapEntry 
 </span>instances held in the map.</p>

<p class="NDLRefMemberFunction">virtual <a href="../../Reference/NiMain/NiShaderError.htm">NiShaderError</a> 
 AddEntry(const char* pszKey, unsigned int uiFlags, unsigned int uiExtra, 
 unsigned int uiShaderRegister, unsigned int uiRegisterCount, const char* 
 pszVariableName = NULL, unsigned int uiDataSize = 0, unsigned int uiDataStride 
 = 0, const void* pvDataSource = NULL, bool bCopyData = false)</p>

<p class="NDLRefMemberDescription">Creates an <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiShaderConstantMapEntry.htm">NiShaderConstantMapEntry</a></span> 
 instance with the given parameters, and adds it to its list of entries. 
 If <span class="NDLSystemFont">pszVariableName</span> is <span class="NDLSystemFont">NULL</span>, 
 and the shader program is in a format (such as the DirectX HLSL) that 
 uses names for variables instead of registers, then the name passed into 
 <span class="NDLSystemFont">pszKey</span> will be used as the variable name.</p>

<p class="NDLRefMemberFunction">virtual <a href="../../Reference/NiMain/NiShaderError.htm">NiShaderError</a> 
 AddPredefinedEntry(const char* pszKey, unsigned int uiExtra, unsigned 
 int uiShaderRegister, const char* pszVariableName)</p>

<p class="NDLRefMemberDescription">Creates an <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiShaderConstantMapEntry.htm">NiShaderConstantMapEntry</a></span> 
 instance of the predefined value type with the given parameters, and adds 
 it to its list of entries.</p>

<p class="NDLRefMemberFunction">virtual <a href="../../Reference/NiMain/NiShaderError.htm">NiShaderError</a> 
 AddAttributeEntry(const char* pszKey, unsigned int uiFlags, unsigned int 
 uiExtra, unsigned int uiShaderRegister, unsigned int uiRegisterCount, 
 const char* pszVariableName, unsigned int uiDataSize, unsigned int uiDataStride, 
 const void* pvDataSource, bool bCopyData = true)</p>

<p class="NDLRefMemberDescription">Creates an <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiShaderConstantMapEntry.htm">NiShaderConstantMapEntry</a></span> 
 instance of the extra-data value type with the given parameters, and adds 
 it to its list of entries.</p>

<p class="NDLRefMemberFunction">virtual <a href="../../Reference/NiMain/NiShaderError.htm">NiShaderError</a> 
 AddConstantEntry(const char* pszKey, unsigned int uiFlags, unsigned int 
 uiExtra, unsigned int uiShaderRegister, unsigned int uiRegisterCount, 
 const char* pszVariableName, unsigned int uiDataSize, unsigned int uiDataStride, 
 const void* pvDataSource, bool bCopyData = true)</p>

<p class="NDLRefMemberDescription">Creates an <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiShaderConstantMapEntry.htm">NiShaderConstantMapEntry</a></span> 
 instance of the constant value type with the given parameters, and adds 
 it to its list of entries.</p>

<p class="NDLRefMemberFunction">virtual <a href="../../Reference/NiMain/NiShaderError.htm">NiShaderError</a> 
 AddGlobalEntry(const char* pszKey, unsigned int uiFlags, unsigned int 
 uiExtra, unsigned int uiShaderRegister, unsigned int uiRegisterCount, 
 const char* pszVariableName, unsigned int uiDataSize, unsigned int uiDataStride, 
 void* pvDataSource, bool bCopyData = false)</p>

<p class="NDLRefMemberDescription">Creates an <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiShaderConstantMapEntry.htm">NiShaderConstantMapEntry</a></span> 
 instance of the global value type with the given parameters, and adds 
 it to its list of entries. The function assumes the entry has been registered 
 with the shader factory via a call to <span class="NDLSystemFont"><a HREF="NiD3DShaderFactory.htm">NiD3DShaderFactory</a>::RegisterGlobalShaderConstant</span>.</p>

<p class="NDLRefMemberFunction">virtual <a href="../../Reference/NiMain/NiShaderError.htm">NiShaderError</a> 
 AddOperatorEntry(const char* pszKey, unsigned int uiFlags, unsigned int 
 uiExtra, unsigned int uiShaderRegister, unsigned int uiRegisterCount, 
 const char* pszVariableName)</p>

<p class="NDLRefMemberDescription">Creates an <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiShaderConstantMapEntry.htm">NiShaderConstantMapEntry</a></span> 
 instance of the operator value type with the given parameters, and adds 
 it to its list of entries. The function assumes the <span class="NDLSystemFont">uiExtra</span> 
 parameter has been setup properly to indicate the operator, and the two 
 entry indices to perform it on.</p>

<p class="NDLRefMemberFunction">virtual NiD3DError RemoveEntry(const char* 
 pszKey)</p>

<p class="NDLRefMemberDescription">Removes the entry of the given <span class="NDLSystemFont">pszKey</span>. If it is not 
 found, the function will return <span class="NDLSystemFont">NID3DERR_ENTRYNOTFOUND</span>.</p>

<p class="NDLRefMemberFunction">virtual <a href="../../Reference/NiMain/NiShaderConstantMapEntry.htm">NiShaderConstantMapEntry</a>* 
 GetEntry(const char* pszKey)</p>

<p class="NDLRefMemberDescription">Retrieves the entry of the given <span class="NDLSystemFont">pszKey</span>. 
 Returns <span class="NDLSystemFont">NULL</span> 
 if the entry is not found.</p>

<p class="NDLRefMemberFunction">virtual <a href="../../Reference/NiMain/NiShaderConstantMapEntry.htm">NiShaderConstantMapEntry</a>* 
 GetEntryAtIndex(unsigned int uiIndex)</p>

<p class="NDLRefMemberDescription">Returns the entry at the given index.</p>

<p class="NDLRefMemberFunction">virtual NiD3DError SetShaderConstants(<a href="../../Reference/NiMain/NiRenderCallContext.htm">NiRenderCallContext</a>&amp; kRCC, <a HREF="NiD3DShaderProgram.htm">NiD3DShaderProgram</a>* pkShaderProgram, bool bGlobal)</p>

<p class="NDLRefMemberDescription">Iterates over the entries, setting the 
 values for each entry on the provided shader program. It is the responsibility 
 of the <span class="NDLSystemFont"><a HREF="NiD3DShaderProgram.htm">NiD3DShaderProgram</a></span> 
 object to interpret the entry data appropriately and set the values for 
 each entry on the device..</p>

<p class="NDLRefMemberFunction">unsigned int GetPhaseIndex(NiRenderer::RenderingPhase ePhase)</p>

<p class="NDLRefMemberDescription">Converts a phase enumeration value 
 into an entry array phase index.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

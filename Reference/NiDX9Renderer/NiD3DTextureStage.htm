<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiD3DTextureStage</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiD3DTextureStage</p>

<p class="NDLRefParentage">: public <a href=
"../../Reference/NiMain/NiTextureStage.htm">NiTextureStage</a></p>

<p class="NDLRefHeaderFile">&lt;NiD3DTextureStage.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiD3DTextureStage</span>
represents a single texture stage contained in an <span class=
"NDLSystemFont"><a href="NiD3DPass.htm">NiD3DPass</a></span>
instance. It directly corresponds to the texture stages on the
device.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiD3DTextureStage()</p>

<p class="NDLRefMemberDescription">Initializes the texture stage
to a known state, and gets an <span class=
"NDLSystemFont"><a href="NiD3DTextureStageGroup.htm">NiD3DTextureStageGroup</a></span>
instance via the <span class="NDLSystemFont"><a href=
"NiD3DTextureStageGroup.htm">NiD3DTextureStageGroup</a>::GetFreeTextureStageGroup</span>
function. In general, it is a good idea to not directly create
<span class="NDLSystemFont">NiD3DTextureStage</span> objects, but
to call <span class="NDLSystemFont">CreateNewStage</span> to
obtain a stage from the pool of available stages.</p>

<p class="NDLRefHead1">Supported Static Member Functions</p>

<p class="NDLRefMemberFunction">static NiD3DTextureStagePtr
CreateNewStage()</p>

<p class="NDLRefMemberDescription">This function will return an
<span class="NDLSystemFont">NiD3DTextureStage</span> instance
from the pool of texture stages. This is provided to minimize
memory fragmentation. Note that the return value is an
<span class="NDLSystemFont">NiSmartPointer</span> to an
<span class="NDLSystemFont">NiD3DTextureStage</span> ; this means
that any code that calls this function must store the result in
an <span class="NDLSystemFont">NiSmartPointer</span> as well, or
the object will be immediately deleted, and the resulting pointer
will be invalid.</p>

<p class="NDLRefMemberFunction"><span style=
"color: #000000;">static void DisableStage(unsigned int
uiStage)</span></p>

<p class="NDLRefMemberDescription">Disables the given stage,
<span class="NDLSystemFont">uiStage</span>, on the device.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">unsigned int GetStage()</p>

<p class="NDLRefMemberDescription">Returns the stage index for
this instance.</p>

<p class="NDLRefMemberFunction"><a href=
"../../Reference/NiMain/NiTexture.htm">NiTexture*</a>
GetTexture()</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont"><a href=
"../../Reference/NiMain/NiTexture.htm">NiTexture</a></span>
instance set for this instance.</p>

<p class="NDLRefMemberFunction">unsigned int
GetTextureFlags()</p>

<p class="NDLRefMemberDescription">Returns the texture flags for
this instance. These flags can indicate an alternative texture
source other than the <span class=
"NDLSystemFont">m_spTexture</span> member. See <a href=
"../../Reference/NiMain/NiTextureStage.htm#TSTextureFlagsEnumerations">
TSTextureFlags Enumerations</a> for more information on these
flags.</p>

<p class="NDLRefMemberFunction">unsigned int
GetTextureTransformFlags()</p>

<p class="NDLRefMemberDescription">Returns the texture transform
flags for this instance. See <a href=
"../../Reference/NiMain/NiTextureStage.htm#TSTextureTransformFlagsEnumerations">
TSTextureTransformFlags Enumerations</a> for more information on
these flags.</p>

<p class="NDLRefMemberFunction">bool GetUseIndexFromMap()</p>

<p class="NDLRefMemberDescription">Returns <span class=
"NDLSystemFont">true</span> if the texture flags indicate that
the texture coordinate index should come from the <span class=
"NDLSystemFont"><a href=
"../../Reference/NiMain/NiTexturingProperty_Map.htm">NiTexturingProperty::Map</a></span>
rather than the <span class="NDLSystemFont">TEXCOORDINDEX</span>
stage state value.</p>

<p class="NDLRefMemberFunction">unsigned short
GetObjTextureFlags() const</p>

<p class="NDLRefMemberDescription">Returns the object-related
flags from this stage. See <a href=
"../../Reference/NiMain/NiTextureStage.htm#TSObjTextureFlagsEnumerations">
TSObjTextureFlags Enumerations</a> for more information on these
flags.</p>

<p class="NDLRefMemberFunction"><a href=
"NiD3DTextureStageGroup.htm">NiD3DTextureStageGroup</a>*
GetTextureStageGroup()</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont"><a href=
"NiD3DTextureStageGroup.htm">NiD3DTextureStageGroup</a></span>
instance for this stage.</p>

<p class="NDLRefMemberFunction">D3DMATRIX&amp;
GetTextureTransformation()</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont">D3DMATRIX</span> used for the texture
transform.</p>

<p class="NDLRefMemberFunction">void SetStage(unsigned int
uiStage)</p>

<p class="NDLRefMemberDescription">Sets the stage index.</p>

<p class="NDLRefMemberFunction">void SetTexture(<a href=
"../../Reference/NiMain/NiTexture.htm">NiTexture</a>*
pkTexture)</p>

<p class="NDLRefMemberDescription">Sets the <span class=
"NDLSystemFont">m_spTexture</span> pointer to the given
<span class="NDLSystemFont">pkTexture</span>.</p>

<p class="NDLRefMemberFunction">void
SetTextureTransformFlags(unsigned int uiFlags, const char*
pszGlobalName = 0)</p>

<p class="NDLRefMemberDescription">Sets the texture transform
flags to the given <span class="NDLSystemFont">uiFlags</span>. If
the flag indicates a global constant should be used, the name of
the global entry will be provided in the <span class=
"NDLSystemFont">pszGlobalName</span> parameter.</p>

<p class="NDLRefMemberFunction">void SetNDLMap(unsigned int
uiNDLMap)</p>

<p class="NDLRefMemberDescription">Sets the texture flags to
indicate the given texture should be used. See <a href=
"../../Reference/NiMain/NiTextureStage.htm#TSTextureFlagsEnumerations">
TSTextureFlags Enumerations</a> for more information on these
flags.</p>

<p class="NDLRefMemberFunction">void SetDecalMap(unsigned int
uiDecal)</p>

<p class="NDLRefMemberDescription">Sets the texture flags to
indicate the given decal texture should be used. See <a href=
"../../Reference/NiMain/NiTextureStage.htm#TSTextureFlagsEnumerations">
TSTextureFlags Enumerations</a> for more information on these
flags.</p>

<p class="NDLRefMemberFunction">void SetShaderMap(unsigned int
uiShaderMap)</p>

<p class="NDLRefMemberDescription">Sets the texture flags to
indicate the given shader map texture should be used. See
<a href="../../Reference/NiMain/NiTextureStage.htm#TSTextureFlagsEnumerations">
TSTextureFlags Enumerations</a> for more information on these
flags.</p>

<p class="NDLRefMemberFunction">void SetUseIndexFromMap(bool
bUse)</p>

<p class="NDLRefMemberDescription">If <span class=
"NDLSystemFont">bUse</span> is <span class=
"NDLSystemFont">true</span>, sets the texture flags to indicate
that the texture coordinate index from the <span class=
"NDLSystemFont"><a href=
"../../Reference/NiMain/NiTexturingProperty_Map.htm">NiTexturingProperty::Map</a></span>
should be used.</p>

<p class="NDLRefMemberFunction">void SetStageState(unsigned int
uiState, unsigned int uiValue,<br>
bool bSave = false)</p>

<p class="NDLRefMemberDescription">Sets the given texture stage
state, <span class="NDLSystemFont">uiState</span>, to the given
value, <span class="NDLSystemFont">uiValue</span>. If
<span class="NDLSystemFont">bSave</span> is <span class=
"NDLSystemFont">true</span>, the stage state will be restored
after the rendering pass is completed.</p>

<p class="NDLRefMemberFunction">void SetSamplerState(unsigned int
uiState, unsigned int uiValue, bool bSave = false)</p>

<p class="NDLRefMemberDescription">Sets the given texture sampler
state, <span class="NDLSystemFont">uiState</span>, to the given
value, <span class="NDLSystemFont">uiValue</span>. If
<span class="NDLSystemFont">bSave</span> is <span class=
"NDLSystemFont">true</span>, the sampler state will be restored
after the rendering pass is completed.</p>

<p class="NDLRefMemberFunction">void RemoveStageState(unsigned
int uiState)</p>

<p class="NDLRefMemberDescription">Removes the given stage state
from the texture stage group.</p>

<p class="NDLRefMemberFunction">void RemoveSamplerState(unsigned
int uiState)</p>

<p class="NDLRefMemberDescription">Removes the given sampler
state from the texture stage group.</p>

<p class="NDLRefMemberFunction">void
SetTextureTransformation(D3DMATRIX&amp; kD3DMat)</p>

<p class="NDLRefMemberDescription">Sets the texture
transformation matrix to the given <span class=
"NDLSystemFont">kD3DMat</span>.</p>

<p class="NDLRefMemberFunction">void
SetTextureTransformation(bool bUseTransform)</p>

<p class="NDLRefMemberDescription">Sets the boolean flag
indicating that the texture transformation matrix should be set
to the given <span class="NDLSystemFont">bUseTransform</span>
parameter.</p>

<p class="NDLRefMemberFunction">bool IsTextureTransformation()
const</p>

<p class="NDLRefMemberDescription">Returns <span class=
"NDLSystemFont">true</span> if the stage is applying a texture
transformation matrix.</p>

<p class="NDLRefMemberFunction">void SetClampMode(<a href=
"../../Reference/NiMain/NiTexturingProperty.htm#Texture_Clamping_Modes">
NiTexturingProperty::ClampMode</a> eClamp)</p>

<p class="NDLRefMemberDescription">Sets the clamp mode for the
stage to the given <span class="NDLSystemFont">eClamp</span>.</p>

<p class="NDLRefMemberFunction">void SetFilterMode(<a href=
"../../Reference/NiMain/NiTexturingProperty.htm#Texture_Filter_Modes">
NiTexturingProperty::FilterMode</a> eFilter)</p>

<p class="NDLRefMemberDescription">Sets the filter mode for the
stage to the given <span class=
"NDLSystemFont">eFilter</span>.</p>

<p class="NDLRefMemberFunction">void SetMaxAnisotropy(unsigned
short usMaxAnisotropyValue)</p>

<p class="NDLRefMemberDescription">Sets the maximum number of
anisotropic samples. The value is only used if the filter mode is
also set to anisotropic filtering.</p>

<p class="NDLRefMemberFunction">bool ConfigureStage()</p>

<p class="NDLRefMemberDescription">Called by <span class=
"NDLSystemFont"><a href=
"NiD3DPass.htm">NiD3DPass</a>::SetupRenderingPass</span>, this
function configures the current texture stage on the device.</p>

<p class="NDLRefMemberFunction">void DisableStage()</p>

<p class="NDLRefMemberDescription">Disables the stage.</p>

<p class="NDLRefMemberFunction">void ApplyTexture()</p>

<p class="NDLRefMemberDescription">Applies the texture for this
stage instance. The function will look at the texture flags to
determine the source of the texture.</p>

<p class="NDLRefMemberFunction">void ApplyTextureTransform()</p>

<p class="NDLRefMemberDescription">Applies the texture
transformation matrix, if required.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

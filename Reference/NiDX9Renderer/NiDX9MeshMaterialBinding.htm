<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiDX9MeshMaterialBinding</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiDX9MeshMaterialBinding</p>

<p class="NDLRefParentage">: public <a href=
"../../Reference/NiMain/NiRefObject.htm">NiRefObject</a></p>

<p class="NDLRefHeaderFile">
&lt;NiDX9MeshMaterialBinding.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiDX9MeshMaterialBinding</span> is
a class that wraps functionality needed to build a D3D vertex
declaration for an <a href=
"../../Reference/NiMain/NiRenderObject.htm"><span class=
"NDLSystemFont">NiRenderObject</span></a>.</p>

<p class="NDLRefHead1">Constructors</p>

<p>There are no public constructors for this class. The
<span class="NDLSystemFont">Create</span> function should be used
instead.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">LPDIRECT3DVERTEXDECLARATION
GetD3DDeclaration() const</p>

<p class="NDLRefMemberDescription">Returns the D3D vertex
declaration represented by this instance.</p>

<p class="NDLRefMemberFunction">void Invalidate()</p>

<p class="NDLRefMemberDescription">This function releases the
underlying D3D vertex declaration. It is called automatically in
the destructor.</p>

<p class="NDLRefHead1">Static Functions</p>

<p class="NDLRefMemberFunction">static
NiDX9MeshMaterialBindingPtr Create(const <a href=
"../../Reference/NiMesh/NiMesh.htm">NiMesh</a>* pkMesh, const
<a href=
"../../Reference/NiMain/NiSemanticAdapterTable.htm">NiSemanticAdapterTable</a>&amp;
kAdapterTable, bool bConvertBlendIndicesToD3DColor)</p>

<p class="NDLRefMemberDescription">This function should be used
in place of the constructor. If no binding can be created or the
D3D renderer fail to create a vertex declaration, then this
function will return NULL. The <span class=
"NDLSystemFont">bConvertBlendIndicesToD3DColor</span> parameter
indicates whether or not the shader will be expecting skinned
blend indices to be packed into the vertex buffer as D3DCOLOR
rather than as UBYTE4.</p>

<p class="NDLRefMemberFunction">static bool
FindPosition0Stream(D3DVERTEXELEMENT9* pkD3DVertexElements,
unsigned int &amp; uiPosition0StreamIndex)</p>

<p class="NDLRefMemberDescription">This function returns true if
and only if it can find a stream in <span class=
"NDLSystemFont">pkD3DVertexElements</span> that has a usage of
<span class="NDLSystemFont">D3DDECLUSAGE_POSITION</span> and a
usage index of 0. If this stream is found, then <span class=
"NDLSystemFont">uiPosition0StreamIndex</span> will be set to the
index of the stream and otherwise be unchanged.</p>

<p class="NDLRefMemberFunction">static bool
SwapStreamValues(D3DVERTEXELEMENT9* pkD3DVertexElements, unsigned
int uiValue0, unsigned int uiValue1)</p>

<p class="NDLRefMemberDescription">This static function swaps two
elements in a vertex stream. <span class=
"NDLSystemFont">uiValue0</span> and <span class=
"NDLSystemFont">uiValue1</span> are the values to swap. This
function returns true if and only if a swap was made.</p>

<p class="NDLRefMemberFunction">static NiUInt8
NumComponents_From_D3DDECLTYPE(D3DDECLTYPE eType)</p>

<p class="NDLRefMemberDescription">This function returns the
number of components required by <span class=
"NDLSystemFont">eType</span>, i.e. 4 for a <span class=
"NDLSystemFont">D3DDECLTYPE_FLOAT4</span>.</p>

<p class="NDLRefMemberFunction">static bool
D3DType_From_Format(const NiDataStreamElement::Format eFormat,
D3DDECLTYPE&amp; eD3DType)</p>

<p class="NDLRefMemberDescription">This utility function maps
Gamebryo formats to D3D formats. If a mapping can be found for
<span class="NDLSystemFont">eFormat</span>, then it will be
stored in <span class="NDLSystemFont">eD3DType</span> and the
function will return true. If a mapping cannot be found, then
this function will return false.</p>

<p class="NDLRefMemberFunction">static bool
D3DUsage_From_Semantic(const NiFixedString&amp; kSemantic,
D3DDECLUSAGE&amp; eD3DUsage)</p>

<p class="NDLRefMemberDescription">This utility function maps
Gamebryo semantics to D3D usages. If a usage can be found for
<span class="NDLSystemFont">kSemantic</span>, then the
corresponding D3D usage will be stored in <span class=
"NDLSystemFont">eD3DUsage</span>. If a mapping cannot be found,
then this function will return false.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

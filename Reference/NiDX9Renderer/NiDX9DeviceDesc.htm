<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiDX9DeviceDesc</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<p class="NDLRefHeadClassTitle">NiDX9DeviceDesc</p>

<p class="NDLRefHeaderFile">&lt;NiDX9SystemDesc.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiDX9DeviceDesc</span> 
 is a descriptor of the capabilities of a piece of 3D rendering hardware. 
 It includes functions that allow applications to query low-level D3D capabilities 
 and limitations, windowed/fullscreen support for 3D rendering, and supported/matching 
 frame buffer and depth/stencil formats.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberDescription">There are no public constructors, as only 
 the Gamebryo DX9 renderer should create instances of this class.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">const D3DCAPS9&amp; GetCaps() const</p>

<p class="NDLRefMemberDescription">Returns the D3D capabilities data structure 
 for the device.</p>

<p class="NDLRefMemberFunction">D3DDEVTYPE GetDeviceType() const</p>

<p class="NDLRefMemberDescription">Returns the D3D device type for the calling 
 device (<span class="NDLSystemFont">D3DDEVTYPE_*</span>).</p>

<p class="NDLRefMemberFunction">bool IsDeviceValid() const</p>

<p class="NDLRefMemberDescription">Returns <span class="NDLSystemFont">true</span> 
 if the given device data structure represents a valid 3D device, and <span 
 class="NDLSystemFont">false</span> if not. This function can be used to 
 validate a device. Note that devices retrieved from an <span class="NDLSystemFont">NiDX9AdapterDesc</span> 
 are validated prior to returning the device pointer.</p>

<p class="NDLRefMemberFunction">bool CanRenderWindowed() const</p>

<p class="NDLRefMemberDescription">Returns <span class="NDLSystemFont">true</span> 
 if the given device can render to a windowed display mode, and <span class="NDLSystemFont">false</span> 
 if the device can only render to fullscreen modes.</p>

<p class="NDLRefMemberFunction">const DisplayFormatInfo* GetFormatInfo(D3DFORMAT 
 eFormat) const</p>

<p class="NDLRefMemberDescription">Returns the Gamebryo DX9 display format 
 information structure for the given D3D rendering surface format enumeration 
 (<span class="NDLSystemFont">D3DFMT_*</span>). 
 If the device does not support rendering to the given format, the function 
 will return NULL.</p>

<p class="NDLRefMemberFunction">NiDX9Renderer::FrameBufferFormat GetNearestFrameBufferFormat(bool bWindowed, 
 unsigned int uiDesiredBPP) const</p>

<p class="NDLRefMemberDescription">Returns the Gamebryo frame buffer format 
 flag representing the nearest supported framebuffer format. The function 
 attempts to match the given windowed/fullscreen flag and color depth. 
 The returned format is the closest format to the given values that can 
 be supported as a rendering target by the calling device. If no reasonable 
 matching format can be found, the function will return <span class="NDLSystemFont">FBFMT_UNKNOWN</span>.</p>

<p class="NDLRefMemberFunction">NiDX9Renderer::DepthStencilFormat GetNearestDepthStencilFormat(D3DFORMAT eAdapterMode, 
 D3DFORMAT eFBFormat, unsigned int uiDesiredDepthBPP, unsigned int uiDesiredStencilBPP) const</p>

<p class="NDLRefMemberDescription">Attempts to 
 match a supported depth/stencil buffer format to the given input data. 
 Because depth/stencil matching must take display mode and frame buffer 
 format into account, there are more parameters to this function than to 
 the frame buffer matching function above. The <span class="NDLSystemFont">eAdapterMode</span> parameter must be the adapter's display mode 
 (<span class="NDLSystemFont">D3DFMT_*</span>), 
 which may differ from the frame buffer render target mode. The frame buffer 
 mode must be sent in as <span class="NDLSystemFont">eFBFormat</span> (<span class="NDLSystemFont">D3DFMT_*</span>). The final two parameters are the desired depth buffer and stencil buffer pixel depths in bits per pixel.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

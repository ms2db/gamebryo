<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>W-Buffering Support</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>W-Buffering Support</h1>

<p>W-buffering is a depth buffering system that can often
alleviate Z-buffer inaccuracy problems when using
lower-resolution Z-buffers. On hardware that supports
W-buffering, the <span class="NDLSystemFont">NiDX9Renderer</span>
will use it when using 16-bit Z-buffers, unless disabled with
<span class=
"NDLSystemFont">NiRenderer::SetUseWBuffer(false)</span>. When
32-bit Z-buffers are being used, W-buffering is disabled by
default, unless enabled with <span class=
"NDLSystemFont">NiRenderer::SetUseWBuffer(true)</span>.
W-buffering uses a more even world-space distribution of depth
accuracy than does Z-buffering, and can fix many of the "saw
tooth" and "flashing" artifacts that are seen on 16-bit Z-buffers
with objects at a distance. Not all hardware supports this
feature, so applications must be prepared to adjust the ratio
between their near and far planes to be closer to one-to-one,
which will avoid the appearance of artifacts on 16-bit
Z-buffers.</p>

<p>As an example, with a 16-bit Z-buffer, artifacts can be seen
with a near plane of 10.0 and a far plane of 35,000.0, whereas
the same scene on a 16-bit w-buffer can be drawn with near and
far values of 1.0 and 35,000.0 without any visible artifacts.
Note that both of these settings require calling <span class=
"NDLSystemFont">NiCamera::SetMaxFarNearRatio(1e7)</span>, as by
default the Gamebryo camera class automatically resets the near
plane if near divided by far is greater than 10,000.</p>

<p>Applications can determine whether or not the renderer can
support W-buffering by checking the <span class=
"NDLSystemFont">NiRenderer::CAPS_WBUFFER</span> flag in the value
returned by <span class=
"NDLSystemFont">NiRenderer::GetFlags</span>.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

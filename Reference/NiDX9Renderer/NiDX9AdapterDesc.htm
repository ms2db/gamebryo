<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiDX9AdapterDesc</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<p class="NDLRefHeadClassTitle">NiDX9AdapterDesc</p>

<p class="NDLRefHeaderFile">&lt;NiDX9SystemDesc.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiDX9AdapterDesc</span> 
 is designed to represent the capabilities and limitations of a given piece 
 of display hardware (3D hardware card or on-board motherboard video) as 
 attached to the system. This information includes a string description 
 of the hardware, the descriptors for the rendering devices supported by 
 the adapter, and the display modes and rendering formats supported by 
 the adapter. This class is most useful for determining the available screen 
 modes, which are a property of the adapter, as opposed to many of the 
 3D capabilities, which are properties of the rendering device.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberDescription">There are no public constructors, as only 
 the Gamebryo DX9 renderer should create instances of this class.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">unsigned&nbsp;int GetAdapterIndex() const</p>

<p class="NDLRefMemberDescription">Returns the index/identifier of this adapter. 
 This is used by Gamebryo to uniquely identify the adapter.</p>

<p class="NDLRefMemberFunction">const&nbsp;char* GetStringDescription() const</p>

<p class="NDLRefMemberDescription">Returns a string description of the adapter 
 (commonly the make and model identifier of the graphics card.)</p>

<p class="NDLRefMemberFunction">const&nbsp;D3DADAPTER_IDENTIFIER9&amp; GetAdapterIdentifier()</p>

<p class="NDLRefMemberDescription">Returns the D3D description structure 
 for the adapter, which includes detailed low-level driver version information. 
 The WHQL driver qualification information (which is an element of the 
 data structure) is not valid in the structure as returned by this function 
 (querying this information is computationally expensive, and can be queried 
 at any time by the application).</p>

<p class="NDLRefMemberFunction">const&nbsp;NiDX9DeviceDesc* GetDevice(D3DDEVTYPE&nbsp;devType) 
 const</p>

<p class="NDLRefMemberDescription">Allows direct access to a specific device's 
 Gamebryo device descriptor on the given adapter using the Direct3D device 
 type identifier enumerations (<span class="NDLSystemFont">D3DDEVTYPE_*</span>). 
 The function returns NULL if the selected device is invalid.</p>

<p class="NDLRefMemberFunction">const&nbsp;D3DCAPS9* GetDeviceCaps(D3DDEVTYPE&nbsp;devType) 
 const</p>

<p class="NDLRefMemberDescription">Allows direct access to a specific device's 
 D3D device capabilities descriptor on the given adapter using the Direct3D 
 device type identifier enumerations (<span class="NDLSystemFont">D3DDEVTYPE_*</span>). 
 This is a convenience function to avoid having to query the device.</p>

<p class="NDLRefMemberFunction">bool CanDeviceRenderWindowed(D3DDEVTYPE&nbsp;devType) 
 const</p>

<p class="NDLRefMemberDescription">Returns a Boolean flag as to whether or 
 not a specific device on the given adapter (using the Direct3D device 
 type identifier enumerations  <span class="NDLSystemFont">D3DDEVTYPE_*</span>) 
 can render to a windowed screen mode.</p>

<p class="NDLRefMemberFunction">ModeDesc* ValidateFullscreenMode(D3DFORMAT&nbsp;eFormat, 
 unsigned&nbsp;uiWidth, unsigned&nbsp;uiHeight, unsigned&nbsp;int&amp;&nbsp;uiRefreshRate) 
 const</p>

<p class="NDLRefMemberDescription">Validates the given potential fullscreen 
 display mode for use on the calling adapter. It returns a matching Gamebryo 
 DX9 mode descriptor if the format, width and height can be matched directly, 
 and NULL if not. The function returns the closest matching refresh rate 
 to the given refresh rate via the in/out parameter <span class="NDLSystemFont">uiRefreshRate</span>. An exact 
 match of refresh rate is not required for success.</p>

<p class="NDLRefMemberFunction">unsigned&nbsp;int GetModeCount() const</p>

<p class="NDLRefMemberDescription">Returns the number of valid display modes 
 (width, height, depth) for the adapter. Valid mode indices range from 
 0 to the return value of this function minus one.</p>

<p class="NDLRefMemberFunction">const&nbsp;ModeDesc* GetMode(unsigned&nbsp;int&nbsp;uiMode) 
 const</p>

<p class="NDLRefMemberDescription">Returns the Gamebryo DX9 display mode 
 descriptor at the given index. The valid values are given by the mode 
 count function above. All available modes may be queried from this function.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

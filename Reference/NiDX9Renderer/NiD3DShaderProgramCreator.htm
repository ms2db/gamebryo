<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiD3DShaderProgramCreator</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiD3DShaderProgramCreator</p>

<p class="NDLRefParentage">: public <a href="../../Reference/NiSystem/NiMemObject.htm">NiMemObject</a></p>

<p class="NDLRefHeaderFile">&lt;NiD3DShaderProgramCreator.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiD3DShaderProgramCreator</span> 
 is the base class for structures that are able to generate <span class="NDLSystemFont"><a HREF="NiD3DShaderProgram.htm">NiD3DShaderProgram</a></span> objects, usually 
 by reading in files that contain the shader in some format. This is the 
 mechanism that Gamebryo uses to support a variety of shader program formats.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberDescription">This class has no public constructors.</p>

<p class="NDLRefHead1">Static Member Functions</p>

<p class="NDLRefMemberFunction">static unsigned int GetUniversalShaderCreationFlags()</p>

<p class="NDLRefMemberFunction">static void SetUniversalShaderCreationFlags(unsigned 
 int uiFlags)</p>

<p class="NDLRefMemberDescription">Set and retrieve an <span class="NDLSystemFont">unsigned 
 int</span> value that will be used by all derived classes, to be passed 
 into every shader program creation function. Each derived class has the 
 responsibility of ensuring that only the flags that have meaning are used 
 in that class's specific context. These functions allow an application 
 to make one call, after which all shader programs created will, for instance, 
 be created with debugging enabled and shader optimization disabled.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual unsigned int GetShaderCreationFlags() 
 const</p>

<p class="NDLRefMemberFunction">virtual void SetShaderCreationFlags(unsigned 
 int uiFlags)</p>

<p class="NDLRefMemberDescription">Set and retrieve an <span class="NDLSystemFont">unsigned 
 int</span> value that will be used by a specific derived class, to be 
 passed into its own shader program creation function. Each derived class 
 has the responsibility of ensuring that only the flags that have meaning 
 are used in that class's specific context. These functions allow an application 
 to specify flags to be used during the creation of specific shader program 
 types.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Using Direct3D Textures with Gamebryo in DX9</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Using Direct3D Textures with Gamebryo in DX9</h1>

<p>Applications have the ability to provide their own Direct3D
textures to Gamebryo and let the engine wrap the textures in
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiTexture.htm">NiTexture</a></span>
objects that allow the textures to be used on Gamebryo objects.
They can do this using the function <span class=
"NDLSystemFont">NiDX9Renderer::CreateNiTextureFromD3DTexture</span>,
which takes an <span class=
"NDLSystemFont">LPDIRECT3DBASETEXTURE9</span> and returns an
<span class="NDLSystemFont">NiTexturePtr</span>. The resulting
texture can be attached to <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiTexturingProperty.htm">NiTexturingProperty</a></span>
objects and <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiTextureEffect.htm">NiTextureEffect</a></span>
objects, for use in either the fixed-function pipeline or with an
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShader.htm">NiShader</a></span>.</p>

<p>By providing their own Direct3D textures, applications can
make use of any texture that the hardware supports, even if
Gamebryo does not support it natively. For example, volume
textures, advanced texture formats, and irregularly-sized
textures can be created as Direct3D textures and wrapped in an
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiTexture.htm">NiTexture</a></span>, and
the renderer will automatically use the texture correctly.</p>

<p>Another use of this feature is the creation of Direct3D
textures that are created in unconventional manners, such as
static textures that use the <span class=
"NDLSystemFont">D3DPOOL_DEFAULT</span> pool. In order to support
circumstances where the texture must be released and recreated,
such as around a device reset, the function <span class=
"NDLSystemFont">NiDX9Renderer::RecreateNiTextureFromD3DTexture</span>
can be used to reinitialize an existing texture that has been
created using <span class=
"NDLSystemFont">NiDX9Renderer::CreateNiTextureFromD3DTexture</span>
with a new Direct3D texture. <span class=
"NDLSystemFont">NiRenderer::PurgeTexture</span> can be used to
release the D3D texture before the device reset.</p>

<p>Note that like <a href=
"../../Reference/NiMain/NiRenderedTexture.htm"><span class=
"NDLSystemFont">NiRenderedTexture</span></a> objects, any
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiTexture.htm">NiTexture</a></span>
objects created using this mechanism will not be correctly
streamed.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

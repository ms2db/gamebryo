<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ecrInput::InputServiceDPad</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">ecrInput::InputServiceDPad</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="ecrInput__InputServiceActionBase.htm">ecrInput::InputServiceActionBase</a></span></p>


<p class="NDLRefHeaderFile">&lt;InputServiceDPad.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classecr_input_1_1_input_service_d_pad.gif" alt="Inheritance graph for ecrInput::InputServiceDPad"/>
  <p class="FigureCaption">Inheritance graph for ecrInput::InputServiceDPad</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class processes a directional pad action. </p>
<p class="NDLNormal">This action can be assigned to game pad left or right D-Pad, emulated on keyboard using 3 presets (arrow keys, numpad arrows, wsad) or can be formed from any 4 buttons specified as custom semantics. All 4 custom buttons must be on the same device. The D-Pad is always device-specific, so device id must be properly set. If requested by flags, the action will check the device modifiers.</p>
<p class="NDLNormal">The returned magnitude is always 1.0. X and Y specify a point on unit circle and Z is always 0.0. </p>

<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classecr_input_1_1_input_service_d_pad_1acf981ecfdd45b2b5f644e570fef74514"></a>
<p class="NDLRefMemberFunction">static void  LoadTranslationMap()</p>
<p class="NDLRefMemberDescription">Load string -&gt; value translation maps for actions and modifiers. </p>

<a name="classecr_input_1_1_input_service_d_pad_1a53cc857aeefaff77e444236ef4a8cbb1"></a>
<p class="NDLRefMemberFunction">static void  UnloadTranslationMap()</p>
<p class="NDLRefMemberDescription">Unload translation maps for actions and modifiers. </p>
<a name="action_data_getters_and_setters."></a>
<p class="NDLRefHead1">Action data getters and setters.</p>


<a name="classecr_input_1_1_input_service_d_pad_1a2378d09011b371b8960dc6e9bb05a601"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="ecrInput__InputService.htm#classecr_input_1_1_input_service_1a0ab98d7ec15fec7ceb3203205c297c59">InputService::DPadType</a></span>  GetType() const</p>
<p class="NDLRefMemberDescription">Returns the type of D-Pad. </p>

<a name="classecr_input_1_1_input_service_d_pad_1af1c1d1ae193d0279d84f86603e5db91c"></a>
<p class="NDLRefMemberFunction">void  SetType(<span class="NDLSystemFont"><a href="ecrInput__InputService.htm#classecr_input_1_1_input_service_1a0ab98d7ec15fec7ceb3203205c297c59">InputService::DPadType</a></span> pad)</p>
<p class="NDLRefMemberDescription">Sets the type of D-Pad. </p>

<a name="classecr_input_1_1_input_service_d_pad_1a1cb321565ea3f4da0152393a2cf5d906"></a>
<p class="NDLRefMemberFunction">void  GetCustomSemantic(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& upSemantic, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& downSemantic, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& leftSemantic, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>& rightSemantic) const</p>
<p class="NDLRefMemberDescription">Returns the D-Pad custom semantics. </p>

<a name="classecr_input_1_1_input_service_d_pad_1a0f882284e8712bb744eeadfacef2fb07"></a>
<p class="NDLRefMemberFunction">void  SetCustomSemantic(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> upSemantic, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> downSemantic, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> leftSemantic, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> rightSemantic)</p>
<p class="NDLRefMemberDescription">Sets the D-Pad custom semantics. </p>
<a name="construction_and_destruction."></a>
<p class="NDLRefHead1">Construction and Destruction.</p>


<a name="classecr_input_1_1_input_service_d_pad_1a899294d119388b87e164edba69c47226"></a>
<p class="NDLRefMemberFunction">InputServiceDPad()</p>
<p class="NDLRefMemberDescription">Default Constructor. </p>

<a name="classecr_input_1_1_input_service_d_pad_1ada423beb58011e9ba1e547ffdc871dd2"></a>
<p class="NDLRefMemberFunction">InputServiceDPad(<br/><span class="NDLSystemFont"><a href="ecrInput__InputService.htm#classecr_input_1_1_input_service_1a0ab98d7ec15fec7ceb3203205c297c59">InputService::DPadType</a></span> pad, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> flags, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> appData = 0, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> deviceID = 0, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> modifiers = 0, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> upSemantic = 0, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> downSemantic = 0, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> leftSemantic = 0, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> rightSemantic = 0)</p>
<p class="NDLRefMemberDescription">Initializing Constructor. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pad</span></td>
    <td>Pad type, from <span class="NDLSystemFont"><a href="ecrInput__InputService.htm#classecr_input_1_1_input_service_1a0ab98d7ec15fec7ceb3203205c297c59">ecrInput::InputService::DPadType</a></span>. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">flags</span></td>
    <td>An ORed combination of <span class="NDLSystemFont"><a href="ecrInput__InputService.htm#classecr_input_1_1_input_service_1a9c3c71e808b76618c57757b9c7864c4b">ecrInput::InputService::ActionFlags</a></span>. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">appData</span></td>
    <td>User-specified data. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">deviceID</span></td>
    <td>Device on which this action should be checked. Typically, deviceID is always 0 for keyboard and mouse, and may be 0 to NiInputSystem::MAX_GAMEPADS for GamePads. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">modifiers</span></td>
    <td>Modifiers for this action. These should be an ORed combination of modifiers specific to the device type, taken from one of <span class="NDLSystemFont"><a href="../NiInput/NiInputKeyboard.htm">NiInputKeyboard::Modifiers</a></span> or <span class="NDLSystemFont"><a href="../NiInput/NiInputMouse.htm">NiInputMouse::Modifiers</a></span> (there are no modifiers for GamePad input). </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">upSemantic</span></td>
    <td>Semantic of up button for custom D-Pad. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">downSemantic</span></td>
    <td>Semantic of down button for custom D-Pad. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">leftSemantic</span></td>
    <td>Semantic of left button for custom D-Pad. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">rightSemantic</span></td>
    <td>Semantic of right button for custom D-Pad. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_input_1_1_input_service_d_pad_1aaccf0b6fa46e6f5d612665086ef7bbdc"></a>
<p class="NDLRefMemberFunction">virtual ~InputServiceDPad()</p>
<p class="NDLRefMemberDescription">Virtual Destructor. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

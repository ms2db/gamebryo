<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ecrInput::InputServiceActionBase</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">ecrInput::InputServiceActionBase</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__MemObject.htm">efd::MemObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;InputServiceActionBase.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classecr_input_1_1_input_service_action_base.gif" alt="Inheritance graph for ecrInput::InputServiceActionBase"/>
  <p class="FigureCaption">Inheritance graph for ecrInput::InputServiceActionBase</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class is abstract; it defines the interface for Input Service actions. </p>
<p class="NDLNormal">The main purpose of this class is to define an interface for actions and to provide common functionality such as checking action device types and assigning device ids, modifiers and action flags. </p>

<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classecr_input_1_1_input_service_action_base_1aa5a9a560827288c3072146f747b98f42"></a>
<p class="NDLRefMemberFunction">static void  LoadTranslationMap()</p>
<p class="NDLRefMemberDescription">Load string -&gt; value translation maps for actions and modifiers. </p>

<a name="classecr_input_1_1_input_service_action_base_1a8c4c77bee278f69abcbaeda4af4ec830"></a>
<p class="NDLRefMemberFunction">static void  UnloadTranslationMap()</p>
<p class="NDLRefMemberDescription">Unload translation maps for actions and modifiers. </p>
<a name="action_data_getters_and_setters."></a>
<p class="NDLRefHead1">Action data getters and setters.</p>


<a name="classecr_input_1_1_input_service_action_base_1a99e9a92086e59b2461eee5decd1ed2ac"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetFlags() const</p>
<p class="NDLRefMemberDescription">Get action flags. </p>
<p class="NDLRefMemberDetailedDescription">The return value is an ORed combination of flags from <span class="NDLSystemFont"><a href="ecrInput__InputService.htm#classecr_input_1_1_input_service_1a9c3c71e808b76618c57757b9c7864c4b">ecrInput::InputService::ActionFlags</a></span>. </p>

<a name="classecr_input_1_1_input_service_action_base_1a2f7f2bad607c3ce0afd83a5b77c1223c"></a>
<p class="NDLRefMemberFunction">void  SetFlags(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> flags)</p>
<p class="NDLRefMemberDescription">Set action flags. </p>
<p class="NDLRefMemberDetailedDescription">The parameter is an ORed combination of flags from <span class="NDLSystemFont"><a href="ecrInput__InputService.htm#classecr_input_1_1_input_service_1a9c3c71e808b76618c57757b9c7864c4b">ecrInput::InputService::ActionFlags</a></span>. </p>

<a name="classecr_input_1_1_input_service_action_base_1a76697d1f642cc9820334b7b5d62fdf2d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetAppData() const</p>
<p class="NDLRefMemberDescription">Get action flags. </p>
<p class="NDLRefMemberDetailedDescription">The return value is an ORed combination of flags from <span class="NDLSystemFont"><a href="ecrInput__InputService.htm#classecr_input_1_1_input_service_1a9c3c71e808b76618c57757b9c7864c4b">ecrInput::InputService::ActionFlags</a></span>. </p>

<a name="classecr_input_1_1_input_service_action_base_1a9debbf82ed0037e755ba56acb2488f24"></a>
<p class="NDLRefMemberFunction">void  SetAppData(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> appData)</p>
<p class="NDLRefMemberDescription">Set user-defined data. </p>

<a name="classecr_input_1_1_input_service_action_base_1a3d06c9c7d918f6a3d6e0d84798a589c9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetDeviceID() const</p>
<p class="NDLRefMemberDescription">Get ID of the device on which the action is checked. </p>
<p class="NDLRefMemberDetailedDescription">This makes sense only if the ecrInput::InputService::ActionFlags::DEVICE_SPECIFIC flag is set. See <span class="NDLSystemFont"><a href="../NiInput/NiInputSystem.htm">NiInputSystem::DeviceIDPort</a></span>, <span class="NDLSystemFont"><a href="../NiInput/NiInputSystem.htm">NiInputSystem::DeviceIDSlot</a></span> and NiInputSystem::GetDeviceDescription for information on interpreting this value. </p>

<a name="classecr_input_1_1_input_service_action_base_1ad0b3f96eb0f9761c7e61f610ba847219"></a>
<p class="NDLRefMemberFunction">void  SetDeviceID(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> deviceID)</p>
<p class="NDLRefMemberDescription">Set ID of the device on which the action is checked. </p>
<p class="NDLRefMemberDetailedDescription">This makes sense only if the ecrInput::InputService::ActionFlags::DEVICE_SPECIFIC flag is set. Typically, deviceID is always 0 for keyboard and mouse, and may be 0 to NiInputSystem::MAX_GAMEPADS for GamePads. </p>

<a name="classecr_input_1_1_input_service_action_base_1a5f5b691292dc023e932839047c0a487e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetModifiers() const</p>
<p class="NDLRefMemberDescription">Get device modifiers. </p>
<p class="NDLRefMemberDetailedDescription">This makes sense only if the ecrInput::InputService::ActionFlags::USE_MODIFIERS flag is set. The return value is an ORed combination of <span class="NDLSystemFont"><a href="../NiInput/NiInputKeyboard.htm">NiInputKeyboard::Modifiers</a></span> or <span class="NDLSystemFont"><a href="../NiInput/NiInputMouse.htm">NiInputMouse::Modifiers</a></span>, depending on the device type. </p>

<a name="classecr_input_1_1_input_service_action_base_1a2c422b8005f846a466521260675c2925"></a>
<p class="NDLRefMemberFunction">void  SetModifiers(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> modifiers)</p>
<p class="NDLRefMemberDescription">Set device modifiers. </p>
<p class="NDLRefMemberDetailedDescription">This makes sense only if the ecrInput::InputService::ActionFlags::USE_MODIFIERS flag is set. The parameter is an ORed combination of <span class="NDLSystemFont"><a href="../NiInput/NiInputKeyboard.htm">NiInputKeyboard::Modifiers</a></span> or <span class="NDLSystemFont"><a href="../NiInput/NiInputMouse.htm">NiInputMouse::Modifiers</a></span>, depending on the device type. </p>
<a name="construction_and_destruction."></a>
<p class="NDLRefHead1">Construction and Destruction.</p>


<a name="classecr_input_1_1_input_service_action_base_1ae8a057366ceaf7d9dcbaca130b9e027d"></a>
<p class="NDLRefMemberFunction">InputServiceActionBase()</p>
<p class="NDLRefMemberDescription">Default constructor. </p>

<a name="classecr_input_1_1_input_service_action_base_1ad9bfe2582ccc7b114f57d80cd6592113"></a>
<p class="NDLRefMemberFunction">InputServiceActionBase(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> actionFlags, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> appData = 0, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> deviceID = 0, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> deviceModifiers = 0)</p>
<p class="NDLRefMemberDescription">Initializing constructor. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">actionFlags</span></td>
    <td>Flags that define when the action is triggered, is it a device specific action, and whether and how it checks modifiers and range. These flags must be an ORed combination of <span class="NDLSystemFont"><a href="ecrInput__InputService.htm#classecr_input_1_1_input_service_1a9c3c71e808b76618c57757b9c7864c4b">ecrInput::InputService::ActionFlags</a></span>. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">appData</span></td>
    <td>User-defined data. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">deviceID</span></td>
    <td>The device on which this action occurs. Typically, deviceID is always 0 for keyboard and mouse, and may be 0 to NiInputSystem::MAX_GAMEPADS for GamePads. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">deviceModifiers</span></td>
    <td>The modifiers that must be matched for the action to execute. These should be an ORed combination of modifiers specific to the device type, taken from one of <span class="NDLSystemFont"><a href="../NiInput/NiInputKeyboard.htm">NiInputKeyboard::Modifiers</a></span> or <span class="NDLSystemFont"><a href="../NiInput/NiInputMouse.htm">NiInputMouse::Modifiers</a></span> (there are no modifiers for GamePad input). </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_input_1_1_input_service_action_base_1ac3969d608e099fb1107ab0bce809ebb1"></a>
<p class="NDLRefMemberFunction">virtual ~InputServiceActionBase()</p>
<p class="NDLRefMemberDescription">Virtual destructor. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

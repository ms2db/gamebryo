<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ecrInput::InputServiceEvent</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">ecrInput::InputServiceEvent</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__MemObject.htm">efd::MemObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;InputServiceEvent.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classecr_input_1_1_input_service_event.gif" alt="Inheritance graph for ecrInput::InputServiceEvent"/>
  <p class="FigureCaption">Inheritance graph for ecrInput::InputServiceEvent</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This class represents an event. </p>
<p class="NDLNormal">An event contains one or more actions and sends messages if the actions are triggered in the way specified by event flags. The type of message sent can also be specified by the event flags.</p>
<p class="NDLNormal">The magnitude field of an event message has a varied interpretation depending on the event flags. For ACTION_COMBO events, the magnitude is the time it took for all of the sequence to be activated. For ACTION_AND events, the magnitude is that of the last action in the event. For other events (OR), the magnitude is that of the first action that was found active. The coordinates in a message are those from the last action to activate in an ACTION_COMBO or ACTION_AND, or whichever action activated in the OR case. </p>

<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classecr_input_1_1_input_service_event_1a42739180eefd3ecc658f0d13fd69fb76"></a>
<p class="NDLRefMemberFunction">static void  LoadTranslationMap()</p>
<p class="NDLRefMemberDescription">Load translation maps for event flags and action classes. </p>

<a name="classecr_input_1_1_input_service_event_1ac1f0f604214b04890f9c99b80a9ae7c7"></a>
<p class="NDLRefMemberFunction">static void  UnloadTranslationMap()</p>
<p class="NDLRefMemberDescription">Unload translation maps for event flags and action classes. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classecr_input_1_1_input_service_event_1ae2e8f0d6b5bd18f9bb2e8ceec56d7dd6"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  AddAction(<span class="NDLSystemFont"><a href="ecrInput__InputServiceActionBase.htm">InputServiceActionBase</a></span>* pAction)</p>
<p class="NDLRefMemberDescription">Add an action to this event. Once added, this event owns the action pointer. </p>

<a name="classecr_input_1_1_input_service_event_1a7471065b36c73312bbbc3047d749c665"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetActionCount()</p>
<p class="NDLRefMemberDescription">Returns the number of actions in this event. </p>

<a name="classecr_input_1_1_input_service_event_1aff9b961be7685130c490f44b4ba98706"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="ecrInput__InputServiceActionBase.htm">InputServiceActionBase</a></span>*  GetActionAt(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> idx)</p>
<p class="NDLRefMemberDescription">Returns the action at the given index. </p>

<a name="classecr_input_1_1_input_service_event_1af13d8af374fe193b07a8a5268208af57"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  RemoveActionAt(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> idx)</p>
<p class="NDLRefMemberDescription">Removes the action at the given index. </p>

<a name="classecr_input_1_1_input_service_event_1a52adb1c4f580624eadc382366ec28b24"></a>
<p class="NDLRefMemberFunction">void  RemoveAllActions()</p>
<p class="NDLRefMemberDescription">Removes all actions. </p>

<a name="classecr_input_1_1_input_service_event_1a430f53b989d637b0c6a85a2215132588"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span>  GetMsgCategory() const</p>
<p class="NDLRefMemberDetailedDescription">Returns the category of the message </p>

<a name="classecr_input_1_1_input_service_event_1a0ad92b25845a59ad33b2579885645d55"></a>
<p class="NDLRefMemberFunction">void  SetMsgCategory(const <span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span>& msgType)</p>
<p class="NDLRefMemberDescription">Sets the category of the message. </p>

<a name="classecr_input_1_1_input_service_event_1a344fae4ded41b0c23b8c78d4f238ebb0"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetFlags() const</p>
<p class="NDLRefMemberDescription">Returns the event flags. </p>
<p class="NDLRefMemberDetailedDescription">The return value is an ORed combination of <span class="NDLSystemFont"><a href="ecrInput__InputService.htm#classecr_input_1_1_input_service_1ac790b43bcc1586b26ca086cb2a91ca8c">ecrInput::InputService::EventFlags</a></span>. </p>

<a name="classecr_input_1_1_input_service_event_1a28fd3f37988104837c174321d8276824"></a>
<p class="NDLRefMemberFunction">void  SetFlags(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> flags)</p>
<p class="NDLRefMemberDescription">Sets event flags. </p>
<p class="NDLRefMemberDetailedDescription">The parameter must be an ORed combination of <span class="NDLSystemFont"><a href="ecrInput__InputService.htm#classecr_input_1_1_input_service_1ac790b43bcc1586b26ca086cb2a91ca8c">ecrInput::InputService::EventFlags</a></span>. </p>

<a name="classecr_input_1_1_input_service_event_1a1b8b2ded0a0687eea078bff5478044cc"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  GetTimeout() const</p>
<p class="NDLRefMemberDescription">Returns the timeout for combo events. </p>

<a name="classecr_input_1_1_input_service_event_1a486f7cb15d1b5299b8890cd888378a1b"></a>
<p class="NDLRefMemberFunction">void  SetTimeout(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> timeout)</p>
<p class="NDLRefMemberDescription">Sets the timeout for combo events. </p>
<a name="construction_and_destruction."></a>
<p class="NDLRefHead1">Construction and Destruction.</p>


<a name="classecr_input_1_1_input_service_event_1ad17329bd750ac4972e99cd0d42e7d6a2"></a>
<p class="NDLRefMemberFunction">InputServiceEvent(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span>& msgCat, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> flags, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> timeout = 1.0f)</p>
<p class="NDLRefMemberDescription">Constructor. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">msgCat</span></td>
    <td>Category for these messages. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">flags</span></td>
    <td>Flags to use for triggering this event. An ORed combination of <span class="NDLSystemFont"><a href="ecrInput__InputService.htm#classecr_input_1_1_input_service_1ac790b43bcc1586b26ca086cb2a91ca8c">ecrInput::InputService::EventFlags</a></span>. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">timeout</span></td>
    <td>Combo timeout. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_input_1_1_input_service_event_1aea0bb5de45bad772d727b5dbbd1c29ff"></a>
<p class="NDLRefMemberFunction">virtual ~InputServiceEvent()</p>
<p class="NDLRefMemberDescription">Virtual destructor. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

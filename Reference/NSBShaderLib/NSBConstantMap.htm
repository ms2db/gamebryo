<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NSBConstantMap</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NSBConstantMap</p>

<p class="NDLRefHeaderFile">&lt;NSBConstantMap.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NSBConstantMap</span> represents a
shader constant mapping in the Gamebryo binary shader format. The
usage flag indicates whether the mapping is for a pixel shader
program or a vertex shader program.</p>

<p class="NDLRefHead1">NSBConstantMap::NSBCM_Entry</p>

<p>This internal class is just a wrapper around the <span class=
"NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderConstantMapEntry.htm">NiShaderConstantMapEntry</a></span>
class that adds streaming capabilities. When using an
<span class="NDLSystemFont">NSBCM_Entry</span> instance, just
treat it like an <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderConstantMapEntry.htm">NiShaderConstantMapEntry</a></span>
instance.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NSBConstantMap()</p>

<p class="NDLRefMemberDescription">The constructor for
<span class="NDLSystemFont">NSBConstantMap</span> creates an
'empty' mapping.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

    inline const char* GetName() const;
    void SetName(const char* pcName);
<p class="NDLRefMemberFunction">const char* GetName() const</p>

<p class="NDLRefMemberDescription">Returns the constant map name.</p>

<p class="NDLRefMemberFunction">void SetName(const char* pcName)</p>

<p class="NDLRefMemberDescription">Sets the constant map name.</p>

<p class="NDLRefMemberFunction">unsigned int GetProgramType()</p>

<p class="NDLRefMemberDescription">Returns the usage flag (from
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderConstantMap.htm">NiShaderConstantMap</a></span>)
for the constant map.</p>

<p class="NDLRefMemberFunction">void SetProgramType(unsigned int
uiUsage)</p>

<p class="NDLRefMemberDescription">Sets the usage (from
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderConstantMap.htm">NiShaderConstantMap</a></span>)
for the constant map.</p>

<p class="NDLRefMemberFunction">unsigned int
GetGlobalEntryCount()</p>

<p class="NDLRefMemberDescription">Returns the number of global
entries in the map.</p>

<p class="NDLRefMemberFunction">unsigned int
GetPlatformEntryCount(<a href=
"../../Reference/NiMain/NiShader.htm#Platform_Enumeration">NiShader::Platform</a>
ePlatform)</p>

<p class="NDLRefMemberDescription">Returns the number of entries
in the platform-specific entry map for the given <span class=
"NDLSystemFont">ePlatform</span>.</p>

<p class="NDLRefMemberFunction">unsigned int
GetTotalEntryCount()</p>

<p class="NDLRefMemberDescription">Returns the number of entries
in the map.</p>

<p class="NDLRefMemberFunction">bool AddEntry(char* pcKey,
unsigned int uiFlags, unsigned int uiExtra, unsigned int uiReg,
unsigned int uiCount, char* pcVariableName, unsigned int uiSize =
0, unsigned int uiStride = 0, void* pvSource = 0, bool bCopyData
= false)</p>

<p class="NDLRefMemberDescription">Creates an entry using the
given parameters and adds it to the map. See <span class=
"NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderConstantMapEntry.htm">NiShaderConstantMapEntry</a></span>
for details on the parameters.</p>

<p class="NDLRefMemberFunction">virtual bool
AddPlatformSpecificEntry(unsigned int uiPlatformFlags, char*
pcKey, unsigned int uiFlags, unsigned int uiExtra, unsigned int
uiReg, unsigned int uiCount, char* pcVariableName, unsigned int
uiSize = 0, unsigned int uiStride = 0, void* pvSource = 0, bool
bCopyData = false)</p>

<p class="NDLRefMemberDescription">Creates an entry using the
given parameters and adds it to the platform-specific entry maps
for the platforms contained in the <span class=
"NDLSystemFont">uiPlatformFlags</span> parameter. This value
should be formed from <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShader.htm#Platform_Enumeration">NiShader::Platform</a></span>
masks.</p>

<p class="NDLRefMemberFunction">NSBCM_Entry* GetFirstEntry(NiTListIterator&amp; kIter)</p>

<p class="NDLRefMemberDescription">Returns the first entry in the
map. The function will use <span class="NDLSystemFont">kIter</span> as the iterator.</p>

<p class="NDLRefMemberFunction">NSBCM_Entry* GetNextEntry(NiTListIterator&amp; kIter)</p>

<p class="NDLRefMemberDescription">Returns the next entry in the
map, based on the iterator <span class="NDLSystemFont">kIter</span>. Used in conjunction with <span class=
"NDLSystemFont">GetFirstEntry</span> to iterate over all entries.
The following example demonstrates this:</p>

<pre class="indent1">
// Assuming pkMap is a pointer to a valid NSBConstantMap.
NiTListIterator kIter = 0;
NSBCM_Entry* pkEntry = pkMap-&gt;GetFirstEntry(kIter);
while (pkEntry)
{
    // Process the pkEntry here
    pkEntry = pkMap-&gt;GetNextEntry(kIter);
}
</pre>

<p class="NDLRefMemberFunction">NSBCM_Entry*
GetFirstPlatformEntry(<a href=
"../../Reference/NiMain/NiShader.htm#Platform_Enumeration">NiShader::Platform</a>
ePlatform, NiTListIterator&amp; kIter)</p>

<p class="NDLRefMemberFunction">NSBCM_Entry*
GetNextPlatformEntry(<a href="../../Reference/NiMain/NiShader.htm#Platform_Enumeration">NiShader::Platform</a> ePlatform, NiTListIterator&amp; kIter)</p>

<p class="NDLRefMemberDescription">Returns the first/next entry
in the platform-specific map for the specified platform,
<span class="NDLSystemFont">ePlatform</span>, using <span class="NDLSystemFont">kIter</span> as the iterator.</p>

<p class="NDLRefMemberFunction">NSBCM_Entry* GetEntryByKey(char*
pcKey)</p>

<p class="NDLRefMemberDescription">Get the entry with the given
key name. Returns <span class="NDLSystemFont">NULL</span> if not
found.</p>

<p class="NDLRefMemberFunction">unsigned int
GetEntryIndexByKey(char* pcKey)</p>

<p class="NDLRefMemberDescription">Returns the index of the entry
of the given key name. Returns <span class=
"NDLSystemFont">0xffffffff</span> is not found.</p>

<p class="NDLRefMemberFunction">NSBCM_Entry*
GetPlatformEntryByKey(<a href=
"../../Reference/NiMain/NiShader.htm#Platform_Enumeration">NiShader::Platform</a>
ePlatform, char* pcKey)</p>

<p class="NDLRefMemberDescription">Get the entry from the
platform-specific map for the specific platform, <span class=
"NDLSystemFont">ePlatform</span>, with the given key name.
Returns <span class="NDLSystemFont">NULL</span> if not found.</p>

<p class="NDLRefMemberFunction">unsigned int
GetPlatformEntryIndexByKey(<a href=
"../../Reference/NiMain/NiShader.htm#Platform_Enumeration">NiShader::Platform</a>
ePlatform, char* pcKey)</p>

<p class="NDLRefMemberDescription">Returns the index of the entry
from the platform-specific map for the specific platform,
<span class="NDLSystemFont">ePlatform</span>, for the given key
name. Returns <span class="NDLSystemFont">0xffffffff</span> is
not found.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NSBUserDefinedDataSet</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NSBUserDefinedDataSet</p>

<p class="NDLRefParentage">: public NiRefObject</p>

<p class="NDLRefHeaderFile">&lt;NSBUserDefinedDataSet.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NSBUserDefinedDataSet</span> 
 represents a collection of <span class="NDLSystemFont"><a href="NSBUserDefinedDataBlock.htm">NSBUserDefinedDataBlock</a></span> 
 instances. There will be one set for the user-defined data blocks at the 
 shader level, one for those at the loaded implementation level, and one 
 for each pass that is contained in the loaded implementation.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NSBUserDefinedDataSet()</p>

<p class="NDLRefMemberDescription">Creates an 'empty' <span class="NDLSystemFont">NSBUserDefinedDataSet</span> 
 instance.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">unsigned int GetBlockCount()</p>

<p class="NDLRefMemberDescription">Returns the number of <span class="NDLSystemFont"><a 
 href="NSBUserDefinedDataBlock.htm">NSBUserDefinedDataBlock</a></span> 
 instances contained in the set.</p>

<p class="NDLRefMemberFunction">NSBUserDefinedDataBlock* GetBlock(const char* 
 pcName, bool bCreate = false)</p>

<p class="NDLRefMemberDescription">Returns the <span class="NDLSystemFont"><a 
 href="NSBUserDefinedDataBlock.htm">NSBUserDefinedDataBlock</a></span> 
 for the given <span class="NDLSystemFont">pcName</span>. If <span class="NDLSystemFont">bCreate</span> 
 is true and the block of that name is not found, the class will create 
 it.</p>

<p class="NDLRefMemberFunction"><a HREF="NSBUserDefinedDataBlock.htm">NSBUserDefinedDataBlock</a>* 
 GetFirstBlock(NiTListIterator&amp; kIter)</p>

<p class="NDLRefMemberFunction"><a HREF="NSBUserDefinedDataBlock.htm">NSBUserDefinedDataBlock</a>* 
 GetNextBlock(NiTListIterator&amp; kIter)</p>

<p class="NDLRefMemberDescription">Returns the first/next block in the list. 
 These functions can be used to iterate over all of the blocks contained 
 in the set.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

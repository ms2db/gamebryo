<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NSBTextureStage</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<p class="NDLRefHeadClassTitle">NSBTextureStage</p>

<p class="NDLRefParentage">: public <a href="../../Reference/NiSystem/NiMemObject.htm"><span>NiMemObject</span></a></p>

<p class="NDLRefHeaderFile">&lt;NSBTextureStage.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NSBTextureStage 
 </span>represents a platform-independent texture stage for use in a shader 
 in the Gamebryo engine. </p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NSBTextureStage()</p>

<p class="NDLRefMemberDescription">The constructor for <span class="NDLSystemFont">NSBTextureStage</span> creates 
 an 'empty' instance.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">const char* GetName()</p>

<p class="NDLRefMemberDescription">Returns the name of the stage. This name 
 is optional, and provided primarily to aid in debugging. <span class="NDLSystemFont">NULL</span> 
 will be returned if not name is assigned to the stage.</p>

<p class="NDLRefMemberFunction">void SetName(const char* pcName)</p>

<p class="NDLRefMemberDescription">Sets the name of the stage to the given 
 <span class="NDLSystemFont">pcName</span>.</p>

<p class="NDLRefMemberFunction">unsigned int GetStage()</p>

<p class="NDLRefMemberDescription">Retrieves the index of the stage.</p>

<p class="NDLRefMemberFunction">void SetStage(unsigned int uiStage)</p>

<p class="NDLRefMemberDescription">Sets the index of the stage to the given 
 <span class="NDLSystemFont">uiStage</span>.</p>

<p class="NDLRefMemberFunction"><a HREF="NSBStateGroup.htm">NSBStateGroup</a>* 
 GetTextureStageGroup()</p>

<p class="NDLRefMemberDescription">Retrieves the texture stage state group 
 for the stage.</p>

<p class="NDLRefMemberFunction"><a HREF="NSBStateGroup.htm">NSBStateGroup</a>* 
 GetSamplerStageGroup()</p>

<p class="NDLRefMemberDescription">Retrieves the texture sampler state group 
 for the stage.</p>

<p class="NDLRefMemberFunction">unsigned int GetTextureFlags()</p>

<p class="NDLRefMemberDescription">Retrieves the texture flags for the stage. 
 These flags indicate the source of the texture to use for the stage. Refer 
 to the <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiTextureStage.htm">NiTextureStage</a></span> 
 class reference for more information on allowable values.</p>

<p class="NDLRefMemberFunction">void SetNDLMap(unsigned int uiNDLMap)</p>

<p class="NDLRefMemberDescription">Set the texture flags to the given texture 
 map held in the object's <span class="NDLSystemFont"><a 
 href="../../Reference/NiMain/NiTexturingProperty.htm">NiTexturingProperty</a></span>.<span class="NDLSystemFont"> uiNDLMap</span> should be one of 
 the <span class="NDLSystemFont"><a href="../../Reference/NiMain/NiTextureStage.htm#TSTextureFlagsEnumerations">NiTextureStage::TSTextureFlags</a></span> 
 values.</p>

<p class="NDLRefMemberFunction">void SetDecalMap(unsigned int uiDecal)</p>

<p class="NDLRefMemberDescription">Set the texture flags to use the decal 
 map of the given index, <span class="NDLSystemFont">uiDecal</span>.</p>

<p class="NDLRefMemberFunction">void SetShaderMap(unsigned int uiShaderMap)</p>

<p class="NDLRefMemberDescription">Set the texture flags to use the shader 
 map of the given index, <span class="NDLSystemFont">uiShaderMap</span>.</p>

<p class="NDLRefMemberFunction">void SetUseIndexFromMap(bool bUse)</p>

<p class="NDLRefMemberDescription">If <span class="NDLSystemFont">bUse</span> 
 is <span class="NDLSystemFont">true</span>, sets the texture 
 flags to indicate the texture coordinate index from the <span class="NDLSystemFont"><a 
 href="../../Reference/NiMain/NiTexturingProperty_Map.htm">NiTexturingProperty::Map</a></span> 
 should be used. If this flag is not set, the texture coordinate index 
 of the stage instance is utilized.</p>

<p class="NDLRefMemberFunction">void SetObjTextureSettings(<a href="../../Reference/NiMain/NiShaderAttributeDesc.htm#ObjectType_Enumerations">NiShaderAttributeDesc::ObjectType</a> 
 eObjectType, unsigned int uiObjectIndex)</p>

<p class="NDLRefMemberDescription">Set the texture flags to indicate the 
 texture is in the object attribute table.</p>

<p class="NDLRefMemberFunction">bool GetUseTextureTransformation()</p>

<p class="NDLRefMemberDescription">Returns <span class="NDLSystemFont">true</span> if the stage uses 
 a texture transformation matrix.</p>

<p class="NDLRefMemberFunction">float* GetTextureTransformation()</p>

<p class="NDLRefMemberDescription">Retrieves the texture transformation matrix 
 for the stage.</p>

<p class="NDLRefMemberFunction">void SetUseTextureTransformation(bool bUse)</p>

<p class="NDLRefMemberDescription">Sets the stage Boolean that indicates 
 texture transformation usage to <span class="NDLSystemFont">bUse</span>.</p>

<p class="NDLRefMemberFunction">void SetTextureTransformation(D3DMATRIX&amp; 
 kTrans)</p>

<p class="NDLRefMemberDescription">Sets the matrix to be used for texture 
 transformation. Does NOT set the Boolean flag indicating a texture transformation 
 is to be used.</p>

<p class="NDLRefMemberFunction">unsigned int GetTextureTransformFlags()</p>

<p class="NDLRefMemberDescription">Returns the texture transformation flags.</p>

<p class="NDLRefMemberFunction">void SetTextureTransformFlags(unsigned int 
 uiFlags)</p>

<p class="NDLRefMemberDescription">This function returns the name of the 
 shader. Refer to the <span class="NDLSystemFont"><a HREF="../../Reference/NiMain/NiTextureStage.htm">NiTextureStage</a></span> 
 class reference for more information on allowable values.</p>

<p class="NDLRefMemberFunction">const char* GetGlobalName()</p>

<p class="NDLRefMemberDescription">Gets the name of the global shader constant 
 entry that should be used for the texture transformation matrix source.</p>

<p class="NDLRefMemberFunction">void SetGlobalName(const char* pcGlobalName)</p>

<p class="NDLRefMemberDescription">Sets the name of the global shader constant 
 entry that should be used for the texture transformation matrix source.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

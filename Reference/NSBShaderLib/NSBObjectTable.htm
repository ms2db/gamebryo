<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NSBObjectTable</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NSBObjectTable</p>

<p class="NDLRefParentage">: public <a href="../../Reference/NiSystem/NiMemObject.htm"><span>NiMemObject</span></a></p>

<p class="NDLRefHeaderFile">&lt;NSBObjectTable.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NSBObjectTable</span> represents 
 the objects (dynamic effects) that the shader requires. There is only 
 one object table per shader. This object is used internally when loading 
 NSB files. See the <a HREF="../../Programmer/NiShader/Objects_Section_in_NSF_Files.htm">NSF 
 documentation</a> for information about declaring objects in NSF files.</p>

<p class="NDLRefHead1">Constructors</p>

<p>No constructors are defined besides the default constructor.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">bool AddObject(const char* pcName, <a HREF="../../Reference/NiMain/NiShaderAttributeDesc.htm#ObjectType_Enumerations">NiShaderAttributeDesc::ObjectType</a> 
 eType, unsigned int uiIndex)</p>

<p class="NDLRefMemberDescription">Adds an object to the table. The name, 
 type, and index of the object is specified.</p>

<p class="NDLRefMemberFunction">unsigned int GetObjectCount() const</p>

<p class="NDLRefMemberDescription">Returns the number of objects in the table.</p>

<p class="NDLRefMemberFunction"><a href="NSBObjectTable.htm#ObjectDesc">ObjectDesc</a>* 
 GetFirstObject(NiTListIterator&amp; kIter)</p>

<p class="NDLRefMemberDescription">Returns the first object in the table. The function will use <span class="NDLSystemFont">kIter</span> as the iterator.</p>

<p class="NDLRefMemberFunction"><a href="NSBObjectTable.htm#ObjectDesc">ObjectDesc</a>* 
 GetNextObject(NiTListIterator&amp; kIter)</p>

<p class="NDLRefMemberDescription">Returns the next object in the table, based on the iterator <span class="NDLSystemFont">kIter</span>.</p>

<p class="NDLRefMemberFunction"><a href="NSBObjectTable.htm#ObjectDesc">ObjectDesc</a>* 
 GetObjectByName(const char* pcName)</p>

<p class="NDLRefMemberDescription">Returns the object in the table with the 
 specified name.</p>

<p class="NDLRefHead1">Notes</p>

<a name=ObjectDesc></a><p class="NDLRefHead2">NSBObjectTable::ObjectDesc</p>

<p>The <span class="NDLSystemFont">ObjectDesc</span> class 
 holds the description of an object in the table.</p>

<pre>
class ObjectDesc : public NiMemObject
{
public:
    ObjectDesc(const char* pcName,
        NiShaderAttributeDesc::ObjectType eType, unsigned int uiIndex);
    ~ObjectDesc();
    const char* GetName() const;
    void SetName(const char* pcName);
    NiShaderAttributeDesc::ObjectType GetType() const;
    void SetType(NiShaderAttributeDesc::ObjectType eType);
    unsigned int GetIndex() const;
    void SetIndex(unsigned int uiIndex);
private:
    char* m_pcName;
    NiShaderAttributeDesc::ObjectType m_eType;
    unsigned int m_uiIndex;
};
</pre> 

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

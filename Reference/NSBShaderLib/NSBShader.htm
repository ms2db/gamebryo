<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NSBShader</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type=
"text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NSBShader</p>

<p class="NDLRefParentage">: public <span><a href=
"../../Reference/NiMain/NiRefObject.htm">NiRefObject</a></span></p>

<p class="NDLRefHeaderFile">&lt;NSBShader.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NSBShader</span> represents a
platform-independent binary shader in the Gamebryo engine. It includes the
concept of multiple 'implementations' that allow for supplying fallback methods
for different hardware configurations.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NSBShader()</p>

<p class="NDLRefMemberDescription">Creates an 'empty' <span class=
"NDLSystemFont">NSBShader</span> instance.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">const char* GetName()</p>

<p class="NDLRefMemberDescription">Returns the name of the shader.</p>

<p class="NDLRefMemberFunction">const char* GetDescription()</p>

<p class="NDLRefMemberDescription">Returns the description of the shader.</p>

<p class="NDLRefMemberFunction">unsigned int GetMinVertexShaderVersion()</p>

<p class="NDLRefMemberDescription">Returns the minimum vertex shader version
required by the shader. Use the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a>::</span><span class="NDLSystemFont">GetMajorVertexShaderVersion</span> and <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMinorVertexShaderVersion</span>
functions to retrieve the major and minor versions, respectively.</p>

<p class="NDLRefMemberFunction">unsigned int GetMaxVertexShaderVersion()</p>

<p class="NDLRefMemberDescription">Returns the maximum vertex shader version
required by the shader. Use the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMajorVertexShaderVersion</span> and
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMinorVertexShaderVersion</span>
functions to retrieve the major and minor versions, respectively.</p>

<p class="NDLRefMemberFunction">unsigned int GetMinGeometryShaderVersion()</p>

<p class="NDLRefMemberDescription">Returns the minimum geometry shader version
required by the shader. Use the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMajorGeometryShaderVersion</span> and
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMinorGeometryShaderVersion</span>
functions to retrieve the major and minor versions, respectively.</p>

<p class="NDLRefMemberFunction">unsigned int GetMaxGeometryShaderVersion()</p>

<p class="NDLRefMemberDescription">Returns the maximum geometry shader version
required by the shader. Use the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMajorGeometryShaderVersion</span> and
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMinorGeometryShaderVersion</span>
functions to retrieve the major and minor versions, respectively.</p>

<p class="NDLRefMemberFunction">unsigned int GetMinPixelShaderVersion()</p>

<p class="NDLRefMemberDescription">Returns the minimum pixel shader version
required by the shader. Use the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMajorPixelShaderVersion</span> and
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMinorPixelShaderVersion</span>
functions to retrieve the major and minor versions, respectively.</p>

<p class="NDLRefMemberFunction">unsigned int GetMaxPixelShaderVersion()</p>

<p class="NDLRefMemberDescription">Returns the maximum pixel shader version
required by the shader. Use the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMajorPixelShaderVersion</span> and
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMinorPixelShaderVersion</span>
functions to retrieve the major and minor versions, respectively.</p>

<p class="NDLRefMemberFunction">unsigned int GetMinComputeShaderVersion()</p>

<p class="NDLRefMemberDescription">Returns the minimum compute shader version
required by the shader. Use the <span class="NDLSystemFont"><a href=
"../../Reference/ecrD3D11Renderer/ecr__D3D11ShaderFactory.htm">ecr::D3D11ShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMajorComputeShaderVersion</span> and
<span class="NDLSystemFont"><a href=
"../../Reference/ecrD3D11Renderer/ecr__D3D11ShaderFactory.htm">ecr::D3D11ShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMinorComputeShaderVersion</span>
functions to retrieve the major and minor versions, respectively.</p>

<p class="NDLRefMemberFunction">unsigned int GetMaxComputeShaderVersion()</p>

<p class="NDLRefMemberDescription">Returns the maximum compute shader version
required by the shader. Use the <span class="NDLSystemFont"><a href=
"../../Reference/ecrD3D11Renderer/ecr__D3D11ShaderFactory.htm">ecr::D3D11ShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMajorComputeShaderVersion</span> and
<span class="NDLSystemFont"><a href=
"../../Reference/ecrD3D11Renderer/ecr__D3D11ShaderFactory.htm">ecr::D3D11ShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMinorComputeShaderVersion</span>
functions to retrieve the major and minor versions, respectively.</p>

<p class="NDLRefMemberFunction">unsigned int GetMinUserVersion()</p>

<p class="NDLRefMemberDescription">Returns the minimum user-defined version
required by the shader. Use the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMajorVertexShaderVersion</span> and
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMinorVertexShaderVersion</span>
functions to retrieve the major and minor versions, respectively.</p>

<p class="NDLRefMemberFunction">unsigned int GetMaxUserVersion()</p>

<p class="NDLRefMemberDescription">Returns the maximum user-defined version
required by the shader. Use the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMajorVertexShaderVersion</span> and
<span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::</span><span class="NDLSystemFont">GetMinorVertexShaderVersion</span>
functions to retrieve the major and minor versions, respectively.</p>

<p class="NDLRefMemberFunction">unsigned int GetMinFeatureLevel()</p>

<p class="NDLRefMemberDescription">Returns the minimum feature level
required by the shader.  Valid values are defined in <span class="NDLSystemFont">
<a href="NSBRequirements.htm#NSBFeatureLevel">NSBRequirements::NSBFeatureLevel</a></span>.</p>

<p class="NDLRefMemberFunction">unsigned int GetMaxFeatureLevel()</p>

<p class="NDLRefMemberDescription">Returns the maximum feature level
required by the shader.  Valid values are defined in <span class="NDLSystemFont">
<a href="NSBRequirements.htm#NSBFeatureLevel">NSBRequirements::NSBFeatureLevel</a></span>.</p>

<p class="NDLRefMemberFunction">unsigned int GetPlatform()</p>

<p class="NDLRefMemberDescription">Returns the platform flags indicating
supported platforms of the shader, from the enumeration <span class=
"NDLSystemFont"><a href=
"../../Reference/NiMain/NiShader.htm#Platform_Enumeration">NiShader::PLATFORM</a></span>.</p>

<p class="NDLRefMemberFunction"><a href=
"NSBAttributeTable.htm">NSBAttributeTable</a>* GetGlobalAttributeTable()</p>

<p class="NDLRefMemberDescription">Returns the global attribute table for the
shader.</p>

<p class="NDLRefMemberFunction"><a href=
"NSBAttributeTable.htm">NSBAttributeTable</a>* GetAttributeTable()</p>

<p class="NDLRefMemberDescription">Returns the per-object attribute table for
the shader.</p>

<p class="NDLRefMemberFunction"><a href=
"NSBObjectTable.htm">NSBObjectTable</a>* GetObjectTable()</p>

<p class="NDLRefMemberDescription">Returns the per-object effect and property
state mapping.</p>

<p class="NDLRefMemberFunction">unsigned int GetPackingDefCount()</p>

<p class="NDLRefMemberDescription">Gets the number of packing definitions
(shader declarations) defined by the shader.</p>

<p class="NDLRefMemberFunction"><a href="NSBPackingDef.htm">NSBPackingDef</a>*
GetPackingDef(const char* pcName, bool bCreate = false)</p>

<p class="NDLRefMemberDescription">Gets the packing definition of the given
name. If <span class="NDLSystemFont">bCreate</span> is <span class=
"NDLSystemFont">true</span>, one will be created if it does not already exist.
If <span class="NDLSystemFont">bCreate</span> is <span class=
"NDLSystemFont">false</span>, returns <span class="NDLSystemFont">NULL</span>
if it does not exist.</p>

<p class="NDLRefMemberFunction">void AddOutputStreamDescriptor(const <a href=
"../../Reference/NiMain/NiOutputStreamDescriptor.htm">NiOutputStreamDescriptor</a>&amp;
kDescriptor)</p>

<p class="NDLRefMemberDescription">Appends the new output stream descriptor
<span class="NDLSystemFont">kDescriptor</span> to the shader's array of output
stream descriptor objects.</p>

<p class="NDLRefMemberFunction">void ClearOutputStreamDescriptors()</p>

<p class="NDLRefMemberDescription">Empties the shader's array of output stream
descriptor objects.</p>

<p class="NDLRefMemberFunction">const <a href=
"../../Reference/NiMain/NiOutputStreamDescriptor.htm">NiOutputStreamDescriptorArray</a>&amp;
GetOutputStreamDescriptors()</p>

<p class="NDLRefMemberDescription">Returns the array of output stream
descriptor objects.</p>

<p class="NDLRefMemberFunction">unsigned int GetImplementationCount()</p>

<p class="NDLRefMemberDescription">Gets the number of implementations the
shader has.</p>

<p class="NDLRefMemberFunction"><a href=
"NSBImplementation.htm">NSBImplementation</a>* GetImplementation(const char*
pcName, bool bCreate = false, unsigned int uiNextIndex = 0)</p>

<p class="NDLRefMemberDescription">Gets the implementation of the given name.
If <span class="NDLSystemFont">bCreate</span> is <span class=
"NDLSystemFont">true</span>, one will be created and will have its index set to
the given <span class="NDLSystemFont">uiNextIndex</span> if it does not already
exist. If <span class="NDLSystemFont">bCreate</span> is <span class=
"NDLSystemFont">false</span>, returns <span class="NDLSystemFont">NULL</span>
if it does not exist.</p>

<p class="NDLRefMemberFunction"><a href=
"NSBImplementation.htm">NSBImplementation</a>* GetImplementationByName(const
char* pcName)</p>

<p class="NDLRefMemberDescription">Retrieves the implementation of the given
name. Returns <span class="NDLSystemFont">NULL</span> if it does not exist.</p>

<p class="NDLRefMemberFunction"><a href=
"NSBImplementation.htm">NSBImplementation</a>*
GetImplementationByIndex(unsigned int uiIndex)</p>

<p class="NDLRefMemberDescription">Retrieves the implementation at the given
index. Returns <span class="NDLSystemFont">NULL</span> if it does not
exist.</p>

<p class="NDLRefMemberFunction">void SetMinVertexShaderVersionRequest(unsigned
int uiVersion)</p>

<p class="NDLRefMemberDescription">Sets the minimum vertex shader version
requested by the shader factory. Use the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::CreateVertexShaderVersion</span> function to create the <span class=
"NDLSystemFont">uiVersion</span> parameter.</p>

<p class="NDLRefMemberFunction">void SetMaxVertexShaderVersionRequest(unsigned
int uiVersion)</p>

<p class="NDLRefMemberDescription">Sets the maximum vertex shader version
requested by the shader factory. Use the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::CreateVertexShaderVersion</span> function to create the <span class=
"NDLSystemFont">uiVersion</span> parameter.</p>

<p class="NDLRefMemberFunction">void
SetMinGeometryShaderVersionRequest(unsigned int uiVersion)</p>

<p class="NDLRefMemberDescription">Sets the minimum geometry shader version
requested by the shader factory. Use the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::CreateGeometryShaderVersion</span> function to create the <span class=
"NDLSystemFont">uiVersion</span> parameter.</p>

<p class="NDLRefMemberFunction">void
SetMaxGeometryShaderVersionRequest(unsigned int uiVersion)</p>

<p class="NDLRefMemberDescription">Sets the maximum geometry shader version
requested by the shader factory. Use the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::CreateGeometryShaderVersion</span> function to create the <span class=
"NDLSystemFont">uiVersion</span> parameter.</p>

<p class="NDLRefMemberFunction">void SetMinPixelShaderVersionRequest(unsigned
int uiVersion)</p>

<p class="NDLRefMemberDescription">Sets the minimum pixel shader version
requested by the shader factory. Use the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::CreatePixelShaderVersion</span> function to create the <span class=
"NDLSystemFont">uiVersion</span> parameter.</p>

<p class="NDLRefMemberFunction">void SetMaxPixelShaderVersionRequest(unsigned
int uiVersion)</p>

<p class="NDLRefMemberDescription">Sets the maximum pixel shader version
requested by the shader factory. Use the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::CreatePixelShaderVersion</span> function to create the <span class=
"NDLSystemFont">uiVersion</span> parameter.</p>

<p class="NDLRefMemberFunction">void SetMinComputeShaderVersionRequest(unsigned
int uiVersion)</p>

<p class="NDLRefMemberDescription">Sets the minimum compute shader version
requested by the shader factory. Use the <span class="NDLSystemFont"><a href=
"../../Reference/ecrD3D11Renderer/ecr__D3D11ShaderFactory.htm">ecr::D3D11ShaderFactory</a></span><span class="NDLSystemFont">::CreateComputeShaderVersion</span> function to create the <span class=
"NDLSystemFont">uiVersion</span> parameter.</p>

<p class="NDLRefMemberFunction">void SetMaxComputeShaderVersionRequest(unsigned
int uiVersion)</p>

<p class="NDLRefMemberDescription">Sets the maximum compute shader version
requested by the shader factory. Use the <span class="NDLSystemFont"><a href=
"../../Reference/ecrD3D11Renderer/ecr__D3D11ShaderFactory.htm">ecr::D3D11ShaderFactory</a></span><span class="NDLSystemFont">::CreateComputeShaderVersion</span> function to create the <span class=
"NDLSystemFont">uiVersion</span> parameter.</p>

<p class="NDLRefMemberFunction">void SetMinUserVersionRequest(unsigned int
uiVersion)</p>

<p class="NDLRefMemberDescription">Sets the minimum user-defined version
requested by the shader factory. Use the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::CreateVertexShaderVersion</span> function to create the <span class=
"NDLSystemFont">uiVersion</span> parameter.</p>

<p class="NDLRefMemberFunction">void SetMaxUserVersionRequest(unsigned int
uiVersion)</p>

<p class="NDLRefMemberDescription">Sets the maximum user-defined version
requested by the shader factory. Use the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShaderFactory.htm">NiShaderFactory</a></span><span class="NDLSystemFont">::CreateVertexShaderVersion</span> function to create the <span class=
"NDLSystemFont">uiVersion</span> parameter.</p>

<p class="NDLRefMemberFunction">void SetMinFeatureLevelRequest(unsigned int
uiVersion)</p>

<p class="NDLRefMemberDescription">Sets the minimum feature level
requested by the shader factory. Valid values are defined in <span class="NDLSystemFont">
<a href="NSBRequirements.htm#NSBFeatureLevel">NSBRequirements::NSBFeatureLevel</a></span>.</p>

<p class="NDLRefMemberFunction">void SetMaxFeatureLevelRequest(unsigned int
uiVersion)</p>

<p class="NDLRefMemberDescription">Sets the maximum feature level
requested by the shader factory. Valid values are defined in <span class="NDLSystemFont">
<a href="NSBRequirements.htm#NSBFeatureLevel">NSBRequirements::NSBFeatureLevel</a></span>.</p>

<p class="NDLRefMemberFunction">void SetPlatformRequest(unsigned int
uiPlatform)</p>

<p class="NDLRefMemberDescription">Sets the platform flags requested by the
shader factory. For valid flags, see the <span class="NDLSystemFont"><a href=
"../../Reference/NiMain/NiShader.htm#Platform_Enumeration">NiShader::PLATFORM</a></span>
enumeration.</p>


<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Common Graph Callback Objects</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">Common Graph Callback Objects</p>

<p>The following classes are encapsulations of commonly used
statistics within the engine. As per the interface in <a href=
"NiVisualTracker__GraphCallbackObject.htm"><span class=
"NDLSystemFont">NiVisualTracker::GraphCallbackObject</span></a>,
each class will define a constructor and the <span class=
"NDLSystemFont">TakeSample</span> method. The constructor's
signature and the value returned by the overridden <span class=
"NDLSystemFont">TakeSample</span> method are described for each
derived class.</p>

<p class="NDLRefHead1">Derived Class Descriptions</p>

<p class="NDLRefMemberFunction">MemHighWaterMarkUpdate(float
fScalar, <a href=
"../../Reference/NiSystem/NiMemTracker.htm"><span class=
"NDLSystemFont">NiMemTracker</span></a>* pkTracker)</p>

<p class="NDLRefMemberDescription"><span class=
"NDLSystemFont">fScalar</span> is a scaling factor to be applied
to all returned samples. 1024 is a common value, since that will
return memory usage in KB rather than bytes. <span class=
"NDLSystemFont">pkTracker</span> is a <a href=
"../../Reference/NiSystem/NiMemTracker.htm"><span class=
"NDLSystemFont">NiMemTracker</span></a> object to be used for
tracking the memory usage. Since the <a href=
"../../Reference/NiSystem/NiMemTracker.htm"><span class=
"NDLSystemFont">NiMemTracker</span></a> maintains the statistical
information, the application does not need to do any manual
updating of the data. <span class=
"NDLSystemFont">TakeSample</span> returns the peak memory usage
in bytes divided by the scaling factor.</p>

<p class="NDLRefMemberFunction">MemCurrentUpdate(float fScalar,
<a href="../../Reference/NiSystem/NiMemTracker.htm"><span class=
"NDLSystemFont">NiMemTracker</span></a>* pkTracker)</p>

<p class="NDLRefMemberDescription">Constructor parameters are the
same as <span class=
"NDLSystemFont">MemHighWaterMarkUpdate</span>. <span class=
"NDLSystemFont">TakeSample</span> returns the current memory
usage in bytes divided by the scaling factor.</p>

<p class="NDLRefMemberFunction">MemCurrentAllocCountUpdate(float
fScalar, <a href=
"../../Reference/NiSystem/NiMemTracker.htm"><span class=
"NDLSystemFont">NiMemTracker</span></a>* pkTracker)</p>

<p class="NDLRefMemberDescription">Constructor parameters are the
same as in <span class=
"NDLSystemFont">MemHighWaterMarkUpdate</span>, except that the
scaling factor is usually left to 1.0f. <span class=
"NDLSystemFont">TakeSample</span> returns the number of active
memory allocations divided by the scaling factor.</p>

<p class="NDLRefMemberFunction">FrameRateUpdate(float
*pfFrameRate)</p>

<p class="NDLRefMemberDescription"><span class=
"NDLSystemFont">pfFrameRate</span> is a pointer to an
application-controlled frame rate value. Because the graph cannot
be guaranteed to be updated each frame, it is up to the
application to track and update the frame rate value.
<span class="NDLSystemFont">TakeSample</span> returns the current
value of the passed in float.</p>

<p class="NDLRefMemberFunction">VisibleArrayUpdate(<a href=
"../../Reference/NiMain/NiVisibleArray.htm">NiVisibleArray</a>&amp;
kVisArray)</p>

<p class="NDLRefMemberDescription"><span class=
"NDLSystemFont">kVisibleArray</span> is a reference to a <a href=
"../../Reference/NiMain/NiVisibleArray.htm"><span class=
"NDLSystemFont">NiVisibleArray</span></a> used to keep track of
the objects currently visible on the screen. <span class=
"NDLSystemFont">TakeSample</span> returns <span class=
"NDLSystemFont">GetCount</span> of the visible array. Because the
<a href="../../Reference/NiMain/NiVisibleArray.htm"><span class=
"NDLSystemFont">NiVisibleArray</span></a> maintains its
statistics, the application does not need to manually update the
values. However, if the application uses multiple <span class=
"NDLSystemFont"><a href=
"../../Reference/NiMain/NiVisibleArray.htm">NiVisibleArray</a>s</span>,
or reuses the same <a href=
"../../Reference/NiMain/NiVisibleArray.htm"><span class=
"NDLSystemFont">NiVisibleArray</span></a> multiple times within a
frame, the returned value is not guaranteed to correctly reflect
the number of objects drawn.</p>

<p class="NDLRefMemberFunction">GenericFloatUpdate(float fScalar,
float* pfValue)</p>

<p class="NDLRefMemberDescription">This is used to define an
application-specific statistic. <span class=
"NDLSystemFont">fScalar</span> is a scaling factor applied to all
returned samples. <span class="NDLSystemFont">pfValue</span> is a
pointer to an application-updated floating-point value
representing the statistic to track. <span class=
"NDLSystemFont">TakeSample</span> returns the current value
divided by the scaling factor.</p>

<p class="NDLRefMemberFunction">GenericUnsignedIntUpdate(float
fScalar, unsigned int* puiValue)</p>

<p class="NDLRefMemberDescription">This is identical to
<span class="NDLSystemFont">GenericFloatUpdate</span>, except
that the application-updated value is an unsigned integer instead
of a floating-point number. <span class=
"NDLSystemFont">TakeSample</span> returns the current value
divided by the scaling factor.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiVisualTracker Overview</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>NiVisualTracker Overview</h1>

<p>The <a href="NiVisualTracker.htm"><span class=
"NDLSystemFont">NiVisualTracker</span></a> library provides the
ability to track application statistics over time and graph those
statistics as the application runs. A base set of useful graph
classes are provided. In addition, <span class=
"NDLSystemFont">NiApplication</span> creates a default set of
graphs which can be easily extended for application-specific
statistics.</p>

<p>To track your application statistics, first
one or more <a href="NiVisualTracker.htm"><span class=
"NDLSystemFont">NiVisualTracker</span></a> objects must be
created. Then, <span class="NDLSystemFont">AddGraph</span> is
called on the <a href="NiVisualTracker.htm"><span class=
"NDLSystemFont">NiVisualTracker</span></a> objects to add the
specific graphs corresponding to the desired statistics. The
following code sample shows how to create one <a href=
"NiVisualTracker.htm"><span class=
"NDLSystemFont">NiVisualTracker</span></a> and add two graphs to
it.</p>

<pre>
NiRect&lt;float&gt; kRect;
kWindowRect1.m_left   = 0.05;
kWindowRect1.m_right  = kWindowRect1.m_left + 0.90f;
kWindowRect1.m_top= 0.15f;
kWindowRect1.m_bottom = kWindowRect1.m_top + 0.7f;
NiColor red(1.0f, 0.0f, 0.0f);
NiColor yellow(1.0f, 1.0f, 0.0f);
NiVisualTracker* pkTracker = NULL;
pkTracker = NiNew NiVisualTracker(100.0f ,0, kRect,
"Performance", true, 2);
pkTracker-&gt;AddGraph(NiNew FrameRateUpdate(&amp;m_fFrameRate),
"Frame Rate", red, 100, 0.1f, true);
pkTracker-&gt;AddGraph(NiNew VisibleArrayUpdate(m_kVisible),
"Vis Objects", yellow, 100, 0.1f, true);
</pre>

<p>Once created, the <a href=
"NiVisualTracker.htm"><span class=
"NDLSystemFont">NiVisualTracker</span></a> objects must be
updated each frame with a call to:</p>

<p><span class="NDLSystemFont">pkTracker-&gt;Update();</span></p>

<p>This samples each statistic and updates the
graph data.  To render the <a href=
"NiVisualTracker.htm"><span class=
"NDLSystemFont">NiVisualTracker</span></a> objects, during scene
rendering make a call to:</p>

<p><span class="NDLSystemFont">pkTracker-&gt;Draw();</span></p>

<p>Each <a href=
"NiVisualTracker.htm"><span class=
"NDLSystemFont">NiVisualTracker</span></a> object has the ability
to show or hide individual graphs, as well as the ability to hide
the <a href="NiVisualTracker.htm"><span class=
"NDLSystemFont">NiVisualTracker</span></a> as a whole. Note that
hiding graphs or <a href="NiVisualTracker.htm"><span class=
"NDLSystemFont">NiVisualTracker</span></a> objects only affects
rendering, and sampling will continue as normal, so long as
<span class="NDLSystemFont">Update</span> is called each
frame.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

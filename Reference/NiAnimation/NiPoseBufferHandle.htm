<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPoseBufferHandle</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiPoseBufferHandle</p>

<p class="NDLRefParentage">: public <a href="../../Reference/NiSystem/NiMemObject.htm">NiMemObject</a></p>

<p class="NDLRefHeaderFile">&lt;NiPoseBufferHandle.h&gt;</p>

<p>An <span class="NDLSystemFont">NiPoseBufferHandle</span> 
 specifies the location of data within a <a href="NiPoseBuffer.htm">pose 
 buffer</a>. The handle comprises two entities which define a unique 
 location in the buffer: the pose buffer channel type of the entry, and 
 the index of the entry within all items of that type. For example, a pose 
 buffer handle might indicate the desired data is found at the fifth color 
 entry (i.e. of type <span class="NDLSystemFont">PBCOLORCHANNEL</span>) within 
 the pose buffer.</p>

<p><span class="NDLSystemFont"><a href="NiPoseBinding.htm">NiPoseBinding</a></span> 
 objects are responsible for mapping sequence evaluator channels to pose 
 buffer handles. These handles indicate where to find data within a pose 
 buffer for a given evaluator channel.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefHead2">Constructors</p>

<p class="NDLRefMemberFunction">NiPoseBufferHandle(<a href="NiPoseBuffer.htm#NiPoseBufferChannelType">NiPoseBufferChannelType</a> 
 ePBChannelType, unsigned short usChannelIndex)</p>

<p class="NDLRefMemberDescription">This function constructs a new pose buffer 
 handle and initializes it with the specified pose buffer location.</p>

<p class="NDLRefMemberFunction">NiPoseBufferHandle()</p>

<p class="NDLRefMemberDescription">This default constructor marks the new 
 pose buffer handle as invalid.</p>

<p class="NDLRefHead2">Functions which initialize the handle</p>

<p class="NDLRefMemberFunction">void Init(<a href="NiPoseBuffer.htm#NiPoseBufferChannelType">NiPoseBufferChannelType</a> 
 ePBChannelType, unsigned short usChannelIndex)</p>

<p class="NDLRefMemberDescription">This function initializes the pose buffer 
 handle with the specified pose buffer location.</p>

<p class="NDLRefMemberFunction">void Invalidate()</p>

<p class="NDLRefMemberDescription">This function invalidates the pose buffer 
 handle.</p>

<p class="NDLRefHead2">Functions to access the handle's data</p>

<p class="NDLRefMemberFunction">bool IsValid() const</p>

<p class="NDLRefMemberDescription">This function returns true when the pose 
 buffer handle references a pose buffer location, and returns false when 
 the handle is invalid.</p>

<p class="NDLRefMemberFunction"><a href="NiPoseBuffer.htm#NiPoseBufferChannelType">NiPoseBufferChannelType</a> 
 GetChannelType() const</p>

<p class="NDLRefMemberFunction">unsigned short GetChannelIndex() const</p>

<p class="NDLRefMemberDescription">These functions return the pose buffer 
 location referenced by the handle. These functions may only be used when 
 <span class="NDLSystemFont">IsValid</span> returns true.</p>

<p class="NDLRefHead1">Operators</p>

<p class="NDLRefMemberFunction">bool operator== (const NiPoseBufferHandle&amp; 
 kOther) const</p>

<p class="NDLRefMemberDescription">This function returns true when the two 
 pose buffer handles reference the same pose buffer location or are both 
 invalid, and returns false otherwise.</p>

<p class="NDLRefMemberFunction">bool operator!= (const NiPoseBufferHandle&amp; 
 kOther) const</p>

<p class="NDLRefMemberDescription">This function returns true when the two 
 pose buffer handles reference different pose buffer locations or differ 
 in terms of validity, and returns false otherwise.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

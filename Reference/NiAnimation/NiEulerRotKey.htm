<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiEulerRotKey</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<p class="NDLRefHeadClassTitle">NiEulerRotKey</p>

<p class="NDLRefParentage">: public <a href="NiRotKey.htm">NiRotKey</a></p>

<p class="NDLRefHeaderFile">&lt;NiEulerRotKey.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiEulerRotKey</span> 
 allows the specification of rotation animation using Euler angles. It 
 is unique among the animation keys in that it is not a true animation 
 key <em>per se</em>, but actually a container for three sets of <span class="NDLSystemFont"><a HREF="NiFloatKey.htm">NiFloatKey</a></span> 
 objects which store rotation data for each axis. The rotation is specified 
 in the following ordering, XYZ.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiEulerRotKey()</p>

<p class="NDLRefMemberFunction">NiEulerRotKey(<span class="NDLSystemFont"><a 
 href="NiFloatKey.htm">NiFloatKey</a></span>*&nbsp;pkX, unsigned&nbsp;int&nbsp;uiNumX, 
 <a HREF="NiAnimationKey.htm#KeyType_Enumerations">KeyType</a>&nbsp;eTypeX, 
 <span class="NDLSystemFont"><a href="NiFloatKey.htm">NiFloatKey</a></span>*&nbsp;pkY, 
 unsigned&nbsp;int&nbsp;uiNumY, <a href="NiAnimationKey.htm#KeyType_Enumerations">KeyType</a>&nbsp;eTypeY, 
 <span class="NDLSystemFont"><a href="NiFloatKey.htm">NiFloatKey</a></span>*&nbsp;pkZ, 
 unsigned&nbsp;int&nbsp;uiNumZ, <a href="NiAnimationKey.htm#KeyType_Enumerations">KeyType</a>&nbsp;eTypeZ)</p>

<p class="NDLRefMemberDescription">The default constructor creates an <span class="NDLSystemFont">NiEulerRotKey</span> with no animation 
 data. The second form provides key data for all three axes. Note that 
 the second constructor does not copy the <span class="NDLSystemFont"><a 
 href="NiFloatKey.htm">NiFloatKey</a></span>s, but the object assumes ownership 
 of the keys.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">void Initialize(<span class="NDLSystemFont"><a 
 href="NiFloatKey.htm">NiFloatKey</a></span>*&nbsp;pkX, unsigned&nbsp;int&nbsp;uiNumX, 
 <a href="NiAnimationKey.htm#KeyType_Enumerations">KeyType</a> eTypeX, 
 <span class="NDLSystemFont"><a href="NiFloatKey.htm">NiFloatKey</a></span>*&nbsp;pkY, 
 unsigned&nbsp;int&nbsp;uiNumY, <a href="NiAnimationKey.htm#KeyType_Enumerations">KeyType</a>&nbsp;eTypeY, 
 <span class="NDLSystemFont"><a href="NiFloatKey.htm">NiFloatKey</a></span>*&nbsp;pkZ, 
 unsigned&nbsp;int&nbsp;uiNumZ, <a href="NiAnimationKey.htm#KeyType_Enumerations">KeyType</a>&nbsp;eTypeZ)</p>

<p class="NDLRefMemberDescription">This function has the same functionality 
 as the second constructor, but can be called after the object has been 
 created to initialize the data.</p>

<p class="NDLRefMemberFunction">void ReplaceKeys(unsigned&nbsp;char&nbsp;ucIndex, 
 unsigned&nbsp;int&nbsp;uiNumKeys, <span class="NDLSystemFont"><a 
 href="NiFloatKey.htm">NiFloatKey</a></span>*&nbsp;pkKeys)</p>

<p class="NDLRefMemberDescription"><span class="NDLSystemFont">ReplaceKeys</span> replaces the set of keys at <span class="NDLSystemFont">ucIndex</span> with those given in <span class="NDLSystemFont">pkKeys</span>. 
 It will delete the old key data before setting the new data. <span class="NDLSystemFont">SetNumKeys</span> should NOT 
 be called before this function. Instead, the number of keys should be 
 specified in the <span class="NDLSystemFont">uiNumKeys</span> parameter.</p>

<p class="NDLRefMemberFunction">void CleanUp()</p>

<p class="NDLRefMemberDescription">The <span class="NDLSystemFont">CleanUp</span> 
 routine will delete the three <span class="NDLSystemFont"><a 
 href="NiFloatKey.htm">NiFloatKey</a></span> sets held by the <span class="NDLSystemFont">NiEulerRotKey</span>. 
 It should be called before an <span class="NDLSystemFont">NiEulerRotKey</span> 
 is deleted.</p>

<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a 
 href="NiFloatKey.htm">NiFloatKey</a></span>* GetKeys(unsigned&nbsp;char&nbsp;ucIndex) 
 const</p>

<p class="NDLRefMemberFunction">void SetKeys(unsigned&nbsp;char&nbsp;ucIndex, 
 <span class="NDLSystemFont"><a href="NiFloatKey.htm">NiFloatKey</a></span>*&nbsp;pkKeys)</p>

<p class="NDLRefMemberDescription">These functions get and set the <span 
 class="NDLSystemFont"><a href="NiFloatKey.htm">NiFloatKey</a></span>s 
 for a single axis. Note that this method does not copy the <span class="NDLSystemFont"><a href="NiFloatKey.htm">NiFloatKey</a></span>s, 
 but the object assumes ownership of the keys.</p>

<p class="NDLRefMemberFunction">unsigned int GetNumKeys(unsigned&nbsp;char&nbsp;ucIndex) 
 const</p>

<p class="NDLRefMemberFunction">void SetNumKeys(unsigned&nbsp;char&nbsp;ucIndex, 
 unsigned&nbsp;int&nbsp;uiNumKeys)</p>

<p class="NDLRefMemberDescription">These functions get and set the number 
 of keys for a given axis.</p>

<p class="NDLRefMemberFunction"><a href="NiAnimationKey.htm#KeyType_Enumerations">KeyType</a> 
 GetType(unsigned&nbsp;char&nbsp;ucIndex) const</p>

<p class="NDLRefMemberFunction">void SetType(unsigned&nbsp;char&nbsp;ucIndex, 
 <a href="NiAnimationKey.htm#KeyType_Enumerations">KeyType</a>&nbsp;eType)</p>

<p class="NDLRefMemberDescription">These functions get and set the type of 
 interpolation used for a given axis. Be sure the interpolation type matches 
 the type expected by the <span class="NDLSystemFont"><a 
 href="NiFloatKey.htm">NiFloatKey</a></span>s before they are interpolated.</p>

<p class="NDLRefMemberFunction">unsigned char GetKeySize(unsigned char ucIndex) 
 const</p>

<p class="NDLRefMemberDescription">This function gets the size of a single 
 key for a given axis. This is required in order to properly traverse the 
 animation key array for each axis.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

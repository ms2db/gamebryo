<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Animation Keys</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Animation Keys</h1>

<p>The data that <span class="NDLSystemFont"><a HREF="NiKeyBasedInterpolator.htm">NiKeyBasedInterpolator</a></span> 
 objects use to control their targets are contained in animation keys, 
 most of which are derived from the <span class="NDLSystemFont"><a 
 HREF="NiAnimationKey.htm">NiAnimationKey</a></span> 
 class. Most interpolators will reference a series of keys, each of which 
 contains a time and some value associated with that time, although a time 
 controller is not required to use keys. For example, an <span class="NDLSystemFont"><a HREF="NiPosKey.htm">NiPosKey</a></span>, 
 which indicates position in 3-space, contains a time value and an <span 
 class="NDLSystemFont"><a HREF="../../Reference/NiMain/NiPoint3.htm">NiPoint3</a></span>. 
 A controller that modifies position, such as an <span class="NDLSystemFont"><a 
 HREF="NiTransformController.htm">NiTransformController</a></span>, 
 will have an interpolator with access to a series of <span class="NDLSystemFont">NiPosKeys</span>. 
 When <span class="NDLSystemFont">Update</span> is called, 
 the controller will modify the time value based on frequency, phase, <span 
 class="NDLSystemFont"><a HREF="../../Reference/NiMain/NiTimeController.htm#Enumerations">CycleType</a></span>, 
 and <span class="NDLSystemFont"><a HREF="../../Reference/NiMain/NiTimeController.htm#Enumerations">AnimType</a></span>, 
 and pass that adjusted time to its interpolator. The interpolator determines 
 which keys bound the specified time, and interpolates the bounding keys' 
 data values. Note that the method of interpolation depends on the key 
 type and the interpolator type. The interpolated value will then be applied 
 to the controller's target in whatever manner that controller is designed 
 to manipulate.</p>

<p>To reduce memory fragmentation and improve performance, 
 animation keys are allocated and stored in contiguous block arrays. Because 
 of this, if you have a pointer to one of the abstract animation key classes 
 (<span class="NDLSystemFont"><a href="NiAnimationKey.htm">NiAnimationKey</a></span>, 
 <span class="NDLSystemFont"><a HREF="NiPosKey.htm">NiPosKey</a></span>, 
 <span class="NDLSystemFont"><a HREF="NiRotKey.htm">NiRotKey</a></span>, 
 <span class="NDLSystemFont"><a HREF="NiFloatKey.htm">NiFloatKey</a></span>, 
 <a HREF="NiColorKey.htm"><span class="NDLSystemFont">NiColorKey</span></a>, 
 <span class="NDLSystemFont"><a HREF="NiBoolKey.htm">NiBoolKey</a></span>) 
 you must index into the array of keys by calling <span class="NDLSystemFont">GetKeyAt(uiIndex, 
 uiKeySize)</span> on the key array, where <span class="NDLSystemFont">uiIndex</span> 
 is the index of the animation key in the array and <span class="NDLSystemFont">uiKeySize</span> 
 is the size of an individual animation key, instead of using the <span class="NDLSystemFont">[]</span> operator. The size can be 
 computed using the <span class="NDLSystemFont">GetKeySize</span> method 
 of <a href="NiAnimationKey.htm"><span class="NDLSystemFont">NiAnimationKey</span></a> or any 
 of its immediately derived classes. This will ensure that you index into 
 the array correctly. </p>

<p>When creating or deleting animation key arrays, be careful 
 not to invoke an array of instances of an abstract animation key class. 
 Instead, use the <a HREF="NiAnimationKey.htm#Pseudo-Virtual_Functions">pseudo-virtual 
 functions</a> provided by <a HREF="NiAnimationKey.htm"><span 
 class="NDLSystemFont">NiAnimationKey</span></a> to create and delete the 
 arrays. This will ensure that arrays of the correct type are created and 
 deleted.</p>

<p>Visit the <a href="Introduction_to_Animation.htm">Introduction 
 to Animation</a> to read about other animation concepts.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

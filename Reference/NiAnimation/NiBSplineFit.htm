<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiBSplineFit</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiBSplineFit</p>

<p class="NDLRefParentage">: public <a href=
"../../Reference/NiSystem/NiMemObject.htm">NiMemObject</a></p>

<p class="NDLRefHeaderFile">&lt;NiBSplineFit.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This templated class encapsulates fitting a set of sampled values of a specified <span class=
"NDLSystemFont">DIMENSION</span> to an open, uniform B-Spline of the specified <span class=
"NDLSystemFont">DEGREE</span>. The B-Spline is created using the least-squares fitting algorithm.
This function selects the control points Q[0..m] for the B-spline curve to minimize</p>

<p>E(Q) = sum_{k=0}^{n-1} |sum_{j=0}^m B_{i,d}(t[k])*Q[j] - P[k]|^2</p>

<p>where the input samples are {P[k],t[k]}_{k=0}^{n-1}, with P[k] a DIMENSION-tuple and t[k] =
k/(n-1) a time, and where m+1 is the desired number of control points. Also, Q = {Q[0],...,Q[m]}
and B_{i,d}(t) is the B-spline basis function for index i and degree d.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiBSplineFit(int iInQuantity, const float* afInSample, int
iOutQuantity)</p>

<p class="NDLRefMemberDescription">Fit a B-spline curve with <span class=
"NDLSystemFont">iOutQuantity</span> control points to array of <span class=
"NDLSystemFont">iInQuantity</span> input points. This class does not assume responsibility for
deleting the input array. If the input array was allocated dynamically, the caller is responsible
for deleting it. The input points are assumed to be uniformly sampled in time.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">int GetInQuantity() const</p>

<p class="NDLRefMemberDescription">This method returns the number of values used as the input to
the curve fit.</p>

<p class="NDLRefMemberFunction">const float* GetInSample() const</p>

<p class="NDLRefMemberDescription">This method returns the values used as the input to the curve
fit.</p>

<p class="NDLRefMemberFunction">int GetOutQuantity() const</p>

<p class="NDLRefMemberDescription">This method returns the number of control points used to
approximate the input samples.</p>

<p class="NDLRefMemberFunction">const float* GetOutControl() const</p>

<p class="NDLRefMemberDescription">This method returns the control points used to approximate the
input samples.</p>

<p class="NDLRefMemberFunction">const <a href=
"NiBSplineBasis.htm">NiBSplineBasis</a>&lt;float,DEGREE&gt;* GetBasis() const</p>

<p class="NDLRefMemberDescription">This method returns the <a href=
"NiBSplineBasis.htm"><span class="NDLSystemFont">NiBSplineBasis</span></a> necessary for the
evaluation of the approximated B-Spline.</p>

<p class="NDLRefMemberFunction">void GetPosition(float fTime, float* afPos) const</p>

<p class="NDLRefMemberDescription">This method returns the control point for the specified time,
<span class="NDLSystemFont">fTime</span>. The spline is defined for 0 &lt;= <span class=
"NDLSystemFont">fTime</span> &lt;= 1. If <span class="NDLSystemFont">fTime</span> is outside [0,1],
an open B-Spline clamps <span class="NDLSystemFont">fTime</span> to [0,1].</p>

<p class="NDLRefMemberFunction">void ExtremeDifferences(float&amp; fMin, float&amp; fMax) const</p>

<p class="NDLRefMemberFunction">float RootMeanSquaredError() const</p>

<p class="NDLRefMemberDescription">These methods return the error measurements for the fit. The
first function computes the minimum and maximum lengths between the input samples and the B-spline
points that correspond to them. The second function computes the square root of the average of the
squared lengths between the input samples and the B-spline points that correspond to them.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

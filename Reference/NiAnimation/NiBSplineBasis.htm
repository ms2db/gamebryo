<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiBSplineBasis</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiBSplineBasis</p>

<p class="NDLRefParentage">: public <a href=
"../../Reference/NiSystem/NiMemObject.htm"><span>NiMemObject</span></a></p>

<p class="NDLRefHeaderFile">&lt;NiBSplineBasis.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This templated class encapsulates the basis functions of a
specified <span class="NDLSystemFont">DEGREE</span> and data type
<span class="NDLSystemFont">REAL</span>. The basis function
values generated by this class are meant for open, uniform
B-Splines.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiBSplineBasis(int iQuantity)</p>

<p class="NDLRefMemberDescription">This constructor is the
default constructor for creating open, uniform B-spline basis
functions. The input is the number of control points for a
B-spline curve using this basis.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">int GetQuantity() const</p>

<p class="NDLRefMemberDescription">Return number of control
points for a B-spline curve using this basis.</p>

<p class="NDLRefMemberFunction">void Compute(REAL fTime, int&amp;
iMin, int&amp; iMax) const</p>

<p class="NDLRefMemberFunction">REAL GetValue(int i) const</p>

<p class="NDLRefMemberDescription">Evaluate the basis functions
and retrieve the results of the evaluation. The function
GetValue(i) need only be called for iMin &lt;= i &lt;= iMax. The
other values are zero. This is a consequence of local
control.</p>

<p class="NDLRefMemberFunction">bool IsEqual(const
NiBSplineBasis* pkOther) const</p>

<p class="NDLRefMemberDescription">Determine whether or not the
two <span class="NDLSystemFont">NiBSplineBasis</span> objects are
equivalent.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiMultiTargetPoseHandler</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiMultiTargetPoseHandler</p>

<p class="NDLRefParentage">: public <a href=
"../../Reference/NiMain/NiObject.htm">NiObject</a></p>

<p class="NDLRefHeaderFile">
&lt;NiMultiTargetPoseHandler.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>The <span class=
"NDLSystemFont">NiMultiTargetPoseHandler</span> class distributes
data values contained within an <span class=
"NDLSystemFont"><a href=
"NiPoseBuffer.htm">NiPoseBuffer</a></span> to their target
<a href="NiInterpController.htm">interp controllers</a> and scene
graph <a href="../../Reference/NiMain/NiAVObject.htm">transform
nodes</a>. For all practical purposes the <span class=
"NDLSystemFont">NiMultiTargetPoseHandler</span> has become the
scene graph interface for the <span class=
"NDLSystemFont"><a href="NiControllerManager.htm">NiControllerManager</a></span>
object. During its initialization the multi-target pose handler
builds an internal array which associates pose buffer locations,
as defined by the manager's <span class="NDLSystemFont"><a href=
"NiPoseBinding.htm">NiPoseBinding</a></span>, with their target
objects. As an optimization, transform data items are bound
directly to their target transform nodes. The remaining data
items are bound to their target interp controllers. In addition
to mapping pose buffer locations to target objects, the
multi-target pose handler maintains a transform value for the
accumulation root node. See the <a href=
"NiControllerManager.htm#Transformation_Accumulation">notes</a>
in <span class="NDLSystemFont">NiControllerManager</span> for
details regarding the initialization of the accumulation
transform.</p>

<p>The multi-target pose handler has the ability to read as well
as write attribute values associated with target objects. Reading
these attributes comes in handy when the current state of a
character's scene graph branch must be captured. These snapshots
are particularly useful when transitioning to a new animation
from an arbitrary scene graph pose.</p>

<p>Since the multi-target pose handler propagates data directly
to scene graph transform nodes any <span class=
"NDLSystemFont"><a href=
"NiTransformController.htm">NiTransformController</a></span> and
<span class="NDLSystemFont"><a href=
"NiMultiTargetTransformController.htm">NiMultiTargetTransformController</a></span>
objects in the associated scene graph are superfluous. As such,
these controllers are removed from the scene graph during export
by the <a href=
"../../Reference/Tool_Plug_ins/Controller_Extractor.htm">Controller
Extractor export plug-in</a>. <span class=
"NDLSystemFont">NiMultiTargetTransformController</span> objects
which exist in older NIF files are removed from the scene graph
as the file is loaded.</p>

<p class="NDLRefHead1">Constructors</p>

<p>There are no supported constructors as <span class=
"NDLSystemFont">NiMultiTargetPoseHandler</span> acts as an
Emergent internal extension to <span class=
"NDLSystemFont">NiControllerManager</span>.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefHead2">Functions relating to transformation
accumulation</p>

<p>See the <a href=
"NiControllerManager.htm#Transformation_Accumulation">notes</a>
in <span class="NDLSystemFont">NiControllerManager</span> for the
explanation of transformation accumulation. Most of the following
functions can also be found <a href=
"NiControllerManager.htm#Functions_relating_to_transformation_accumulation">
here</a> in the <span class=
"NDLSystemFont">NiControllerManager</span> interface</p>

<p class="NDLRefMemberFunction">const <a href=
"../../Reference/NiMain/NiFixedString.htm">NiFixedString</a>&amp;
GetAccumRootName() const</p>

<p class="NDLRefMemberDescription">This function returns the name
of the accumulation root node. An empty string is returned when
the accumulation root has not been defined or <a href=
"NiControllerManager.htm#Transformation_Accumulation">transformation
accumulation</a> is inactive.</p>

<p class="NDLRefMemberFunction"><a href=
"../../Reference/NiMain/NiAVObject.htm">NiAVObject</a>*
GetAccumRoot() const</p>

<p class="NDLRefMemberDescription">This function returns the
scene graph node on which the root transform is accumulated.
<span class="NDLSystemFont">NULL</span> is returned when the
accumulation root has not been defined or <a href=
"NiControllerManager.htm#Transformation_Accumulation">transformation
accumulation</a> is inactive.</p>

<p class="NDLRefMemberFunction">const <a href=
"NiQuatTransform.htm">NiQuatTransform</a>&amp;
GetAccumulatedTransform() const</p>

<p class="NDLRefMemberFunction">void
SetAccumulatedTransform(const <a href=
"NiQuatTransform.htm">NiQuatTransform</a>&amp; kTransform)</p>

<p class="NDLRefMemberDescription">These functions get and set
the accumulated transform stored in the multi-target pose
handler. Any changes to its value are immediately propagated to
the local transform of the accumulation root node when <a href=
"NiControllerManager.htm#Transformation_Accumulation">transformation
accumulation</a> is enabled.</p>

<p class="NDLRefMemberFunction">void
ClearAccumulatedTransform()</p>

<p class="NDLRefMemberDescription">This function clears the
accumulated transform stored in the multi-target pose handler by
setting it to identity. This modification is immediately
propagated to the local transform of the accumulation root node
when <a href=
"NiControllerManager.htm#Transformation_Accumulation">transformation
accumulation</a> is enabled.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

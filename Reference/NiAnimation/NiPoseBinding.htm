<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiPoseBinding</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiPoseBinding</p>

<p class="NDLRefParentage">: public <a href=
"../../Reference/NiMain/NiObject.htm">NiObject</a></p>

<p class="NDLRefHeaderFile">&lt;NiPoseBinding.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>An <span class="NDLSystemFont">NiPoseBinding</span> is
associated with an <span class="NDLSystemFont"><a href=
"NiControllerManager.htm">NiControllerManager</a></span> to
assist with mapping (i.e. binding) evaluator channels to
<span class="NDLSystemFont"><a href=
"NiPoseBuffer.htm">NiPoseBuffer</a></span> data items. Data of
similar type is grouped together within each pose buffer.
Supported data types are defined by <span class=
"NDLSystemFont"><a href=
"NiPoseBuffer.htm#NiPoseBufferChannelType">NiPoseBufferChannelType</a></span>
and include color, boolean, float, point3, quaternion, and
referenced evaluator. An <span class="NDLSystemFont"><a href=
"NiPoseBufferHandle.htm">NiPoseBufferHandle</a></span> is used to
specify the location of bound data. In essence, a handle dictates
the index of a particular data item within the block of data of
the desired type. For example, an evaluator channel that drives
the rotation of an elbow joint might be bound to the fifth
quaternion in the pose buffer.</p>

<p>The <span class="NDLSystemFont">NiPoseBinding</span> is
utilized when activating sequences on a controller manager to
ensure pose buffers associated with active sequences have
identical data layouts (with similar semantic data mapped to
identical pose buffer locations). This uniform mapping across
multiple active sequences allows their respective pose buffers to
be quickly blended. Similarly, a uniform data layout simplifies
the propagation of contained data values to the target scene
graph objects.</p>

<p class="NDLRefHead1">Constructors</p>

<p>There are no supported constructors. <span class=
"NDLSystemFont"><a href=
"NiPoseBinding.htm">NiPoseBinding</a></span> objects are
automatically created during the construction of an <span class=
"NDLSystemFont"><a href=
"NiControllerManager.htm">NiControllerManager</a></span>. The
<span class="NDLSystemFont">NiControllerManager</span>
constructor provides support to reuse an <span class=
"NDLSystemFont">NiPoseBinding</span> from an existing character
under certain conditions. Refer to its <a href=
"NiControllerManager.htm#Constructors">constructor</a> for
details.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefHead2">Functions dealing with cumulative
animation</p>

<p class="NDLRefMemberFunction">bool GetCumulativeAnimations()
const</p>

<p class="NDLRefMemberDescription">This function returns true
when <a href=
"NiControllerManager.htm#Transformation_Accumulation">transformation
accumulation</a> is active, and false otherwise.</p>

<p class="NDLRefMemberFunction">const <a href=
"../../Reference/NiMain/NiFixedString.htm">NiFixedString</a>&amp;
GetAccumRootName() const</p>

<p class="NDLRefMemberDescription">This function returns the name
of the accumulation root node. An empty string is returned when
accumulation is not active.</p>

<p class="NDLRefMemberFunction">unsigned int
GetNonAccumStartIndex() const</p>

<p class="NDLRefMemberDescription">This function returns the
index of the first bound non-accumulation item. Index 2 is
returned when accumulation is active, and 0 otherwise. If
accumulation is active, indices 0 and 1 of the float, point3, and
quaternion data sections of associated pose buffers are reserved
for accumulation data. Index 0 holds the absolute transform, and
index 1 stores the delta with respect to the accumulation
transform at the previous Update time.</p>

<p class="NDLRefHead2">Functions to get the number of
bindings</p>

<p class="NDLRefMemberFunction">unsigned int
GetNumTotalBindings() const</p>

<p class="NDLRefMemberDescription">This function returns the
total number of bindings in the pose binding. Note that bindings
are never removed until the pose binding is destroyed. Thus,
comparing <span class="NDLSystemFont">GetNumTotalBindings</span>
to a prior value is a quick way to determine if anything has
changed in a pose binding.</p>

<p class="NDLRefMemberFunction">unsigned int
GetNumColorBindings() const</p>

<p class="NDLRefMemberFunction">unsigned int GetNumBoolBindings()
const</p>

<p class="NDLRefMemberFunction">unsigned int
GetNumFloatBindings() const</p>

<p class="NDLRefMemberFunction">unsigned int
GetNumPoint3Bindings() const</p>

<p class="NDLRefMemberFunction">unsigned int GetNumRotBindings()
const</p>

<p class="NDLRefMemberFunction">unsigned int
GetNumReferencedBindings() const</p>

<p class="NDLRefMemberDescription">These functions return the
number of bindings in the pose binding for each supported data
type (as defined by <a href=
"NiPoseBuffer.htm#NiPoseBufferChannelType"><span class=
"NDLSystemFont">NiPoseBufferChannelType</span></a>).</p>

<p class="NDLRefHead2">Function to get the pose buffer location
of a specified evaluator channel</p>

<p class="NDLRefMemberFunction">bool GetHandleAndLOD(const
<a href=
"../../Reference/NiMain/NiFixedString.htm">NiFixedString</a>&amp;
kAVObjectName, const <a href=
"../../Reference/NiMain/NiFixedString.htm">NiFixedString</a>&amp;
kPropertyType, const <a href=
"../../Reference/NiMain/NiFixedString.htm">NiFixedString</a>&amp;
kCtlrType, const <a href=
"../../Reference/NiMain/NiFixedString.htm">NiFixedString</a>&amp;
kCtlrID, const <a href=
"../../Reference/NiMain/NiFixedString.htm">NiFixedString</a>&amp;
kEvaluatorID, <a href=
"NiPoseBuffer.htm#NiPoseBufferChannelType">NiPoseBufferChannelType</a>
ePBChannelType, <a href=
"NiPoseBufferHandle.htm">NiPoseBufferHandle</a>&amp; kPBHandle,
short&amp; sLOD) const</p>

<p class="NDLRefMemberFunction">bool GetHandleAndLOD(const
<a href="NiEvaluator.htm#IDTag">NiEvaluator::IDTag</a>&amp;
kIDTag, <a href=
"NiPoseBuffer.htm#NiPoseBufferChannelType">NiPoseBufferChannelType</a>
ePBChannelType, <a href=
"NiPoseBufferHandle.htm">NiPoseBufferHandle</a>&amp; kPBHandle,
short&amp; sLOD) const</p>

<p class="NDLRefMemberDescription">These functions return the
pose buffer handle and level of detail associated with the
specified evaluator channel. See the documentation for
<span class="NDLSystemFont"><a href=
"NiEvaluator.htm#IDTag">NiEvaluator::IDTag</a></span> for a
description of each string and what it represents. <span class=
"NDLSystemFont">ePBChannelType</span> must be specified since
some evaluators support multiple channels. For instance, an
<span class="NDLSystemFont"><a href=
"NiTransformEvaluator.htm">NiTransformEvaluator</a></span> may
have up to three channels (and three corresponding pose buffer
entries) for its position, rotation, and scale data. These
functions return true when the specified channel is bound by the
pose binding to a pose buffer location. Upon success, the
functions return the pose buffer location via <span class=
"NDLSystemFont">kPBHandle</span> and the associated level of
detail via <span class="NDLSystemFont">sLOD</span>. The functions
return false when the specified channel is not bound by the pose
binding to a pose buffer location. In this case, <span class=
"NDLSystemFont">kPBHandle</span> will be invalidated and
<span class="NDLSystemFont">sLOD</span> will remain unchanged.
Refer to the <a href="NiPoseBinding.htm#LevelOfDetail">notes</a>
below for more information regarding level of detail values.</p>

<p class="NDLRefHead1">Notes</p>

<a name="LevelOfDetail" id="LevelOfDetail"></a><p class="NDLRefHead2">Level of Detail</p>

<p>An <span class="NDLSystemFont">NiPoseBinding</span> stores the
level of detail (LOD) for each bound evaluator channel. These
values are acquired from the <span class="NDLSystemFont"><a href=
"NiSkinningLODController.htm">NiSkinningLODController</a></span>
in the scene graph branch of the associated <span class=
"NDLSystemFont"><a href=
"NiControllerManager.htm">NiControllerManager</a></span> whenever
a binding is formed. LOD values are set to 0 when an <span class=
"NDLSystemFont">NiSkinningLODController</span> is not present.
The Gamebryo sequence-based animation system is optimized to skip
evaluator channels which have no visible effect based on LOD
values.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

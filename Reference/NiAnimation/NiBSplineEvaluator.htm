<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiBSplineEvaluator</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiBSplineEvaluator</p>

<p class="NDLRefParentage">: public <a href=
"NiEvaluator.htm">NiEvaluator</a></p>

<p class="NDLRefHeaderFile">&lt;NiBSplineEvaluator.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiBSplineEvaluator</span> is an
abstract base class for all evaluators that convert a time and an
object into one of the supported data formats by interpolating
B-Splines. Each <span class=
"NDLSystemFont">NiBSplineEvaluator</span> can support more than
one control point array, which is specified by the control point
channel parameter to most of the methods in this class.</p>

<p>All single channel B-Spline evaluators store any posed (i.e.
constant) data using the control point array. As a result, such
posed evaluators are handled more efficiently by the const
evaluator classes, such as <span class="NDLSystemFont"><a href=
"NiConstFloatEvaluator.htm">NiConstFloatEvaluator</a></span>.</p>

<p>Evaluators are primarily intended for sequence-based
animation. Refer to the <a href=
"Animation_Sequences.htm">Animation Sequences</a> section in the
Introduction to Animation for more details.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberDescription">This is an abstract base class
and as such has no public constructors.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<a name="GetChannelCount" id=
"GetChannelCount"></a><p class="NDLRefMemberFunction">virtual unsigned short GetChannelCount()
const = 0</p>

<p class="NDLRefMemberDescription">This function returns the
total number of control point channels supported by this
<span class="NDLSystemFont">NiBSplineEvaluator</span>.</p>

<a name="GetControlPointCount"
id="GetControlPointCount"></a><p class="NDLRefMemberFunction">virtual unsigned int
GetControlPointCount(unsigned short usChannel) const</p>

<p class="NDLRefMemberDescription">This function returns the
total number of control points for the specified control point
channel.</p>

<a name="GetDimension" id=
"GetDimension"></a><p class="NDLRefMemberFunction">virtual unsigned int GetDimension(unsigned
short usChannel) const = 0</p>

<p class="NDLRefMemberDescription">This function returns the
dimensionality of the control points at the specified control
point channel.</p>

<a name="GetDegree" id=
"GetDegree"></a><p class="NDLRefMemberFunction">virtual unsigned int GetDegree(unsigned short
usChannel) const = 0</p>

<p class="NDLRefMemberDescription">This function returns the
degree of the control points at the specified control point
channel.</p>

<p class="NDLRefMemberFunction">virtual bool
UsesCompressedControlPoints() const</p>

<p class="NDLRefMemberDescription">This function returns whether
or not the individual values are represented using a full
floating point value or compressed into the range of a short.</p>

<p class="NDLRefMemberFunction">virtual unsigned int
GetAllocatedSize(unsigned short usChannel) const</p>

<p class="NDLRefMemberDescription">This function returns the
total size of the control point array in bytes for the specified
control point channel.</p>

<p class="NDLRefMemberFunction"><a href=
"NiBSplineData.htm">NiBSplineData</a>* GetData() const</p>

<p class="NDLRefMemberDescription">This function returns the
<span class="NDLSystemFont">NiBSplineData</span> used by this
<span class="NDLSystemFont">NiBSplineEvaluator</span>.</p>

<p class="NDLRefMemberFunction"><a href=
"NiBSplineBasisData.htm">NiBSplineBasisData</a>* GetBasisData()
const</p>

<p class="NDLRefMemberDescription">This function returns the
<span class="NDLSystemFont">NiBSplineBasisData</span> used by
this <span class="NDLSystemFont">NiBSplineEvaluator</span>.</p>

<p class="NDLRefMemberFunction">void SetData(<a href=
"NiBSplineData.htm">NiBSplineData</a>* pkData, <a href=
"NiBSplineBasisData.htm">NiBSplineBasisData</a>* pkBasisData)</p>

<p class="NDLRefMemberDescription">This function sets both the
<span class="NDLSystemFont">NiBSplineData and
NiBSplineBasisData</span> used by this <span class=
"NDLSystemFont">NiBSplineEvaluator.</span></p>

<p class="NDLRefMemberFunction">virtual <a href=
"NiBSplineData.htm#Handle">NiBSplineData::Handle</a>
GetControlHandle(unsigned short usChannel) const = 0</p>

<p class="NDLRefMemberDescription">This function returns the
control point handle for the specified channel. This handle is
used when interpolating the value in the <span class=
"NDLSystemFont"><a href=
"NiBSplineData.htm">NiBSplineData</a></span> object.</p>

<p class="NDLRefMemberFunction">virtual void
SetControlHandle(<a href=
"NiBSplineData.htm#Handle">NiBSplineData::Handle</a>
kControlHandle, unsigned short usChannel) = 0</p>

<p class="NDLRefMemberDescription">This function sets the control
point handle for the specified channel. This handle is used when
interpolating the value in the <span class=
"NDLSystemFont"><a href=
"NiBSplineData.htm">NiBSplineData</a></span> object.</p>

<p class="NDLRefMemberFunction">virtual void Collapse()</p>

<p class="NDLRefMemberDescription">Overridden from <span class=
"NDLSystemFont"><a href=
"NiEvaluator.htm#Collapse">NiEvaluator</a></span>. This should
never be called on an <a href=
"NiBSplineEvaluator.htm"><span class=
"NDLSystemFont">NiBSplineEvaluator</span></a> derived class.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

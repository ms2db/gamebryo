<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiKeyBasedInterpolator</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiKeyBasedInterpolator</p>

<p class="NDLRefParentage">: public <a href=
"NiInterpolator.htm">NiInterpolator</a></p>

<p class="NDLRefHeaderFile">&lt;NiKeyBasedInterpolator.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiKeyBasedInterpolator</span> is
an abstract base class for all interpolators that convert a time
and an object into one of the supported data formats by
interpolating <span class="NDLSystemFont"><a href=
"NiAnimationKey.htm">NiAnimationKeys</a></span>. Each
<span class="NDLSystemFont">NiKeyBasedInterpolator</span> can
support more than one key array, which is specified by the key
channel parameter to most of the methods in this class.
Additionally, each key channel can support a pose animation when
there are no keys available for that channel. This pose is an
unchanging value for that key channel.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberDescription">This is an abstract base class
and as such has no public constructors.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<a name="GetKeyChannelCount" id="GetKeyChannelCount"></a><p class="NDLRefMemberFunction">virtual unsigned short
GetKeyChannelCount() const = 0</p>

<p class="NDLRefMemberDescription">This function returns the
total number of key channels supported by this <span class=
"NDLSystemFont">NiKeyBasedInterpolator</span>.</p>

<a name="GetKeyCount" id="GetKeyCount"></a><p class="NDLRefMemberFunction">virtual unsigned int
GetKeyCount(unsigned short usChannel) const = 0</p>

<p class="NDLRefMemberDescription">This function returns the
total number of keys for the specified key channel.</p>

<a name="GetKeyType" id="GetKeyType"></a><p class="NDLRefMemberFunction">virtual <a href=
"NiAnimationKey.htm#KeyType_Enumerations">NiAnimationKey::KeyType</a>
GetKeyType(unsigned short usChannel) const = 0</p>

<p class="NDLRefMemberDescription">This function returns the
interpolation type for the keys at the specified key
channel.</p>

<a name="GetKeyContent" id="GetKeyContent"></a><p class="NDLRefMemberFunction">virtual <a href=
"NiAnimationKey.htm#KeyContent_Enumerations">NiAnimationKey::KeyContent</a>
GetKeyContent(unsigned short usChannel) const = 0</p>

<p class="NDLRefMemberDescription">This function returns the base
key type for the keys at the specified key channel.</p>

<a name="GetKeyArray" id="GetKeyArray"></a><p class="NDLRefMemberFunction">virtual <span class=
"NDLSystemFont"><a href=
"NiAnimationKey.htm">NiAnimationKey</a></span>*
GetKeyArray(unsigned short usChannel) const = 0</p>

<p class="NDLRefMemberDescription">This function returns the key
array at the specified key channel.</p>

<a name="GetKeyStride" id="GetKeyStride"></a><p class="NDLRefMemberFunction">virtual unsigned char
GetKeyStride(unsigned short usChannel) const = 0</p>

<p class="NDLRefMemberDescription">This function returns the size
of each individual key in the key array at the specified key
channel. This is useful for iterating over the key
array.</p>

<a name="GetChannelPosed" id="GetChannelPosed"></a><p class="NDLRefMemberFunction">virtual bool
GetChannelPosed(unsigned short usChannel) const = 0</p>

<p class="NDLRefMemberDescription">This function returns whether
or not the key channel consists of a single pose value.</p>

<p class="NDLRefMemberFunction">unsigned int
GetAllocatedSize(unsigned short usChannel) const</p>

<p class="NDLRefMemberDescription">This function returns the
total size of the key array in bytes for the specified key
channel.</p>

<p class="NDLRefMemberFunction"><span class=
"NDLSystemFont"><a href=
"NiAnimationKey.htm">NiAnimationKey</a></span>* GetKeyAt(unsigned
int uiWhichKey, unsigned short usChannel) const</p>

<p class="NDLRefMemberDescription">This function returns the
<span class="NDLSystemFont"><a href=
"NiAnimationKey.htm">NiAnimationKey</a></span> at the specified
index into the key array for the specified key channel.</p>

<p class="NDLRefMemberFunction">void FillDerivedValues(unsigned
short usChannel)</p>

<p class="NDLRefMemberDescription">This function will create any
internal values needed for interpolation for the specified key
channel.</p>

<p class="NDLRefMemberFunction"><span class=
"NDLSystemFont"><a href=
"NiAnimationKey.htm">NiAnimationKey</a></span>* GetAnim(unsigned
int &amp;uiNumKeys, <a href=
"NiAnimationKey.htm#KeyType_Enumerations">NiAnimationKey::KeyType</a>
&amp;eType, unsigned char &amp;ucSize, unsigned short usChannel =
0) const</p>

<p class="NDLRefMemberDescription">This function will get all of
the important values for a specified key channel.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

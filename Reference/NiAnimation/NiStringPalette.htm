<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiStringPalette</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiStringPalette</p>

<p class="NDLRefParentage">: public <a href="../../Reference/NiMain/NiObject.htm">NiObject</a></p>

<p class="NDLRefHeaderFile">&lt;NiStringPalette.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>This class supports a block allocation of ASCII strings. 
 This class is used by <span class="NDLSystemFont"><a HREF="NiSequenceData.htm">NiSequenceData</a></span> 
 to read older versions of Gamebryo sequences.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiStringPalette(unsigned int uiAllocatedSize)</p>

<p class="NDLRefMemberDescription">Create an instance of the class with the 
 allocated buffer size of <span class="NDLSystemFont">uiAllocatedSize</span>.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">char* GetBasePointer() const</p>

<p class="NDLRefMemberDescription">Returns the pointer to the beginning of 
 the allocated buffer.</p>

<p class="NDLRefMemberFunction">unsigned int AddString(const char* pcString)</p>

<p class="NDLRefMemberDescription">Add the string to the buffer. If the buffer 
 overflows the current size, copy its contents into a buffer twice the 
 size of the original buffer. This method returns the offset of the string 
 in the buffer.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>ecr::PickService</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">ecr::PickService</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__ISystemService.htm">efd::ISystemService</a></span></p>


<p class="NDLRefHeaderFile">&lt;PickService.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classecr_1_1_pick_service.gif" alt="Inheritance graph for ecr::PickService"/>
  <p class="FigureCaption">Inheritance graph for ecr::PickService</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">The picking service is responsible for issuing pick requests on the scene graphs contained in the <span class="NDLSystemFont"><a href="ecr__SceneGraphService.htm">SceneGraphService</a></span>. </p>
<p class="NDLNormal">The <span class="NDLSystemFont">PickService</span> class provides functions for performing picking, and functions for script built-ins. It requires the <span class="NDLSystemFont"><a href="ecr__SceneGraphService.htm">SceneGraphService</a></span> and the EntityManager to be present.</p>
<p class="NDLNormal">See the <span class="NDLSystemFont"><a href="../NiCollision/NiPick.htm">NiPick</a></span> reference documentation for more information on picking. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>


<a name="classecr_1_1_pick_service_1acc0e9765fa20618918063baa89ad8fe6"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::SmartPointer</a></span>&lt;<span class="NDLSystemFont"><a href="ecr__PickService__PickRecord.htm">PickRecord</a></span>&gt;  PickRecordPtr</p>
<p class="NDLRefMemberDescription">A smart pointer type for the <span class="NDLSystemFont"><a href="ecr__PickService__PickRecord.htm">PickRecord</a></span> class. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classecr_1_1_pick_service_1a970087721aa268646f8f4668bd991b49"></a>
<p class="NDLRefMemberFunction">PickService(<br/>const <span class="NDLSystemFont">bool</span> bPickAppCulled = true, <br/>const <span class="NDLSystemFont">bool</span> bPickFrontOnly = true, <br/>const <span class="NDLSystemFont">bool</span> bPickClosestOnly = false)</p>
<p class="NDLRefMemberDescription">Constructs the picking service and performs pre-init operations. </p>
<p class="NDLRefMemberDetailedDescription">The picking policy is set to an <span class="NDLSystemFont"><a href="ecr__IgnoreParticlePickObjectPolicy.htm">IgnoreParticlePickObjectPolicy</a></span> object, which causes particle systems to not be picked. The picker is told to return normal vector information and to pick at the triangle level (<span class="NDLSystemFont">NiPick::INTERSECT_TRIANGLE</span>).</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">bPickAppCulled</span></td>
    <td>If true, objects with the App Culled flag set (hidden) may be picked. If false, App Culled objects will not be picked. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bPickFrontOnly</span></td>
    <td>If true, only front facing triangles are considered. All triangles are considered when this argument is false. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">bPickClosestOnly</span></td>
    <td>If true, only the closest object is picked. All objects along the ray are returned when this argument is false. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_1_1_pick_service_1a0670c6650f09e4cbde0bd99265890424"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="ecr__PickService__PickRecord.htm">PickRecord</a></span>*  PerformPick(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& rayOrigin, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& rayDir)</p>
<p class="NDLRefMemberDescription">Perform a pick operation. </p>
<p class="NDLRefMemberDetailedDescription">The given ray is tested against all Entity-based scene graphs known to the <span class="NDLSystemFont"><a href="ecr__SceneGraphService.htm">SceneGraphService</a></span>. The default App Culled, Front Facing and Closest Only flags are used.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>A <span class="NDLSystemFont"><a href="ecr__PickService__PickRecord.htm">PickRecord</a></span> object containing the results of the pick. The calling code is responsible for deleting the pointer (using EE_DELETE). </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_1_1_pick_service_1a63d84c4b9d826053b5c475f3627bc298"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="ecr__PickService__PickRecord.htm">PickRecord</a></span>*  PerformPick(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& rayOrigin, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& rayDir, <br/>const <span class="NDLSystemFont">bool</span> bPickFrontOnly, <br/>const <span class="NDLSystemFont">bool</span> bPickAppCulled, <br/>const <span class="NDLSystemFont">bool</span> bPickClosestOnly)</p>
<p class="NDLRefMemberDescription">Perform a pick operation with the given App Culled, Front Only, and Closest Only flags. </p>
<p class="NDLRefMemberDetailedDescription">The given ray is tested against all Entity-based scene graphs known to the <span class="NDLSystemFont"><a href="ecr__SceneGraphService.htm">SceneGraphService</a></span>.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>A <span class="NDLSystemFont"><a href="ecr__PickService__PickRecord.htm">PickRecord</a></span> object containing the results of the pick. The calling code is responsible for deleting the pointer (using EE_DELETE). </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_1_1_pick_service_1a3837b4448a878b8a8fb31df39c8ed92c"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="ecr__PickService__PickRecord.htm">PickRecord</a></span>*  PerformPick(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& rayOrigin, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& rayDir, <br/><span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* testObject)</p>
<p class="NDLRefMemberDescription">Perform a pick operation on a specific scene graph. </p>
<p class="NDLRefMemberDetailedDescription">The default App Culled, Front Facing and Closest Only flags are used.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>A <span class="NDLSystemFont"><a href="ecr__PickService__PickRecord.htm">PickRecord</a></span> object containing the results of the pick. The calling code is responsible for deleting the pointer (using EE_DELETE). </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_1_1_pick_service_1a238918b31e5f99db5b52472c6f3cbe6a"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="ecr__PickService__PickRecord.htm">PickRecord</a></span>*  PerformPick(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& rayOrigin, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& rayDir, <br/><span class="NDLSystemFont"><a href="../NiMain/NiAVObject.htm">NiAVObject</a></span>* testObject, <br/>const <span class="NDLSystemFont">bool</span> bPickFrontOnly, <br/>const <span class="NDLSystemFont">bool</span> bPickAppCulled, <br/>const <span class="NDLSystemFont">bool</span> bPickClosestOnly)</p>
<p class="NDLRefMemberDescription">Perform a pick operation on a specific scene graph with the given App Culled, Front Only, and Closest Only flags. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>A <span class="NDLSystemFont"><a href="ecr__PickService__PickRecord.htm">PickRecord</a></span> object containing the results of the pick. The calling code is responsible for deleting the pointer (using EE_DELETE). </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_1_1_pick_service_1aa637b55e28635b124895d2c5727543da"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  RegisterPickPolicy(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& modelName, <br/><span class="NDLSystemFont"><a href="../NiCollision/NiPick__PickObjectPolicy.htm">NiPick::PickObjectPolicy</a></span>* pPolicy)</p>
<p class="NDLRefMemberDescription">Allows pick policies to be registered for a particular entity model. </p>
<p class="NDLRefMemberDetailedDescription">All entities containing the specified model will then use the registered pick policy/mechanism.</p>
<p class="NDLRefMemberDetailedDescription">This method may be called prior to OnInit.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">Pick policies are only functional with entity based scene graphs. Any scene graphs added through the handle mechanism will not use pick policies. </p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">modelName</span></td>
    <td>Name of the model with which to use custom picking logic. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pPolicy</span></td>
    <td>Pick policy object to use on entities containing the specified model. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if registration was successful, false otherwise. Note, only one policy object may be specified per model name.</td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_1_1_pick_service_1ac080166b6738cb5dcb2c7cf153d85ddf"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  UnregisterPickPolicy(const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& modelName)</p>
<p class="NDLRefMemberDescription">Unregisters the pick policy for the specified model name. </p>
<p class="NDLRefMemberDetailedDescription">This method may be called prior to OnInit.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">modelName</span></td>
    <td>Name of the model with which to remove the policy. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if successful, false if there was no pick policy registered for the specified model name. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classecr_1_1_pick_service_1a1d47b61a6e31cccc721d9615896ec2f4"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../NiCollision/NiPick.htm">NiPick</a></span>*  GetPickObject() const</p>
<p class="NDLRefMemberDescription">Gets a pointer to the underlying pick object used to resolve scene graph pick requests. </p>
<p class="NDLRefMemberDetailedDescription">This may be called during OnInit, but will return NULL during OnPreInit.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>Pointer to the pick object. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

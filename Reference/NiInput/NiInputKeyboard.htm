<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiInputKeyboard</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiInputKeyboard</p>

<p class="NDLRefParentage">: public <a href=
"NiInputDevice.htm">NiInputDevice</a></p>

<p class="NDLRefHeaderFile">&lt;NiInputKeyboard.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiInputKeyboard</span> implements
the extended functionality that a keyboard device requires.</p>

<p class="NDLRefHead1">Constructors</p>

<p>There are no public constructors for the <span class=
"NDLSystemFont">NiInputKeyboard</span> class. No application
should ever create an instance&mdash;it should be considered a pure
virtual base class.</p>

<p class="NDLRefHead1">Supported Enumerations</p>

<p>The <span class="NDLSystemFont">NiInputKeyboard</span> class
contains several enumerations.</p>

<p class="NDLRefMemberFunction"><a name=
"NiInputKeyboard::KeyCode" id=
"NiInputKeyboard::KeyCode"></a>NiInputKeyboard::KeyCode</p>

<p class="NDLRefMemberDescription">The <span class=
"NDLSystemFont">KeyCode</span> enumeration identifies the
Gamebryo-defined keys. They are fairly self-explanatory and too
numerous to list here. Refer to <span class=
"NDLSystemFont">NiInputKeyboard.h</span> for details.</p>

<p class="NDLRefMemberFunction"><a name=
"NiInputKeyboard::Modifiers" id=
"NiInputKeyboard::Modifiers"></a>NiInputKeyboard::Modifiers</p>

<p class="NDLRefMemberDescription">The <span class=
"NDLSystemFont">Modifier</span> enumeration gives OR-able
representation of key values that are used to identify modifiers.</p>

<!--(Table)=========================================================-->

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Modifiers</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class=
                "NDLSystemFont">KMOD_NONE</span></td>

                <td>No modifier.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">KMOD_LCONTROL</span></td>

                <td>Left control is pressed.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">KMOD_RCONTROL</span></td>

                <td>Right control is pressed.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">KMOD_LMENU</span></td>

                <td>Left ALT is pressed.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">KMOD_RMENU</span></td>

                <td>Right ALT is pressed.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">KMOD_LWIN</span></td>

                <td>Left 'window' is pressed.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">KMOD_RWIN</span></td>

                <td>Right 'window' is pressed.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">KMOD_LSHIFT</span></td>

                <td>Left shift is pressed.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">KMOD_RSHIFT</span></td>

                <td>Right shift is pressed.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">KMOD_CAPS_LOCK</span></td>

                <td>Caps lock is pressed.</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual NiInputErr
UpdateDevice()</p>

<p class="NDLRefMemberDescription">Keyboard-specific
implementation of the <span class=
"NDLSystemFont">UpdateDevice</span> call.</p>

<p class="NDLRefMemberFunction">virtual NiInputErr
UpdateActionMappedDevice(NiInputSystem* pkInputSystem)</p>

<p class="NDLRefMemberDescription">Keyboard-specific
implementation of the <span class=
"NDLSystemFont">UpdateActionMappedDevice</span> call.</p>

<p class="NDLRefMemberFunction">virtual NiInputErr
HandleRemoval()</p>

<p class="NDLRefMemberFunction">virtual NiInputErr
HandleInsertion()</p>

<p class="NDLRefMemberDescription">In this version of
<span class="NDLSystemFont">NiInput</span>, these functions are
currently not implemented. They are intended to provide a general
method for dealing with the occurrence of these situations. For
information, see 
<a href="Handling_Lost_or_Removed_Devices.htm">Handling Lost or
Removed Devices</a>.</p>

<p class="NDLRefMemberFunction"><a name=
"NiInputKeyboard::AnyKeyDown" id=
"NiInputKeyboard::AnyKeyDown"></a>const bool AnyKeyDown()
const</p>

<p class="NDLRefMemberDescription">Returns <span class=
"NDLSystemFont">true</span> if any key is currently down.</p>

<p class="NDLRefMemberFunction"><a name=
"NiInputKeyboard::KeyIsDown" id=
"NiInputKeyboard::KeyIsDown"></a>const bool KeyIsDown(KeyCode eKey,
unsigned int&amp; uiModifiers) const</p>

<p class="NDLRefMemberFunction">const bool KeyIsDown(KeyCode
eKey) const</p>

<p class="NDLRefMemberDescription">Returns <span class=
"NDLSystemFont">true</span> if the given key, <span class=
"NDLSystemFont">eKey</span>, is currently down. The <span class=
"NDLSystemFont">uiModifiers</span> version will fill in that
value with the current modifiers. Callers should use a
<span class="NDLSystemFont"><a href=
"NiInputKeyboard.htm#NiInputKeyboard::KeyCode">KeyCode</a></span>
enumeration value to identify the key of interest.</p>

<p class="NDLRefMemberFunction"><a name=
"NiInputKeyboard::KeyWasPressed" id=
"NiInputKeyboard::KeyWasPressed"></a>const bool KeyWasPressed(KeyCode
eKey, unsigned int&amp; uiModifiers) const</p>

<p class="NDLRefMemberFunction">const bool KeyWasPressed(KeyCode
eKey) const</p>

<p class="NDLRefMemberDescription">Returns <span class=
"NDLSystemFont">true</span> if the given key, <span class=
"NDLSystemFont">eKey</span>, was pressed since the last update
call. The <span class="NDLSystemFont">uiModifiers</span> version
will fill in that value with the current modifiers. Callers
should use a <span class="NDLSystemFont"><a href=
"NiInputKeyboard.htm#NiInputKeyboard::KeyCode">KeyCode</a></span>
enumeration value to identify the key of interest.</p>

<p class="NDLRefMemberFunction"><a name=
"NiInputKeyboard::KeyWasReleased" id=
"NiInputKeyboard::KeyWasReleased"></a>const bool
KeyWasReleased(KeyCode eKey, unsigned int&amp; uiModifiers)
const</p>

<p class="NDLRefMemberFunction">const bool KeyWasReleased(KeyCode
eKey) const</p>

<p class="NDLRefMemberDescription">Returns <span class=
"NDLSystemFont">true</span> if the given key, <span class=
"NDLSystemFont">eKey</span>, was released since the last update
call. The <span class="NDLSystemFont">uiModifiers</span> version
will fill in that value with the current modifiers. Callers
should use a <span class="NDLSystemFont"><a href=
"NiInputKeyboard.htm#NiInputKeyboard::KeyCode">KeyCode</a></span>
enumeration value to identify the key of interest.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

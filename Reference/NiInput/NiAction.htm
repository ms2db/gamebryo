<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiAction</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiAction</p>

<p class="NDLRefParentage">: public <span><a href=
"../../Reference/NiMain/NiRefObject.htm">NiRefObject</a></span></p>

<p class="NDLRefHeaderFile">&lt;NiAction.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiAction</span> represents a
mapping for input from a device to a specific action.</p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiAction()</p>

<p class="NDLRefMemberDescription">This constructor creates an
'empty' <span class="NDLSystemFont">NiAction</span> instance.</p>

<p class="NDLRefMemberFunction">NiAction(const char* pacName,
unsigned int uiAppData, unsigned int uiSemantic, unsigned int
uiFlags, unsigned int uiDeviceID = 0, int iRangeLow = 0, int
iRangeHight = 0, void* pvContext = 0)</p>

<p class="NDLRefMemberDescription">This constructor creates an
initialized <span class="NDLSystemFont">NiAction</span>
instance.</p>

<p class="NDLRefHead1">Supported Enumerations</p>

<p>The <span class="NDLSystemFont">NiAction</span> class contains
several public enumerations.</p>

<a name="NiAction::Flags" id="NiAction::Flags"></a><p class="NDLRefMemberFunction">NiAction::Flags</p>

<p class="NDLRefMemberDescription">The <span class=
"NDLSystemFont">Flags</span> enumeration is used to request
specific attributes or processing of an action.</p>

<!--(Table)=========================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Flags</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class=
                "NDLSystemFont">APPFIXED</span></td>

                <td>Action cannot be remapped. (NOT USED)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">APPMAPPED</span></td>

                <td>Action was mapped; the uiControl member is
                valid and should not be overridden (set by the
                system)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">APPNOMAP</span></td>

                <td>Action was not mapped (set by the
                system).</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">FORCEFEEDBACK</span></td>

                <td>Action should be mapped to an actuator or
                trigger. (NOT USED)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NORANGE</span></td>

                <td>Default range should not be set for this
                action. (NOT USED)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GAMEBRYORANGE</span></td>

                <td>Use the Gamebryo-supplied range for this
                action.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">ANALOG</span></td>

                <td>Analog data requested.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">RETURN_BOOLEAN</span></td>

                <td>Return 0 or 1 for the action, indicating that
                the action has occurred/been pressed or released.
                If not present, the actual value is returned in
                the action data instance. Most actions should use
                this flag.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">USE_MODIFIERS</span></td>

                <td>Indicates that the supplied modifiers should
                be pressed for the action to trigger.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">DEVICE_SPECIFIC</span></td>

                <td>Indicates that this action should only be
                mapped to the specific device identified by the
                <span class="NDLSystemFont">uiDeviceID</span>
                member.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">CONTINUOUS</span></td>

                <td>Indicates that this action should be reported
                <em>every</em> update. If this flag is not
                present, the action will only be reported on the
                edge cases.</td>
            </tr>

            <tr>
                <td></td>

                <td></td>
            </tr>
        </tbody>
    </table>
</div>

<a name="NiAction::How" id="NiAction::How"></a><p class="NDLRefMemberFunction">NiAction::How</p>

<p class="NDLRefMemberDescription">The <span class=
"NDLSystemFont">How</span> enumeration provides information about
how an action was mapped to a device.</p>

<table class="NDLNoteContainer" width="100%">
    <tr align="left">
        <td class="NDLNoteContainerTD">
            <p class="NDLHeadingNoteContainer">Note</p>

            <div class="NDLNote">
                Most of the values below are unused in the
                current release.
            </div>
        </td>
    </tr>
</table>

<!--(Table)=========================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>How</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class=
                "NDLSystemFont">NIA_APPREQUESTED</span></td>

                <td>Not used.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NIA_DEFAULT</span></td>

                <td>Not used.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NIA_ERROR</span></td>

                <td>Not used.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NIA_HWAPP</span></td>

                <td>Not used.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NIA_HWDEFAULT</span></td>

                <td>Not used.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NIA_UNMAPPED</span></td>

                <td>Indicated the action was not mapped by the
                system.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NIA_USERCONFIG</span></td>

                <td>Not used.</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction"><a name="NiInput::Semantic" id=
"NiInput::Semantic">NiAction::Semantic</a></p>

<p class="NDLRefMemberDescription">The <span class=
"NDLSystemFont">Semantic</span> enumeration provides information
about how the application would like an action to be mapped to a
device.</p>

<!--(Table)=========================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Semantic</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class=
                "NDLSystemFont">GP_AXIS_LEFT_H</span></td>

                <td>Left stick horizontal axis.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_AXIS_LEFT_V</span></td>

                <td>Left stick vertical axis.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_AXIS_RIGHT_H</span></td>

                <td>Right stick horizontal axis.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_AXIS_RIGHT_V</span></td>

                <td>Right stick vertical axis.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_AXIS_X1_H</span></td>

                <td>X1 stick horizontal axis. (Not used in this
                release)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_AXIS_X1_V</span></td>

                <td>X1 stick vertical axis. (Not used in this
                release)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_AXIS_X2_H</span></td>

                <td>X2 stick horizontal axis. (Not used in this
                release)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_AXIS_X2_V</span></td>

                <td>X2 stick vertical axis. (Not used in this
                release)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_BUTTON_LUP</span></td>

                <td>Left up button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_BUTTON_LDOWN</span></td>

                <td>Left down button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_BUTTON_LLEFT</span></td>

                <td>Left left button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_BUTTON_LRIGHT</span></td>

                <td>Left right button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_BUTTON_L1</span></td>

                <td>L1 button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_BUTTON_L2</span></td>

                <td>L2 button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_BUTTON_R1</span></td>

                <td>R1 button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_BUTTON_R2</span></td>

                <td>R2 button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_BUTTON_RUP</span></td>

                <td>Right up button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_BUTTON_RDOWN</span></td>

                <td>Right down button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_BUTTON_RLEFT</span></td>

                <td>Right left button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_BUTTON_RRIGHT</span></td>

                <td>Right right button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_BUTTON_A</span></td>

                <td>A button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_BUTTON_B</span></td>

                <td>B button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_BUTTON_START</span></td>

                <td>Start button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_BUTTON_SELECT</span></td>

                <td>Select button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_AXIS_ANY1</span></td>

                <td>Any axis available. (Not used in this
                release.)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_AXIS_ANY2</span></td>

                <td>Any axis available. (Not used in this
                release.)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_AXIS_ANY3</span></td>

                <td>Any axis available. (Not used in this
                release.)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_AXIS_ANY4</span></td>

                <td>Any axis available. (Not used in this
                release.)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_AXIS_ANY5</span></td>

                <td>Any axis available. (Not used in this
                release.)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_AXIS_ANY6</span></td>

                <td>Any axis available. (Not used in this
                release.)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_AXIS_ANY7</span></td>

                <td>Any axis available. (Not used in this
                release.)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_AXIS_ANY8</span></td>

                <td>Any axis available. (Not used in this
                release.)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">GP_BUTTON_ANY_BASE</span></td>

                <td>Any button available. (Not used in this
                release.)</td>
            </tr>

            <tr>
                <td>KEY_MASK</td>

                <td>OR'd with the <span class=
                "NDLSystemFont"><a href=
                "NiInputKeyboard.htm#NiInputKeyboard::KeyCode">NiInputKeyboard::KeyCode</a></span>
                enumeration to assign an action to the given key.
                Users should utilize the <span class=
                "NDLSystemFont">KEY_MAP</span> macro to form the
                value. For example, to request an action assigned
                to the '1' key, set the semantic to <span class=
                "NDLSystemFont">KEY_MAP(NiInputKeyboard::KEY_1)</span></td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">KEY_ANY_BASE</span></td>

                <td>Any key available. (Not used in this
                release.)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MOUSE_AXIS_X</span></td>

                <td>The mouse X-axis.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MOUSE_AXIS_Y</span></td>

                <td>The mouse Y-axis.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MOUSE_AXIS_Z</span></td>

                <td>The mouse Z-axis.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MOUSE_BUTTON_LEFT</span></td>

                <td>The mouse left button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MOUSE_BUTTON_MIDDLE</span></td>

                <td>The mouse middle button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MOUSE_BUTTON_RIGHT</span></td>

                <td>The mouse right button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MOUSE_BUTTON_X1</span></td>

                <td>The mouse X1 button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MOUSE_BUTTON_X2</span></td>

                <td>The mouse X2 button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MOUSE_BUTTON_X3</span></td>

                <td>The mouse X3 button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MOUSE_BUTTON_X4</span></td>

                <td>The mouse X4 button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MOUSE_BUTTON_X5</span></td>

                <td>The mouse X5 button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MOUSE_AXIS_ANY_1</span></td>

                <td>Any mouse axis. (Not used in this
                release.)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MOUSE_AXIS_ANY_2</span></td>

                <td>Any mouse axis. (Not used in this
                release.)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MOUSE_AXIS_ANY_3</span></td>

                <td>Any mouse axis. (Not used in this
                release.)</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MOUSE_BUTTON_ANY_BASE</span></td>

                <td>Any mouse button. (Not used in this
                release.)</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">const char* GetName() const</p>

<p class="NDLRefMemberDescription">Returns the user-supplied name
of the action.</p>

<p class="NDLRefMemberFunction">const unsigned int GetAppData()
const</p>

<p class="NDLRefMemberDescription">Returns the application data
set for the action. This can be any value that the application
wants. For information on the different uses of the AppData
field, refer to the InputDemo sample.</p>

<p class="NDLRefMemberFunction">const unsigned int GetSemantic()
const</p>

<p class="NDLRefMemberDescription">Returns the semantic for the
action.</p>

<p class="NDLRefMemberFunction">const unsigned int GetFlags()
const</p>

<p class="NDLRefMemberDescription">Returns the flags for the
action.</p>

<p class="NDLRefMemberFunction">const unsigned int GetDeviceID()
const</p>

<p class="NDLRefMemberDescription">Returns the DeviceID for the
action. This is only valid if the <span class=
"NDLSystemFont">DEVICE_SPECIFIC</span> flag is present.</p>

<p class="NDLRefMemberFunction">const void GetRange(int&amp;
iLow, int&amp; iHigh) const</p>

<p class="NDLRefMemberDescription">Retrieves the range values for
the action. These are only valid if the <span class=
"NDLSystemFont">GAMEBRYORANGE</span> flag is present.</p>

<p class="NDLRefMemberFunction">void* GetContext()</p>

<p class="NDLRefMemberDescription">Returns the
application-specific context data assigned to the action.</p>

<p class="NDLRefMemberFunction">const unsigned int
GetKeyModifiers() const</p>

<p class="NDLRefMemberFunction">const unsigned int
GetMouseModifiers() const</p>

<p class="NDLRefMemberFunction">const unsigned int
GetPadModifiers() const</p>

<p class="NDLRefMemberDescription">Returns the modifiers from the
keyboard, mouse, and game pad, respectively, assigned to the
action. These are only valid if the <span class=
"NDLSystemFont">USE_MODIFIERS</span> flag is present.</p>

<p class="NDLRefMemberFunction">const unsigned int GetControl()
const</p>

<p class="NDLRefMemberDescription">Returns the control to which
the system mapped the action to.</p>

<p class="NDLRefMemberFunction">const unsigned int GetHow()
const</p>

<p class="NDLRefMemberDescription">Returns the value made up of
<span class="NDLSystemFont"><a href=
"NiAction.htm#NiAction::How">How</a></span> enumerations,
indicating how the system mapped the action.</p>

<p class="NDLRefMemberFunction">void SetName(const char*
pacName)</p>

<p class="NDLRefMemberDescription">Sets the name of the
action.</p>

<p class="NDLRefMemberFunction">void SetAppData(unsigned int
uiAppData)</p>

<p class="NDLRefMemberDescription">Sets the app data field of the
action.</p>

<p class="NDLRefMemberFunction">void SetSemantic(unsigned int
uiSemantic)</p>

<p class="NDLRefMemberDescription">Sets the semantic of the
action.</p>

<p class="NDLRefMemberFunction">void SetFlags(unsigned int
uiFlags)</p>

<p class="NDLRefMemberDescription">Sets the flags of the
action.</p>

<p class="NDLRefMemberFunction">void SetDeviceID(unsigned int
uiDeviceID)</p>

<p class="NDLRefMemberDescription">Sets the device ID associated
with the action.</p>

<p class="NDLRefMemberFunction">void SetRange(int iLow, int
iHigh)</p>

<p class="NDLRefMemberDescription">Sets the range of the
action.</p>

<p class="NDLRefMemberFunction">void SetContext(void*
pvContext)</p>

<p class="NDLRefMemberDescription">Sets the app-supplied context
of the action.</p>

<p class="NDLRefMemberFunction">void SetKeyModifiers(unsigned int
uiModifiers)</p>

<p class="NDLRefMemberDescription">Sets the keyboard modifiers
for the action.</p>

<p class="NDLRefMemberFunction">void SetMouseModifiers(unsigned
int uiModifiers)</p>

<p class="NDLRefMemberDescription">Sets the mouse modifiers for
the action.</p>

<p class="NDLRefMemberFunction">void SetPadModifiers(unsigned int
uiModifiers)</p>

<p class="NDLRefMemberDescription">Sets the game pad modifiers
for the action.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

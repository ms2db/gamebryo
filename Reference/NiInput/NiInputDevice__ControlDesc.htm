<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiInputDevice::ControlDesc</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiInputDevice::ControlDesc</p>

<p class="NDLRefHeaderFile">&lt;NiInputDevice.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>The <span class=
"NDLSystemFont">NiInputDevice::ControlDesc</span> sub-class
provides information about a single 'control' on a device. An
example would be a button or an axis on a game pad stick. Each
<span class="NDLSystemFont">NiInputDevice::Description</span>
contains a list of control descriptions&mdash;one for each
available control on the device.</p>

<table class="NDLNoteContainer" width="100%">
    <tr align="left">
        <td class="NDLNoteContainerTD">
            <p class="NDLHeadingNoteContainer">Note</p>

            <div class="NDLNote">
                Currently, only the Win32 version fills in the
                control descriptions of an <span class=
                "NDLSystemFont">NiInputDevice::Description</span>
                instance.
            </div>
        </td>
    </tr>
</table>

<p class="NDLRefHead1">Constructors</p>

<p>No application should ever create an instance of an
<span class="NDLSystemFont">NiInputDevice::ControlDesc</span>
class. It should be considered an 'internal use only'
function.</p>

<p class="NDLRefHead1">Supported Enumerations</p>

<p>The <span class="NDLSystemFont">ControlDesc</span> class
contains two sets of public enumerations.</p>

<p class="NDLRefMemberFunction">
NiInputDevice::ControlDesc::Type</p>

<p class="NDLRefMemberDescription">The <span class=
"NDLSystemFont">Type</span> enumeration identifies the type of
control.</p>

<!--(Table)=========================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Type</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class=
                "NDLSystemFont">UNKNOWN</span></td>

                <td>An unknown (or unsupported) control.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">BUTTON</span></td>

                <td>Button - either analog or digital.</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">AXIS</span></td>

                <td>A single axis of an analog stick or
                slider.</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">POV</span></td>

                <td>Point-of-view hat or similar control.</td>
            </tr>

            <tr>
                <td><span class="NDLSystemFont">MOTOR</span></td>

                <td>Rumble motor - output only.</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction">
NiInputDevice::ControlDesc::Flags</p>

<p class="NDLRefMemberDescription">The <span class=
"NDLSystemFont">Flags</span> enumeration provides additional
information about the control.</p>

<!--(Table)=========================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Flag</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class=
                "NDLSystemFont">DATA_DIGITAL</span></td>

                <td>The control data is digital.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">DATA_ANALOG</span></td>

                <td>The control data is analog.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">TYPE_INPUT</span></td>

                <td>The control is an input.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">TYPE_OUTPUT</span></td>

                <td>The control is an output.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">TYPE_HYBRID</span></td>

                <td>The control is both an input and an
                output.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">OUT_RUMBLE</span></td>

                <td>The control is a rumble motor.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">OUT_FORCEFB</span></td>

                <td>The control is a force-feedback element.</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">const unsigned int GetIndex()
const</p>

<p class="NDLRefMemberDescription">Returns the index of the
control. This index is used to reference the control description
that is held in the <span class=
"NDLSystemFont">NiInputDevice::Description</span> class.</p>

<p class="NDLRefMemberFunction">const char* GetName() const</p>

<p class="NDLRefMemberDescription">Returns the name of the
control.</p>

<p class="NDLRefMemberFunction">const Type GetType() const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont">Type</span> enumeration of the control.</p>

<p class="NDLRefMemberFunction">const unsigned int GetFlags()
const</p>

<p class="NDLRefMemberDescription">Returns the flags that are
associated with the control.</p>

<p class="NDLRefMemberFunction">const bool IsDigital() const</p>

<p class="NDLRefMemberDescription">Returns <span class=
"NDLSystemFont">true</span> if the control is digital.</p>

<p class="NDLRefMemberFunction">const bool IsAnalog() const</p>

<p class="NDLRefMemberDescription">Returns <span class=
"NDLSystemFont">true</span> if the control is analog.</p>

<p class="NDLRefMemberFunction">const bool IsInput() const</p>

<p class="NDLRefMemberDescription">Returns <span class=
"NDLSystemFont">true</span> if the control is of the input
variety.</p>

<p class="NDLRefMemberFunction">const bool IsOutput() const</p>

<p class="NDLRefMemberDescription">Returns <span class=
"NDLSystemFont">true</span> if the control is of the output
variety.</p>

<p class="NDLRefMemberFunction">const bool IsHybrid() const</p>

<p class="NDLRefMemberDescription">Returns <span class=
"NDLSystemFont">true</span> if the control is of the hybrid
variety.</p>

<p class="NDLRefMemberFunction">const bool IsRumble() const</p>

<p class="NDLRefMemberDescription">Returns <span class=
"NDLSystemFont">true</span> if the control is a rumble motor.</p>

<p class="NDLRefMemberFunction">const bool IsForceFeedback()
const</p>

<p class="NDLRefMemberDescription">Returns <span class=
"NDLSystemFont">true</span> if the control is a force-feedback
control.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

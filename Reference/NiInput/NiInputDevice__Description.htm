<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiInputDevice::Description</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiInputDevice::Description</p>

<p class="NDLRefParentage">: public <a href=
"../../Reference/NiMain/NiRefObject.htm">NiRefObject</a></p>

<p class="NDLRefHeaderFile">&lt;NiInputDevice.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>The <span class=
"NDLSystemFont">NiInputDevice::Description</span> sub-class
provides information about a device. Applications can use this
description to determine what a devices capabilities are.</p>

<p class="NDLRefHead1">Constructors</p>

<p>No application should ever create an instance of an
<span class="NDLSystemFont">NiInputDevice::Description</span>
class. It should be considered an 'internal use only'
function.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">const Type GetType() const</p>

<p class="NDLRefMemberDescription">Returns the <span class=
"NDLSystemFont"><a href=
"NiInputDevice.htm#NiInputDevice::Type">NiInputDevice::Type</a></span>
enumeration identifying what type of device this is.</p>

<p class="NDLRefMemberFunction">const unsigned int GetPort()
const</p>

<p class="NDLRefMemberDescription">Returns the port this device
is connected to.</p>

<p class="NDLRefMemberFunction">const unsigned int GetSlot()
const</p>

<p class="NDLRefMemberDescription">Returns the slot this device
is connected to.</p>

<p class="NDLRefMemberFunction">const char* GetName() const</p>

<p class="NDLRefMemberDescription">Returns the name of the
device.</p>

<p class="NDLRefMemberFunction">const char*
GetDescriptionString() const</p>

<p class="NDLRefMemberDescription">Returns a string describing
the device.</p>

<p class="NDLRefMemberFunction">unsigned int
GetControlCount()</p>

<p class="NDLRefMemberDescription">Returns the number of controls
the device has.</p>

<p class="NDLRefMemberFunction">ControlDesc*
GetFirstControlDesc()</p>

<p class="NDLRefMemberFunction">ControlDesc*
GetNextControlDesc()</p>

<p class="NDLRefMemberDescription">These functions are used to
iterate over the descriptions of controls the device has.</p>

<p class="NDLRefMemberFunction">ControlDesc*
GetControlDescAtIndex(unsigned int uiIndex)</p>

<p class="NDLRefMemberDescription">Returns the description for
the control at index <span class=
"NDLSystemFont">uiIndex</span>.</p>

<p class="NDLRefMemberFunction">ControlDesc*
GetControlDescByName(const char* pcName)</p>

<p class="NDLRefMemberDescription">Returns the description for
the control named <span class="NDLSystemFont">pcName</span>.
Returns <span class="NDLSystemFont">NULL</span> if the control is
not found.</p>

<p class="NDLRefMemberFunction">const unsigned int
GetButtonCount() const</p>

<p class="NDLRefMemberDescription">Returns the number of buttons
(both analog and digital) the device has.</p>

<p class="NDLRefMemberFunction">const unsigned int GetAxisCount()
const</p>

<p class="NDLRefMemberDescription">Returns the number of analog
axes the device has.</p>

<p class="NDLRefMemberFunction">const unsigned int GetPOVCount()
const</p>

<p class="NDLRefMemberDescription">Returns the number of
point-of-view hat controls the device has.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiInputMouse</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<p class="NDLRefHeadClassTitle">NiInputMouse</p>

<p class="NDLRefParentage">: public <a href=
"NiInputDevice.htm">NiInputDevice</a></p>

<p class="NDLRefHeaderFile">&lt;NiInputMouse.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p><span class="NDLSystemFont">NiInputMouse</span> implements the
extended functionality a mouse device requires.</p>

<p class="NDLRefHead1">Constructors</p>

<p>There are no public constructors for the <span class=
"NDLSystemFont">NiInputMouse</span> class. No application should
ever create an instance - it should be considered a pure virtual
base class.</p>

<p class="NDLRefHead1">Supported Enumerations</p>

<p>The <span class="NDLSystemFont">NiInputMouse</span> class
contains several enumerations. These are detailed below:</p>

<p class="NDLRefMemberFunction"><a name="NiInputMouse::Axes" id=
"NiInputMouse::Axes">NiInputMouse::Axes</a></p>

<p class="NDLRefMemberDescription">The <span class=
"NDLSystemFont">Axes</span> enumeration identifies the
Gamebryo-defined axes available on a mouse device. The following
values are supplied:</p>
<!--(Table)=========================================================-->

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Axes</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class=
                "NDLSystemFont">NIM_AXIS_X</span></td>

                <td>X-axis of the mouse.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NIM_AXIS_Y</span></td>

                <td>Y-axis of the mouse.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NIM_AXIS_Z</span></td>

                <td>Z-axis of the mouse (mouse wheel).</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction"><a name="NiInputMouse::Button"
id="NiInputMouse::Button">NiInputMouse::Button</a></p>

<p class="NDLRefMemberDescription">The <span class=
"NDLSystemFont">Button</span> enumeration identifies
Gamebryo-defined buttons available on a mouse device. The
following values are supplied:</p>
<!--(Table)=========================================================-->

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Button</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class=
                "NDLSystemFont">NIM_NONE</span></td>

                <td>No button - used internally.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NIM_LEFT</span></td>

                <td>Left mouse button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NIM_RIGHT</span></td>

                <td>Right mouse button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NIM_MIDDLE</span></td>

                <td>Middle mouse button.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NIM_X1</span></td>

                <td>Extra button 1.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NIM_X2</span></td>

                <td>Extra button 2.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NIM_X3</span></td>

                <td>Extra button 3.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NIM_X4</span></td>

                <td>Extra button 4.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">NIM_X5</span></td>

                <td>Extra button 5.</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefMemberFunction"><a name="NiInputMouse::Modifiers"
id="NiInputMouse::Modifiers">NiInputMouse::Modifiers</a></p>

<p class="NDLRefMemberDescription">The <span class=
"NDLSystemFont">Modifier</span> enumeration gives OR-able
representation of key values that are used to identify modifiers.
The following values are supplied:</p>
<!--(Table)=========================================================-->

<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Modifiers</th>

                <th>Description</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td><span class=
                "NDLSystemFont">MMOD_NONE</span></td>

                <td>No modifier.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MMOD_LEFT</span></td>

                <td>Left mouse button is pressed.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MMOD_RIGHT</span></td>

                <td>Right mouse button is pressed.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MMOD_MIDDLE</span></td>

                <td>Middle mouse button is pressed.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MMOD_X1</span></td>

                <td>X2 mouse button is pressed.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MMOD_X2</span></td>

                <td>X2 mouse button is pressed.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MMOD_X3</span></td>

                <td>X3 mouse button is pressed.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MMOD_X4</span></td>

                <td>X4 mouse button is pressed.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MMOD_X5</span></td>

                <td>X5 mouse button is pressed.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">M</span><span class=
                "NDLSystemFont">MOD_LCONTROL</span></td>

                <td>Left control is pressed on the keyboard.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">M</span><span class=
                "NDLSystemFont">MOD_RCONTROL</span></td>

                <td>Right control is pressed on the
                keyboard.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MMOD_LMENU</span></td>

                <td>Left ALT is pressed on the keyboard.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">M</span><span class=
                "NDLSystemFont">MOD_RMENU</span></td>

                <td>Right ALT is pressed on the keyboard.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MMOD_LWIN</span></td>

                <td>Left 'window' is pressed on the
                keyboard.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">M</span><span class=
                "NDLSystemFont">MOD_RWIN</span></td>

                <td>Right 'window' is pressed on the
                keyboard.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">M</span><span class=
                "NDLSystemFont">MOD_LSHIFT</span></td>

                <td>Left shift is pressed on the keyboard.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">MMOD_RSHIFT</span></td>

                <td>Right shift is pressed on the keyboard.</td>
            </tr>

            <tr>
                <td><span class=
                "NDLSystemFont">M</span><span class=
                "NDLSystemFont">MOD_CAPS_LOCK</span></td>

                <td>Caps lock is pressed on the keyboard.</td>
            </tr>
        </tbody>
    </table>
</div>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">virtual NiInputErr
UpdateDevice()</p>

<p class="NDLRefMemberDescription">Mouse-specific implementation
of the <span class="NDLSystemFont">UpdateDevice</span> call..</p>

<p class="NDLRefMemberFunction">virtual NiInputErr
UpdateActionMappedDevice(NiInputSystem* pkInputSystem)</p>

<p class="NDLRefMemberDescription">Mouse-specific implementation
of the <span class=
"NDLSystemFont">UpdateActionMappedDevice</span> call..</p>

<p class="NDLRefMemberFunction">virtual NiInputErr
HandleRemoval()</p>

<p class="NDLRefMemberFunction">virtual NiInputErr
HandleInsertion()</p>

<p class="NDLRefMemberDescription">In this version of
<span class="NDLSystemFont">NiInput</span>, these functions are
currently not implemented. They are intended to provide a general
method for dealing with the occurrence of these situations. For
information on dealing with these situations, please refer to
<a href="Handling_Lost_or_Removed_Devices.htm">Handling Lost or
Removed Devices</a>.</p>

<p class="NDLRefMemberFunction"><a name=
"NiInputMouse::ButtonIsDown" id=
"NiInputMouse::ButtonIsDown">const bool ButtonIsDown(Button
eButton, unsigned int&amp; uiModifiers) const</a></p>

<p class="NDLRefMemberFunction">const bool ButtonIsDown(Button
eButton) const</p>

<p class="NDLRefMemberDescription">Returns <span class=
"NDLSystemFont">true</span> if the given button, <span class=
"NDLSystemFont">eButton</span>, is currently down. The
<span class="NDLSystemFont">uiModifiers</span> version will fill
in that value with the current modifiers. Callers should use a
<span class="NDLSystemFont"><a href=
"NiInputMouse.htm#NiInputMouse::Button">Button</a></span>
enumeration value to identify the button of interest.</p>

<p class="NDLRefMemberFunction"><a name=
"NiInputMouse::ButtonWasPressed" id=
"NiInputMouse::ButtonWasPressed">const bool
ButtonWasPressed(Button eButton, unsigned int&amp; uiModifiers)
const</a></p>

<p class="NDLRefMemberFunction">const bool
ButtonWasPressed(Button eButton) const</p>

<p class="NDLRefMemberDescription">Returns <span class=
"NDLSystemFont">true</span> if the given Button, <span class=
"NDLSystemFont">eButton</span>, was pressed since the last update
call. The <span class="NDLSystemFont">uiModifiers</span> version
will fill in that value with the current modifiers. Callers
should use a <span class="NDLSystemFont"><a href=
"NiInputMouse.htm#NiInputMouse::Button">Button</a></span>
enumeration value to identify the button of interest.</p>

<p class="NDLRefMemberFunction"><a name=
"NiInputMouse::ButtonWasReleased" id=
"NiInputMouse::ButtonWasReleased">const bool
ButtonWasReleased(Button eButton, unsigned int&amp; uiModifiers)
const</a></p>

<p class="NDLRefMemberFunction">const bool
ButtonWasReleased(Button eButton) const</p>

<p class="NDLRefMemberDescription">Returns <span class=
"NDLSystemFont">true</span> if the given button, <span class=
"NDLSystemFont">eButton</span>, was released since the last
update call. The <span class="NDLSystemFont">uiModifiers</span>
version will fill in that value with the current modifiers.
Callers should use a <span class="NDLSystemFont"><a href=
"NiInputMouse.htm#NiInputMouse::Button">Button</a></span>
enumeration value to identify the key of interest.</p>

<p class="NDLRefMemberFunction"><a name=
"NiInputMouse::GetPositionDelta" id=
"NiInputMouse::GetPositionDelta">bool GetPositionDelta(unsigned
int uiAxis, int&amp; iDelta)</a></p>

<p class="NDLRefMemberDescription">Retrieves the position delta
for the given axis, <span class="NDLSystemFont">uiAxis</span>,
placing the value in the <span class=
"NDLSystemFont">iDelta</span> parameter. Returns <span class=
"NDLSystemFont">true</span> if the given axis was valid,
<span class="NDLSystemFont">false</span> otherwise. Callers
should use an <span class="NDLSystemFont"><a href=
"NiInputMouse.htm#NiInputMouse::Axes">Axes</a></span> enumeration
value to identify the axis of interest.</p>

<p class="NDLRefMemberFunction">bool GetPositionDelta(int&amp;
iX, int&amp; iY, int&amp; iZ)</p>

<p class="NDLRefMemberDescription">Retrieves the position delta
for all three axes. Returns <span class=
"NDLSystemFont">true</span> if the call succeeded.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

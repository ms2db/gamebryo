<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egf::EventMessage</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egf::EventMessage</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__IMessage.htm">efd::IMessage</a></span></p>


<p class="NDLRefHeaderFile">&lt;EventMessage.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegf_1_1_event_message.gif" alt="Inheritance graph for egf::EventMessage"/>
  <p class="FigureCaption">Inheritance graph for egf::EventMessage</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Define the base class for entity-based messages. </p>

<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classegf_1_1_event_message_1a5b220a234fc8c81784395f41db479140"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">EventMessage</span>*  CreateEvent(<br/><span class="NDLSystemFont"><a href="egf__EntityID.htm">egf::EntityID</a></span> senderID, <br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1df4e70ceef104ead07333c2a8cf0df8">egf::FlatModelID</a></span> mixinModelID, <br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1df4e70ceef104ead07333c2a8cf0df8">egf::FlatModelID</a></span> invokeModelID, <br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1ebd2b58de9ca508c04d80dea3644fcb">egf::BehaviorID</a></span> behaviorID, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a37c593debc73d82d7ddc571c725f0e2d">efd::TimeType</a></span> delay = 0, <br/><span class="NDLSystemFont"><a href="../efd/efd__ParameterList.htm">efd::ParameterList</a></span>* pParams = 0, <br/><span class="NDLSystemFont">bool</span> needResponse = false)</p>
<p class="NDLRefMemberDescription">Construct an event message with parameters. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">senderID</span></td>
    <td>The sender of the event </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">behaviorID</span></td>
    <td>The behavior to execute </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">mixinModelID</span></td>
    <td>A base model that defines the behavior to run. The target must mix-in this model. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">invokeModelID</span></td>
    <td>The exact model to invoke the behavior from, or 0 to call the most derived. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">delay</span></td>
    <td>Time to delay execution of the event </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pParams</span></td>
    <td>The parameters for the behavior event </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">needResponse</span></td>
    <td>True if the caller needs a return value event message to be sent after the behavior completes </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_event_message_1ab8b4d91f52a517a7be51a7b3a1e245d4"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">EventMessage</span>*  CreateReturn(<br/><span class="NDLSystemFont"><a href="egf__EntityID.htm">egf::EntityID</a></span> senderID, <br/><span class="NDLSystemFont"><a href="egf__EventID.htm">egf::EventID</a></span> eventID, <br/><span class="NDLSystemFont"><a href="../efd/efd__ParameterList.htm">efd::ParameterList</a></span>* pReturnVals = 0)</p>
<p class="NDLRefMemberDescription">Construct a return message with parameters. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">senderID</span></td>
    <td>The sender of the return </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">eventID</span></td>
    <td>The ID of the event that for return value events </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pReturnVals</span></td>
    <td>The return values for the callback behavior </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_event_message_1a4b909bc072f9edcf48fcb3c592de021b"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">EventMessage</span>*  CreateCancel(<br/><span class="NDLSystemFont"><a href="egf__EntityID.htm">egf::EntityID</a></span> senderID, <br/><span class="NDLSystemFont"><a href="egf__EventID.htm">egf::EventID</a></span> eventID)</p>
<p class="NDLRefMemberDescription">Construct an event cancel message with parameters. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">senderID</span></td>
    <td>The sender of the cancel event </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">eventID</span></td>
    <td>The ID of the event that will be cancelled </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegf_1_1_event_message_1ac6b610799f17d8853835bad3654405fa"></a>
<p class="NDLRefMemberFunction">EventMessage()</p>
<p class="NDLRefMemberDescription">Default constructor. </p>

<a name="classegf_1_1_event_message_1aff4a9f624b78a19b676ecac19f6aa77d"></a>
<p class="NDLRefMemberFunction">EventMessage(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a11b3d968bc96d7f04115a0aad3893469">efd::ClassID</a></span> msgClassID, <br/><span class="NDLSystemFont"><a href="egf__EntityID.htm">egf::EntityID</a></span> senderID, <br/><span class="NDLSystemFont"><a href="egf__EventID.htm">egf::EventID</a></span> eventID, <br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1ebd2b58de9ca508c04d80dea3644fcb">egf::BehaviorID</a></span> behaviorID, <br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1df4e70ceef104ead07333c2a8cf0df8">egf::FlatModelID</a></span> mixinModelID, <br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1df4e70ceef104ead07333c2a8cf0df8">egf::FlatModelID</a></span> invokeModelID, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a37c593debc73d82d7ddc571c725f0e2d">efd::TimeType</a></span> delay = 0, <br/><span class="NDLSystemFont"><a href="../efd/efd__ParameterList.htm">efd::ParameterList</a></span>* pParams = 0, <br/><span class="NDLSystemFont">bool</span> needResponse = false)</p>
<p class="NDLRefMemberDescription">Constructor. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">msgClassID</span></td>
    <td>The type of message being created </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">senderID</span></td>
    <td>The sender of the event </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">eventID</span></td>
    <td>The ID of the event that for return value events </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">behaviorID</span></td>
    <td>The behavior to execute </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">mixinModelID</span></td>
    <td>A base model that defines the behavior to run. The target must mix-in this model. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">invokeModelID</span></td>
    <td>The exact model to invoke the behavior from, or 0 to call the most derived. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">delay</span></td>
    <td>Time to delay execution of the event </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pParams</span></td>
    <td>The parameters for the behavior event </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">needResponse</span></td>
    <td>True if the caller needs a return value event message to be sent after the behavior completes </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_event_message_1acbb6db2dcc296262cae98dbba4a074c0"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__EntityID.htm">egf::EntityID</a></span>  GetSenderID() const</p>
<p class="NDLRefMemberDescription">Retrieves the entity ID that sent this event. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="egf__EntityID.htm">EntityID</a></span> The entity that sent this event </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_event_message_1a5c7390f03d2905352d65f23f4b7189f9"></a>
<p class="NDLRefMemberFunction">void  SetSenderID(<span class="NDLSystemFont"><a href="egf__EntityID.htm">egf::EntityID</a></span> entityID)</p>
<p class="NDLRefMemberDescription">Sets the identifier of the entity that is sending this event. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">entityID</span></td>
    <td>The entity that is sending this event </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_event_message_1adfd32af78d3ea4326945f6419bb006fc"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1df4e70ceef104ead07333c2a8cf0df8">egf::FlatModelID</a></span>  GetMixinModelID() const</p>
<p class="NDLRefMemberDescription">Retrieves the model ID that must be mixed into the target entity for this event to be valid. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="egf__EntityID.htm">EntityID</a></span> The mixed in model ID </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_event_message_1a13278c8cf6dc4038092c512329433ac5"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1df4e70ceef104ead07333c2a8cf0df8">egf::FlatModelID</a></span>  GetInvokeModelID() const</p>
<p class="NDLRefMemberDescription">Retrieves the model ID of the specific implementation to invoke. </p>
<p class="NDLRefMemberDetailedDescription">Normally this is left as zero in order to use virtual invoking semantics which calls the most derived implementation.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>FlatModelID The implementing model, or 0 to use virtual behavior semantics. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_event_message_1aa8c908a59d394fcce3f12ecbcae3dc35"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1ebd2b58de9ca508c04d80dea3644fcb">egf::BehaviorID</a></span>  GetBehaviorID() const</p>
<p class="NDLRefMemberDescription">Retrieves the behavior identifier to be executed during this event. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>BehaviorID The behavior to execute </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_event_message_1ab115f0cbb9e7eee092b770e119029800"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../efd/efd__ParameterList.htm">efd::ParameterList</a></span>*  GetParameters() const</p>
<p class="NDLRefMemberDescription">Retrieves the parameters for the behavior. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>ParameterList* List of parameters for the behavior </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_event_message_1ad7b9f75430309d0b2b3d8b1217a71588"></a>
<p class="NDLRefMemberFunction">virtual void  SetBehavior(<br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1df4e70ceef104ead07333c2a8cf0df8">egf::FlatModelID</a></span> mixinModelID, <br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1df4e70ceef104ead07333c2a8cf0df8">egf::FlatModelID</a></span> invokeModelID, <br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1ebd2b58de9ca508c04d80dea3644fcb">egf::BehaviorID</a></span> behaviorID, <br/><span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">efd::ParameterListPtr</a></span> spStrm, <br/><span class="NDLSystemFont">bool</span> needResponse = false)</p>
<p class="NDLRefMemberDescription">Sets the behavior that should be executed when this event is received and processed. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">mixinModelID</span></td>
    <td>The target entity must mix-in this model type or else the behavior request is considered invalid. This acts as type safety of the target model. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">invokeModelID</span></td>
    <td>Normally this ID is set to 0 which results in calling the most- derived implementation of the given behavior on the target entity. This is similar to how C++ virtual methods operate. Sometimes you need to call a specific implementation of the behavior, in those rare cases you set this model ID. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">behaviorID</span></td>
    <td>The behavior to execute </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">spStrm</span></td>
    <td>List of parameters that the behavior requires </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">needResponse</span></td>
    <td>True if the caller needs a return value event message to be sent after the behavior completes </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_event_message_1abe258aa207bc395c33cf03a2d57b2b6f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a37c593debc73d82d7ddc571c725f0e2d">efd::TimeType</a></span>  GetDelay() const</p>
<p class="NDLRefMemberDescription">Gets the time to wait before executing this behavior event. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>float Time in seconds to delay </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_event_message_1a7a8fc87c113ae0617b08a7c3f6981b78"></a>
<p class="NDLRefMemberFunction">void  SetDelay(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a37c593debc73d82d7ddc571c725f0e2d">efd::TimeType</a></span> delay)</p>
<p class="NDLRefMemberDescription">Sets the time to wait before executing this behavior event. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">delay</span></td>
    <td>Time in seconds to delay </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_event_message_1adce4ed58ae216b591a4aaac65f911950"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__EventID.htm">egf::EventID</a></span>  GetEventID() const</p>
<p class="NDLRefMemberDescription">Retrieves the unique ID assigned to this event. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="egf__EventID.htm">EventID</a></span> The unique event ID </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_event_message_1acc40209485f73e5039f232af2f488692"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  NeedResponse() const</p>
<p class="NDLRefMemberDescription">Informs the entity that executes the event that a response is required. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True is a response is required. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_event_message_1ae67587218e4be4d048f18abaf5493e68"></a>
<p class="NDLRefMemberFunction">void  SetEventID(<span class="NDLSystemFont"><a href="egf__EventID.htm">egf::EventID</a></span> eID)</p>
<p class="NDLRefMemberDescription">Sets the m_eventID member. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">eID</span></td>
    <td>The eventID to store </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_event_message_1acdc9ca30b4819e2d5aa50f13dca63aca"></a>
<p class="NDLRefMemberFunction">void  SeBehaviorID(<span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1ebd2b58de9ca508c04d80dea3644fcb">egf::BehaviorID</a></span> bID)</p>
<p class="NDLRefMemberDescription">Sets the m_behaviorID member. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">bID</span></td>
    <td>The behavior ID to store </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_event_message_1a74a77b2f69f2ab8eb813b9078dee27ca"></a>
<p class="NDLRefMemberFunction">void  SetNeedResponse(<span class="NDLSystemFont">bool</span> needresponse)</p>
<p class="NDLRefMemberDescription">Sets the m_needResponse member. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">needresponse</span></td>
    <td>The boolean to store for m_needResponse </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_event_message_1a7281341818fca89f436c13c6dbde7c5a"></a>
<p class="NDLRefMemberFunction">void  SetParams(<span class="NDLSystemFont"><a href="../efd/efd__ParameterList.htm">efd::ParameterList</a></span>* data)</p>
<p class="NDLRefMemberDescription">Sets the ParameterList from the provided list. </p>
<p class="NDLRefMemberDetailedDescription">The data is copied into another parameter list which will share the memory buffer used for storage.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">data</span></td>
    <td>The data stream to store </td>
</tr>

        </tbody>
    </table>
</div>


<a name="istreamable_overrides"></a>
<p class="NDLRefHead1">IStreamable overrides</p>


<a name="classegf_1_1_event_message_1aacfcf2f15c4d448ba581eefb22eb6e3a"></a>
<p class="NDLRefMemberFunction">virtual void  Serialize(<span class="NDLSystemFont"><a href="../efd/efd__Archive.htm">efd::Archive</a></span>& io_ar)</p>
<p class="NDLRefMemberDescription">Serialize a polymorphic type to or from an Archive. </p>
<p class="NDLRefMemberDetailedDescription">This method must be overridden, but if your streamable object has no data the override can be an empty function. A typical implementation of this method will make one call to <span class="NDLSystemFont"><a href="../Namespaces/efd__Serializer.htm#namespaceefd_1_1_serializer_1a63e0b99047011bde53be44786ab9ee7b">efd::Serializer::SerializeObject</a></span> for each member of the class. If you are derived from another streamable class you should be sure to call to parent implementation of this method as well; it is recommended that the parent class be serialized first before adding the data for the derived class. If your class contains complex data such as STL-style contianers or pointers to allocated data then you can simplify the implementation of Serialize by using the templated helper functions in &lt;<span class="NDLSystemFont">efd/SerializeRoutines.h</span>&gt;; these can serialize even the most complex data structures with a single method call and will reduce the chance of making common mistakes (which could introduce security vulnerabilities if marshalling data from untrusted sources).</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">io_ar</span></td>
    <td>The Archive to serialize to or from. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

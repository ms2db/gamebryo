<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egf::ISchedulerScripting</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egf::ISchedulerScripting</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__IBase.htm">efd::IBase</a></span></p>


<p class="NDLRefHeaderFile">&lt;ISchedulerScripting.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegf_1_1_i_scheduler_scripting.gif" alt="Inheritance graph for egf::ISchedulerScripting"/>
  <p class="FigureCaption">Inheritance graph for egf::ISchedulerScripting</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Interface class for scheduler scripting support. </p>
<p class="NDLNormal">This provides a common interface when embedding scripting language support into the scheduler. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>
<a name="classegf_1_1_i_scheduler_scripting_1afbef1604a644e0ce68cfa5bd67277e12"></a>
<p class=NDLRefHead2>egf::ISchedulerScripting::RuntimeStatus</p>



<p class="NDLRefMemberDetailedDescription">The status of the runtime. </p>

<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">rtstat_PreInit</span></td>
    <td>the runtime is ready for initialization. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">rtstat_Ready</span></td>
    <td>the runtime is available for use. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">rtstat_Disabled</span></td>
    <td>the runtime is disabled. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">rtstat_Shutdown</span></td>
    <td>the runtime has shutdown </td>
</tr>

  </tbody>
</table>
</div>


<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classegf_1_1_i_scheduler_scripting_1aa03da53291dab15cb265e42363fdc8bc"></a>
<p class="NDLRefMemberFunction">ISchedulerScripting()</p>
<p class="NDLRefMemberDescription">Construct a new <span class="NDLSystemFont">ISchedulerScripting</span> object. </p>

<a name="classegf_1_1_i_scheduler_scripting_1a938379ac66616e8ba06479518aad3dd1"></a>
<p class="NDLRefMemberFunction">virtual ~ISchedulerScripting()</p>
<p class="NDLRefMemberDescription">Construct a new <span class="NDLSystemFont">ISchedulerScripting</span> object. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegf_1_1_i_scheduler_scripting_1a56c45b0f6ae8c76abdc30e309eae7655"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  InitForScripting(<span class="NDLSystemFont"><a href="egf__Scheduler.htm">Scheduler</a></span>* pScheduler) = 0</p>
<p class="NDLRefMemberDescription">Called during Init to setup scripting. </p>
<p class="NDLRefMemberDetailedDescription">InitForScripting is called from the <span class="NDLSystemFont"><a href="egf__Scheduler.htm">Scheduler</a></span> to initialize this runtime and prepare it to execute behavior scripts. </p>

<a name="classegf_1_1_i_scheduler_scripting_1a18244111e3cb1c76917dbf80d91f4d95"></a>
<p class="NDLRefMemberFunction">virtual void  Shutdown()</p>
<p class="NDLRefMemberDescription">Called to shutdown scripting. </p>
<p class="NDLRefMemberDetailedDescription">Once this is called the runtime is no longer valid and can no longer execute behavior scripts. When overriding this method be sure to call the base class. </p>

<a name="classegf_1_1_i_scheduler_scripting_1a1660913445f76650b018c760327a6507"></a>
<p class="NDLRefMemberFunction">virtual void  PreloadModule(<br/>const char* name, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> callback = efd::kCAT_INVALID)</p>
<p class="NDLRefMemberDescription">Preload a script module. </p>
<p class="NDLRefMemberDetailedDescription">This can be called to avoid hitches caused by script loading.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">name</span></td>
    <td>The name of the script file to preload. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">callback</span></td>
    <td>Optional category to receive a ScriptLoadResponse message once the script is loaded. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_i_scheduler_scripting_1acfddf90cfae275bd7d5d8ad15afcf9e1"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  ReloadModule(const char* name)</p>
<p class="NDLRefMemberDescription">Used to request that a module be reloaded. </p>
<p class="NDLRefMemberDetailedDescription">It is typically called when the system detects that the source file has changed. This has no effect unless the specified module is already loaded </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">name</span></td>
    <td>The name of the already loaded Lua script file to reload </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the module was reloaded. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_i_scheduler_scripting_1af6b129bc61b7162f98b386a1f77bcb83"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  DoScriptBehavior(<span class="NDLSystemFont"><a href="egf__PendingBehavior.htm">egf::PendingBehavior</a></span>* pPendBehavior) = 0</p>
<p class="NDLRefMemberDescription">Execute a pending behavior. </p>

<a name="classegf_1_1_i_scheduler_scripting_1ae5e25a073fe7baf9597c1584fae8f8d0"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__ISchedulerScripting.htm#classegf_1_1_i_scheduler_scripting_1afbef1604a644e0ce68cfa5bd67277e12">RuntimeStatus</a></span>  GetStatus()</p>
<p class="NDLRefMemberDescription">Returns the runtime status. </p>

<a name="classegf_1_1_i_scheduler_scripting_1ac8b7352f61b96c83faf27c266f196527"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span>  GetAssetLoadCategory() const</p>
<p class="NDLRefMemberDescription">Get the category used to load script assets. </p>

<a name="classegf_1_1_i_scheduler_scripting_1a43dc97f3fbbb498df8fa62e0e2eb2e90"></a>
<p class="NDLRefMemberFunction">virtual void  HandleAssetLoadResponse(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__AssetLoadResponse.htm">efd::AssetLoadResponse</a></span>* , <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> )</p>
<p class="NDLRefMemberDescription">Handle an asset load response message for a script. </p>

<a name="classegf_1_1_i_scheduler_scripting_1aa2a52da3b6d2ce16f4543590580b2f05"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  split(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& i_str, <br/>char i_ch, <br/><span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& o_strFirst, <br/><span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& o_strSecond)</p>
<p class="NDLRefMemberDescription">Split the given string at the first instance of i_ch and place the results in o_strFirst and o_strSecond. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

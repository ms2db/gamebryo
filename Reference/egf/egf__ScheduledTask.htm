<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egf::ScheduledTask</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egf::ScheduledTask</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__IBase.htm">efd::IBase</a></span></p>


<p class="NDLRefHeaderFile">&lt;ScheduledTask.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegf_1_1_scheduled_task.gif" alt="Inheritance graph for egf::ScheduledTask"/>
  <p class="FigureCaption">Inheritance graph for egf::ScheduledTask</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">A unit of work for the <span class="NDLSystemFont"><a href="egf__Scheduler.htm">Scheduler</a></span>. </p>
<p class="NDLNormal">All tasks are processed in order through a single queue in the <span class="NDLSystemFont"><a href="egf__Scheduler.htm">Scheduler</a></span>. </p>

<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classegf_1_1_scheduled_task_1aa683cf2d8cec19042a51438aa99f490e"></a>
<p class="NDLRefMemberFunction">ScheduledTask(<br/><span class="NDLSystemFont"><a href="egf__EventID.htm">egf::EventID</a></span> eventID, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a37c593debc73d82d7ddc571c725f0e2d">efd::TimeType</a></span> when = time_Now)</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="classegf_1_1_scheduled_task_1a724afee123dca00b5a2629d0a4e7f690"></a>
<p class="NDLRefMemberFunction">virtual ~ScheduledTask()</p>
<p class="NDLRefMemberDescription">Destructor. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegf_1_1_scheduled_task_1ae554df2fcac6a665493172d15e1b15f1"></a>
<p class="NDLRefMemberFunction">virtual void  DoTask(<span class="NDLSystemFont"><a href="egf__Scheduler.htm">egf::Scheduler</a></span>* pScheduler) = 0</p>
<p class="NDLRefMemberDescription">Called to perform the work associated with this task. </p>
<p class="NDLRefMemberDetailedDescription">Override this method to perform whatever actions are required by your task.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pScheduler</span></td>
    <td>The <span class="NDLSystemFont"><a href="egf__Scheduler.htm">Scheduler</a></span> handling this task </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_scheduled_task_1a39bb7f245a02264a535f634fb607f88d"></a>
<p class="NDLRefMemberFunction">virtual void  AbortTask(<span class="NDLSystemFont"><a href="egf__Scheduler.htm">egf::Scheduler</a></span>* pScheduler)</p>
<p class="NDLRefMemberDescription">In the event your task is cancelled prior to execution this method is called. </p>
<p class="NDLRefMemberDetailedDescription">Perform any required cleanup to handle this condition.</p>
<p class="NDLRefMemberDetailedDescription">The default implementation does nothing.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pScheduler</span></td>
    <td>The <span class="NDLSystemFont"><a href="egf__Scheduler.htm">Scheduler</a></span> handling this task </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_scheduled_task_1afee83c8a8c494a8acd4e958db9ed4bf7"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  SetResult(<br/><span class="NDLSystemFont"><a href="egf__Scheduler.htm">egf::Scheduler</a></span>* pScheduler, <br/>const <span class="NDLSystemFont"><a href="egf__EventMessage.htm">egf::EventMessage</a></span>* pMessage)</p>
<p class="NDLRefMemberDescription">Set the resulting event message which unblocked a waiting task. </p>
<p class="NDLRefMemberDetailedDescription">This is only called for tasks that were added to the wait queue via <span class="NDLSystemFont"><a href="egf__Scheduler.htm#classegf_1_1_scheduler_1a75e6a1f06af2f9e326137a7f93dba1b7">Scheduler::QueueTaskOnEvent</a></span>. The <span class="NDLSystemFont"><a href="egf__EventMessage.htm">EventMessage</a></span> passed in is the message with the <span class="NDLSystemFont"><a href="egf__EventID.htm">EventID</a></span> that was passed to <span class="NDLSystemFont"><a href="egf__Scheduler.htm#classegf_1_1_scheduler_1a75e6a1f06af2f9e326137a7f93dba1b7">Scheduler::QueueTaskOnEvent</a></span>. If this method returns true then this task will be added to the schedulers global queue at time_Now for execution on the next tick of the scheduler. If you return false from this method then the task will be aborted via the AbortTask method instead.</p>
<p class="NDLRefMemberDetailedDescription">The default implementation simply returns true.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pScheduler</span></td>
    <td>The scheduler to set the resulting event message for. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The <span class="NDLSystemFont"><a href="egf__EventMessage.htm">EventMessage</a></span> this task was waiting for. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if your task is now ready to be queued, false if your task should be aborted instead. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_scheduled_task_1a43a86751cd101f8496f50a90ae9c2bce"></a>
<p class="NDLRefMemberFunction">virtual void  SetEntityFactoryResponse(const <span class="NDLSystemFont"><a href="egf__EntityFactoryResponse.htm">egf::EntityFactoryResponse</a></span>* pResponse)</p>
<p class="NDLRefMemberDescription">Set the <span class="NDLSystemFont"><a href="egf__EntityFactoryResponse.htm">EntityFactoryResponse</a></span> message which unblocked a waiting task. </p>
<p class="NDLRefMemberDetailedDescription">This is only called for tasks that were added to the wait queue via <span class="NDLSystemFont"><a href="egf__Scheduler.htm#classegf_1_1_scheduler_1abb15db44ad0afbb86390816be3e89617">Scheduler::QueueTaskOnEntityCreation</a></span>. The EntityFactoryMessage passed in is the message with the <span class="NDLSystemFont"><a href="egf__EntityID.htm">EntityID</a></span> passed to <span class="NDLSystemFont"><a href="egf__Scheduler.htm#classegf_1_1_scheduler_1abb15db44ad0afbb86390816be3e89617">Scheduler::QueueTaskOnEntityCreation</a></span>.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pResponse</span></td>
    <td>expected response message from the AssetFactoryManager. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_scheduled_task_1a0eaa2e9fd14d886c2545844498110136"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a37c593debc73d82d7ddc571c725f0e2d">efd::TimeType</a></span>  GetExecuteTime() const</p>
<p class="NDLRefMemberDescription">Get the time at which this task should execute. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>The time at which this task should begin execution </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_scheduled_task_1aa9acdb714f96f49e24dc35903ed0e3d3"></a>
<p class="NDLRefMemberFunction">void  SetExecuteTime(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a37c593debc73d82d7ddc571c725f0e2d">efd::TimeType</a></span> when)</p>
<p class="NDLRefMemberDescription">Set the time at which this task should execute. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">Changing the time after calling <span class="NDLSystemFont"><a href="egf__Scheduler.htm#classegf_1_1_scheduler_1ad6ce8bc67f70de9adbb97e686ca60ef9">Scheduler::QueueTask</a></span> has no effect. </p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">when</span></td>
    <td>The time at which this task should run. You can also use one of the special values time_Now and time_First. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_scheduled_task_1a6d6dad15c18a4b61dcbeec0520094ce4"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__EventID.htm">egf::EventID</a></span>  GetEventID() const</p>
<p class="NDLRefMemberDescription">Get the <span class="NDLSystemFont"><a href="egf__EventID.htm">EventID</a></span> for this behavior execution. All behaviors have a unique <span class="NDLSystemFont"><a href="egf__EventID.htm">EventID</a></span>. </p>

<a name="classegf_1_1_scheduled_task_1aa6fb3b00bad41034351c8cc679ce47c9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator&lt;(const <span class="NDLSystemFont">ScheduledTask</span>& rhs) const</p>
<p class="NDLRefMemberDescription">LessThan operator for storing ScheduledTasks in sorted containers. </p>
<p class="NDLRefMemberDetailedDescription">A task is less than another task if it has a later execution time. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

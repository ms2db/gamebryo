<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egf::PlaceableModel</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egf::PlaceableModel</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="egf__IBuiltinModelImpl.htm">egf::IBuiltinModelImpl</a></span></p>


<p class="NDLRefHeaderFile">&lt;PlaceableModel.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegf_1_1_placeable_model.gif" alt="Inheritance graph for egf::PlaceableModel"/>
  <p class="FigureCaption">Inheritance graph for egf::PlaceableModel</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">The <span class="NDLSystemFont">PlaceableModel</span> class provides the built-in model functionality for the Placeable model in the StandardModelLibrary. </p>
<p class="NDLNormal">Entites that mix in Placeable use this built-in, with the expectation that other models will provide functionality to interpret the Placeable properties.</p>
<p class="NDLNormal">The <span class="NDLSystemFont">PlaceableModel</span> class holds an internal copy of the property values and provides accessor functions, as is required for a built-in model. In addition, objects may be registered as callbacks to receive notification of property changes, and other code may update the internal values directly. Any number of callbacks may be added, allowing multiple consumers of the data to register.</p>
<p class="NDLNormal">Note that EntityUpdate messages will be sent when an external source modifies the property values via the SetInternal functions. Code may choose to rely on the update messages rather than use the callback mechanism. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegf_1_1_placeable_model_1aad50c40db3cdd4fd689969f6022e93ff"></a>
<p class="NDLRefMemberFunction">PlaceableModel()</p>
<p class="NDLRefMemberDetailedDescription">Constructor sets all default properties. </p>

<a name="classegf_1_1_placeable_model_1aba051a33ffd83b8485eaa9248d39b8c9"></a>
<p class="NDLRefMemberFunction">virtual ~PlaceableModel()</p>
<p class="NDLRefMemberDescription">Virtual destructor does nothing. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classegf_1_1_placeable_model_1a8b9567d25e7d9671d6f3276b64378eec"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="egf__IBuiltinModel.htm">egf::IBuiltinModel</a></span>*  PlaceableModelFactory()</p>
<p class="NDLRefMemberDescription">The factory class for the Placeable built-in model. </p>
<p class="NDLRefMemberDetailedDescription">It is public to allow the <span class="NDLSystemFont"><a href="egf__FlatModelManager.htm">egf::FlatModelManager</a></span> to register the factory in its PreInit method. </p>
<a name="built-in_model_functionality"></a>
<p class="NDLRefHead1">Built-in Model Functionality</p>


<a name="classegf_1_1_placeable_model_1a5ba2f910c3d8b07a08955d0791ec6fcc"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  Initialize(<br/><span class="NDLSystemFont"><a href="egf__Entity.htm">egf::Entity</a></span>* pOwner, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__list.htm">egf::PropertyDescriptorList</a></span>& defaults)</p>
<p class="NDLRefMemberDescription">Initialization function sets the entity and the default values for properties. </p>
<p class="NDLRefMemberDetailedDescription">Callbacks are not invoked on initialization. </p>

<a name="classegf_1_1_placeable_model_1a86809d1a1856e105e0eb824860847a41"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  ResetProperty(const <span class="NDLSystemFont"><a href="egf__PropertyDescriptor.htm">egf::PropertyDescriptor</a></span>* pDefault)</p>
<p class="NDLRefMemberDescription">Resets the given property to the default. </p>
<p class="NDLRefMemberDetailedDescription">Callbacks are invoked. </p>

<a name="classegf_1_1_placeable_model_1a146baf86e93540766f4172dfd1f8d0d3"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  operator==(const <span class="NDLSystemFont"><a href="egf__IProperty.htm">IProperty</a></span>& other) const</p>
<p class="NDLRefMemberDescription">Checks for equality of all properties. </p>

<a name="classegf_1_1_placeable_model_1a418b58555935a64a785d1d483e0b91ad"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span>*  GetOwningEntity() const</p>
<p class="NDLRefMemberDescription">Get the owning entity. </p>
<a name="callback_registration"></a>
<p class="NDLRefHead1">Callback Registration</p>

<p class="NDLRefMemberDescription">Use these static methods to register and unregister for callbacks from this model. </p>

<a name="classegf_1_1_placeable_model_1abe69ca8a5af6975f28d3601a4c268c20"></a>
<p class="NDLRefMemberFunction">static void  AddCallback(<span class="NDLSystemFont"><a href="egf__IPropertyCallback.htm">IPropertyCallback</a></span>* pCallback)</p>
<p class="NDLRefMemberDescription">Add a callback. </p>
<p class="NDLRefMemberDetailedDescription">A callback will be invoked on each event as many times as it is added. </p>

<a name="classegf_1_1_placeable_model_1a84a8858b2a58fe25740ef89aebef4e4a"></a>
<p class="NDLRefMemberFunction">static void  RemoveCallback(<span class="NDLSystemFont"><a href="egf__IPropertyCallback.htm">IPropertyCallback</a></span>* pCallback)</p>
<p class="NDLRefMemberDescription">Remove a callback. </p>
<p class="NDLRefMemberDetailedDescription">A single instance of the callback is removed. For example, if the callback is added twce, then removed once, it will still be invoked once on each event. </p>
<a name="property_accessors"></a>
<p class="NDLRefHead1">Property Accessors</p>


<a name="classegf_1_1_placeable_model_1a5342c1c7cad49c343b08a8aa5cfc5486"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>  GetPosition() const</p>
<p class="NDLRefMemberDescription">Get the position. </p>

<a name="classegf_1_1_placeable_model_1ad5ae22ed221183a857ae579b7758d100"></a>
<p class="NDLRefMemberFunction">void  SetPosition(const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& position)</p>
<p class="NDLRefMemberDescription">Set the position. </p>
<p class="NDLRefMemberDetailedDescription">The internally cached value is set. Callbacks are invoked with the Position property ID if the value has changed. </p>

<a name="classegf_1_1_placeable_model_1a94e8fe6f33ee9fc543ea7c141dc87edb"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>  GetRotation() const</p>
<p class="NDLRefMemberDescription">Get the rotation. </p>
<p class="NDLRefMemberDetailedDescription">Rotation is stored as XYZ Euler angles. </p>

<a name="classegf_1_1_placeable_model_1a618086ef443b4726bb10f71c115ade7e"></a>
<p class="NDLRefMemberFunction">void  SetRotation(const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& rotation)</p>
<p class="NDLRefMemberDescription">Set the rotation. </p>
<p class="NDLRefMemberDetailedDescription">The internally cached value is set. Callbacks are invoked with the Rotation property ID if the value has changed. </p>

<a name="classegf_1_1_placeable_model_1a665bad72936ce77cd264ac774fd02dfb"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>  GetScale() const</p>
<p class="NDLRefMemberDescription">Get the scale. </p>

<a name="classegf_1_1_placeable_model_1a9ce4d40d3c3ad9c635e8568509211f81"></a>
<p class="NDLRefMemberFunction">void  SetScale(const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span>& scale)</p>
<p class="NDLRefMemberDescription">Set the scale. </p>
<p class="NDLRefMemberDetailedDescription">The internally cached value is set. Callbacks are invoked with the Scale property ID if the value has changed. </p>
<a name="setinternal_methods"></a>
<p class="NDLRefHead1">SetInternal Methods</p>

<p class="NDLRefMemberDescription">These methods are to be used by code that manages Placeable data from an external source, such as animated character locations or physical object locations.</p>
<p class="NDLRefMemberDescription">Such code should call the SetInternal methods with new values every time the property is known to have changed. If the new property value differs from that stored internally, the internal value is updated, the property is marked dirty, and callbacks are invoked.</p>
<p class="NDLRefMemberDescription">The ignoreCallback, if given, is not invoked in response to the change. The class setting the internal position, if also a registered callback object, may use this to avoid getting a callback for a change that the class just caused. </p>

<a name="classegf_1_1_placeable_model_1adb1af0f5bdc7436aaa78b71fa5f0f7e7"></a>
<p class="NDLRefMemberFunction">void  SetInternalPosition(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& position, <br/><span class="NDLSystemFont"><a href="egf__IPropertyCallback.htm">IPropertyCallback</a></span>* ignoreCallback = 0)</p>
<p class="NDLRefMemberDescription">Set the position cached in this object. </p>
<p class="NDLRefMemberDetailedDescription">This causes the property to be marked dirty on the entity. </p>

<a name="classegf_1_1_placeable_model_1acf1a71b38c0d098ecdd9e3b90f4aa37a"></a>
<p class="NDLRefMemberFunction">void  SetInternalRotation(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__Point3.htm">efd::Point3</a></span>& rotation, <br/><span class="NDLSystemFont"><a href="egf__IPropertyCallback.htm">IPropertyCallback</a></span>* ignoreCallback = 0)</p>
<p class="NDLRefMemberDescription">Set the rotation cached in this object. </p>
<p class="NDLRefMemberDetailedDescription">This causes the property to be marked dirty on the entity. </p>

<a name="classegf_1_1_placeable_model_1a70399295512a0899029ea53d68670d8d"></a>
<p class="NDLRefMemberFunction">void  SetInternalScale(<br/>const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a84dd4659cdf07ea3cbc429edc92db34a">efd::Float32</a></span> scale, <br/><span class="NDLSystemFont"><a href="egf__IPropertyCallback.htm">IPropertyCallback</a></span>* ignoreCallback = 0)</p>
<p class="NDLRefMemberDescription">Set the scale cached in this object. </p>
<p class="NDLRefMemberDetailedDescription">This causes the property to be marked dirty on the entity. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

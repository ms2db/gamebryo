<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egf::FlatModel</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egf::FlatModel</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__RefCount.htm">efd::RefCount</a></span></p>


<p class="NDLRefHeaderFile">&lt;FlatModel.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegf_1_1_flat_model.gif" alt="Inheritance graph for egf::FlatModel"/>
  <p class="FigureCaption">Inheritance graph for egf::FlatModel</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Class encapsulating a flattened model. </p>
<p class="NDLNormal">The flattened model contains all the properties and behaviors of models mixed in to it. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegf_1_1_flat_model_1a5cb7239ed7be029648b3a0393fccf4dd"></a>
<p class="NDLRefMemberFunction">FlatModel(<span class="NDLSystemFont"><a href="egf__FlatModelManager.htm">FlatModelManager</a></span>* pFlatModelManager)</p>
<p class="NDLRefMemberDescription">Construction and Destruction. </p>

<a name="classegf_1_1_flat_model_1a606625f4a067907c482a6fab70b3d35f"></a>
<p class="NDLRefMemberFunction">~FlatModel()</p>
<p class="NDLRefMemberFunction"></p>
<a name="behavior_methods"></a>
<p class="NDLRefHead1">Behavior methods</p>


<a name="classegf_1_1_flat_model_1a7fe68f22a529133745a0bc250083439a"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="egf__BehaviorDescriptor.htm">BehaviorDescriptor</a></span>*  GetBehaviorDescriptor(const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& i_strName) const</p>
<p class="NDLRefMemberDescription">Looks up a given behavior descriptor within this model. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_strName</span></td>
    <td>The string name of the method to check</td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>const BehaviorDescriptor* The descriptor, or NULL if not found. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1ad073d44aa443e11c08329c8ce95759b0"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="egf__BehaviorDescriptor.htm">BehaviorDescriptor</a></span>*  GetBehaviorDescriptor(<span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1ebd2b58de9ca508c04d80dea3644fcb">BehaviorID</a></span> i_id) const</p>
<p class="NDLRefMemberDescription">Looks up a given behavior descriptor within this model. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_id</span></td>
    <td>The behavior ID of the method to check</td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>const BehaviorDescriptor* The descriptor, or NULL if not found. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a10e20ba6eab87e78a05062d48875f9e4"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="egf__BehaviorDescriptor.htm">BehaviorDescriptor</a></span>*  GetMixinBehaviorDescriptor(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& i_strModelName, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& i_strBehaviorName) const</p>
<p class="NDLRefMemberDescription">Looks up a given behavior descriptor within one of our mixed-in models. </p>
<p class="NDLRefMemberDetailedDescription">When you have an extends style behavior then invoking that behavior might require invoking some of the mixed-in behaviors as well. This method provides a convenient function for finding these mixed in behaviors.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_strModelName</span></td>
    <td>The string name of the model containing the behavior </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_strBehaviorName</span></td>
    <td>The string name of the behavior method to find</td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>const BehaviorDescriptor* The descriptor, or NULL if not found. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1abda535781704b6eebbcbc221e8c7fe35"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="egf__BehaviorDescriptor.htm">BehaviorDescriptor</a></span>*  GetMixinBehaviorDescriptor(<br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1df4e70ceef104ead07333c2a8cf0df8">FlatModelID</a></span> i_modelId, <br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1ebd2b58de9ca508c04d80dea3644fcb">BehaviorID</a></span> i_behaviorId) const</p>
<p class="NDLRefMemberDescription">Looks up a given behavior descriptor within one of our mixed-in models. </p>
<p class="NDLRefMemberDetailedDescription">When you have an extends style behavior then invoking that behavior might require invoking some of the mixed-in behaviors as well. This method provides a convenient function for finding these mixed in behaviors.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_behaviorId</span></td>
    <td>The behavior ID of the behavior method to find </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_modelId</span></td>
    <td>The model ID of the model containing the behavior</td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>const BehaviorDescriptor* The descriptor, or NULL if not found. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a78f09aa89db1c76bba0673b568668c43"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  AddBehaviorDescriptor(<span class="NDLSystemFont"><a href="egf__BehaviorDescriptor.htm">BehaviorDescriptor</a></span>* i_pBehavior)</p>
<p class="NDLRefMemberDescription">Adds a given behavior descriptor to the list of behaviors for this <span class="NDLSystemFont">FlatModel</span>. </p>
<p class="NDLRefMemberDetailedDescription">Should only be called during the parsing of a flat model file while creating the <span class="NDLSystemFont">FlatModel</span> instance. The behavior is undefined if this method is called after loading is complete.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_pBehavior</span></td>
    <td>The behavior descriptor to add. The <span class="NDLSystemFont">FlatModel</span> will hold a reference to this descriptor throughout its lifespan. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>bool True if successfully added </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a16e192ed0e5fd042e1a768ee17b19e93"></a>
<p class="NDLRefMemberFunction">void  GetBehaviorNames(<span class="NDLSystemFont"><a href="../efd/efd__list.htm">efd::list</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&gt;& o_listOfNames) const</p>
<p class="NDLRefMemberDescription">Retrieves the list of the named behaviors of the model. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">o_listOfNames</span></td>
    <td>The list filled with the behavior names </td>
</tr>

        </tbody>
    </table>
</div>


<a name="builtinmodel_methods"></a>
<p class="NDLRefHead1">BuiltinModel methods</p>


<a name="classegf_1_1_flat_model_1a89ec0e5d668cac86f6fd6943ab3f27f6"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="egf__BuiltinModelDescriptor.htm">BuiltinModelDescriptor</a></span>*  GetBuiltinModelDescriptor(<span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1df4e70ceef104ead07333c2a8cf0df8">FlatModelID</a></span> i_BuiltinModelID) const</p>
<p class="NDLRefMemberDescription">Returns the BuiltinModel Descriptor that an entity using this model must instantiate when it's created. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_BuiltinModelID</span></td>
    <td>The BuiltinModel model ID</td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>const pointer to a <span class="NDLSystemFont"><a href="egf__BuiltinModelDescriptor.htm">BuiltinModelDescriptor</a></span></td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a841d73d016c8d7a7d12a27fdf34886de"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="egf__BuiltinModelDescriptor.htm">BuiltinModelDescriptor</a></span>*  GetBuiltinModelDescriptor(const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& i_strBuiltinModelName) const</p>
<p class="NDLRefMemberDescription">Returns the BuiltinModel Descriptor that an entity using this model must instantiate when it's created. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_strBuiltinModelName</span></td>
    <td>The BuiltinModel name</td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>const pointer to a <span class="NDLSystemFont"><a href="egf__BuiltinModelDescriptor.htm">BuiltinModelDescriptor</a></span></td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a894dae39d2412f6e839fc54aa48d4223"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  ContainsBuiltinModel(<span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1df4e70ceef104ead07333c2a8cf0df8">FlatModelID</a></span> i_BuiltinModelID) const</p>
<p class="NDLRefMemberDescription">Checks whether the given property is contained in this model. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_BuiltinModelID</span></td>
    <td>The BuiltinModel model ID</td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>bool True if the BuiltinModel exists in this model </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1aee0f7ee20ee2d4b1403aff99424ccefd"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  ContainsBuiltinModel(const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& i_strBuiltinModelName) const</p>
<p class="NDLRefMemberDescription">Checks whether the given property is contained in this model. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_strBuiltinModelName</span></td>
    <td>The BuiltinModel name</td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>bool True if the BuiltinModel exists in this model </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a73994f78eca27dae10bef998dbe4cc6b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  AddBuiltinModelDescriptor(<span class="NDLSystemFont"><a href="egf__BuiltinModelDescriptor.htm">BuiltinModelDescriptor</a></span>* i_pDescriptor)</p>
<p class="NDLRefMemberDescription">Add a BuiltinModel descriptor to the flat model. </p>
<p class="NDLRefMemberDetailedDescription">This will be called during initialization. It is not advised to call this during runtime as modifying a model that's already in use could provide undefined behavior.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_pDescriptor</span></td>
    <td>A BuiltinModel descriptor to add to this flat model. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>bool True if successful </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1abb7df994c02516ad68b87ccd4fd151c8"></a>
<p class="NDLRefMemberFunction">void  GetRequiredBuiltinModelsList(<span class="NDLSystemFont"><a href="../efd/efd__list.htm">BuiltinModelList</a></span>& o_BuiltinModelList) const</p>
<p class="NDLRefMemberDescription">Retrieves a list of all the BuiltinModel objects that are required to instantiate an <span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span> of this <span class="NDLSystemFont">FlatModel</span> type. </p>
<p class="NDLRefMemberDetailedDescription">Note that in the case of derived BuiltinModel objects only the most derived BuiltinModel is included in this list.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">o_BuiltinModelList</span></td>
    <td>filled with the list of BuiltinModel objects used by this flat model </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a09b0afb98d1621b98795fba4db930924"></a>
<p class="NDLRefMemberFunction">void  DiffBuiltinModels(<br/>const <span class="NDLSystemFont">FlatModel</span>* pOtherModel, <br/><span class="NDLSystemFont"><a href="../efd/efd__set.htm">efd::set</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">BuiltinModelDescriptorPtr</a></span>&gt;& addedBuiltinModels, <br/><span class="NDLSystemFont"><a href="../efd/efd__set.htm">efd::set</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">BuiltinModelDescriptorPtr</a></span>&gt;& deletedBuiltinModels) const</p>
<p class="NDLRefMemberDescription">Calculate BuiltinModel differences between two models. </p>
<p class="NDLRefMemberDetailedDescription">BuiltinModel objects that are in pOtherModel but not in this model are added BuiltinModel objects. BuiltinModel objects that are in this model but not in the other are deleted BuiltinModel objects.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pOtherModel</span></td>
    <td>the model to compare against. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">addedBuiltinModels</span></td>
    <td>BuiltinModel objects found in other and not in this. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">deletedBuiltinModels</span></td>
    <td>BuiltinModel objects found in this and not in other. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a0e2274c8294033f2d348a6333b6a2a55"></a>
<p class="NDLRefMemberFunction">void  PrepareDefaultPropertyList(<br/>const <span class="NDLSystemFont"><a href="egf__BuiltinModelDescriptor.htm">BuiltinModelDescriptor</a></span>* i_pcd, <br/><span class="NDLSystemFont"><a href="../efd/efd__list.htm">PropertyDescriptorList</a></span>& o_defaults) const</p>
<p class="NDLRefMemberDescription">Generate a list of all the properties in this model that are sourced from the given BuiltinModel. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_pcd</span></td>
    <td>The BuiltinModel descriptor who's defaults are being requested </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_defaults</span></td>
    <td>The PropertyDescriptorList to be filled with all the default property descriptors for the given BuiltinModel. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="identity_methods"></a>
<p class="NDLRefHead1">Identity methods</p>


<a name="classegf_1_1_flat_model_1ad0419e7ed8c8547ed6e91d2e6952fd4e"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&  GetName() const</p>
<p class="NDLRefMemberDescription">Get the name of the flat model. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>Name of the model </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a54b317a28ac8c4b7730c008f563fcf20"></a>
<p class="NDLRefMemberFunction">void  SetName(const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& name)</p>
<p class="NDLRefMemberDescription">Set the name of the flat model. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">name</span></td>
    <td>The name of the flat model </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a9a7df0b012470b1c7115f5304ae97b43"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1df4e70ceef104ead07333c2a8cf0df8">FlatModelID</a></span>  GetID() const</p>
<p class="NDLRefMemberDescription">Get the id of the flat model. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>ID of the flat model </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1abe3420cae02522464e53c174e0e107c6"></a>
<p class="NDLRefMemberFunction">void  SetID(<span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1df4e70ceef104ead07333c2a8cf0df8">FlatModelID</a></span> id)</p>
<p class="NDLRefMemberDescription">Set the ID of the flat model. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">id</span></td>
    <td>The ID of the flat model </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1aabd93042d1292b324b941edd075e790d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetTrait(<span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a83b3bc06ad70c82a9b842504cbdb215b">ModelTraits</a></span> trait) const</p>
<p class="NDLRefMemberDescription">Retrieves the value of the specified trait. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">trait</span></td>
    <td>The trait to check for </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>Boolean indicating the value of the trait </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a6be60c97207a2c2b643770a22de97746"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetTraits() const</p>
<p class="NDLRefMemberDescription">Retrieves all traits as a 32bit bitfield. </p>
<p class="NDLRefMemberDetailedDescription">Useful for testing the equality or the traits between two different models</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>UInt32 bitfield representing all traits. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a29a13b99bf9146c2b0723ded4db86edc"></a>
<p class="NDLRefMemberFunction">void  SetTrait(<br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a83b3bc06ad70c82a9b842504cbdb215b">ModelTraits</a></span> trait, <br/><span class="NDLSystemFont">efd::Bool</span> val)</p>
<p class="NDLRefMemberDescription">Sets the value of the specified trait. </p>
<p class="NDLRefMemberDetailedDescription">Note that it is undefined behavior of setting a trait after simulation has begun.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">trait</span></td>
    <td>The trait to set the value of </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">val</span></td>
    <td>Value of the trait </td>
</tr>

        </tbody>
    </table>
</div>


<a name="mix-in_methods"></a>
<p class="NDLRefHead1">Mix-in methods</p>


<a name="classegf_1_1_flat_model_1a823e81d4f632b921d1b5fe511852c101"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  ContainsModel(<span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1df4e70ceef104ead07333c2a8cf0df8">FlatModelID</a></span> i_id) const</p>
<p class="NDLRefMemberDescription">Checks if the given model is a mix-in of this model. </p>
<p class="NDLRefMemberDetailedDescription">Note that models are considered to contain themselves as well.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_id</span></td>
    <td>The flat model ID of the model to check </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>bool True if the given model was mixed in to this model or is this model </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a7b29e0621cb21816730e76c5c8948fd6"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  ContainsModel(const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& i_strName) const</p>
<p class="NDLRefMemberDescription">Checks if the given model is a mix-in of this model. </p>
<p class="NDLRefMemberDetailedDescription">Note that models are considered to contain themselves as well.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_strName</span></td>
    <td>The string name of the model to check </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>bool True if the given model was mixed in to this model or is this model </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1ab832028da4508fb73881978675f917ea"></a>
<p class="NDLRefMemberFunction">void  AddMixinModel(<span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1df4e70ceef104ead07333c2a8cf0df8">FlatModelID</a></span> i_id)</p>
<p class="NDLRefMemberDescription">Adds a given model to the list of mixed in models for this <span class="NDLSystemFont">FlatModel</span>. </p>
<p class="NDLRefMemberDetailedDescription">Should only be called during the parsing of a flat model file while creating the <span class="NDLSystemFont">FlatModel</span> instance. The behavior is undefined if this method is called after loading is complete.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_id</span></td>
    <td>The flat model ID of the model that is mixed into this <span class="NDLSystemFont">FlatModel</span></td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a79766aa17cdbca049508164b89a02fdd"></a>
<p class="NDLRefMemberFunction">void  GetMixinNames(<span class="NDLSystemFont"><a href="../efd/efd__list.htm">efd::list</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&gt;& o_listOfNames) const</p>
<p class="NDLRefMemberDescription">Gets a list of all the model names mixed into this model. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">o_listOfNames</span></td>
    <td>A list to be filled with the mix-in names. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1ae82bafb73d25d9940cfc6e58e1eb490a"></a>
<p class="NDLRefMemberFunction">void  GetBehaviorInvocationOrder(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& i_behaviorName, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__list.htm">efd::list</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&gt; *& o_invocationOrder) const</p>
<p class="NDLRefMemberDescription">Gets a list of model/supermodel names in behavior execution order. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_behaviorName</span></td>
    <td>Name of the behavior to query. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_invocationOrder</span></td>
    <td>A list of model/supermodel names in behavior execution order. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a72d70e00d994a82b7618e29d2552bbd7"></a>
<p class="NDLRefMemberFunction">void  Mutate(const <span class="NDLSystemFont">FlatModel</span>* pNewFlatModel)</p>
<p class="NDLRefMemberDescription">Transforms the current flat model into the new flat model. </p>
<p class="NDLRefMemberDetailedDescription">But does it in-place so that pointer references don't have to be fixed up.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pNewFlatModel</span></td>
    <td>The new flat model to mutate into. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a53fce41a2301e6a202c2500d8bd82872"></a>
<p class="NDLRefMemberFunction">void  AddExtraData(<span class="NDLSystemFont"><a href="egf__ExtraData.htm">ExtraData</a></span>* extraData)</p>
<p class="NDLRefMemberDescription">Adds an <span class="NDLSystemFont"><a href="egf__ExtraData.htm">ExtraData</a></span> element onto the flat model for future reference. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">extraData</span></td>
    <td>The item to add. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a0f1e8c1b9c570fc4abcf2e5fea574f94"></a>
<p class="NDLRefMemberFunction">void  GetExtraData(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& type, <br/><span class="NDLSystemFont"><a href="../efd/efd__list.htm">efd::list</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">ExtraDataPtr</a></span>&gt;& o_extraData) const</p>
<p class="NDLRefMemberDescription">Retrieves all the extra data of a certain type. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">type</span></td>
    <td>The type of extra data to retrieve. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_extraData</span></td>
    <td>A vector which contains the extra data. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a084a28f82f521bd6b9d31217e6792ab7"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">bool</span>  SplitModelAndBehavior(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& name, <br/><span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& o_model, <br/><span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& o_behavior)</p>
<p class="NDLRefMemberDescription">Behavior names support a "Model:Behavior" form which is used when a specific mix-in needs to be invoked. </p>
<p class="NDLRefMemberDetailedDescription">This method will split this form into a separate model name and behavior name.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">name</span></td>
    <td>The potentially fully qualified behavior name </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_model</span></td>
    <td>The model name if one was included, otherwise this parameter is left unchanged. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_behavior</span></td>
    <td>the behavior name. This parameter is always set, if the input name was not qualified then this will be set equal to the original name. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>bool true if the name was qualified, false if it was not. o_behavior is set regardless of return value but o_model is only set when true. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="property_methods"></a>
<p class="NDLRefHead1">Property methods</p>


<a name="classegf_1_1_flat_model_1acb284e25b540ccb9293cd2cfed32748a"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="egf__PropertyDescriptor.htm">PropertyDescriptor</a></span>*  GetPropertyDescriptor(<span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1af08acbbc1a28c9e4ee8dfb501449dc28">PropertyID</a></span> propID) const</p>
<p class="NDLRefMemberDescription">Get the property descriptor for the given property name or ID. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">propID</span></td>
    <td>The property ID to get the descriptor of</td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>PropertyDescriptor* Pointer to an IPropertyDescriptor </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1ad5fd9c842fda889076ebf55b9fc7717a"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="egf__PropertyDescriptor.htm">PropertyDescriptor</a></span>*  GetPropertyDescriptor(const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& name) const</p>
<p class="NDLRefMemberDescription">Get the property descriptor for the given property name or ID. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">name</span></td>
    <td>The property name to get the descriptor of</td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>PropertyDescriptor* Pointer to an IPropertyDescriptor </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a21581c126291253180b1899a0c6a9910"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  ContainsProperty(<span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1af08acbbc1a28c9e4ee8dfb501449dc28">PropertyID</a></span> propID) const</p>
<p class="NDLRefMemberDescription">Checks whether the given property is contained in this model. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">propID</span></td>
    <td>The property ID to get the descriptor of</td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>bool True if the property exists in this model </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1ab022be3195281883b3c415e869f9d02c"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  ContainsProperty(const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& name) const</p>
<p class="NDLRefMemberDescription">Checks whether the given property is contained in this model. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">name</span></td>
    <td>The property name to get the descriptor of</td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>bool True if the property exists in this model </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1abb6d44fd81238129cda9ff9ea8b7d02d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  AddPropertyDescriptor(<span class="NDLSystemFont"><a href="egf__PropertyDescriptor.htm">PropertyDescriptor</a></span>* i_pDescriptor)</p>
<p class="NDLRefMemberDescription">Add a property descriptor to the flat model. </p>
<p class="NDLRefMemberDetailedDescription">This will be called during initialization. It is not advised to call this during runtime as modifying a model that's already in use could provide undefined behavior.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_pDescriptor</span></td>
    <td>A Property descriptor to add to this flat model. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>bool True is successfully added </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1aa93ac1b9b32c820974a8bd1b1db2d0d5"></a>
<p class="NDLRefMemberFunction">void  GetPropertyNames(<span class="NDLSystemFont"><a href="../efd/efd__list.htm">efd::list</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&gt;& o_listOfNames) const</p>
<p class="NDLRefMemberDescription">Gets a list of all the property names included in this model. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">o_listOfNames</span></td>
    <td>A list to be filled with the property names. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a1c4980d8a3193da43b9dbfc23b12beb3"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetReplicationGroup(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> index) const</p>
<p class="NDLRefMemberDescription">Checks our membership in the given replication group. </p>
<p class="NDLRefMemberDetailedDescription">This will be true if any property contained by this model replicates into the given group.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">index</span></td>
    <td>The group index to check, from 0 to 31 </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1a7c0f323d75e7c2d4f1311e0a6ce8853b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetReplicationGroups() const</p>
<p class="NDLRefMemberDescription">Get the replication groups that the model replicates into as a set of bit flags. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>UInt32 containing a set bit for each group applicable to the model </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1ab84a96d3ce3a099b53650bd7e42489e6"></a>
<p class="NDLRefMemberFunction">void  DiffProperties(<br/>const <span class="NDLSystemFont">egf::FlatModel</span>* pOtherModel, <br/><span class="NDLSystemFont"><a href="../efd/efd__set.htm">efd::set</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">PropertyDescriptorPtr</a></span>&gt;& unchangedProperties, <br/><span class="NDLSystemFont"><a href="../efd/efd__set.htm">efd::set</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">PropertyDescriptorPtr</a></span>&gt;& newProperties, <br/><span class="NDLSystemFont"><a href="../efd/efd__set.htm">efd::set</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">PropertyDescriptorPtr</a></span>&gt;& updatedProperties, <br/><span class="NDLSystemFont"><a href="../efd/efd__set.htm">efd::set</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">PropertyDescriptorPtr</a></span>&gt;& deletedProperties) const</p>
<p class="NDLRefMemberDescription">Calculate the difference between the properties in this flat model and the properties in another flat model. </p>
<p class="NDLRefMemberDetailedDescription">The result is 4 sets: unchanged properties, new properties, updated properties, and deleted properties.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pOtherModel</span></td>
    <td>The other model to compare properties with. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">unchangedProperties</span></td>
    <td>set of property descriptor pointers for unchanged properties. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">newProperties</span></td>
    <td>set of property descriptor pointers for new properties. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">updatedProperties</span></td>
    <td>set of property descriptor pointers for updated properties. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">deletedProperties</span></td>
    <td>set of property descriptor pointers for deleted properties. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_flat_model_1ac2150a1a9a3ed2acfe6dc166776d1e12"></a>
<p class="NDLRefMemberFunction">void  DiffMixins(<br/>const <span class="NDLSystemFont">egf::FlatModel</span>* pOtherModel, <br/><span class="NDLSystemFont"><a href="../efd/efd__set.htm">efd::set</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&gt;& addedMixins, <br/><span class="NDLSystemFont"><a href="../efd/efd__set.htm">efd::set</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&gt;& deletedMixins) const</p>
<p class="NDLRefMemberDescription">Calculate the difference between the mix-in models in this flat model and the mix-ins in another flat model. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pOtherModel</span></td>
    <td>The other model to compare mix-ins with. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">addedMixins</span></td>
    <td>set of names of added mix-in models. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">deletedMixins</span></td>
    <td>set of names of deleted mix-in models. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

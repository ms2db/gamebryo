<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egf::EntityManager</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egf::EntityManager</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__ISystemService.htm">efd::ISystemService</a></span></p>


<p class="NDLRefHeaderFile">&lt;EntityManager.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegf_1_1_entity_manager.gif" alt="Inheritance graph for egf::EntityManager"/>
  <p class="FigureCaption">Inheritance graph for egf::EntityManager</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">A cache of all active entities that belong to the local scheduler. </p>
<p class="NDLNormal">Every entity that is owned by the local scheduler is placed in the <span class="NDLSystemFont">EntityManager</span>. This central ISystemService is available throughout the application via the ServiceManager to access these local entities.</p>
<p class="NDLNormal">The <span class="NDLSystemFont">EntityManager</span> maintains a list of Entities with dirty properties. This dirty list is used to generate update messages. This informs listeners of property changes. </p>

<a name="friend_members"></a>
<p class="NDLRefHead1">Friend Members</p>


<a name="classegf_1_1_entity_manager_1ad8ac1ae74146095095872c2afbfa7179"></a>
<p class="NDLRefMemberFunction">friend class  FlatModelManager()</p>
<p class="NDLRefMemberFunction"></p>
<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>


<a name="classegf_1_1_entity_manager_1a109fe70ee55edff16cf8d7d3d8b2bbda"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__hash_map.htm">efd::hash_map</a></span>&lt;<span class="NDLSystemFont"><a href="egf__EntityID.htm">EntityID</a></span>, <span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">EntityPtr</a></span>, <span class="NDLSystemFont"><a href="egf__EntityIDHashFunctor.htm">EntityIDHashFunctor</a></span>&gt;  EntityMap</p>
<p class="NDLRefMemberDescription">This typedef creates a pointer map specific to holding entities mapped by their <span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span> IDs. </p>

<a name="classegf_1_1_entity_manager_1a0352b4fe46eb8e39adf7ca18539705d5"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont">bool</span>(*  FilterFunction)(const Entity *i_pEntity, void *i_pParam)</p>
<p class="NDLRefMemberDescription">Typedef for an entity filter function used by a filtered iterator. </p>
<a name="public_attributes"></a>
<p class="NDLRefHead1">Public Attributes</p>


<a name="classegf_1_1_entity_manager_1aecc170ace8279939cd5cc5a05f5df8a9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__EntityFactory.htm">EntityFactory</a></span>*  m_pEntityFactory</p>
<p class="NDLRefMemberFunction"></p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegf_1_1_entity_manager_1a5959bdf6cb38233ab0f637f20a8ed72b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__EntityID.htm">egf::EntityID</a></span>  CreateEntity(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& modelName, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span>& callback = efd::kCAT_INVALID, <br/><span class="NDLSystemFont"><a href="../efd/efd__ParameterList.htm">efd::ParameterList</a></span>* pCreationArgs = 0, <br/><span class="NDLSystemFont"><a href="../efd/efd__ParameterList.htm">efd::ParameterList</a></span>* pInitialProps = 0, <br/><span class="NDLSystemFont"><a href="egf__EntityID.htm">egf::EntityID</a></span> entityId = kENTITY_INVALID, <br/><span class="NDLSystemFont">bool</span> isMaster = true)</p>
<p class="NDLRefMemberDescription">Asynchronously create a new entity. </p>
<p class="NDLRefMemberDetailedDescription">The provided model name is used to factory a <span class="NDLSystemFont"><a href="egf__FlatModel.htm">FlatModel</a></span> instance used to construct a new <span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span>. The specified flat model will be loaded if required. Once all of the Entity's initialization related lifecycle events complete, the <span class="NDLSystemFont"><a href="egf__EntityFactoryResponse.htm">EntityFactoryResponse</a></span> message is forwarded to the provided callback category. An optional ParameterList can be included to pass information to the OnCreate lifecycle event and another optional ParameterList can be used to set initial property values prior to OnCreate.</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">The entity is automatically added to the <span class="NDLSystemFont">EntityManager</span>.</p>
<p class="NDLRefMemberDetailedDescription">You can control whether or not the created entity automatically enters the world following the completion of its initial lifecycle behaviors by adding a boolean parameter named "AutoEnterWorld" to the pCreationArgs parameter list.</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">modelName</span></td>
    <td>name of the Flat model used to instantiate the entity. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">callback</span></td>
    <td>optional callback category. An <span class="NDLSystemFont"><a href="egf__EntityFactoryResponse.htm">EntityFactoryResponse</a></span> will be forwarded to this category. Do not use kCAT_LocalMessage for this callback category. Doing so will result in entity creation failures. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pCreationArgs</span></td>
    <td>An optional ParameterList passed as arguments to OnCreate. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pInitialProps</span></td>
    <td>An optional ParameterList containing initial property values. These values will be applied as soon as the entity is allocated and before the OnCreate behavior is invoked. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">entityId</span></td>
    <td>optional <span class="NDLSystemFont"><a href="egf__EntityID.htm">EntityID</a></span> to assign to the new entity, or kENTITY_INVALID to generate a new one. Generally you should never specify the <span class="NDLSystemFont"><a href="egf__EntityID.htm">EntityID</a></span> value unless you are recreating a previously existing entity (for example, loading from a save file). </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">isMaster</span></td>
    <td>Typical entities for use in behavior scheduling must be "master" entities. Certain test cases and replicated entities in a client-server setting will use non-master entities. Generally you should always leave this as true. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="egf__EntityID.htm">EntityID</a></span> the <span class="NDLSystemFont"><a href="egf__EntityID.htm">EntityID</a></span> assigned to the upcoming created entity, or kENTITY_INVALID if the creation failed. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1ad865dccacda08fb8b3cc2414b34085c6"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  AddEntity(<br/><span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span>* pEntity, <br/><span class="NDLSystemFont"><a href="../efd/efd__ParameterList.htm">efd::ParameterList</a></span>* pParameterList = 0)</p>
<p class="NDLRefMemberDescription">Add a created entity to this locale cache. </p>
<p class="NDLRefMemberDetailedDescription">I.E. After creating an <span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span> using the <span class="NDLSystemFont"><a href="egf__EntityFactory.htm">EntityFactory</a></span> (recreate from DB, or create new <span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span>, or stream migrated <span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span>), add it to this <span class="NDLSystemFont">EntityManager</span> so can be referenced by scheduler.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pEntity</span></td>
    <td>pointer to created entity. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pParameterList</span></td>
    <td>optional ParameterList passed to OnCreate. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>bool return true if entity added successfully, false if error. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1a3348ddd6d1e5dd73f3ca9662d947cd40"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  DestroyEntity(<span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span>* pEntity)</p>
<p class="NDLRefMemberDescription">Ask the specified <span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span> to Destroy itself. </p>
<p class="NDLRefMemberDetailedDescription">Valid created entities can not be removed from the <span class="NDLSystemFont">EntityManager</span> except by being destroyed. If temporary removal of the entity is needed, consider using <span class="NDLSystemFont"><a href="egf__Entity.htm#classegf_1_1_entity_1ae84cd7c216fe707d850f6fff34d09866">Entity::ExitWorld</a></span> instead.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pEntity</span></td>
    <td>Pointer to the entity to be destroyed. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if entity destruction was begun, false if error. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1a63fa8f22970f451ec0d1f3ecd89b7d8a"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  DestroyEntity(const <span class="NDLSystemFont"><a href="egf__EntityID.htm">EntityID</a></span>& id)</p>
<p class="NDLRefMemberDescription">Ask the specified <span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span> to Destroy itself. </p>
<p class="NDLRefMemberDetailedDescription">Valid created entities can not be removed from the <span class="NDLSystemFont">EntityManager</span> except by being destroyed. If temporary removal of the entity is needed, consider using <span class="NDLSystemFont"><a href="egf__Entity.htm#classegf_1_1_entity_1ae84cd7c216fe707d850f6fff34d09866">Entity::ExitWorld</a></span> instead.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">id</span></td>
    <td>The <span class="NDLSystemFont"><a href="egf__EntityID.htm">EntityID</a></span> of the entity to be destroyed. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if entity destruction was begun, false if error. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1a17869c6910d458de3763d312dbf76717"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span>*  LookupEntity(const <span class="NDLSystemFont"><a href="egf__EntityID.htm">EntityID</a></span>& id) const</p>
<p class="NDLRefMemberDescription">Find an entity given its <span class="NDLSystemFont"><a href="egf__EntityID.htm">EntityID</a></span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">id</span></td>
    <td>reference to an <span class="NDLSystemFont"><a href="egf__EntityID.htm">EntityID</a></span> class instance. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span> pointer to a locally owned entity or NULL if not found. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1aaf5a6b845bd43a448b315d5317718d8b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span>*  LookupEntityByDataFileID(const <span class="NDLSystemFont"><a href="../efd/efd__ID128.htm">efd::ID128</a></span>& id) const</p>
<p class="NDLRefMemberDescription">Find an entity given its data file id. </p>
<p class="NDLRefMemberDetailedDescription">Only entities that are loaded from block files will have a DataID set. The DataID is the identifier that tools use to uniquely label all entities. If a block is loaded multiple times this will only the first matching entity that is found. No guarantees are made as to which entity will be the first one found.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">id</span></td>
    <td>reference to an ID128 class instance. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span> pointer to entity or NULL if not found. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1af41705e8c946bfddcaf2fe92ba2bdd2d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  LookupEntityByDataFileID(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__ID128.htm">efd::ID128</a></span>& id, <br/><span class="NDLSystemFont"><a href="../efd/efd__set.htm">efd::set</a></span>&lt;<span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span>*&gt;& o_results) const</p>
<p class="NDLRefMemberDescription">Find all entities with the given data file id. </p>
<p class="NDLRefMemberDetailedDescription">Only entities that are loaded from world files will have a DataID set. The DataID is the identifier that tools use to uniquely label all entities.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">id</span></td>
    <td>reference to an ID128 class instance. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_results</span></td>
    <td>All the entities that were found </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>The number of entities found. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1a1c79352f5300f0d63ef7abf9c283cf38"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetCount() const</p>
<p class="NDLRefMemberDescription">Return number of entities in cached by the <span class="NDLSystemFont">EntityManager</span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>UInt32 number of entities in the cache. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1a148e67c8e45ea4b749857f7b065dbe3a"></a>
<p class="NDLRefMemberFunction">void  AddDirty(<span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span>* pEntity)</p>
<p class="NDLRefMemberDescription">Adds the given entity to the dirty list. </p>
<p class="NDLRefMemberDetailedDescription">This is called automatically by <span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span> when any properties are changed. Eventually results in an update message being sent (messages are sent once per entity per tick).</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pEntity</span></td>
    <td>pointer to the entity that needs to be added to the dirty list. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1a8f88d3c3144614d750cdb7e1e91c022c"></a>
<p class="NDLRefMemberFunction">void  ClearDirty(<span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span>* pEntity)</p>
<p class="NDLRefMemberDescription">Removes the given entity from the dirty list. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pEntity</span></td>
    <td>pointer to the entity that needs to be removed from the dirty list. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1a00c61fba50c57b6338b859c6bb14df54"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../efd/efd__hash_map.htm#classefd_1_1hash__map_1a8665e27606effa4e4e6753fa38804d6e">EntityMap::const_iterator</a></span>  GetFirstEntityPos() const</p>
<p class="NDLRefMemberDescription">Returns an iterator that can be passed to GetNextEntity in order to enumerate all the entities owned by the <span class="NDLSystemFont">EntityManager</span>. </p>
<p class="NDLRefMemberDetailedDescription">The iterator should not be used other than to pass it to GetNextEntity.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="../efd/efd__hash_map.htm#classefd_1_1hash__map_1a8665e27606effa4e4e6753fa38804d6e">EntityMap::const_iterator</a></span> : An iterator for all entities. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1ade772e7a2b64a47a983a23297bd7bcd7"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetNextEntity(<br/><span class="NDLSystemFont"><a href="../efd/efd__hash_map.htm#classefd_1_1hash__map_1a8665e27606effa4e4e6753fa38804d6e">EntityMap::const_iterator</a></span>& io_pos, <br/><span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span> *& o_pEntity) const</p>
<p class="NDLRefMemberDescription">Returns the next entity from the map of entities kept by the <span class="NDLSystemFont">EntityManager</span> based on the iterator passed in and then moves the iterator to the next item. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">: The iterator should not be used directly.</p>Repeated calls to <span class="NDLSystemFont"><a href="egf__EntityManager.htm#classegf_1_1_entity_manager_1ade772e7a2b64a47a983a23297bd7bcd7">GetNextEntity()</a></span> with the returned iterator will traverse the entire entity map.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<p class="NDLRefMemberDetailedDescription">that this reference is updated upon each call. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">io_pos</span></td>
    <td>A reference to an iterator used to index through the map. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_pEntity</span></td>
    <td>a pointer used to contain the entity or NULL if there are no more entities to iterator over. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>bool true if there was another entity to return. When this is true the output parameter o_pEntity should point to a valid entity, otherwise the output parameter should be set to NULL. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1afac90d0771604342722544a884076c57"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__EntityManager__FilteredIterator.htm">FilteredIterator</a></span>  GetFilteredIterator(<br/><span class="NDLSystemFont"><a href="egf__EntityManager.htm#classegf_1_1_entity_manager_1a0352b4fe46eb8e39adf7ca18539705d5">FilterFunction</a></span> i_pfn, <br/>void* i_pParam = 0) const</p>
<p class="NDLRefMemberDescription">Returns an iterator that can be passed to GetNextEntity in order to enumerate all the entities owned by the <span class="NDLSystemFont">EntityManager</span> that match the provided filter function. </p>
<p class="NDLRefMemberDetailedDescription">The iterator should not be used other than to pass it to GetNextEntity. The filter function receives a void pointer which it can use to pass arbitrary context data.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_pfn</span></td>
    <td>A function that is called once for every entity. Only entities for which this function returns true will be returned by GetNextEntity. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_pParam</span></td>
    <td>an arbitrary parameter that is passed to the filter function on every call. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="egf__EntityManager__FilteredIterator.htm">FilteredIterator</a></span> An iterator that also remembers the provided arguments. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1aefc58e4ec61c3916351944bad6099f51"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  GetNextEntity(<br/><span class="NDLSystemFont"><a href="egf__EntityManager__FilteredIterator.htm">FilteredIterator</a></span>& io_pos, <br/><span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span> *& o_pEntity) const</p>
<p class="NDLRefMemberDescription">Returns the next entity from the map of entities kept by the <span class="NDLSystemFont">EntityManager</span> based on the iterator passed in and then moves the iterator to the next item. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">: The iterator should not be used directly.</p>Repeated calls to <span class="NDLSystemFont"><a href="egf__EntityManager.htm#classegf_1_1_entity_manager_1ade772e7a2b64a47a983a23297bd7bcd7">GetNextEntity()</a></span> with the returned iterator will traverse the entire entity map.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<p class="NDLRefMemberDetailedDescription">that this reference is updated upon each call. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">io_pos</span></td>
    <td>a reference to an iterator used to index through the map. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_pEntity</span></td>
    <td>a pointer used to contain the entity or NULL if there are no more entities to iterator over. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>bool true if there was another entity to return. When this is true the output parameter o_pEntity should point to a valid entity, otherwise the output parameter should be set to NULL. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1a6c4356f5d973d805140cec8c56e5fca7"></a>
<p class="NDLRefMemberFunction">virtual void  OnEntityBeginLifecycle(<br/><span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span>* pEntity, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> lifecycle)</p>
<p class="NDLRefMemberDescription">A callback used by <span class="NDLSystemFont"><a href="egf__Entity.htm#classegf_1_1_entity_1a765c4a2b1433fb6826cd4560a7d54cba">Entity::BeginLifecycle</a></span> to notify the <span class="NDLSystemFont">EntityManager</span> of the entities current state. </p>
<p class="NDLRefMemberDetailedDescription">This base class implementation does nothing in response.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pEntity</span></td>
    <td>Pointer to the entity which is starting a lifecycle </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">lifecycle</span></td>
    <td>The entity lifecycle that is beginning </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1a26d1b76e8cc364a877842c7de50219ed"></a>
<p class="NDLRefMemberFunction">virtual void  OnEntityEndLifecycle(<br/><span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span>* pEntity, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> lifecycle)</p>
<p class="NDLRefMemberDescription">A callback used by <span class="NDLSystemFont"><a href="egf__Entity.htm#classegf_1_1_entity_1a2f717f2cc3106933a626eaec2d672544">Entity::EndLifecycle</a></span> to notify the <span class="NDLSystemFont">EntityManager</span> of the entities current state. </p>
<p class="NDLRefMemberDetailedDescription">This implementation is responsible for notifications concerning the lifecycle's used by the base <span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span> class.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pEntity</span></td>
    <td>Pointer to the entity which is finishing a lifecycle </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">lifecycle</span></td>
    <td>The entity lifecycle that is ending </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1a960ccaad1788728feaaab4fabfad50c4"></a>
<p class="NDLRefMemberFunction">void  RegisterPreloadService(<span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> completionCallback)</p>
<p class="NDLRefMemberDescription">Registers a service for entity preloading. </p>
<p class="NDLRefMemberDetailedDescription">When calling PreloadEntityAssets, all registered services receive an <span class="NDLSystemFont"><a href="egf__EntityPreloadRequest.htm">EntityPreloadRequest</a></span> message containing the entity in question. All such services must respond with an <span class="NDLSystemFont"><a href="egf__EntityPreloadResponse.htm">EntityPreloadResponse</a></span> message before the entity is considered "preloaded" and its OnAssetsLoaded behavior invoked, even if the service does not know how to preload such an entity.</p>
<p class="NDLRefMemberDetailedDescription">Services that wish to participate will receive preload requests on the category returned by GetEntityPreloadCategory, and will send preload responses on the category they registered with.</p>
<p class="NDLRefMemberDetailedDescription">The RegisterPreloadService method should be called after OnPreInit has been invoked on the entity manager. We recommend that services make this call during their OnInit methods and register a service dependency on the <span class="NDLSystemFont">EntityManager</span> class.</p>
<p class="NDLRefMemberDetailedDescription">Note that preloads already in progress are not affected by the registration of new services.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">completionCallback</span></td>
    <td>Category to receive <span class="NDLSystemFont"><a href="egf__EntityPreloadResponse.htm">EntityPreloadResponse</a></span> messages. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1a1c85c3e95a17194fa6d67faee36cf45e"></a>
<p class="NDLRefMemberFunction">void  UnregisterPreloadService(<span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> completionCallback)</p>
<p class="NDLRefMemberDescription">Unregisters a service from entity preloading. </p>
<p class="NDLRefMemberDetailedDescription">Note that unregistering a service while preloads are in progress may lead to undefined behavior.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">completionCallback</span></td>
    <td>Category no longer to receive <span class="NDLSystemFont"><a href="egf__EntityPreloadResponse.htm">EntityPreloadResponse</a></span> messages. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1a5ae65dfcba88d32301d0ffc328d13914"></a>
<p class="NDLRefMemberFunction">void  PreloadEntityAssets(<span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span>* pEntity)</p>
<p class="NDLRefMemberDescription">Instructs registered services to begin preloading entity assets. </p>
<p class="NDLRefMemberDetailedDescription">Once all services have completed preloading, the entity's OnAssetsLoaded behavior will run.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pEntity</span></td>
    <td><span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span> to preload. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_manager_1ac494adf96625f756a41c0021be46f161"></a>
<p class="NDLRefMemberFunction">void  HandleEntityPreloadResponse(<br/>const <span class="NDLSystemFont"><a href="egf__EntityPreloadResponse.htm">egf::EntityPreloadResponse</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">Receives notifications from registered services that an entity has finished preloading its assets. </p>
<p class="NDLRefMemberDetailedDescription">The entity's OnAssetsLoaded behavior will run once all registered services have sent their responses. </p>

<a name="classegf_1_1_entity_manager_1a8da7c5de98984343e1d4031944e71f66"></a>
<p class="NDLRefMemberFunction">void  HandleEntityFactoryResponse(<br/>const <span class="NDLSystemFont"><a href="egf__EntityFactoryResponse.htm">egf::EntityFactoryResponse</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">When creating entities asynchronously, this handler is called when the <span class="NDLSystemFont"><a href="egf__EntityFactory.htm">EntityFactory</a></span> has finished loading the entity data. </p>

<a name="classegf_1_1_entity_manager_1a785f64a93c10da33875f08a8fec954be"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span>  GetEntityLoadCategory() const</p>
<p class="NDLRefMemberDescription">Get the category used for <span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span> Load requests. </p>
<p class="NDLRefMemberDetailedDescription">May be called during PreInit or Init. </p>

<a name="classegf_1_1_entity_manager_1ae257e961ed2073fd7a42cb129ecc8c2b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__EntityFactory.htm">egf::EntityFactory</a></span>*  GetEntityFactory() const</p>
<p class="NDLRefMemberDescription">Returns the <span class="NDLSystemFont"><a href="egf__EntityFactory.htm">EntityFactory</a></span> instance used by this service. </p>
<p class="NDLRefMemberDetailedDescription">Only available after Init. </p>

<a name="classegf_1_1_entity_manager_1ac0da42a31809e091834d076173565d35"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span>  GetEntityPreloadCategory() const</p>
<p class="NDLRefMemberDescription">Get the category used for <span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span> Preload requests. </p>
<p class="NDLRefMemberDetailedDescription">Preload services subscribe to this category for request messages and return their responses on the category they passed to RegisterPreloadService. This method may be called during PreInit or Init. </p>

<a name="classegf_1_1_entity_manager_1a57dcabd880078b2bb1adc95898d2ff11"></a>
<p class="NDLRefMemberFunction">void  SetDefaultAutoEnterWorld(<span class="NDLSystemFont">bool</span> newValue)</p>
<p class="NDLRefMemberDescription">Set the default auto-enter world value for dynamically created entities. </p>
<p class="NDLRefMemberDetailedDescription">The default default is to automatically place dynamically created entities into the world. </p>
<p class="NDLRefMemberDetailedDescription">Entities created from block loading are controlled by the GetDefaultAutoEnterWorld method on the <span class="NDLSystemFont"><a href="egf__BlockLoadParameters.htm">BlockLoadParameters</a></span> class and not this setting. </p>
<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classegf_1_1_entity_manager_1aead6f5a56957a29686748df3ec186dc3"></a>
<p class="NDLRefMemberFunction">virtual ~EntityManager()</p>
<p class="NDLRefMemberDescription">virtual, non-public destructor. </p>

<a name="classegf_1_1_entity_manager_1a03d0202d89fec9d889baddf8f87ff2f8"></a>
<p class="NDLRefMemberFunction">EntityManager()</p>
<p class="NDLRefMemberDescription">Constructor used to create an instance of the <span class="NDLSystemFont">EntityManager</span>. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

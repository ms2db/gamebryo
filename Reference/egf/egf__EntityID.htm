<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egf::EntityID</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egf::EntityID</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__UniversalID.htm">efd::UniversalID</a></span></p>


<p class="NDLRefHeaderFile">&lt;EntityID.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegf_1_1_entity_i_d.gif" alt="Inheritance graph for egf::EntityID"/>
  <p class="FigureCaption">Inheritance graph for egf::EntityID</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">A class that encapsulates a unique entity ID. </p>

<a name="public_static_attributes"></a>
<p class="NDLRefHead1">Public Static Attributes</p>


<a name="classegf_1_1_entity_i_d_1a9b826d33cdf30941b666a21e41457df6"></a>
<p class="NDLRefMemberFunction">static const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a845df149ec80fc0bf36f875ece09ef9d">efd::UInt64</a></span>  kENTITY_INVALID</p>
<p class="NDLRefMemberDescription">invalid entity id </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegf_1_1_entity_i_d_1ac698bd2c47cb7538d39e223ed20ca69d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">EntityID</span>&  operator=(const <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a845df149ec80fc0bf36f875ece09ef9d">efd::UInt64</a></span>& other)</p>
<p class="NDLRefMemberDescription">Assignment operator taking a UInt64. </p>

<a name="classegf_1_1_entity_i_d_1aef410a95058c32006219fb53890452e9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">EntityID</span>&  operator=(const <span class="NDLSystemFont">EntityID</span>& other)</p>
<p class="NDLRefMemberDescription">Assignment operator taking an <span class="NDLSystemFont">EntityID</span>. </p>

<a name="classegf_1_1_entity_i_d_1adfff53ba6990b663105f221d5293e98b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">EntityID</span>&  operator=(const <span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span>& other)</p>
<p class="NDLRefMemberDescription">Any <span class="NDLSystemFont">EntityID</span> is really a special case of a Category so we support conversion. </p>
<p class="NDLRefMemberDetailedDescription">This will assert if the category provided isn't actually an <span class="NDLSystemFont">EntityID</span></p>

<a name="classegf_1_1_entity_i_d_1a6a64d35e5bfb055ddf25e8c5e5f5329c"></a>
<p class="NDLRefMemberFunction">operator efd::Category() const</p>
<p class="NDLRefMemberDescription">EntityIDs are a special kind of category ID, so we allow implicit casting to a Category. </p>

<a name="classegf_1_1_entity_i_d_1aa00d48b94336bc1bd1c66db498adabab"></a>
<p class="NDLRefMemberFunction">void  Serialize(<span class="NDLSystemFont"><a href="../efd/efd__Archive.htm">efd::Archive</a></span>& io_archive)</p>
<p class="NDLRefMemberDescription">Serialize method for using <span class="NDLSystemFont">EntityID</span> with Archive or ParameterList. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classegf_1_1_entity_i_d_1ad4b42d6d813e86b13e2fb409d2ea7aac"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>  IDToString(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a845df149ec80fc0bf36f875ece09ef9d">efd::UInt64</a></span> id)</p>
<p class="NDLRefMemberDescription">Creates an <span class="NDLSystemFont">EntityID</span> from id, then calls <span class="NDLSystemFont"><a href="egf__EntityID.htm#classegf_1_1_entity_i_d_1a4d9eaf355ad8eb6d2e1a22d41daf81f4">EntityID::ToString()</a></span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">id</span></td>
    <td>The id to convert to a string. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span> of the <span class="NDLSystemFont">EntityID</span>. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_i_d_1a123ee3c85edc062d32bed43a4e1a68cd"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">efd::Bool</span>  IsValidEntityID(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a845df149ec80fc0bf36f875ece09ef9d">efd::UInt64</a></span> id)</p>
<p class="NDLRefMemberDescription">Check if a given UInt64 is valid as an potential <span class="NDLSystemFont">EntityID</span>. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">id</span></td>
    <td>The id to check. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>bool of the <span class="NDLSystemFont">EntityID</span>. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="construction"></a>
<p class="NDLRefHead1">Construction</p>


<a name="classegf_1_1_entity_i_d_1a8f76fba89c266bd8f86973355579a2b5"></a>
<p class="NDLRefMemberFunction">EntityID()</p>
<p class="NDLRefMemberDescription">Constructor. </p>

<a name="classegf_1_1_entity_i_d_1ad9b45b5e4c6513dd5243d8afba721feb"></a>
<p class="NDLRefMemberFunction">EntityID(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a845df149ec80fc0bf36f875ece09ef9d">efd::UInt64</a></span> entityID)</p>
<p class="NDLRefMemberDescription">Constructor taking a UInt64. </p>

<a name="classegf_1_1_entity_i_d_1a550d60683a8b9eefe50e8212f880844f"></a>
<p class="NDLRefMemberFunction">EntityID(const <span class="NDLSystemFont">EntityID</span>& entityID)</p>
<p class="NDLRefMemberDescription">Copy Constructor. </p>

<a name="classegf_1_1_entity_i_d_1add780af4b1cd44c067e09190bbe7d721"></a>
<p class="NDLRefMemberFunction">EntityID(const <span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span>& entityID)</p>
<p class="NDLRefMemberDescription">Entities are a special case of Category some we can turn certain categories into EntityIDs. </p>
<p class="NDLRefMemberDetailedDescription">This will assert if the category used is not actually an entity ID. </p>

<a name="classegf_1_1_entity_i_d_1a17258ea2f1423c7e8ce630b41483233f"></a>
<p class="NDLRefMemberFunction">EntityID(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> i_ShardID, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> i_netID, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a845df149ec80fc0bf36f875ece09ef9d">efd::UInt64</a></span> i_baseid)</p>
<p class="NDLRefMemberDescription">Constructor to build an entity ID from its base parts. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_ShardID</span></td>
    <td>The numeric representation of the shard bits in the ID. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_netID</span></td>
    <td>The numeric representation of the NetID bits in the ID. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_baseid</span></td>
    <td>The numeric representation of the base bits in the ID. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="universalid_members_and_overrides"></a>
<p class="NDLRefHead1">UniversalID members and overrides</p>


<a name="classegf_1_1_entity_i_d_1a376af2135817f40beb42767fd008ec6c"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator==(const <span class="NDLSystemFont">EntityID</span>& rhs) const</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">We don't want to be able to compare different types of IDs, we only share UniversalID so that we have a single place to put all the bit fields we use. </p></p>

<a name="classegf_1_1_entity_i_d_1a78a4d7b3568759ba709ea5bdddf82c4a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator!=(const <span class="NDLSystemFont">EntityID</span>& rhs) const</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">We don't want to be able to compare different types of IDs, we only share UniversalID so that we have a single place to put all the bit fields we use. </p></p>

<a name="classegf_1_1_entity_i_d_1ad269feed528d5217c818893ed85bda7f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator&gt;(const <span class="NDLSystemFont">EntityID</span>& rhs) const</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">We don't want to be able to compare different types of IDs, we only share UniversalID so that we have a single place to put all the bit fields we use. </p></p>

<a name="classegf_1_1_entity_i_d_1ad186c9c2708b71ccb8ee300e82696c52"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  operator&lt;(const <span class="NDLSystemFont">EntityID</span>& rhs) const</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">We don't want to be able to compare different types of IDs, we only share UniversalID so that we have a single place to put all the bit fields we use. </p></p>

<a name="classegf_1_1_entity_i_d_1a581c210ca1ef586f9eb6a6cfb56821c5"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetShardID() const</p>
<p class="NDLRefMemberDescription">Gets the numeric representation of the shard bits in the ID. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> The value of the Shard ID that created this ID </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_i_d_1a4070a5163a68cb1cdc0bceb361632e69"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  SetShardID(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> i_shard)</p>
<p class="NDLRefMemberDescription">Sets the numeric representation of the shard bits in the ID. </p>
<p class="NDLRefMemberDetailedDescription">The value will be ignored if it is outside of the valid range.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_shard</span></td>
    <td>The <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> for the shardID </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>true if the input value is in range, false otherwise </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_i_d_1aa3d7811606cff2979b501e740c776dd8"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetNetID() const</p>
<p class="NDLRefMemberDescription">Gets the numeric representation of the NetID bits in the ID. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> The value of the Net ID that created this ID. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_i_d_1add3a13e62b4aaf46742b50296b67e2d7"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  SetNetID(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> i_netID)</p>
<p class="NDLRefMemberDescription">Sets the numeric representation of the NetID bits in the ID. </p>
<p class="NDLRefMemberDetailedDescription">The value will be ignored if it is outside of the valid range.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_netID</span></td>
    <td>The netID to store. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aa1008ee520c7fb6e8a1d1f5cdbee0dec">efd::Bool</a></span> true if the input value is in range, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_i_d_1a2605d7abfa330f17b5ca282b935ace4f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a845df149ec80fc0bf36f875ece09ef9d">efd::UInt64</a></span>  GetBaseID() const</p>
<p class="NDLRefMemberDescription">Gets the numeric representation of the base bits in the ID. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a845df149ec80fc0bf36f875ece09ef9d">efd::UInt64</a></span> The value of the base ID without the extra info baked in. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_i_d_1a5a4cce6927c6b9a7b761a28058324e80"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  SetBaseID(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a845df149ec80fc0bf36f875ece09ef9d">efd::UInt64</a></span> i_base)</p>
<p class="NDLRefMemberDescription">Sets the numeric representation of the base bits in the ID. </p>
<p class="NDLRefMemberDetailedDescription">The value will be ignored if it is outside of the valid range.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_base</span></td>
    <td>The numeric representation of the base bits in the ID. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1aa1008ee520c7fb6e8a1d1f5cdbee0dec">efd::Bool</a></span> true if the input value is in range, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_i_d_1a4d9eaf355ad8eb6d2e1a22d41daf81f4"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>  ToString() const</p>
<p class="NDLRefMemberDescription">Creates a "pretty" format string splitting out the different components. </p>
<p class="NDLRefMemberDetailedDescription">of the entity ID. Handy for logging.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>The string. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

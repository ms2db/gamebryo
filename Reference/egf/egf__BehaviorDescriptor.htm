<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egf::BehaviorDescriptor</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egf::BehaviorDescriptor</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__RefCount.htm">efd::RefCount</a></span></p>


<p class="NDLRefHeaderFile">&lt;BehaviorDescriptor.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegf_1_1_behavior_descriptor.gif" alt="Inheritance graph for egf::BehaviorDescriptor"/>
  <p class="FigureCaption">Inheritance graph for egf::BehaviorDescriptor</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Implementation class for a behavior definition. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>


<a name="classegf_1_1_behavior_descriptor_1a46a71e8d7641743d93e4ca63e4799cc3"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__list.htm">efd::list</a></span>&lt;<span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&gt;  InvocationOrderedModelNamesList</p>
<p class="NDLRefMemberDescription">Define an invocation-ordered model list. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classegf_1_1_behavior_descriptor_1a6c596be7a11f16a774be75886ab1f626"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">bool</span>  AddStaticBahavior(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& modelName, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& behaviorName, <br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1ad4ecee8ad32da45663f7ce9d840227d1">CBehaviorFunc</a></span> behaviorFunction)</p>
<p class="NDLRefMemberDescription">Add a C/C++ behavior function pointer to the static map of model/behavior name behavior function pointers. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">modelName</span></td>
    <td>Name of the model for which to register a behavior function pointer. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">behaviorName</span></td>
    <td>Name of the behavior for which to register a behavior function pointer. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">behaviorFunction</span></td>
    <td>Behavior function pointer to register. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if behavior function pointer was successfully added to the static map; false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_behavior_descriptor_1add001ac517d417181b7ddc34c1bf3252"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1ad4ecee8ad32da45663f7ce9d840227d1">CBehaviorFunc</a></span>  GetStaticBehavior(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& modelName, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& behaviorName)</p>
<p class="NDLRefMemberDescription">Get a C/C++ behavior function pointer out of the static map of model/behavior name behavior function pointers. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">modelName</span></td>
    <td>Name of the model registered. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">behaviorName</span></td>
    <td>Name of the behavior registered. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>Behavior function pointer registered, or NULL if none found. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegf_1_1_behavior_descriptor_1a9af04b55b448da860d55ad218ccb1c4a"></a>
<p class="NDLRefMemberFunction">BehaviorDescriptor(<br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1ebd2b58de9ca508c04d80dea3644fcb">BehaviorID</a></span> i_idBehavior, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& i_strName, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& i_strSource, <br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1addeb6c47daeb31df2cb1531e64d65df2">BehaviorTypes</a></span> i_BehaviorType, <br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> i_traits = BehaviorTrait_None)</p>
<p class="NDLRefMemberDescription">Constructor. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_idBehavior</span></td>
    <td>ID of the behavior. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_strName</span></td>
    <td>Name of the behavior. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_strSource</span></td>
    <td>Name of the original model that contains this behavior (used to determine module, DLL/SO, or built-in model containing the behavior method). </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_BehaviorType</span></td>
    <td>Behavior types of the behavior. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_traits</span></td>
    <td>Traits flags for the behavior. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_behavior_descriptor_1a7f145788d944c52c7e63d5c7e900c121"></a>
<p class="NDLRefMemberFunction">BehaviorDescriptor(const <span class="NDLSystemFont">BehaviorDescriptor</span>& i_other)</p>
<p class="NDLRefMemberDescription">Copy Constructor. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_other</span></td>
    <td>Behavior descriptor being copied. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_behavior_descriptor_1a3ea57d72c6ff26dd2b5ba8b601efcdb5"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  Initialize()</p>
<p class="NDLRefMemberDescription">Prepares the behavior to be invoked. </p>
<p class="NDLRefMemberDetailedDescription">For C/C++ behaviors, these steps involve loading the DLL/SO that implements the methods. For built-in behaviors, these steps involve verifying that the given BuiltinModel name is valid. (It does not guarantee that any given entity actually has that built-in model mixed in.) For remote behaviors, this function has no effect.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if the behavior is ready for execution (or is remote). </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_behavior_descriptor_1a240a2f3aeef6031dd97159fb4ef5e670"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1ebd2b58de9ca508c04d80dea3644fcb">BehaviorID</a></span>  GetID() const</p>
<p class="NDLRefMemberDescription">Get the ID for this behavior. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>32-bit unsigned integer used for behavior ID. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_behavior_descriptor_1acf5e32cf6b0342866aa7b9dddc7ae692"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&  GetName() const</p>
<p class="NDLRefMemberDescription">Get a pointer to the name for this behavior. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>Name of this behavior. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_behavior_descriptor_1ae73ce6cb2bcbe63ed3587ff821bb1c81"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>&  GetModelName() const</p>
<p class="NDLRefMemberDescription">Get a pointer to the original model name where this behavior was defined. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">This name is not the flat model name, but the original model name.</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>Name of the model for this behavior. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_behavior_descriptor_1a8a5eb7814ffe3d1273fe16094b811db4"></a>
<p class="NDLRefMemberFunction">void  SetModelName(const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& modelName)</p>
<p class="NDLRefMemberDescription">Set the original model name. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">This name is not the flat model name, but the original model name.</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">modelName</span></td>
    <td>Name of the model for this behavior. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_behavior_descriptor_1aa61352fef3bd7c363161add46080853f"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1addeb6c47daeb31df2cb1531e64d65df2">BehaviorTypes</a></span>  GetType() const</p>
<p class="NDLRefMemberDescription">Get the script type for this behavior. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>Enumerated type for this behavior (C, Python, etc.). </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_behavior_descriptor_1a34c076e6b1306e2222b5e228ba73a3e7"></a>
<p class="NDLRefMemberFunction">void  SetType(<span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1addeb6c47daeb31df2cb1531e64d65df2">BehaviorTypes</a></span> i_newType)</p>
<p class="NDLRefMemberDescription">Set the script type for this behavior. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_newType</span></td>
    <td>Enumerated type for this behavior (C, Python, etc.). </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_behavior_descriptor_1abd2049a4427fa6e6f85b0cbb1a3a3ba2"></a>
<p class="NDLRefMemberFunction">const char*  GetTypeName() const</p>
<p class="NDLRefMemberDescription">Get a string name for the behavior type. </p>
<p class="NDLRefMemberDetailedDescription">Only works with built-in behavior types.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>String representation of the BehaviorTypes value. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_behavior_descriptor_1a5d380735fdbed48eeffb9511552101cf"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">efd::Bool</span>  GetTrait(<span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1abf8d69206060e54cf50700e7704ddd3a">BehaviorTraits</a></span> trait) const</p>
<p class="NDLRefMemberDescription">Retrieves the value of the specified trait. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">trait</span></td>
    <td>Trait to check. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>Indicates whether the behavior possesses the trait (true or false). </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_behavior_descriptor_1afc018d5e6a15239325f62b259366ceef"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span>  GetTraits() const</p>
<p class="NDLRefMemberDescription">Retrieves all traits as a 32-bit bitfield. </p>
<p class="NDLRefMemberDetailedDescription">Useful for testing the equality of the traits between two different BehaviorDescriptors.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>32-bit bitfield representing all traits. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_behavior_descriptor_1ac24425e33fb77c8e7d1bbdf62fe2a1f8"></a>
<p class="NDLRefMemberFunction">void  SetTrait(<br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1abf8d69206060e54cf50700e7704ddd3a">BehaviorTraits</a></span> trait, <br/><span class="NDLSystemFont">efd::Bool</span> val)</p>
<p class="NDLRefMemberDescription">Sets the value of the specified trait. </p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">It is undefined behavior to set a trait after simulation has begun.</p></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">trait</span></td>
    <td>Trait whose value is being set. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">val</span></td>
    <td>Value of the trait. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_behavior_descriptor_1a1c03854291a02ffb2f0af45322cbf6e0"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1ad4ecee8ad32da45663f7ce9d840227d1">CBehaviorFunc</a></span>  GetCFunctionPtr() const</p>
<p class="NDLRefMemberDescription">Get the pointer to the "C" function for this behavior (if it exists). </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>Pointer to the "C" DLL function for this behavior (if it exists). </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_behavior_descriptor_1a00edcd883b285d082afa0c2cf5ae556b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsValid() const</p>
<p class="NDLRefMemberDetailedDescription">Verifies that all data fields contain valid data, and no illegal trait or type combinations have been specified.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if all data fields contain valid data; false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_behavior_descriptor_1ae06f268049e1a95980149bedb1050b03"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../efd/efd__list.htm">InvocationOrderedModelNamesList</a></span>&  GetInvocationOrderedModelNames() const</p>
<p class="NDLRefMemberDescription">Get a reference to the behavior's invocation order list. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>Reference to the behavior's invocation order list. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_behavior_descriptor_1a160517dac488a600cb704c81431dccd0"></a>
<p class="NDLRefMemberFunction">void  AddInvocationOrderedModelName(const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& modelName)</p>
<p class="NDLRefMemberDescription">Add a model name to the behavior's invocation order list. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">modelName</span></td>
    <td>Model name to be added to the behavior's invocation order list. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_behavior_descriptor_1af066cc3a05073ee38b3a85c591017c8e"></a>
<p class="NDLRefMemberFunction">void  ClearInvocationOrderList()</p>
<p class="NDLRefMemberDescription">Clear the behavior's invocation order list. </p>
<p class="NDLRefMemberDetailedDescription">This is used when adapting traits during model parsing when we detect that the invocation list will not be required. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

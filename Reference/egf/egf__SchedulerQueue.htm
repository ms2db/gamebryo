<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egf::SchedulerQueue</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egf::SchedulerQueue</p>


<p class="NDLRefHeaderFile">&lt;SchedulerQueue.h&gt;</p>


<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Data structure to store the scheduler queue. </p>
<p class="NDLNormal">It acts like a priority queue but can be iterated and supports fast lookup by event ID. Internally this queue is currently implemented using a sorted list and a map of EventIDs. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>


<a name="classegf_1_1_scheduler_queue_1aac4c168e5ef775dd595741bf07378d6e"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__list.htm">efd::list</a></span>&lt;<span class="NDLSystemFont"><a href="egf__ScheduledTask.htm">ScheduledTask</a></span>*&gt;::<span class="NDLSystemFont"><a href="egf__SchedulerQueue.htm#classegf_1_1_scheduler_queue_1aac4c168e5ef775dd595741bf07378d6e">iterator</a></span>  iterator</p>
<p class="NDLRefMemberDescription">Iterator type for iterating the queue. </p>

<a name="classegf_1_1_scheduler_queue_1aa75718c107a2d541fd5c559cd94e6df4"></a>
<p class="NDLRefMemberFunction">typedef <span class="NDLSystemFont"><a href="../efd/efd__list.htm">efd::list</a></span>&lt;<span class="NDLSystemFont"><a href="egf__ScheduledTask.htm">ScheduledTask</a></span>*&gt;::<span class="NDLSystemFont"><a href="egf__SchedulerQueue.htm#classegf_1_1_scheduler_queue_1aa75718c107a2d541fd5c559cd94e6df4">const_iterator</a></span>  const_iterator</p>
<p class="NDLRefMemberDescription">Const iterator type for iterating the queue. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegf_1_1_scheduler_queue_1ab0f46c9d80eb59af5aa8205cc6ba31d2"></a>
<p class="NDLRefMemberFunction">void  push(<span class="NDLSystemFont"><a href="egf__ScheduledTask.htm">ScheduledTask</a></span>* pTask)</p>
<p class="NDLRefMemberDescription">Add a new task to the queue. </p>
<p class="NDLRefMemberDetailedDescription">The task will be sorted by its execution time. This will hold a reference to the task. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pTask</span></td>
    <td>The task to add </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_scheduler_queue_1ac88970731b7e5a0a30023ffb23fc18f9"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__ScheduledTask.htm">ScheduledTask</a></span>*  top() const</p>
<p class="NDLRefMemberDescription">Retrieve the top task from the queue. The task will remain on the top of the queue. </p>

<a name="classegf_1_1_scheduler_queue_1aaa444e7732277de92a6268e4d4bc0a88"></a>
<p class="NDLRefMemberFunction">void  pop()</p>
<p class="NDLRefMemberDescription">Remove the top task from the queue, freeing the reference held to it. </p>

<a name="classegf_1_1_scheduler_queue_1a715dd58c5f083b391524b10e920ccb36"></a>
<p class="NDLRefMemberFunction">size_t  size() const</p>
<p class="NDLRefMemberDescription">Gets the size of the queue. </p>

<a name="classegf_1_1_scheduler_queue_1a3872738f76ad38b67ac0a19decb7675e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  empty() const</p>
<p class="NDLRefMemberDescription">Determines if the queue is empty. </p>

<a name="classegf_1_1_scheduler_queue_1ac1c7d091c880814676a7f600a98a4b58"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__ScheduledTask.htm">ScheduledTask</a></span>*  find(<span class="NDLSystemFont"><a href="egf__EventID.htm">egf::EventID</a></span> evid)</p>
<p class="NDLRefMemberDescription">Finds a task in the queue by <span class="NDLSystemFont"><a href="egf__EventID.htm">EventID</a></span>. </p>

<a name="classegf_1_1_scheduler_queue_1a6ea9ba62b57a40474f1af57df62c20cd"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="egf__ScheduledTask.htm">ScheduledTask</a></span>*  find(<span class="NDLSystemFont"><a href="egf__EventID.htm">egf::EventID</a></span> evid) const</p>
<p class="NDLRefMemberDescription">Finds a task in the queue by <span class="NDLSystemFont"><a href="egf__EventID.htm">EventID</a></span>. </p>

<a name="classegf_1_1_scheduler_queue_1add8efd39f99bf3d7ecf267e86dfebd6e"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  erase(<span class="NDLSystemFont"><a href="egf__EventID.htm">egf::EventID</a></span> evid)</p>
<p class="NDLRefMemberDescription">Removes the task with the given <span class="NDLSystemFont"><a href="egf__EventID.htm">EventID</a></span> from the queue. </p>

<a name="classegf_1_1_scheduler_queue_1ada00910e8d7e669e9489ff778531b6e8"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  erase(<br/><span class="NDLSystemFont"><a href="egf__EventID.htm">egf::EventID</a></span> i_eventID, <br/><span class="NDLSystemFont"><a href="../efd/efd__SmartPointer.htm">ScheduledTaskPtr</a></span>& o_pTask)</p>
<p class="NDLRefMemberDescription">Erase the task with the given <span class="NDLSystemFont"><a href="egf__EventID.htm">EventID</a></span> from the queue. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_eventID</span></td>
    <td></td>
</tr>
<tr>
    <td><span class="NDLSystemFont">o_pTask</span></td>
    <td>The task that was removed </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if an event was erased, false if the event was not found </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_scheduler_queue_1a4249119d0dcb111b81bb44c50c27035d"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__SchedulerQueue.htm#classegf_1_1_scheduler_queue_1aac4c168e5ef775dd595741bf07378d6e">iterator</a></span>  begin()</p>
<p class="NDLRefMemberDescription">Retrieves an iterator for the first item in the queue. </p>
<p class="NDLRefMemberDetailedDescription">Results are sorted by execution time. </p>

<a name="classegf_1_1_scheduler_queue_1abac6aaab9768f72d2323d8966b94f7d8"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__SchedulerQueue.htm#classegf_1_1_scheduler_queue_1aa75718c107a2d541fd5c559cd94e6df4">const_iterator</a></span>  begin() const</p>
<p class="NDLRefMemberDescription">Retrieves a const iterator for the first item in the queue. </p>
<p class="NDLRefMemberDetailedDescription">Results are sorted by execution time. </p>

<a name="classegf_1_1_scheduler_queue_1a64deaf0c2909bbd2cc05b27091dec24b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__SchedulerQueue.htm#classegf_1_1_scheduler_queue_1aac4c168e5ef775dd595741bf07378d6e">iterator</a></span>  end()</p>
<p class="NDLRefMemberDescription">Retrieves an iterator for the end of the queue. </p>

<a name="classegf_1_1_scheduler_queue_1a6b09f2ab83e8cca195c9cb8dd5aea971"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__SchedulerQueue.htm#classegf_1_1_scheduler_queue_1aa75718c107a2d541fd5c559cd94e6df4">const_iterator</a></span>  end() const</p>
<p class="NDLRefMemberDescription">Retrieves a const iterator for the end of the queue. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

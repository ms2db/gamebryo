<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egf::IBuiltinModel</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egf::IBuiltinModel</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__IBase.htm">efd::IBase</a></span></p>


<p class="NDLRefHeaderFile">&lt;IBuiltinModel.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegf_1_1_i_builtin_model.gif" alt="Inheritance graph for egf::IBuiltinModel"/>
  <p class="FigureCaption">Inheritance graph for egf::IBuiltinModel</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Interface from which all built-in models derive. </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegf_1_1_i_builtin_model_1a5e78e8f4b626b719ef8435bf633b760e"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  Initialize(<br/><span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span>* i_pOwner, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__list.htm">PropertyDescriptorList</a></span>& i_Defaults)</p>
<p class="NDLRefMemberDescription">After the built-in model is "factoried", this method is called to associate the built-in model with its owning entity. </p>
<p class="NDLRefMemberDetailedDescription">This is effectively part of the construction of the entity in question, as a result the owning entity is not yet fully constructed. This means it is not yet valid to call most methods (for example, property and behavior related methods) on the owning entity during Initialize.</p>
<p class="NDLRefMemberDetailedDescription">It is possible that the owning entity might fail to be fully constructed even after you have successfully completed your initialization. If this happens then the entity and your built-in model may be deleted with no further method calls. As such you should avoid caching references to your built-in model implementation until the OnAdded method is invoked. Otherwise a memory leak may result if the entity fails construction.</p>
<p class="NDLRefMemberDetailedDescription">The base class version of this method must be called if the method is overridden. The return value of the <span class="NDLSystemFont">IBuiltinModel</span> implementation should be ignored (see below).</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_pOwner</span></td>
    <td>Owning entity. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_Defaults</span></td>
    <td>Default property descriptor list. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if initialization was successful, false otherwise. The default implementation will fail if there are built-in properties; override to handle setting the defaults. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_i_builtin_model_1aa742e9731e896603ebcd362968974b50"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  Dispatch(<br/>const <span class="NDLSystemFont"><a href="egf__BehaviorDescriptor.htm">BehaviorDescriptor</a></span>* i_pBehaviorToInvoke, <br/><span class="NDLSystemFont"><a href="../efd/efd__ParameterList.htm">efd::ParameterList</a></span>* i_pArgumentList)</p>
<p class="NDLRefMemberDescription">Behavior invocation for built-in model behaviors occurs through this dispatch function. </p>
<p class="NDLRefMemberDetailedDescription">If a built-in model implements any script callable behaviors, then it must override <span class="NDLSystemFont"><a href="egf__IBuiltinModel.htm#classegf_1_1_i_builtin_model_1aa742e9731e896603ebcd362968974b50">Dispatch()</a></span>. A typical override would switch on the behavior, unpack the arguments, possibly do a few lookups, and then call whatever existing API does the work.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_pBehaviorToInvoke</span></td>
    <td>Descriptor of the behavior to invoke. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_pArgumentList</span></td>
    <td>ParameterList consisting of all the arguments to this behavior. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>True if the requested behavior is valid for this built-in model. A true value does not mean the behavior itself "succeeded"; normal behavior response methods are used for the behavior to indicate its results. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_i_builtin_model_1ade87a7e4f39ad14b18666c8a2359fce8"></a>
<p class="NDLRefMemberFunction">virtual void  OnAdded()</p>
<p class="NDLRefMemberDescription">This method is called during the addition of the owning entity to the <span class="NDLSystemFont"><a href="egf__EntityManager.htm">EntityManager</a></span>. </p>
<p class="NDLRefMemberDetailedDescription">This is the first method called on the <span class="NDLSystemFont">IBuiltinModel</span> where you can be assured your owning entity has been fully constructed. As such this is the earliest opportunity where it is safe for your built-in model implementation to interact with other services.</p>
<p class="NDLRefMemberDetailedDescription">The default implementation does nothing.</p>
<p class="NDLRefMemberDetailedDescription">
<p class="NDLRefMemberDetailedDescription">If other services hold direct references to your built-in model then those references should be released in or before OnRemoved is called. </p></p>

<a name="classegf_1_1_i_builtin_model_1aca0c9bd91ffab36347c27ee1563cca68"></a>
<p class="NDLRefMemberFunction">virtual void  OnEndLifecycle(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ac109bbf377c83566102d95319120db7b">efd::UInt32</a></span> lifecycle)</p>
<p class="NDLRefMemberDescription">Called when an entity lifecycle has completed. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">lifecycle</span></td>
    <td>The lifecycle that is ending. See the <span class="NDLSystemFont"><a href="egf__Entity.htm#classegf_1_1_entity_1a6114b150bddd1462f4dc1d2fcb26afdb">Entity::LifeCycles</a></span> enum for some default lifecycle values. Other sources may define additional lifecycles. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_i_builtin_model_1a6664a05a21e27fa94206ce935a6c2583"></a>
<p class="NDLRefMemberFunction">virtual void  OnRemoved()</p>
<p class="NDLRefMemberDescription">This method is called during the removal of the owning entity from the <span class="NDLSystemFont"><a href="egf__EntityManager.htm">EntityManager</a></span>. </p>
<p class="NDLRefMemberDetailedDescription">After this method is called, you can no longer rely on accessing the owning entity (the default implementation sets the m_pOwningEntity member to NULL). Anything holding a reference to your built-in model should be asked to release those references when this method is called.</p>
<p class="NDLRefMemberDetailedDescription">The base class version of this method must be called if the method is overridden, at the end of the overriding method. The default implementation clears the owning entity, which makes the service manager unavailable. </p>

<a name="classegf_1_1_i_builtin_model_1a8e3617239274609d728dc40b6853db61"></a>
<p class="NDLRefMemberFunction">virtual void  OnOwningEntityReinitialized(<span class="NDLSystemFont"><a href="egf__Entity.htm">Entity</a></span>* i_pOwner)</p>
<p class="NDLRefMemberDescription">Reset the property described by the <span class="NDLSystemFont"><a href="egf__PropertyDescriptor.htm">PropertyDescriptor</a></span> to the default value contained within that <span class="NDLSystemFont"><a href="egf__PropertyDescriptor.htm">PropertyDescriptor</a></span>. </p>

<a name="classegf_1_1_i_builtin_model_1a8dc71f440166893538d29569357c42dc"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  ResetProperty(const <span class="NDLSystemFont"><a href="egf__PropertyDescriptor.htm">egf::PropertyDescriptor</a></span>* pDefault)</p>
<p class="NDLRefMemberDescription">Reset the property described by the <span class="NDLSystemFont"><a href="egf__PropertyDescriptor.htm">PropertyDescriptor</a></span> to the default value contained within that <span class="NDLSystemFont"><a href="egf__PropertyDescriptor.htm">PropertyDescriptor</a></span>. </p>

<a name="classegf_1_1_i_builtin_model_1abaaa03e56ac50b49e991e0f95fed37f8"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont">bool</span>  operator==(const <span class="NDLSystemFont"><a href="egf__IProperty.htm">IProperty</a></span>& other) const</p>
<p class="NDLRefMemberDescription">Equality operator. </p>
<p class="NDLRefMemberDetailedDescription">Property values should be compared, but not derived values that might be modified or set during usage. Also, the base class operator should always be checked. </p>

<a name="classegf_1_1_i_builtin_model_1ac511b0008cfd84c30b22ebe136f11bac"></a>
<p class="NDLRefMemberFunction">const <span class="NDLSystemFont"><a href="../efd/efd__ServiceManager.htm">efd::ServiceManager</a></span>*  GetServiceManager() const</p>
<p class="NDLRefMemberDescription">Helper function to retrieve the ServerManager. </p>
<p class="NDLRefMemberDetailedDescription">This method will only work between when OnAdded has been called and when OnRemoved has been called. This is the only time when it is safe for a built-in model to interact with other servers anyway since prior to OnAdded you cannot be sure your owning entity is fully created and after OnRemoved your owning entity will be destructed.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td><span class="NDLSystemFont"><a href="../efd/efd__ServiceManager.htm">efd::ServiceManager</a></span>* The ServiceManager, or NULL if the service manager is not available at this time. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

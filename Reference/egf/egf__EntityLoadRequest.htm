<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egf::EntityLoadRequest</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egf::EntityLoadRequest</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__IMessage.htm">efd::IMessage</a></span></p>


<p class="NDLRefHeaderFile">&lt;EntityLoaderMessages.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegf_1_1_entity_load_request.gif" alt="Inheritance graph for egf::EntityLoadRequest"/>
  <p class="FigureCaption">Inheritance graph for egf::EntityLoadRequest</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">Message implementation for managing a block file. </p>
<p class="NDLNormal">This message is sent to the <span class="NDLSystemFont"><a href="egf__EntityLoaderService.htm">EntityLoaderService</a></span> to either load, unload, or reload a specific block. This can be used to load or unload a block in any process, to load a block in the current process a message send can be bypassed by directly calling <span class="NDLSystemFont"><a href="egf__EntityLoaderService.htm#classegf_1_1_entity_loader_service_1abbdc13c22f833baa64db408a8aa64535">EntityLoaderService::RequestEntitySetLoad</a></span>. </p>

<a name="public_types"></a>
<p class="NDLRefHead1">Public Types</p>
<a name="classegf_1_1_entity_load_request_1a3155c5f9ff7ca9dba0192ceece19a8ba"></a>
<p class=NDLRefHead2>egf::EntityLoadRequest::Operation</p>



<p class="NDLRefMemberDetailedDescription">Operation state enum. This describes the type of operation requested. </p>

<!--(Table)=========================================================-->
<div class="ReferenceTable">
<table>
  <thead>
	<tr>
        <th>Name</th>
	    <th>Description</th>
    </tr>
  </thead>
  <tbody>  
<tr>
    <td><span class="NDLSystemFont">elo_Invalid</span></td>
    <td>An invalid operation type. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">elo_Load</span></td>
    <td>A request to load a block file. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">elo_Unload</span></td>
    <td>A request to unload an already loaded block file. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">elo_CancelLoad</span></td>
    <td>A request to cancel an in-progress load request. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">elo_Reload</span></td>
    <td>A request to reload an already loaded block in response to a rapid iteration change. </td>
</tr>

  </tbody>
</table>
</div>


<a name="public_attributes"></a>
<p class="NDLRefHead1">Public Attributes</p>


<a name="classegf_1_1_entity_load_request_1a42d8aa05f727fe510b09a1ba310806ef"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__EntityLoadRequest.htm#classegf_1_1_entity_load_request_1a3155c5f9ff7ca9dba0192ceece19a8ba">Operation</a></span>  m_op</p>
<p class="NDLRefMemberDescription">storage for Operation enum value </p>

<a name="classegf_1_1_entity_load_request_1ab547eff0c889737ef28c1837d93d7b58"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__BlockIdentification.htm">BlockIdentification</a></span>  m_blockID</p>
<p class="NDLRefMemberDescription">storage for block AssetID and instance </p>

<a name="classegf_1_1_entity_load_request_1a12627b866844962f8b3e3375ff443cc2"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="egf__BlockLoadParameters.htm">BlockLoadParameters</a></span>  m_settings</p>
<p class="NDLRefMemberDescription">storage for other parameters </p>
<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classegf_1_1_entity_load_request_1a70ff42fae9c61d0beef84e59dd327635"></a>
<p class="NDLRefMemberFunction">EntityLoadRequest()</p>
<p class="NDLRefMemberDescription">default constructor </p>

<a name="classegf_1_1_entity_load_request_1a7d88d709cedcaf94baf634e771358cce"></a>
<p class="NDLRefMemberFunction">EntityLoadRequest(<br/>const <span class="NDLSystemFont"><a href="egf__BlockIdentification.htm">BlockIdentification</a></span>& i_blockID, <br/>const <span class="NDLSystemFont"><a href="egf__BlockLoadParameters.htm">BlockLoadParameters</a></span>* i_pParameters = 0, <br/><span class="NDLSystemFont">bool</span> i_isReload = false)</p>
<p class="NDLRefMemberDescription">Constructor for load requests. </p>
<p class="NDLRefMemberDetailedDescription">Creates an <span class="NDLSystemFont"><a href="egf__EntityLoadResult.htm">EntityLoadResult</a></span> message with either the elo_Load or elo_Reload operation depending on the value of i_isReload. The <span class="NDLSystemFont"><a href="egf__BlockLoadParameters.htm">BlockLoadParameters</a></span>, if provided, are copied into the message.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_blockID</span></td>
    <td>The AssetID to load. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_pParameters</span></td>
    <td>The complete load parameters </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_isReload</span></td>
    <td>If true, perform an elo_Reload operation, otherwise use elo_load. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_load_request_1a67b53179841cdddb9288f0c90c9fff58"></a>
<p class="NDLRefMemberFunction">EntityLoadRequest(<br/><span class="NDLSystemFont"><a href="egf__EntityLoadRequest.htm#classegf_1_1_entity_load_request_1a3155c5f9ff7ca9dba0192ceece19a8ba">Operation</a></span> i_op, <br/>const <span class="NDLSystemFont"><a href="egf__BlockIdentification.htm">BlockIdentification</a></span>& i_blockID, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> i_cb, <br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1aaf9f8451f799d2c1c85c2a02f1a844bf">Context</a></span> i_ctx, <br/><span class="NDLSystemFont">bool</span> i_autoEnterWorld = BlockLoadParameters::GetDefaultAutoEnterWorld())</p>
<p class="NDLRefMemberDescription">Constructor for message based callbacks. </p>
<p class="NDLRefMemberDetailedDescription">Results in a <span class="NDLSystemFont"><a href="egf__EntityLoadResult.htm">EntityLoadResult</a></span> message based callback when this message is sent to the <span class="NDLSystemFont"><a href="egf__EntityLoaderService.htm">EntityLoaderService</a></span>.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_op</span></td>
    <td>Operation enum value. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_blockID</span></td>
    <td>The AssetID to load. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_cb</span></td>
    <td>The callback Category. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_ctx</span></td>
    <td>The message context. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_autoEnterWorld</span></td>
    <td>True if you want the entities to automatically enter the world. This will cause the entity set complete message to not be sent until after all of the OnEnterWorld behaviors have run. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_load_request_1a9aabd970367658f1261dc5d0ff1ffbb8"></a>
<p class="NDLRefMemberFunction">EntityLoadRequest(<br/><span class="NDLSystemFont"><a href="egf__EntityLoadRequest.htm#classegf_1_1_entity_load_request_1a3155c5f9ff7ca9dba0192ceece19a8ba">Operation</a></span> i_op, <br/>const <span class="NDLSystemFont"><a href="egf__BlockIdentification.htm">BlockIdentification</a></span>& i_blockID, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> i_cbEntity, <br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1a1ebd2b58de9ca508c04d80dea3644fcb">egf::BehaviorID</a></span> i_cbBehavior, <br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1aaf9f8451f799d2c1c85c2a02f1a844bf">Context</a></span> i_ctx, <br/><span class="NDLSystemFont">bool</span> i_autoEnterWorld = BlockLoadParameters::GetDefaultAutoEnterWorld())</p>
<p class="NDLRefMemberDescription">Constructor for behavior based callbacks. </p>
<p class="NDLRefMemberDetailedDescription">Results in an entity behavior based callback when this message is sent to the <span class="NDLSystemFont"><a href="egf__EntityLoaderService.htm">EntityLoaderService</a></span>.</p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">i_op</span></td>
    <td>Operation enum value. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_blockID</span></td>
    <td>The AssetID to load. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_cbEntity</span></td>
    <td>The callback entity. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_cbBehavior</span></td>
    <td>The callback behavior. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_ctx</span></td>
    <td>The message context. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">i_autoEnterWorld</span></td>
    <td>True if you want the entities to automatically enter the world. This will cause the entity set complete message to not be sent until after all of the OnEnterWorld behaviors have run. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_entity_load_request_1a0b16b805bdddb782832ffa1b5e62299b"></a>
<p class="NDLRefMemberFunction">virtual ~EntityLoadRequest()</p>
<p class="NDLRefMemberDescription">default destructor </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegf_1_1_entity_load_request_1a5df3dc3782ce10b0a96c2c8648be7dbd"></a>
<p class="NDLRefMemberFunction">virtual void  Serialize(<span class="NDLSystemFont"><a href="../efd/efd__Archive.htm">efd::Archive</a></span>& ar)</p>
<p class="NDLRefMemberDescription">convert this class into a stream of atomic types. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egf::SimDebugger</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egf::SimDebugger</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__IBase.htm">efd::IBase</a></span></p>


<p class="NDLRefHeaderFile">&lt;SimDebugger.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegf_1_1_sim_debugger.gif" alt="Inheritance graph for egf::SimDebugger"/>
  <p class="FigureCaption">Inheritance graph for egf::SimDebugger</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This singleton implements the engine-side logic of a remote simulation/entity debugger. </p>
<p class="NDLNormal">It sends events to Toolbench, which presents a visualization and means of inspecting the internals of the running simulation. Toolbench can also send requests back to the <span class="NDLSystemFont">SimDebugger</span> to alter entities.</p>
<p class="NDLNormal">This class can optionally be used as a base for game-specific extensions to the debugger. </p>

<a name="construction_and_destruction"></a>
<p class="NDLRefHead1">Construction and Destruction</p>


<a name="classegf_1_1_sim_debugger_1afdf82df994c776c4fe8e927e255e1d96"></a>
<p class="NDLRefMemberFunction">SimDebugger()</p>
<p class="NDLRefMemberDescription">default constructor. </p>

<a name="classegf_1_1_sim_debugger_1a39256138db27875ceaf1456b9f0d8640"></a>
<p class="NDLRefMemberFunction">virtual ~SimDebugger()</p>
<p class="NDLRefMemberDescription">virtual destructor allows for subclasses. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classegf_1_1_sim_debugger_1ad697df07df5664290412b43d2ae8fd9a"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">SimDebugger</span>*  Instance()</p>
<p class="NDLRefMemberDescription">Accessor method for the debugger object. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>Pointer to the debugger. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_sim_debugger_1a774d447e966f882c3cd0481e90f27761"></a>
<p class="NDLRefMemberFunction">static void  SetInstance(<span class="NDLSystemFont">SimDebugger</span>* pInstance)</p>
<p class="NDLRefMemberDescription">Establishes the singleton instance of the debugger. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pInstance</span></td>
    <td>The <span class="NDLSystemFont">SimDebugger</span> instance. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_sim_debugger_1acbe2dd64888ba51c03dfc11605001dfc"></a>
<p class="NDLRefMemberFunction">static void  Release()</p>
<p class="NDLRefMemberDescription">Frees the singleton debugger object. </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegf_1_1_sim_debugger_1a0915126b3eafa0e3afce878317725872"></a>
<p class="NDLRefMemberFunction">virtual void  Initialize(<span class="NDLSystemFont"><a href="../efd/efd__ServiceManager.htm">efd::ServiceManager</a></span>* pServiceMgr)</p>
<p class="NDLRefMemberDescription">Initialization routine to setup debugger messaging with Toolbench. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pServiceMgr</span></td>
    <td>The ServiceManager for this process. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_sim_debugger_1a0ff51971f2b6c874217788b5bfcb01bd"></a>
<p class="NDLRefMemberFunction">virtual void  StartSession()</p>
<p class="NDLRefMemberDescription">Begins synchronizing state with the Toolbench Sim Debugger. </p>

<a name="classegf_1_1_sim_debugger_1a4056ef6d71a046f3d33549c62b80d2a0"></a>
<p class="NDLRefMemberFunction">virtual void  StartTrackingEntity(const <span class="NDLSystemFont"><a href="egf__Entity.htm">egf::Entity</a></span>* pEntity)</p>
<p class="NDLRefMemberDescription">Informs Toolbench about an entity in the world and tracks it for ongoing property updates. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pEntity</span></td>
    <td>The entity to monitor. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_sim_debugger_1a614e9c3abc886605e151ece958c43cd4"></a>
<p class="NDLRefMemberFunction">virtual void  StopTrackingEntity(const <span class="NDLSystemFont"><a href="egf__Entity.htm">egf::Entity</a></span>* pEntity)</p>
<p class="NDLRefMemberDescription">Informs Toolbench that an entity has been removed from the world and unregisters for updates. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pEntity</span></td>
    <td>The entity to stop monitoring. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_sim_debugger_1a68264ec28d46e4b410cfd5986b9a3ddc"></a>
<p class="NDLRefMemberFunction">virtual void  SendPropertyUpdate(<br/><span class="NDLSystemFont"><a href="egf__Entity.htm">egf::Entity</a></span>* pEntity, <br/><span class="NDLSystemFont"><a href="../Namespaces/egf.htm#namespaceegf_1af08acbbc1a28c9e4ee8dfb501449dc28">egf::PropertyID</a></span> propID, <br/>const <span class="NDLSystemFont"><a href="egf__IProperty.htm">egf::IProperty</a></span>* pProperty)</p>
<p class="NDLRefMemberDescription">Informs Toolbench of an entity property change. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pEntity</span></td>
    <td>The entity with the property change. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">propID</span></td>
    <td>The ID of the changed property. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">pProperty</span></td>
    <td>The changed property. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_sim_debugger_1a79106c9b4a92fc1aea5e910846a6c6bd"></a>
<p class="NDLRefMemberFunction">virtual void  OnTick()</p>
<p class="NDLRefMemberDescription">Periodically inspects registered entities and sends property updates to Toolbench. </p>

<a name="classegf_1_1_sim_debugger_1a7188003c8a7ed04c31093b095a5f29df"></a>
<p class="NDLRefMemberFunction">virtual void  Shutdown()</p>
<p class="NDLRefMemberDescription">Shuts the debugger down, including messaging. </p>

<a name="classegf_1_1_sim_debugger_1a0f3819779adc7ae1cae34411e68e6529"></a>
<p class="NDLRefMemberFunction">virtual void  HandleSimDebuggerCommand(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__StreamMessage.htm">efd::StreamMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">Handle incoming commands from Toolbench. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The message delivered from the MessageService. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">targetChannel</span></td>
    <td>The category the message was delivered to. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_sim_debugger_1a7b65a9fa0a36190ffd703d7749b0bff9"></a>
<p class="NDLRefMemberFunction">void  SendEvent(<span class="NDLSystemFont"><a href="egf__DebugNoteBase.htm">egf::DebugNoteBase</a></span>* pMessage)</p>
<p class="NDLRefMemberDescription">Sends a simulation event notification to Toolbench for recording and visualization. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The event message to send. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_sim_debugger_1a48f8617f3611de439aac5612c5618683"></a>
<p class="NDLRefMemberFunction">void  SendEvent(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& eventName, <br/><span class="NDLSystemFont"><a href="egf__EntityID.htm">egf::EntityID</a></span> gameID = egf::kENTITY_INVALID)</p>
<p class="NDLRefMemberDescription">Sends a simulation event notification to Toolbench for recording and visualization. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">eventName</span></td>
    <td>The name of the event to send. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">gameID</span></td>
    <td>The ID of an entity associated with the event. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegf_1_1_sim_debugger_1ac2ac345a5593e4104a424e4dce204cbb"></a>
<p class="NDLRefMemberFunction">void  SendEvent(<br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& eventName, <br/>const <span class="NDLSystemFont"><a href="../efd/efd__utf8string.htm">efd::utf8string</a></span>& params, <br/><span class="NDLSystemFont"><a href="egf__EntityID.htm">egf::EntityID</a></span> gameID = egf::kENTITY_INVALID)</p>
<p class="NDLRefMemberDescription">Sends a simulation event notification to Toolbench for recording and visualization. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">eventName</span></td>
    <td>The name of the event to send. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">params</span></td>
    <td>A string containing additional information about the event. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">gameID</span></td>
    <td>The ID of an entity associated with the event. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

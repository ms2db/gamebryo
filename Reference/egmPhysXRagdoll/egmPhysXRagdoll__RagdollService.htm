<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egmPhysXRagdoll::RagdollService</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egmPhysXRagdoll::RagdollService</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../efd/efd__ISystemService.htm">efd::ISystemService</a></span></p>


<p class="NDLRefHeaderFile">&lt;RagdollService.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegm_phys_x_ragdoll_1_1_ragdoll_service.gif" alt="Inheritance graph for egmPhysXRagdoll::RagdollService"/>
  <p class="FigureCaption">Inheritance graph for egmPhysXRagdoll::RagdollService</p>
</div>
</p>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegm_phys_x_ragdoll_1_1_ragdoll_service_1ac3162f4f0495737dc00e7018cbe88591"></a>
<p class="NDLRefMemberFunction">RagdollService()</p>
<p class="NDLRefMemberFunction"></p>

<a name="classegm_phys_x_ragdoll_1_1_ragdoll_service_1a1962da0b6622cd360080265fd4e14e38"></a>
<p class="NDLRefMemberFunction">virtual ~RagdollService()</p>
<p class="NDLRefMemberFunction"></p>

<a name="classegm_phys_x_ragdoll_1_1_ragdoll_service_1a7338d86c9a7218c418a4caaf4dc0c66e"></a>
<p class="NDLRefMemberFunction">virtual const char*  GetDisplayName() const</p>
<p class="NDLRefMemberDescription">Return the name of the service, in this case "RagdollService". </p>

<a name="classegm_phys_x_ragdoll_1_1_ragdoll_service_1a5b805962f057d0012e08915bbd53ca27"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a62e4d1bc94248c629612480b748bfd0e">efd::SyncResult</a></span>  OnPreInit(<span class="NDLSystemFont"><a href="../efd/efd__IDependencyRegistrar.htm">efd::IDependencyRegistrar</a></span>* pDependencyRegistrar)</p>
<p class="NDLRefMemberDescription">This method does nothing. </p>

<a name="classegm_phys_x_ragdoll_1_1_ragdoll_service_1a4a985ae3f758edb48082a6d64d4bf3e5"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ad81d366c75ea1e1119513a730f79910d">efd::AsyncResult</a></span>  OnInit()</p>
<p class="NDLRefMemberDescription">OnInit caches pointers to other services and subscribes to messages. </p>

<a name="classegm_phys_x_ragdoll_1_1_ragdoll_service_1a6e5817741b4cf635be1250791ad4c2e1"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ad81d366c75ea1e1119513a730f79910d">efd::AsyncResult</a></span>  OnTick()</p>
<p class="NDLRefMemberDescription">OnTick applies any changes that have been buffered since the last tick. </p>
<p class="NDLRefMemberDetailedDescription">Most PhysX-related calls cannot be made during simulation, so changes are buffered when the service first learns of them, and then applied here, when simulation is presumed to be inactive. </p>

<a name="classegm_phys_x_ragdoll_1_1_ragdoll_service_1a7c8e6b2bce30f659b8443f14f2cd6cd3"></a>
<p class="NDLRefMemberFunction">virtual <span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1ad81d366c75ea1e1119513a730f79910d">efd::AsyncResult</a></span>  OnShutdown()</p>
<p class="NDLRefMemberDescription">Unsubsccribe to messages and delete any pending data. </p>

<a name="classegm_phys_x_ragdoll_1_1_ragdoll_service_1a08dcf9a38fbadc02010812508cc46939"></a>
<p class="NDLRefMemberFunction">void  HandleEntityUpdatedMessage(<br/>const <span class="NDLSystemFont"><a href="../egf/egf__EntityChangeMessage.htm">egf::EntityChangeMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">This message handler is called when an entity has been updated in the scheduler. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pMessage</span></td>
    <td>The entity message. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">targetChannel</span></td>
    <td>Channel the message was sent on. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_phys_x_ragdoll_1_1_ragdoll_service_1a47034a56a503df82244356fbafbabe8c"></a>
<p class="NDLRefMemberFunction">void  HandleActorAddedMessage(<br/>const <span class="NDLSystemFont"><a href="../egmAnimation/egmAnimation__ActorAddedMessage.htm">egmAnimation::ActorAddedMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">If the new actor is a physical actor (mixes in PhysXRagdoll), get the list of sequences that must be tagged and store them on an <span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXSequenceManager.htm">NiPhysXSequenceManager</a></span>. </p>
<p class="NDLRefMemberDetailedDescription">Since all needed information is available during ActorAdded events, we don't have to do anything during Entity Discovery. </p>

<a name="classegm_phys_x_ragdoll_1_1_ragdoll_service_1a359af071282824e6384b25902442788a"></a>
<p class="NDLRefMemberFunction">void  HandleActorRemovedMessage(<br/>const <span class="NDLSystemFont"><a href="../egmAnimation/egmAnimation__ActorRemovedMessage.htm">egmAnimation::ActorRemovedMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">Remove any data associated with the actor that is being removed. </p>

<a name="classegm_phys_x_ragdoll_1_1_ragdoll_service_1a8f67b46dadafc41233d17a7a09e5b415"></a>
<p class="NDLRefMemberFunction">void  HandlePropAddedMessage(<br/>const <span class="NDLSystemFont"><a href="../ecrPhysX/ecrPhysX__PhysXPropMessage.htm">ecrPhysX::PhysXPropMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">Process any ragdoll that is waiting on the prop that has been added. </p>

<a name="classegm_phys_x_ragdoll_1_1_ragdoll_service_1a4f3b146f7cf20016125e2ab61fbc4f2a"></a>
<p class="NDLRefMemberFunction">void  HandlePropRemovingMessage(<br/>const <span class="NDLSystemFont"><a href="../ecrPhysX/ecrPhysX__PhysXPropMessage.htm">ecrPhysX::PhysXPropMessage</a></span>* pMessage, <br/><span class="NDLSystemFont"><a href="../efd/efd__Category.htm">efd::Category</a></span> targetChannel)</p>
<p class="NDLRefMemberDescription">Revert the physical sequences of any ragdoll associated with the prop. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

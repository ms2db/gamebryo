<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Command Line Parameters</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Command Line Parameters</h1>

<p>The <span class="NDLSystemFont">NiApplication</span> class has
a member that is an instance of the class <span class=
"NDLSystemFont">NiCommand</span>. <span class=
"NDLSystemFont">NiCommand</span> handles command-line parameters.
A typical command line (<span class="NDLSystemFont">UNIX</span>
style) involves a list of options, each option starting with a
dash "-" and having a name of one or more characters and
(usually) an argument for that option. An option may be Boolean,
in the sense that it indicates a state simply by being present on
the command line. Such options do not have an argument.</p>

<p>For platforms that do not directly support command-line
parameters, an alternate method of specifying command-line
parameters is provided. If the command line contains no
command-line parameter characters (including extra white space
after the executable name), a file in the directory of the
application named "<span class=
"NDLSystemFont">cmdline</span>.<span class=
"NDLSystemFont">txt</span>" will be opened, and the first line of
that file will be used as the command line.</p>

<p>The following <span class="NDLSystemFont">NiApplication</span>
function provides access to the command line:</p>

<p><span class="NDLSystemFont">static NiCommand*
GetCommand();</span></p>

<p>Options with numerical arguments may require upper and/or
lower bounds on the command line. The bounds are set by the
methods <span class=
"NDLSystemFont">NiCommand::</span><span class="NDLSystemFont">Min</span>
(input must be larger than or equal to min), <span class=
"NDLSystemFont">NiCommand::</span><span class=
"NDLSystemFont">Max</span> (input must be less than or equal to
max), <span class="NDLSystemFont">NiCommand::</span><span class=
"NDLSystemFont">Inf</span> (input must be larger than inf), and
<span class="NDLSystemFont">NiCommand::</span><span class=
"NDLSystemFont">Sup</span> (input must be less than sup). After
an argument is read and compared to any supplied bounds, the
bounds are reset so that the next processed argument is
unaffected. Thus, the scope of the bounds calls is the processing
of a single argument. The supported types of arguments are:
<span class="NDLSystemFont">Boolean</span>, <span class=
"NDLSystemFont">integer</span>, <span class=
"NDLSystemFont">float</span>, <span class=
"NDLSystemFont">double</span>, and <span class=
"NDLSystemFont">string</span>.</p>

<p>Filename support is for a list of files that occurs after all
options and arguments have been specified. The method
<span class="NDLSystemFont">ExcessArguments</span> allows the
application to check if any arguments have not been processed.
This situation may occur because some arguments are ignored,
forgotten, or incorrect. The <span class=
"NDLSystemFont">NiCommand</span> class also provides a
<span class="NDLSystemFont">GetLastError</span> method to check
if an error occurred while processing an option, argument, or
filename.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiFrameRate</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<p class="NDLRefHeadClassTitle">NiFrameRate</p>

<p class="NDLRefParentage">: public <a href="../../Reference/NiSystem/NiMemObject.htm"><span>NiMemObject</span></a></p>

<p class="NDLRefHeaderFile">&lt;NiFrameRate.h&gt;</p>

<p class="NDLRefHead1">Description</p>

<p>A platform-independent frame rate counter and display. 
 </p>

<p class="NDLRefHead1">Constructors</p>

<p class="NDLRefMemberFunction">NiFrameRate()<span class="NDLSystemFont">&nbsp;</span></p>

<p class="NDLRefMemberDescription">Default constructor. Constructs a frame 
 rate class.</p>

<p class="NDLRefHead1">Supported Member Functions</p>

<p class="NDLRefMemberFunction">void Init(bool bDisplayFrameRate, unsigned 
 int iHistoSize = 0, const <a HREF="../../Reference/NiMain/NiRenderTargetGroup.htm">NiRenderTargetGroup</a>* 
 pkTarget = NULL)</p>

<p class="NDLRefMemberDescription">Initializes the frame rate counter. If 
 a camera has already been defined and <span class="NDLSystemFont">bDisplayFrameRate 
 </span>is true, the frame rate counter will be applied to the camera. 
 The parameter <span class="NDLSystemFont">iHistoSize</span> 
 is deprecated and should not be used. The <span class="NDLSystemFont"><a 
 href="../../Reference/NiMain/NiRenderTargetGroup.htm">NiRenderTargetGroup</a></span> 
 <span class="NDLSystemFont">pkTarget</span> is the buffer that the screen 
 space pixels specified in <span class="NDLSystemFont">kRect</span> refer 
 to, and it is the surface that the <span class="NDLSystemFont">NiFrameRate</span> 
 will be displayed on. If <span class="NDLSystemFont">pkTarget</span> is 
 NULL, then the default render target will be used.</p>

<p class="NDLRefMemberFunction">void Shutdown()</p>

<p class="NDLRefMemberDescription">Closes the frame rate counter and removes 
 the screen texture for the display from the camera.</p>

<p class="NDLRefMemberFunction">void SetLocation(float fX, float fY)</p>

<p class="NDLRefMemberFunction">void GetLocation(float&amp; fX, float&amp; 
 fY)</p>

<p class="NDLRefMemberDescription">Gets and sets the pixel location of the 
 upper left corner of the highest order digit of the frame rate counter 
 on the display viewport.</p>

<p class="NDLRefMemberFunction">void SetDigitSpacing(unsigned short usSpacing)</p>

<p class="NDLRefMemberFunction">unsigned short GetDigitSpacing()</p>

<p class="NDLRefMemberDescription">Gets and sets the spacing between individual 
 characters of the frame rate display in pixels. Default spacing is 3 pixels.</p>

<p class="NDLRefMemberFunction">const <a HREF="../../Reference/NiMain/NiColor.htm">NiColor</a>&amp; 
 GetColor() const</p>

<p class="NDLRefMemberFunction">void SetColor(const <a HREF="../../Reference/NiMain/NiColor.htm">NiColor</a>&amp; 
 kColor)</p>

<p class="NDLRefMemberDescription">Gets and sets the material color of the 
 individual digits of the frame rate counter.</p>

<p class="NDLRefMemberFunction">float GetAlpha() const</p>

<p class="NDLRefMemberFunction">void SetAlpha(float fAlpha)</p>

<p class="NDLRefMemberDescription">Gets and sets the material alpha of the 
 individual digits of the frame rate counter.</p>

<p class="NDLRefMemberFunction">void TakeSample()</p>

<p class="NDLRefMemberDescription">Collects information about the current 
 frame and calculates necessary statistics.</p>

<p class="NDLRefMemberFunction">void GetStats(float&amp; fAvg, float&amp; 
 fStdDev, float&amp; fMin, <br>
float&amp; fMax, unsigned int* piHisto = 0)</p>

<p class="NDLRefMemberDescription">Returns the average, standard deviation, 
 minimum, and maximum of the frame rate by reference.</p>

<p class="NDLRefMemberFunction"><a HREF="../../Reference/NiMesh/NiMeshScreenElements.htm">NiMeshScreenElementsPtr</a> 
 GetElements() const</p>

<p class="NDLRefMemberDescription">Returns a pointer to the screen-space 
 geometry object that represents the visible frame rate readout. This object 
 can be rendered directly by the application as an overlay.</p>

<p class="NDLRefMemberFunction">void Update()</p>

<p class="NDLRefMemberDescription">Updates the frame rate display to reflect 
 the changes processed from <span class="NDLSystemFont">TakeSample</span>. 
 This method must be called in addition to <span class="NDLSystemFont">TakeSample</span> 
 in order to be effective and accurate.</p>

<p class="NDLRefMemberFunction">unsigned int GetFrameRate() const</p>

<p class="NDLRefMemberDescription">Returns the current frame rate in frames 
 per second.</p>

<p class="NDLRefMemberFunction">const <a HREF="../../Reference/NiMain/NiRenderTargetGroup.htm">NiRenderTargetGroup</a>* 
 GetRenderTargetGroup() const</p>

<p class="NDLRefMemberFunction">void SetRenderTargetGroup(const <a HREF="../../Reference/NiMain/NiRenderTargetGroup.htm">NiRenderTargetGroup</a>* 
 pkGroup)</p>

<p class="NDLRefMemberDescription">Gets and sets the render target group 
 associated with this <span class="NDLSystemFont">NiFrameRate</span> object.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Usage of NiApplication in Gamebryo</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Usage of NiApplication in Gamebryo</h1>

<p>Most of the Gamebryo samples (found in <span class="NDLSystemFont"><em>%EMERGENT_PATH%</em>\Samples</span>) are built on <span class="NDLSystemFont">NiApplication</span>, however the <span class="NDLSystemFont"><a HREF="../../Learn/Demos/Overview_!SimpleApp.htm">SimpleApp</a></span> shows how to create a Gamebryo application without using <span class="NDLSystemFont">NiApplication</span>. Consequently, each platform has its own version of the source file <span class="NDLSystemFont">SimpleApp.cpp</span>, and each version of <span class="NDLSystemFont">SimpleApp.cpp</span> handles tasks, such as renderer creation and input system creation, that are normally handled by <span class="NDLSystemFont">NiApplication</span>.</p>

<p>An application that uses <span class="NDLSystemFont">NiApplication</span> 
 must explicitly link the <span class="NDLSystemFont">NiMain</span> and <span class="NDLSystemFont">NiSystem</span> libraries, 
 as well as any other Gamebryo libraries it uses.</p>

<p>On Win32, renderer libraries are automatically linked in via <span class="NDLSystemFont">#pragma comment</span> compiler directives. 
The libraries that are linked in are controlled by preprocessor macros. The macros are:</p>

<table>
    <thead>
        <tr>
            <th>Macro</th>
            <th>Renderer library enabled</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td><span class="NDLSystemFont">EE_NIAPP_USE_DX9_RENDERER</span></td>
            <td>DX9 renderer</td>
        </tr>
        <tr>
            <td><span class="NDLSystemFont">EE_NIAPP_USE_D3D10_RENDERER</span></td>
            <td>D3D10 Renderer</td>
        </tr>
        <tr>
            <td><span class="NDLSystemFont">EE_NIAPP_USE_D3D11_RENDERER</span></td>
            <td>D3D11 Renderer</td>
        </tr>
    </tbody>
</table> 

<p>By default, Gamebryo LightSpeed applications define all of these macros in the 
<span class="NDLSystemFont">GB_Target_StaticLinkedExecutable.vsprops</span> and 
<span class="NDLSystemFont">GB_Target_DynamicLinkedExecutable.vsprops</span> property sheets. 
Applications will need to define these macros themselves if they do not use these property sheets 
and they wish to have the renderers automatically linked in.</p>

<p>Not all D3D renderers are required to be linked into an application , so if an application only needs to use 
a subset of these renderers, it can simply undefine the macros for the renderers it does not need before 
including <span class="NDLSystemFont">NiApplication.h</span>.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>NiTerrainPhysXUtils</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">NiTerrainPhysXUtils</p>
<p class="NDLRefParentage">: public <span class="NDLSystemFont"><a href="../NiMain/NiRefObject.htm">NiRefObject</a></span></p>


<p class="NDLRefHeaderFile">&lt;NiTerrainPhysXUtils.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/class_ni_terrain_phys_x_utils.gif" alt="Inheritance graph for NiTerrainPhysXUtils"/>
  <p class="FigureCaption">Inheritance graph for NiTerrainPhysXUtils</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">PhysX Utility class that manages the creation, loading and saving of terrain PhysX data. </p>

<a name="public_static_attributes"></a>
<p class="NDLRefHead1">Public Static Attributes</p>


<a name="class_ni_terrain_phys_x_utils_1a472bdecaa7bd16d2cd725a50ef2c306c"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>  ms_kStaticFriction</p>
<p class="NDLRefMemberDescription">Static variables holding the names of the meta data to be used for creation of NxMaterial. </p>
<p class="NDLRefMemberDetailedDescription">Name of the Static friction meta-data (NX_STATICFRICTION) </p>

<a name="class_ni_terrain_phys_x_utils_1ab5f79627c0f6291750a40a5667ad80aa"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>  ms_kDynamicFriction</p>
<p class="NDLRefMemberDescription">Name of the dynamic friction meta-data (NX_DYNAMICFRICTION). </p>

<a name="class_ni_terrain_phys_x_utils_1a4ae11a957421701e08ce903ea21f34c1"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont"><a href="../NiMain/NiFixedString.htm">NiFixedString</a></span>  ms_kRestitution</p>
<p class="NDLRefMemberDescription">Name of the restitution meta-data (NX_RESTITUTION). </p>
<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="class_ni_terrain_phys_x_utils_1a7e9380b7957c15a7e067800a5debfa06"></a>
<p class="NDLRefMemberFunction">void  SetActorDesc(NxActorDesc kActorDesc)</p>
<p class="NDLRefMemberDescription">Sets the actor description. </p>

<a name="class_ni_terrain_phys_x_utils_1af6747a99d7e1feb1a00378735dda049f"></a>
<p class="NDLRefMemberFunction">void  SetPhysXScene(<span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXScene.htm">NiPhysXScene</a></span>* pkScene)</p>
<p class="NDLRefMemberDescription">Sets the physX scene the terrain depends on. </p>
<p class="NDLRefMemberDetailedDescription">WARNING: If a scene already exists, the terrain will need to be reloaded </p>

<a name="class_ni_terrain_phys_x_utils_1af113c03a5a1e7848ffc086b64990497a"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  LoadPhysXData(<br/><span class="NDLSystemFont"><a href="../NiTerrain/NiTerrainSector.htm">NiTerrainSector</a></span>* pkSector, <br/><span class="NDLSystemFont"><a href="../NiTerrain/NiTerrainSectorFile.htm">NiTerrainSectorFile</a></span>* pkFile)</p>
<p class="NDLRefMemberDescription">PhysX loading function. </p>

<a name="class_ni_terrain_phys_x_utils_1abff82247d0c4e3fa28b789b9bd5b2917"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  CreatePhysXActors(<br/><span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXScene.htm">NiPhysXScene</a></span>* pkScene, <br/><span class="NDLSystemFont"><a href="../NiTerrain/NiTerrainSector.htm">NiTerrainSector</a></span>* pkSector)</p>
<p class="NDLRefMemberDescription">Function that creates the required NxActors. </p>
<p class="NDLRefMemberDetailedDescription">This should be called in a thread safe position </p>

<a name="class_ni_terrain_phys_x_utils_1a737322c969aa06a823bbd9ba8958dc38"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  CreatePhysXMaterials(<span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXScene.htm">NiPhysXScene</a></span>* pkScene)</p>
<p class="NDLRefMemberDescription">Function that creates the required NxMaterials. </p>
<p class="NDLRefMemberDetailedDescription">This should be called in a thread safe position. </p>

<a name="class_ni_terrain_phys_x_utils_1a524b1ff10bf26002f33585c347dac122"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  UnloadPhysXData(<span class="NDLSystemFont"><a href="../NiTerrain/NiTerrainSector.htm">NiTerrainSector</a></span>* pkSector)</p>
<p class="NDLRefMemberDescription">PhysX unloading function. </p>

<a name="class_ni_terrain_phys_x_utils_1a49f05239104ba7b7ac236a5d71dac590"></a>
<p class="NDLRefMemberFunction">void  RemoveAllActors(<span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXScene.htm">NiPhysXScene</a></span>* m_pkScene)</p>
<p class="NDLRefMemberDescription">Removes all created NxActors from the scene and the list of actors. </p>
<p class="NDLRefMemberDetailedDescription">The used NxMaterial are also reset to the default material so that they can be reused. This function should only be called when an entire terrain is being removed. </p>

<a name="class_ni_terrain_phys_x_utils_1aa17357b64d5c5a1bb5cf90565b58c90c"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  DeletePhysXData(<span class="NDLSystemFont"><a href="../NiPhysX/NiPhysXScene.htm">NiPhysXScene</a></span>* pkScene)</p>
<p class="NDLRefMemberDescription">Deletes all actors waiting for release from the scene. </p>
<p class="NDLRefMemberDetailedDescription">This does not release materials as the terrain might still have loaded sectors that used those materials. </p>

<a name="class_ni_terrain_phys_x_utils_1a40b08ec876ecc6bc447feb695d802069"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  IsPhysXDataCreationPending()</p>
<p class="NDLRefMemberDescription">Returns true if data is present in the temporary maps. </p>

<a name="class_ni_terrain_phys_x_utils_1a48a4a1cbc0ded00966673fd3b83d5a52"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont">bool</span>  HasPhysXActors()</p>
<p class="NDLRefMemberDescription">Returns true if physx actors for this object are still held by the scene. </p>

<a name="class_ni_terrain_phys_x_utils_1a54c04d8e017c029631b4ee342eb5fc3b"></a>
<p class="NDLRefMemberFunction"><span class="NDLSystemFont"><a href="../efd/efd__list.htm">efd::list</a></span>&lt;NxActor*&gt;  GetPhysXTerrainActors()</p>
<p class="NDLRefMemberDescription">Returns a list of NxActor created for all the sectors available with this terrain. </p>
<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="class_ni_terrain_phys_x_utils_1a449fafbca5b269d820f51a39a813dfc3"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">bool</span>  SavePhysXData(<br/><span class="NDLSystemFont"><a href="../NiTerrain/NiTerrainSector.htm">NiTerrainSector</a></span>* pkSector, <br/><span class="NDLSystemFont"><a href="../NiTerrain/NiTerrainSectorFile.htm">NiTerrainSectorFile</a></span>* pkFile)</p>
<p class="NDLRefMemberDescription">PhysX saving function. </p>
<a name="constructor_/_destructor"></a>
<p class="NDLRefHead1">Constructor / Destructor</p>


<a name="class_ni_terrain_phys_x_utils_1ab92eb79cf06fb6e93b4a9fd3931ab565"></a>
<p class="NDLRefMemberFunction">NiTerrainPhysXUtils()</p>
<p class="NDLRefMemberDescription">Default constructor. </p>

<a name="class_ni_terrain_phys_x_utils_1a66f0af7583309b524235f78672bbf9f7"></a>
<p class="NDLRefMemberFunction">NiTerrainPhysXUtils(<span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a2ed07576a2c351e88e18847f247b5705">efd::UInt16</a></span> usStartMatIndex)</p>
<p class="NDLRefMemberDescription">Constructor using a given start index for the creation of NxMaterial. </p>

<a name="class_ni_terrain_phys_x_utils_1a913ead5355c003a0fb83f4428c432e01"></a>
<p class="NDLRefMemberFunction">NiTerrainPhysXUtils(<br/><span class="NDLSystemFont"><a href="../Namespaces/efd.htm#namespaceefd_1a2ed07576a2c351e88e18847f247b5705">efd::UInt16</a></span> usStartMatIndex, <br/>NxActorDesc kBaseDesc)</p>
<p class="NDLRefMemberDescription">Constructor using a given start index for the creation of NxMaterial and a custom NxActorDesc. </p>

<a name="class_ni_terrain_phys_x_utils_1ac5344f3805c0a086cecd774c4db766df"></a>
<p class="NDLRefMemberFunction">~NiTerrainPhysXUtils()</p>
<p class="NDLRefMemberDescription">Destructor. </p>
 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

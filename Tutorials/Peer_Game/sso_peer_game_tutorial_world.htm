<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Peer Game: Populating Your World</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="FSO" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
<!--(Begin Links)===================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Peer Game: Populating Your World</h1>

<p>You have updated your project to add online functionality to many of the models used in Base
    Game. You now need to make a modification to the Block file to specify how entities are to be
    distributed across Host and Peer instances of the game.</p>

<h2>Tutorial at-a-Glance</h2>

<ol>
    <li><a href="sso_peer_game_tutorial_overview.htm">Tutorial Overview</a></li>
    <li><a href="sso_peer_game_tutorial_transform_bg.htm">Transforming Base Game</a></li>
    <li><a href="sso_peer_game_tutorial_more_services.htm">Extending Entities for
        Online</a></li>
    <li><b>Populating Your World&nbsp;&nbsp;&lt;&#45;&#45; You are here</b></li>
    <li><a href="sso_peer_game_tutorial_code.htm">C++ Code Changes</a></li>
    <li><a href="sso_peer_game_tutorial_loading.htm">Starting the Application</a></li>
    <li><a href="sso_peer_game_tutorial_scripts.htm">Fixing Lua Scripts</a></li>
</ol>

<h2>Specifying Host-only Entities</h2>

<p>In Peer Game, one process is designated to be the host process. We want the host process to be
    the only process that creates the various dynamic entities. All of the static unchanging
    entities can simply be loaded directly by each game client to avoid the need to replicate data
    about these entities over the network. To accomplish this, we want to export different portions
    of our block into a separate <span class="NDLSystemFont">.xblock</span> file. Then we can load
    the xblock that contains static entities in every process, but only load the xblock with
    dynamic entities on the host. World Builder supports this by using layers; a single block file
    can be made to export into multiple xblock files. We will move all host-only entities into a
    separate layer and instruct this layer to export into a separate <span
    class="NDLSystemFont">.xblock</span> file. First, open the <span class="NDLGUILabel">Layer
    Editor</span> panel. You should see a single layer named PeerGame. Right-click the existing
    layer and select <span class="NDLGUILabel">New Empty Layer</span> from the context menu. Name
    the new layer "PeerGame_HostOnly":</p>

<div class="FigureContainer">
    <img src="./images/sso_create_new_layer.png"
        alt="Create new layer menu option (18K)" />
</div>

<p>The new layer will display as a sub folder of the original layer. By default layers do not
    export into their own xblock files so you must check the <span class="NDLGUILabel">Generates
    own xblock</span> option at the bottom of the <span class="NDLGUILabel">Layer Editor</span>
    panel:</p>

<div class="FigureContainer">
    <img src="./images/sso_generate_own_xblock.png"
        alt="Generates own xblock checkbox (4K)" />
</div>

<p>Now any entities that are placed into this layer will be exported into a separate xblock file
    which will be named after the layer name. For this to work you must move all the dynamic
    entities into this layer. Fortunately, this is not too difficult to do, using the 
    <span class="NDLGUILabel">Entity View</span> to multi-select all of the entities.</p>

<p>We will select all of these models by using the <span class="NDLGUILabel">Entity View</span> panel
    with entities grouped by model name. These are the groups to select:</p>
    <ul>
    <li>BgAIJack</li>
    <li>BgBox</li>
    <li>BgBox2</li>
    <li>BgDoor</li>
    <li>BgNoSign</li>
    <li>BgTriggerRing</li>
    <li>BgWaypoint</li>
    <li>ResetPosition</li>
    <li>RoomFourCeiling</li>
    <li>RoomFourLargeCeiling</li>
    </ul>
    
<p>Once the entities are selected, right-click on the
    PeerGame_HostOnly layer and select <span class="NDLGUILabel">Add Selection to Layer</span>:</p>

<div class="FigureContainer">
    <a href="./images/sso_add_selection_to_layer.png">
    <img src="images/sso_add_selection_to_layer_detail.png"
        alt="Add selection to layer menu option (21K)" border="0" /></a>
</div>

<p>Now simply save the block and it will generate two separate xblock files. Any entity placed into
    the host-only layer will only be created by the host process.</p>

<h2>Moving on...</h2>

<p>You've refined the entities in your world. Next, we will take a look at the C++ code changes that
    are necessary to add online functionality to an application. See <a href="sso_peer_game_tutorial_code.htm">
    C++ Code Changes</a>.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="../../Tools/WorldBuilder/wb_block_layer_intro.htm">Working with Blocks and
        Layers</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

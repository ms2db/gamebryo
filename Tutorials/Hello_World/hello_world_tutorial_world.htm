<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Hello World: Populating Your World</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Hello World: Populating Your World</h1>

<p><em>World Builder</em> is the level design tool for the Entity System and Game Framework in
Gamebryo LightSpeed. In this section of the tutorial, you will use World Builder to populate your
world with entities that are based on the models that you created in the Entity Modeling Tool. You
will also use World Builder to override entity properties as they're placed in the world, allowing
you to set per-instance properties on individual Entities.</p>

<h2>Tutorial at-a-Glance</h2>

<ol>
    <li><a href="hello_world_tutorial_overview.htm">Tutorial Overview</a></li>

    <li><a href="hello_world_tutorial_new_emt_project.htm">Creating a New Toolbench Game
    Solution</a></li>

    <li><a href="hello_world_tutorial_models.htm">Creating New Models</a></li>

    <li><b>Populating Your World&nbsp;&nbsp;&lt;-- You are here</b></li>

    <li><a href="hello_world_tutorial_project.htm">Setting Up Your C++ Project</a></li>

    <li><a href="hello_world_tutorial_services.htm">Creating main.cpp and Adding Services</a></li>

    <li><a href="hello_world_tutorial_loading.htm">Loading Your World and Starting the
    Application</a></li>

    <li><a href="hello_world_tutorial_more_services.htm">Adding More Game Framework
    Services</a></li>
</ol>

<h2>Populating Your World</h2>

<p>When you first created your game solution, the Game Solution Wizard created an empty world file
called HelloWorld.block. Locate this file in the Game Solution browser and double-click it to open
it in World Builder.</p>

<div class="FigureContainer">
    <img src="images/hello_world_tutorial_empty_world.png" width="678" height="431" alt=
    "Opening the empty HelloWorld.block file (53K)">

    <p class="FigureCaption">Opening the empty HelloWorld.block file</p>
</div>

<h2>World Builder Panels</h2>

<p>Here's a quick look at the World Builder UI to help get your oriented. On the left side, below
the Game Solution browser, you'll notice a tabbed panel. The tabs, from left to right, are:</p>

<table>
    <thead>
        <tr>
            <th>Tab name</th>

            <th>Description</th>
        </tr>
    </thead>

    <tr>
        <td>Game Solution (<img src="images/hello_world_tutorial_game_icon.png" width="16" height=
        "16" alt="hello_world_tutorial_game_icon (1K)">)</td>

        <td>Lists the game solution files</td>
    </tr>

    <tr>
        <td>Palette View (<img src="images/hello_world_tutorial_palette_icon.png" width="16"
        height="12" alt="hello_world_tutorial_palette_icon (1K)">)</td>

        <td>Lists models available for placement in your world.</td>
    </tr>

    <tr>
        <td>Entity View (<img src="images/hello_world_tutorial_entity_icon.png" width="16" height=
        "16" alt="hello_world_tutorial_entity_icon (1K)">)</td>

        <td>Lists the entities that exist in your world.</td>
    </tr>

    <tr>
        <td>Behaviors (<img src="images/hello_world_tutorial_behaviors_icon.png" width="16" height=
        "15" alt="hello_world_tutorial_behaviors_icon (1K)">)</td>

        <td>Lists of behavior scripts associated with your models.</td>
    </tr>
</table>

<p>If a particular tab is not listed on the left side of the application, use the View menu to
enable that tab that you need.</p>

<p>The Palette View lists all of the models that you've defined in your project. Notice that in
addition to the "HallFloor" and "Jack" models that you defined earlier, there are several other
models listed in the Palette View. These are models that are defined in the Standard Model Library
that is included with Gamebryo LightSpeed. Of particular interest are the various lighting
models.</p>

<p>In the middle of the World Builder UI, you'll find your world. In this case, we haven't added
anything yet, so it is a blank canvas with gridlines. Various controls for manipulating this world
are located above this panel in toolbars.</p>

<p>To the right, you'll see the Entity Editor. The Entity Editor lets you specify per-instance
overrides for Entities that you create and add to your world. We'll use the Entity Editor later in
this section of the tutorial to change certain properties for entities that we add.</p>

<h2>Adding Some Entities</h2>

<p>Let's add some entities to your world. From the Palette View, drag a HallFloor into the world.
Then, drag the Jack model into the World and drop him on top of your HallFloor. Finally, drop an
AmbientLight into the world above Jack. You'll see something like this:</p>

<div class="FigureContainer">
    <img src="images/hello_world_tutorial_small_floor_tile.png" width="337" height="358" alt=
    "Adding a floor tile and Jack (11K)">

    <p class="FigureCaption">Adding a floor tile and Jack</p>
</div>

<p>Notice that currently your Jack entity dwarfs the underlying floor tile. You can fix that in the
Entity Editor by overriding entity-specific properties.</p>

<h2>Overriding Entity Properties</h2>

<p>You have some entities in your world, but they're not exactly what you're after. To correct
this, you could go back to EMT and update your models, setting updated properties or even creating
new child models from your base models. For this example, though, you'll update your placed entity
properties instead.</p>

<p>Select Jack in World Builder. Notice that the Entity Editor switched to the selected entity.
Override the following properties to place and scale this entity. Using the Entity Editor, override
the Position property:</p>

<ul>
    <li>Position=(0,0,0)</li>
</ul>

<div class="FigureContainer">
    <img src="images/hello_world_tutorial_jack_override.png" width="284" height="409" alt=
    "Overriding Jack's position (25K)">

    <p class="FigureCaption">Overriding Jack's position</p>
</div>

<p>Next, select the ambient light and override the AmbientColor and Position properties.</p>

<ul>
    <li>AmbientColor=(249,242,189)</li>

    <li>Position=(0,0,500)</li>
</ul>

<div class="FigureContainer">
    <img src="images/hello_world_tutorial_light_override.png" width="284" height="602" alt=
    "Overriding the ambient light's color and position (24K)">

    <p class="FigureCaption">Overriding the ambient light's color and position</p>
</div>

<p>Select the HallFloor entity and override the Position and Scale properties.</p>

<ul>
    <li>Position = (0,0,0)</li>

    <li>Scale = 25</li>
</ul>

<div class="FigureContainer">
    <img src="images/hello_world_tutorial_floor_tile_override.png" width="284" height="430" alt=
    "Overriding the floor tile's position and scale (24K)">

    <p class="FigureCaption">Overriding the floor tile's position and scale</p>
</div>

<p>Select the Jack entity and click the <span class="NDLGUILabel">Look at Selection</span> button
(<img src="images/hello_world_tutorial_look_at_icon.png" width="30" height="30" alt=
"hello_world_tutorial_look_at_icon (1K)">).</p>

<p>Now we will position a camera that provides the desired view of our scene. Use the "W-A-S-D"
keys to zoom and position the scene to where the Jack is mostly centered and most of the floor is
visible. Rotate the scene, if needed, so that the viewport is facing the front of the Jack.</p>

<p>Now, from the "World Builder" pull-down menu, select <span class="NDLGUILabel">Create Camera
from Viewport</span>. This will create a camera entity in the world with the settings needed to
recreate this viewport exactly in the game.</p>

<div class="FigureContainer">
    <img src="images/hello_world_tutorial_entity_view.png" width="176" height="363" alt=
    "Entity View (13K)">

    <p class="FigureCaption">Entity View</p>
</div>

<h2>Updated World</h2>

<p>After you override the properties described above, you should have a world that looks something
like this:</p>

<div class="FigureContainer">
    <img src="images/hello_world_tutorial_populated_world.png" width="415" height="416" alt=
    "Populated world in World Builder (12K)">

    <p class="FigureCaption">Populated world in World Builder</p>
</div>

<p>If you notice that your world is a little bit brighter than expected, you might need to turn off
the default lights by clicking the <span class="NDLGUILabel">Toggle Default Lights</span> button
(<img src="images/hello_world_tutorial_toggle_default_lights.png" width="30" height="30" alt=
"hello_world_tutorial_look_at_icon (1K)">). You might also need to move the camera to get the
correct orientation.</p>

<h2>Moving on...</h2>

<p>We now have a world to work with. Next, let's set up our solution and get ready to create our
application. See <a href="hello_world_tutorial_project.htm">Setting Up Your C++ Project</a>.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="../../Tools/EntityModelingTool/emt_project_intro.htm">Working with Entity Model
    Projects</a></li>

    <li><a href="../../Tools/Toolbench/tb_intro.htm">Toolbench Introduction</a></li>

    <li><a href="../../Tools/WorldBuilder/wb_intro.htm">World Builder Introduction</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

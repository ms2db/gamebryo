<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Hello World: Tutorial Overview</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Hello World: Tutorial Overview</h1>

<p>This tutorial walks you through the steps that you need to take to quickly create and run an
application that is based on the Emergent Game Framework.</p>

<p>To start off, you use the <a href="../../Tools/EntityModelingTool/emt_intro.htm">Entity Modeling
Tool</a> (EMT) to define your models. Then, you use the <a href=
"../../Tools/WorldBuilder/wb_intro.htm">World Builder</a> (a Toolbench plug-in) to populate your
first world with instances of your models.</p>

<p>After you create your world in World Builder, you set up your source code project. In the course
of the tutorial, we'll describe all of the settings that you'll need to define in Visual Studio,
including preprocessor definitions, include paths, library paths, and libraries.</p>

<p>Next, you need to add code to get your application running. We'll introduce you to the system
services that your application uses to render and control your application. And we show you how to
load your world in your application and run it.</p>

<p>By the end of this tutorial, you will have a running application that will be very similar to
our <a href="hello_world_demo.htm">Hello World demo</a>. You can use your application as the basis
for future projects that you build on the Emergent Game Framework.</p>

<h2>Tutorial at-a-Glance</h2>

<p>These are the steps that you'll take to create your first Game Framework-based application:</p>

<ol>
    <li><a href="hello_world_tutorial_new_emt_project.htm">Creating a New Toolbench Game
    Solution</a></li>

    <li><a href="hello_world_tutorial_models.htm">Creating New Models</a></li>

    <li><a href="hello_world_tutorial_world.htm">Populating Your World</a></li>

    <li><a href="hello_world_tutorial_project.htm">Setting Up Your C++ Project</a></li>

    <li><a href="hello_world_tutorial_services.htm">Creating main.cpp and Adding Services</a></li>

    <li><a href="hello_world_tutorial_loading.htm">Loading Your World and Starting the
    Application</a></li>

    <li><a href="hello_world_tutorial_more_services.htm">Adding More Game Framework
    Services</a></li>
</ol>

<p>As we progress through the tutorial, we'll include the list above to highlight your
progress.</p>

<h2>Directory structure</h2>

<p>This is the directory structure that we'll use throughout this tutorial. The project makes
certain assumptions concerning the placement of media assets and C++ files based on this structure.
If you choose a different layout, you'll need to adjust your project accordingly.</p>
<pre>
    Emergent                       &lt;-- Parent directory
        \ HelloWorldTutorial       &lt;-- Visual studio project and C++ source files.
            \ Media                &lt;-- Root of your asset web. Contains your toolbench files.
            \ Debug                &lt;-- Output directory for the Debug build configuration. 
</pre>

<h2>Prerequisites</h2>

<p>To build and run this tutorial, you should have already set up your environment to include
required SDKs and tools. For more information about these requirements, see <a href=
"../../Programmer/Build/build_prereqs_pc.htm">Build Prerequisites for Gamebryo LightSpeed for
Win32</a>.</p>

<h2>Moving on...</h2>

<p>Let's get started by creating a new EMT project and creating a couple of models. See <a href=
"hello_world_tutorial_new_emt_project.htm">Creating a New Toolbench Game Solution</a>.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="../../Programmer/Build/build_prereqs_pc.htm">Windows build requirements</a></li>

    <li><a href="../../GetStart/PC/Building_Gamebryo_for_Win32__source_licensees_only_.htm">Build
    Guidelines for Win32</a></li>

    <li><a href="../../GetStart/Architecture/architecture_framework_overview.htm">Game Framework
    overview</a></li>

    <li><a href="../../Tools/Toolbench/tb_intro.htm">Toolbench Introduction</a></li>

    <li><a href="../../Tools/WorldBuilder/wb_intro.htm">World Builder Introduction</a></li>

    <li><a href="hello_world_functional_overview.htm">Hello World functional overview</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

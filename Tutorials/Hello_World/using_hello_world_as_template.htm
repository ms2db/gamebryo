<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Using Hello World as a Template for your Application</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->

<!--(Begin Links)===================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type=
"text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Using Hello World as a Template for your Application</h1>

<p>You might want to use the HelloWorld project as a template for your own
application. In this section we describe how to reuse HelloWorld as the basis
for your application. The basic outline is:</p>

<ol>
    <li><a href="#CopyTemplate">Copy template project files</a></li>

    <li><a href="#CopySource">Copy source files</a></li>

    <li><a href="#CopyAssets">Copy assets</a></li>

    <li><a href="#CopyConfig">Copy and update config file(s)</a></li>

    <li><a href="#CompileRun">Compile and run the application</a></li>
</ol>

<p>We've provided a script (<span class=
"NDLSystemFont">CopyHelloWorld.bat</span>) that automates the process of
copying the files to the new location for you. You can use this script unless
you want to rearrange the asset directory structure. Note that you will still
need to <a href="#CopyConfig">Update config file(s)</a> before compiling and
running the application.</p>
<pre>
CD %EMERGENT_PATH%\Samples\GameFrameworkTechDemos\HelloWorld
CopyHelloWorld.bat [your-application-directory]
</pre>

<p>Details for each of these steps follow.</p>

<a name="CopyTemplate" id="CopyTemplate"></a><h2>Copy template project files</h2>

<p>Copy one of the template Visual Studio or Makefiles to your project
directory. These template project files are set up using the %EMERGENT_PATH%
environment variable to locate files and tools.</p>

<table>
    <thead>
        <tr>
            <th>Platform</th>

            <th>Compiler</th>

            <th>Template File</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>Win32</td>

            <td>VC8</td>

            <td>
            %EMERGENT_PATH%\Documentation\HTML\Tutorials\Hello_World\templates\Win32\HelloWorld_win32_vc8.vcproj</td>
        </tr>

        <tr>
            <td>Win32</td>

            <td>VC9</td>

            <td>
            %EMERGENT_PATH%\Documentation\HTML\Tutorials\Hello_World\templates\Win32\HelloWorld_win32_vc9.vcproj</td>
        </tr>

        <tr>
            <td>Xbox360</td>

            <td>VC9</td>

            <td>
            %EMERGENT_PATH%\Documentation\HTML\Tutorials\Hello_World\templates\XBox360\HelloWorld_XBox360_vc9.vcproj</td>
        </tr>

        <tr>
            <td>PS3</td>

            <td>VC8 With VSI</td>

            <td>
            %EMERGENT_PATH%\Documentation\HTML\Tutorials\Hello_World\templates\PS3\HelloWorld_PS3_vc8.vcproj</td>
        </tr>
    </tbody>
</table>

<a name="CopySource" id="CopySource"></a><h2>Copy source files</h2>

<p>Copy <span class="NDLSystemFont">Main.cpp</span>, <span class=
"NDLSystemFont">HelloWorld.h</span>, and <span class=
"NDLSystemFont">HelloWorld.cpp</span> to your project directory and add them to
your project.</p>
<pre>
%EMERGENT_PATH%\Samples\GameFrameworkTechDemos\HelloWorld\Main.cpp
%EMERGENT_PATH%\Samples\GameFrameworkTechDemos\HelloWorld\HelloWorld.h
%EMERGENT_PATH%\Samples\GameFrameworkTechDemos\HelloWorld\HelloWorld.cpp
</pre>

<a name="CopyAssets" id="CopyAssets"></a><h2>Copy assets</h2>

<p>Create a Media directory under your project directory. Copy the following
media directories to this directory.</p>
<pre>
%EMERGENT_PATH%\Media\asset-web-config
%EMERGENT_PATH%\Media\StandardModelLibrary
%EMERGENT_PATH%\Media\Samples\Common
%EMERGENT_PATH%\Media\Samples\Graphics
%EMERGENT_PATH%\Media\Samples\GameFramework\HelloWorld
%EMERGENT_PATH%\Media\Enums
</pre>

<p>If you maintain the same directory structure, no other actions are necessary
to use these assets in your application. You can open the <span class=
"NDLSystemFont">HelloWorld.gsl</span> in Toolbench and use it as-is.</p>

<h3>Moving Assets / Changing Directory Structure</h3>

<p>If you want to move assets around, change or flatten the directory
structure, or otherwise alter the way the asset files are organized you have
two options: start from scratch or update the existing content.</p>

<p>The first is to start from a fresh <span class="NDLSystemFont">.gsl</span>
file and recreate all models and the Hello World block. This requires no
additional steps - you can use the HelloWorld assets directly in your model,
preset, and world files.</p>

<p>If you want to re-organize your HelloWorld assets and still use the
HelloWorld model and world files, follow these steps.</p>

<ol>
    <li>Open the HelloWorld.gsl in Toolbench.</li>

    <li>Double-click the StandardModelLibrary. Toolbench will give you a dialog
    asking if you moved this project. Follow the instructions, find the
    StandardModelLibrary.emtproj and disk, and save.</li>

    <li>Double-click the <span class="NDLSystemFont">HelloWorld.emtproj</span>.
    Again, Toolbench will give you a dialog asking if you moved this project.
    Follow the instructions, find the <span class=
    "NDLSystemFont">HelloWorld.emtproj</span> on disk, and save.</li>

    <li>Re-attach graphic assets to each model. If you changed the location of
    the Graphics files relative to the model and world files, the assets
    attached to these files will be invalid. Reattach the assets to these files
    using EMT and World Builder.</li>

    <li>Open the HelloWorld block file. If you were successful with steps 1-4
    you should see the normal HelloWorld world.</li>
</ol>

<a name="CopyConfig" id="CopyConfig"></a><h2>Copy and update config file(s)</h2>

<p>Copy <span class="NDLSystemFont">Config*.ini</span> files to your project
directory.</p>
<pre>
%EMERGENT_PATH%\Samples\GameFrameworkTechDemos\HelloWorld\Config*.ini
</pre>

<p>For Windows, update the following:</p>

<table>
    <thead>
        <tr>
            <th>Config File</th>

            <th>Parameter</th>

            <th>New Value</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>Config.ini</td>

            <td>AssetWeb.Win32.Path</td>

            <td>Media</td>
        </tr>

        <tr>
            <td>Config.ini</td>

            <td>ScriptEngine.Lua.Win32.SystemScriptPath1</td>

            <td>Scripts</td>
        </tr>
    </tbody>
</table>

<a name="CompileRun" id="CompileRun"></a><h2>Compile and run the application</h2>

<p>Finally, compile the application.</p>

<p>Launching the application will be platform-specific. For console platforms,
the appropriate media, config, and executable files will be copied to a
suitable location. For Windows these files are used in place. The following
table describes where these assets are located for a debug build configuration.
Other configurations follow the same pattern.</p>

<table>
    <thead>
        <tr>
            <th>Platform</th>

            <th>Deployment directory</th>

            <th>How to execute</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>Windows</td>

            <td>In-place</td>

            <td>HelloWorldDebug.exe</td>
        </tr>

        <tr>
            <td>XBox360</td>

            <td>xe:\Gamebryo3.2\Samples\GameFramework\HelloWorld</td>

            <td>Double-click the .xex file from Xbox 360 Neighborhood</td>
        </tr>

        <tr>
            <td>PS3</td>

            <td>In-place</td>

            <td>Launch the application using TargetManager. Set app_home and
            home directories to the application directory.</td>
        </tr>
    </tbody>
</table>

<table class="NDLNoteContainer" width="100%">
    <tr align="left">
        <td class="NDLNoteContainerTD">
            <p class="NDLHeadingNoteContainer">Note</p>

            <div class="NDLNote">
                Since both Windows and PS3 applications are run in-place,
                Config.ini is overwritten once you build for PS3. You may want
                to save the original Config.ini (Windows version) as
                ConfigWin32.ini such that you can copy it back before running
                the Windows version of the application.
            </div>
        </td>
    </tr>
</table>

<p>If you want to deploy your application to a different directory, update the
VS or makefile project's Post Build Commands.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="hello_world_intro.htm">Hello World Introduction</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

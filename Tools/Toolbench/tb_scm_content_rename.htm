<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Renaming Revision Controlled Content</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="SCM" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>

<!--(Begin Body)================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Renaming Revision Controlled Content</h1>

<p>Renaming content in Toolbench will result in revision control actions that attempt to preserve
file history. For example, if you are using Perforce, a rename in Toolbench results in two revision
control actions: a branch from the original file to the renamed file, and a delete of the original.
Likewise, if you are using Subversion, a rename in Toolbench results in a "move with history"
operation to be added to the changelist.</p>

<p>There is logic in the revision control layer that will attempt to correctly handle multiple
renames of the same content prior to check-in. For example, renaming an entity model from "Ape" to
"Bat" to "Cat" will result in a branch of Ape.model to Cat.model and a delete of Ape.model. The
intermediary branch to Bat.model will be discarded from revision control. Likewise, renaming "Cat"
back to "Ape" will only result in a check-out of the Ape.model file from revision control; the
branch and delete operations will be appropriately discarded. For more information about the
revision control layer logic, see <a href=
"../../Programmer/RevisionControlWrapper/rcs_wrap_fallbacks.htm">Understanding Fallbacks</a>.</p>

<p class="NDLHeadingProcedure">To rename revision controlled content</p>

<ol>
    <li>In Toolbench, right-click the content that you want to rename and choose <b>Rename</b> from
    the context menu.</li>

    <li>When you are ready to do so, use your revision control client to check in your changes. See
    <a href="tb_scm_check_in.htm">Checking in Content to Revision Control</a>.</li>
</ol>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="tb_scm_setup.htm">Setting Up Revision Control for a Game Solution</a></li>

    <li><a href="tb_scm_asset_web_add.htm">Adding Your Asset Web to the Revision Control
    System</a></li>

    <li><a href="tb_scm_check_in.htm">Checking in Content to Revision Control</a></li>

    <li><a href="tb_scm_content_add.htm">Adding Content to Revision Control</a></li>

    <li><a href="tb_scm_content_edit.htm">Editing Revision Controlled Content</a></li>

    <li><a href="tb_scm_content_delete.htm">Deleting Revision Controlled Content</a></li>

    <li><a href="tb_scm_content_refresh.htm">Refreshing Revision Control Status</a></li>

    <li><a href="tb_scm_asset_web_sync.htm">Syncing to Your Asset Web from Revision
    Control</a></li>

    <li><a href="tb_scm_discard_local_edits.htm">Discarding Local Edits to Revision Controlled
    Content</a></li>

    <li><a href="tb_scm_roll_back.htm">Rolling Back Revision Controlled Content</a></li>

    <li><a href="tb_scm_reconcile_offline.htm">Reconciling Offline Work with Revision
    Control</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

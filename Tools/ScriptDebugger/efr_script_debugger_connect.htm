<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Establishing a connection between Toolbench and your game</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Establishing a connection between Toolbench and your game</h1>

<p>Game Framework behavior scripts can be interactively debugged by connecting
to a game from Toolbench. This is typically done by having the game connect to the Asset Controller process used by Toolbench, which includes a Channel Manager for directing communication traffic.</p>

<p class="NDLHeadingProcedure">To establish a connection between Toolbench and your game</p>

<ol>
    <li>Launch Toolbench (<span class="NDLGUILabel">Start > Emergent > Gamebryo LightSpeed > Tools > Toolbench</span>).
		
		<li>Open a game solution for the game. See <a href="../../Tools/Toolbench/tb_game_soln_create_open.htm">Creating/Opening Game Solutions</a>.</li>
		
		<li>Verify that Asset Controller is running by checking for the system tray icon (<img src="images/asset_controller_sys_tray_icon.png" width="13" height="16" alt="asset_controller_sys_tray_icon (1K)" />).</li>

    <li>Configure the game to connect to Asset Controller, usually via a .ini configuration file. Asset Controller normally uses port 13215. If running the game and Toolbench on the same machine, the configuration information may look like this:
    <p class="indent1"><span class="NDLSystemFont">
    [ChannelManager]<br>
    ListenPort=13215<br>
    ListenIP=127.0.0.1</span></p>
		
		</li>
    
		<li>Start the game instance.
    
		<p class="indent1">The system tray icon for Asset Controller should now indicate 2 connections in the ToolTip.</p>
    </li>
</ol>

<p class="indent1">Alternately, if the game includes its own Channel Manager, Toolbench can be configured to connect directly to the running game.</p>

<p class="NDLHeadingProcedure">To configure Toolbench to connect directly to a running game</p>

<ol>
    <li>Start the game instance.</li>
    <li>Launch Toolbench and open a game solution for the game.</li>
    <li>Open the <b>Connections</b> window (<span class="NDLGUILabel">View > Connections</span>).

<div class="FigureContainer">
		<img src="images/connections_window.png" width="300" height="300" alt="connections_window (10K)" />
</div>

		</li>
    <li>At the top of the Connections window, click the <b>Add Connection</b> toolbar button (<img src="images/add_connection.png" width="50" height="20" alt="add_connection (1K)" />).</li>
    <li>In the Add Connection dialog, enter a descriptive name for the game connection.</li>
    <li>Specify the IP address and port used by the Channel Manager that is embedded in the game and click <b>OK</b>.</li>
    <li>Double-click the new connection to connect to the running game.</li>
</ol>

<p class="NDLHeadingRelatedTopic">Related topics</p>
    <ul>
			<li><a href="efr_script_debugger_intro.htm">Introduction to the Script Debugger</a>
			</li>
			<li><a href="efr_script_debugger_interactive_debug.htm">Interactively debugging your behavior scripts using the Script Debugger</a>
			</li>
			<li><a href="efr_script_debugger_tshoot_communication.htm">Troubleshooting communication between the Script Debugger and your game</a>
			</li>
			<li><a href="efr_script_debugger_cmd_ref.htm">Script Debugger command reference</a>
			</li>
			<li><a href="efr_script_debugger_view_breakpoints.htm">Viewing breakpoints in the Script Debugger</a>
			</li>
			<li><a href="efr_script_debugger_remove_breakpoints.htm">Removing breakpoints in the Script Debugger</a>
			</li>
			<li><a href="efr_script_debugger_analyze_behavior.htm">Using the Script Debugger to analyze behavior flows</a>
			</li>
			<li><a href="efr_script_debugger_test_script_mods.htm">Testing script modifications in the Script Debugger</a>
			</li>
			<li><a href="efr_script_debugger_view_local_var_info.htm">Viewing information about local variables in the Script Debugger</a>
			</li>
			<li><a href="efr_script_debugger_script_watch.htm">Adding script watches in the Script Debugger</a>
			</li>
			<li><a href="efr_script_debugger_validate_script.htm">Using the Script Debugger to validate script changes</a>
			</li>																																								
    </ul> 


<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

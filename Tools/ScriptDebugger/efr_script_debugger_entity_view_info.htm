<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Viewing information about entiy properties in the Auto/Watch Entity View</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Auto Entity View / Watch Entity View</h1>

<p>Both the Auto Entity View and Watch Entity View display 
properties of a given entity. For each property, the
view displays the property's:
</p>

<ul>
    <li>name</li>
    <li>type</li>
    <li>value</li>
</ul>

<p>You can edit the value of the property by double clicking on the
value or using the context menu. The new value will automatically be pushed to the running game.</p>

<h2>Auto Entity View</h2>
<p>When you are at a break in script execution the Auto Entity View will
display the entity executing the behavior.</p>

<h2>Watch Entity View</h2>

<p>The Watch Entity View provides the same functionality as the Auto Entity 
View. The only difference is that instead of using the Entity ID that is currently executing 
the behavior at break, an explicit entity ID must be provided by the user. This is useful
for monitoring the properties of entities other than the one executing the current behavior. 
Entity ID can be copied from the Sim Debugger or from the locals view and pasted it into
the entity ID field. Note that it will always display the value in hexadecimal
format but it will accept decimal input (singed or unsigned).</p>

<div class="FigureContainer">
    <img alt="watch entity view" src="./images/auto_entity_view.png" width=
    "584" height="412">

    <p class="FigureCaption">Script Debugger: Viewing  and editing properties
    of an entity</p>
</div>



<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
    <li><a href="efr_script_debugger_intro.htm">Introduction to
    the Script Debugger</a></li>

    <li><a href="efr_script_debugger_connect.htm">Establishing a
    connection between Toolbench and your game</a></li>

    <li><a href=
    "efr_script_debugger_interactive_debug.htm">Interactively
    debugging your behavior scripts using the Script
    Debugger</a></li>

    <li><a href=
    "efr_script_debugger_tshoot_communication.htm">Troubleshooting
    communication between the Script Debugger and your
    game</a></li>

    <li><a href="efr_script_debugger_cmd_ref.htm">Script Debugger
    command reference</a></li>

    <li><a href=
    "efr_script_debugger_view_breakpoints.htm">Viewing
    breakpoints in the Script Debugger</a></li>

    <li><a href=
    "efr_script_debugger_remove_breakpoints.htm">Removing
    breakpoints in the Script Debugger</a></li>

    <li><a href="efr_script_debugger_analyze_behavior.htm">Using
    the Script Debugger to analyze behavior flows</a></li>

    <li><a href=
    "efr_script_debugger_test_script_mods.htm">Testing script
    modifications in the Script Debugger</a></li>

    <li><a href="efr_script_debugger_script_watch.htm">Adding
    script watches in the Script Debugger</a></li>

    <li><a href="efr_script_debugger_validate_script.htm">Using
    the Script Debugger to validate script changes</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

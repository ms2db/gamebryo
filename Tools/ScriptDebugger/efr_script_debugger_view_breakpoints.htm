<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Viewing breakpoints in the Script Debugger</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Viewing breakpoints in the Script Debugger</h1>

<p>You can use the Breakpoints View to view all of the breakpoints in your script. Breakpoint records list the file and line of script that will trigger a break and an optional condition to be evaluated. You can add or edit the conditional expression by right-clicking the break point and selecting <span class="NDLGUILabel">Edit Breakpoint
Condition</span> from the context menu. Each time the breakpoint is reached during execution, this condition will be evaluated. Only a boolean result of true will cause the breakpoint to halt execution.</p>

<div class="FigureContainer">
    <img alt="Breakpoints view" src="./images/breakpoints_view.png" width="568" height="181" />
	    <p class="FigureCaption">Script Debugger: Viewing breakpoints</p>
</div>

<p>When you double-click a breakpoint in the list, the script file will open, holding the breakpoint with the cursor advanced to the relevant line of script. Breakpoints are remembered and restored when script files are closed and reopened.</p>

<p>Editing a script may result in breakpoints changing line number or being deleted.  When the script is saved, the Breakpoints View will be updated to
reflect such edits. This is also the time at which any connected game instance will receive the updated breakpoint information due to script edits.</p>

<table class="NDLNoteContainer" width="100%">
    <tr align="left">
        <td class="NDLNoteContainerTD"><p class="NDLHeadingNoteContainer">Note</p>
            <div class="NDLNote">The scripting built-in BehaviorAPI.BreakIfFalse can be added directly to scripts. When the supplied condition is hit during debugging, a break will be triggered as if there were a breakpoint on the line.
            </div>
        </td>
    </tr>
</table> 

<table class="NDLNoteContainer" width="100%">
    <tr align="left">
        <td class="NDLNoteContainerTD"><p class="NDLHeadingNoteContainer">Note</p>
            <div class="NDLNote">Breakpoints will not be hit if a Lua function is called with 
            BehaviorAPI.CallBehavior.
            </div>
        </td>
    </tr>
</table>

<p class="NDLHeadingRelatedTopic">Related topics</p>
    <ul>
			<li><a href="efr_script_debugger_intro.htm">Introduction to the Script Debugger</a>
			</li>
			<li><a href="efr_script_debugger_connect.htm">Establishing a connection between Toolbench and your game</a>
			</li>
			<li><a href="efr_script_debugger_interactive_debug.htm">Interactively debugging your behavior scripts using the Script Debugger</a>
			</li>
			<li><a href="efr_script_debugger_tshoot_communication.htm">Troubleshooting communication between the Script Debugger and your game</a>
			</li>
			<li><a href="efr_script_debugger_cmd_ref.htm">Script Debugger command reference</a>
			</li>
			<li><a href="efr_script_debugger_remove_breakpoints.htm">Removing breakpoints in the Script Debugger</a>
			</li>
			<li><a href="efr_script_debugger_analyze_behavior.htm">Using the Script Debugger to analyze behavior flows</a>
			</li>
			<li><a href="efr_script_debugger_test_script_mods.htm">Testing script modifications in the Script Debugger</a>
			</li>
			<li><a href="efr_script_debugger_view_local_var_info.htm">Viewing information about local variables in the Script Debugger</a>
			</li>
			<li><a href="efr_script_debugger_script_watch.htm">Adding script watches in the Script Debugger</a>
			</li>
			<li><a href="efr_script_debugger_validate_script.htm">Using the Script Debugger to validate script changes</a>
			</li>																																								
    </ul> 


<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

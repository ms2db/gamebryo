<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Interactively debugging your behavior scripts using the Script Debugger</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Interactively debugging your behavior scripts using the Script Debugger</h1>

<p>The Toolbench Script Debugger is tied to a "perspective state" in
Toolbench. Once connected to your game, select <span class="NDLGUILabel">Debug > Toggle Script Debugging</span> (or press Ctrl + D) to enter the script debugging state.
If you also have a script document open, this will add additional Script Debugger UI elements to Toolbench, including commands on the Debug menu, a Debug toolbar, and several docked tool windows.</p>

<p>Toolbench can be configured to automatically enter script debugging mode when a game connection is established.
This user setting can be found under <b>Script Debugger | Auto Debug on Game Connect</b>. The setting defaults to false since script debugging can entail a small but noticeable performance hit.</p>

<p>Entering the script debugging state will send a notification to the Lua Behavior Debugger. This notification prepares the Game Framework for an interactive debugging session.
Disconnecting from the running game will automatically exit script debugging.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>
  <ul>
			<li><a href="efr_script_debugger_intro.htm">Introduction to the Script Debugger</a>
			</li>
			<li><a href="efr_script_debugger_connect.htm">Establishing a connection between Toolbench and your game</a>
			</li>
			<li><a href="efr_script_debugger_tshoot_communication.htm">Troubleshooting communication between the Script Debugger and your game</a>
			</li>
			<li><a href="efr_script_debugger_cmd_ref.htm">Script Debugger command reference</a>
			</li>
			<li><a href="efr_script_debugger_view_breakpoints.htm">Viewing breakpoints in the Script Debugger</a>
			</li>
			<li><a href="efr_script_debugger_remove_breakpoints.htm">Removing breakpoints in the Script Debugger</a>
			</li>
			<li><a href="efr_script_debugger_analyze_behavior.htm">Using the Script Debugger to analyze behavior flows</a>
			</li>
			<li><a href="efr_script_debugger_test_script_mods.htm">Interacting with game state using the Script Debugger's Immediate Mode</a>
			</li>
			<li><a href="efr_script_debugger_view_local_var_info.htm">Viewing information about local variables in the Script Debugger</a>
			</li>
			<li><a href="efr_script_debugger_script_watch.htm">Adding script watches in the Script Debugger</a>
			</li>
			<li><a href="efr_script_debugger_validate_script.htm">Using the Script Debugger to validate script changes</a>
			</li>																																								
  </ul> 


<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

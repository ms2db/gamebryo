<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Script Debugger Overview</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Script Debugger Overview</h1>

<p>The Script Debugger is an integrated development environment (IDE) that you can use to author and debug script code. It is designed to help you develop entity behavior scripts for the Emergent Game Framework. Because it is integrated to the Foundation Message Service, it can attach to remote game applications and participate in rapid iteration on the shipping platform.</p>

<p>Script Debugger services are designed so that they can be extended easily to support a wide range of script languages. Out-of-the-box support is available for editing and debugging Lua scripts. The integrated debugger is language-independent, but it interfaces with the Lua Behavior Debugger that is built into an Emergent Game Framework-based game.</p>

<p>You can use the Script Debugger to place breakpoints and step through behavior script code. In the screenshot below, the call stack, local variables, and watch variables are visible. Lua expressions can be evaluated in the watch window as well, allowing you to modify the state of the running game.</p>

<table class="NDLNoteContainer" width="100%">
    <tr align="left">
        <td class="NDLNoteContainerTD"><p class="NDLHeadingNoteContainer">Note</p>
            <div class="NDLNote">Script Debugger will only connect to the game instance if it was compiled using a debug or release configuration. Script Debugger will not work if you are trying to connect to a game build that uses a shipping configuration.
            </div>
        </td>
    </tr>
</table>

<div class="FigureContainer">
    <img src="images/script_debugger_ui.png" width="800" height="586" alt="script_debugger_ui (118K)" />
	    <p class="FigureCaption">Script Debugger UI</p>
</div>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

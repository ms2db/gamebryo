<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>
<title>Mix-in and Diagram Overview</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<h1>Mix-in and Diagram Overview</h1>

<p>
The Mix-in and Diagram Editors are graphical representations of the relationships between the entity models and presets within a project. They give you a strategic view of a distinct part of the project or the entire project as a whole. They also help you set up and define the relationships between models allowing properties and behaviors to be shared and passed from one entity model to another. 
</p>

<p>
Mix-in relationships are automatically generated depending on where you drag the model or preset in the Mix-in Editor. The Mix-in Editor is less flexible than the Diagram Editor, in that it does not allow you to drag the model or preset boxes around after they have been added. You can, however, add, delete, and define relationships between models quickly and easily.
</p>

<p>
For diagrams, you can explicitly determine which models will be included, their location within the diagram, as well as any relationships that may exist between models. This makes diagrams particularly useful at the initial stages of production, when you are experimenting with different mix-in possibilities. You can create many different diagrams to help visualize important subsections or concepts within a project. Since you can have many items within a diagram, the Diagram Editor is very flexible and makes it easy for you to add, remove, rearrange, and link items within the diagram. 
</p>




<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>
<title>Adding Mix-ins to a Model or Preset</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Adding Mix-ins to a Model or Preset</h1>

<p>Mix-ins are the most powerful concept in EMT as they allow you
to pass common properties and behaviors to one or several other
models and presets within your project. A mix-in is basically the
parent model from which properties and behaviors are
inherited.</p>

<p>For example, let's say you are creating a zombie game. For the
Zombie model, you could have several mix-ins, including Actor,
Health, Placeable, Target, and Attacker. The Zombie model
inherits all the properties and behaviors of the mix-ins or parent
models. If you were to create this in the Mix-in Editor, it would
look something like the following:</p>

<div class="NDLFigureContainer">
    <img alt="Mix-in Editor: Mix-in inheritance" src="./images/Zombie_Mixins.png" width="596"
    height="409">
    <p class="NDLFigureCaption">Mix-in Editor: Mix-in inheritance</p>
</div>

<p>You can have reverse mix-ins as well, which are the models and
presets that inherit the properties and behaviors from the
current model. In our Zombie example, the Zombie model could have
the following reverse mix-ins: ZombieBoy, ZombieFat, ZombieFemale,
ZombieHalf, ZombieJaw, and ZombieStandard. In the Mix-in Editor,
the complete mix-in diagram for the Zombie model would now look
something like the following:</p>

<div class="NDLFigureContainer">
    <img alt="Mix-in Editor: Mix-in reverse inheritance" src="./images/Zombie_Mixins_Complete.png" width=
    "591" height="646">
    <p class="NDLFigureCaption">Mix-in Editor: Mix-in reverse inheritance</p>
</div>

<p>You create mix-ins by defining a parent/child relationship
between two or more models/presets. The direction of the
relationship determines which model is the parent and which one
is the child and whether the properties and behaviors are
inherited or passed down.</p>

<p class="NDLHeadingProcedure">To add a mix-in/reverse mix-in</p>

<ol>
    <li>From the EMT Project Explorer, double-click a model or
    preset to load it into the Mix-in Editor.

        <p class="indent1">A box with the model's name appears in
        the center of the Editor.</p>
    </li>

    <li>Do one of the following:

        <ul>
            <li>To add a mix-in, drag a model from the EMT Project
            Explorer to the top half of the editor.</li>

            <li>To add a reverse mix-in, drag a model or preset
            from the EMT Project Explorer to the bottom half of
            the editor.</li>
        </ul>

        <p class="indent1">A parent/child relationship is
        automatically created between the two models/presets and
        the properties and behaviors of the parent are mixed with
        those of the child.</p>
    </li>
</ol>

<table class="NDLNoteContainer" width="100%">
    <tr align="left">
        <td class="NDLNoteContainerTD">
            <p class="NDLHeadingNoteContainer">Note</p>

            <div class="NDLNote">
                To delete a mix-in or reverse mix-in for a
                particular model, right-click the arrow between
                the two models and select Delete.
            </div>
        </td>
    </tr>
</table>


<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

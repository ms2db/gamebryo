<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>
<title>Organizing Large EMT Data Sets</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

<h1>Organizing Large EMT Data Sets</h1>

<p>The Entity Modeling Tool provides several features to help manage large sets of design data.  Using these features consistently will keep data accessible and extensible.</p>

<p>EMT includes two primary editors for working with model data, each suited to different tasks.</p>

<p>The Mix-in Editor displays a model with its immediate mix-ins and reverse mix-ins.  This view is auto-generated, ensuring that it is accurate and complete at any time.  It can be very useful for browsing up and down the mix-in tree to trace deep model dependencies in large EMT projects.</p>

<p>The Diagram Editor requires some effort to layout specific sets of models, but can be highly customized to describe the most important areas and relationships in EMT projects.  Use diagrams to convey these core design concepts.  Diagrams can also be useful for early prototyping and experimentation, allowing mix-ins to be quickly created and modified as if on a whiteboard.</p>
    <p>It is usually a good practice to create an intermediary model for use when 
        mixing-in models from external entity modeling projects. For example, when 
        mixing Actor into a model in another entity modeling project, it is advisable to 
        not mix in directly. Instead, create a new model, like &quot;MyCustomActor&quot;, and mix 
        into that model. Then mix &quot;MyCustomActor&quot; into all relevant models in that 
        project. This is useful when refactoring large numbers of actors at once without 
        modifying the source library. You may wish to change traits, add new properties, 
        change behaviors, or other actions that will be more robust to future versions 
        of modeling projects from Emergent and its partner companies.</p>

<p>When working with larger EMT data sets, consider breaking the data into multiple EMT projects.  Each project can be referenced by other projects.  This feature allows breaking EMT data into reusable libraries and can help divide editing responsibilities, minimizing source control coordination needs.  Considering the expected division of labor for editing EMT data is a good way to judge appropriate boundaries when breaking the data into multiple projects.</p>

<p>Within an EMT project, models can be placed into a virtual folder hierarchy. These folders are managed under the EMT project inside the EMT Project Explorer.
Any effort put into organization here can also pay off when working in the World Builder Palette View.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>
    <ul>
			<li><a href="emt_best_practices_modeling_approach.htm">Breaking Down Game Functionality</a>
			</li>
			<li><a href="emt_best_practices_model_design.htm">Designing Entity Models for Clarity</a>
			</li>
			<li><a href="emt_best_practices_performance.htm">Performance and Memory Considerations</a>
			</li>
			<li><a href="emt_best_practices_model_refactor.htm">Refactoring Entity Models</a>
			</li>
    </ul> 

		<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

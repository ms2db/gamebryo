<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Creating a New Terrain</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2"
type="text/javascript">
</script><script language="JavaScript1.2" type="text/javascript">
WriteNavLink(2);
</script>

  <h1>
    Creating a New Terrain
  </h1>
  <p>
    To create a new terrain, it is a prerequisite that you must have a game solution
    loaded with at least one block. Open the block. From the menu, select "World Builder"-&gt;"Terrain"-&gt;"Create
    New Terrain".&nbsp; A "Terrain Creation Wizard" will appear with three options:
  </p>
  <ul>
    <li><a href="#create_blank_terrain">Create blank terrain asset</a> </li>
    <li><a href="#use_existing_terrain">Use an existing terrain asset</a> </li>
    <li><a href="#import_old_terrain">Import an old terrain asset</a> </li>
  </ul>
  <p>
    Each option is detailed below.</p>
    <a name="create_blank_terrain" id="create_blank_terrain"></a>
  <h2>
    Create a blank terrain asset
  </h2>
  <p>
    This creates a brand new blank terrain asset and places it within the scene.
  </p>
  <p>
    On the next page of the window there are some formatting parameters to set.
  </p>
  <ul>
    <li>Sector Size </li>
    <ul>
      <li>The size of a single sector of the terrain in terms of area, each 1x1 square section
        of the terrain is represented by 2 triangles. There can be many sectors per terrain,
        and each can be streamed individually as required. By default only one sector will
        be created to begin with, but more sectors may be easily added later on. </li>
    </ul>
    <li>Cell Size </li>
    <ul>
      <li>The size or number of vertices of a single cell within a sector. A Cell represents
        the smallest individual subdivision of the terrain in the hierarchy. This controls
        the number of Level of Details. The smaller the cell size, the more LODs there will
        be at the expense of memory footprint and disk storage size. Indirectly, this also
        affects the number of possible materials visible per sector, as each cell can hold
        up to 4 materials.&nbsp;&nbsp; For example, for a sector size of 256x256, and a
        cell size of 32x32, there will be 8 LODs, and a possible maximum of 256 materials
        per sector. </li>
    </ul>
    <li>Vertex Spacing </li>
    <ul>
      <li>The distance in world space units between each vertex. The larger the vertex spacing,
        the larger the terrain at the expense of detail. </li>
    </ul>
    <li>Min. Elevation </li>
    <ul>
      <li>The minimum height of the terrain. This is the minimum value any part of the terrain
        will go, and will determine the scale of imported heightmaps. </li>
    </ul>
    <li>Max. Elevation </li>
    <ul>
      <li>The maximum height of the terrain. This is the maximum value any part of the terrain
        will go, and will determine the scale of imported heightmaps. </li>
    </ul>
  </ul>
  <p>
    On the next page there are parameters for the texture resolutions.
  </p>
  <ul>
    <li>Material Mask Size </li>
    <ul>
      <li>Determines the size in pixels of the material mask per sector. Higher resolution
        mask values gives greater blending detail between materials at the expense of additional
        texture memory usage. A very low value may lead to "blend blocks" on the terrain.
      </li>
    </ul>
    <li>Low Detail Texture Size </li>
    <ul>
      <li>Determines the size in pixels of the low detail diffuse texture per sector. These
        textures are automatically generated by the tool and used to render distance terrain.
        The larger this size, the more detail the terrain will have in the distance at the
        expense of memory footprint </li>
    </ul>
  </ul>
  <p>
    The next page is the location of the terrain assets.
  </p>
  <ul>
    <li>Terrain Location </li>
    <ul>
      <li>The directory where the terrain assets will be stored. This should be within the
        asset web coverage, and recommended within the block path. Ideally this should be
        a blank directory. </li>
    </ul>
  </ul>
  <p>
    The next page is the Model Type for the terrain entity.
  </p>
  <ul>
    <li>Create a Terrain Model </li>
    <ul>
      <li>Creates a terrain model provided by the standard model library. </li>
    </ul>
    <li>Create a PhysXTerrain model </li>
    <ul>
      <li>Creates a terrain model with PhysX support. The PhysX data is baked into the terrain
        when saving the terrain. Use this if you wish to use PhysX with your entities to
        interact with the terrain. </li>
    </ul>
  </ul>
  <p>
    The next page is a summary page of all the parameters. Press Finish to create the
    terrain within the block view. The new terrain will be positioned at 0,0 and Sector(0,0)
    will be created and displayed.
  </p>
  <a name="use_existing_terrain" id="use_existing_terrain"></a>
  <h2>
    Use an Existing Terrain Asset
  </h2>
  <p>
    Select this option to import an existing terrain asset from this version of Gamebryo.
  </p>
  <p>
    On the next page select the path that the existing terrain is located. You will
    need to locate the root.terrain file for that terrain to import.
  </p>
  <p>
    The next page is the Model Type for the terrain entity.
  </p>
  <ul>
    <li>Create a Terrain Model </li>
    <ul>
      <li>Creates a terrain model provided by the standard model library. </li>
    </ul>
    <li>Create a PhysXTerrain model </li>
    <ul>
      <li>Creates a terrain model with PhysX support. The PhysX data is baked into the terrain
        when saving the terrain. Use this if you wish to use PhysX with your entities to
        interact with the terrain. </li>
    </ul>
  </ul>
  <p>
    The next page is a summary page of all the parameters. Press Finish to create the
    terrain within the block view. The imported terrain will be positioned at 0,0 and
    Sector(0,0) will be displayed.
  </p>
  <a name="import_old_terrain" id="import_old_terrain"></a>
  <h2>
    Import an Old Terrain Asset
  </h2>
  <p>
    Select this option to import a terrain asset created using Gamebryo 2.6 to 3.1.
    These assets will be migrated to the latest version of terrain once they are added
    to the scene.
  </p>
  <p>
  On the next page select the path that the old terrain is located.</p>
  <p>
    The next page is the Model Type for the terrain entity.
  </p>
  <ul>
    <li>Create a Terrain Model </li>
    <ul>
      <li>Creates a terrain model provided by the standard model library. </li>
    </ul>
    <li>Create a PhysXTerrain model </li>
    <ul>
      <li>Creates a terrain model with PhysX support. The PhysX data is baked into the terrain
        when saving the terrain. Use this if you wish to use PhysX with your entities to
        interact with the terrain. </li>
    </ul>
  </ul>
  <p>
    The next page is a summary page of all the parameters. Press Finish to create the
    terrain within the block view. The imported terrain will be positioned at 0,0 and
    Sector(0,0) will be displayed.
  </p>
</body>
</html>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Example: Using the Tool Plug-in Batch Tool to Convert Pre-PhysX 2.7 Assets</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<a name="Converting_PhysX_Assets"></a>
<h1>Example: Using the Tool Plug-in Batch Tool to Convert Pre-PhysX 2.7 Assets</h1>

<p>The cooked mesh format changed in PhysX 2.7. Assets that were exported with previous versions of PhysX must be converted. We recommend the following procedure.</p>

<h2>Running the Tool Plug-in Batch Tool</h2>

<p>Run the tool with the <span class="NDLSystemFont">PhysXMeshProcess</span> process script (<span class="NDLSystemFont">PhysXMeshProcess.script</span>). The script is located in the following location:</p>

<p><span class="NDLSystemFont"><em>%EMERGENT_PATH%</em>\Source\Tools\DeveloperTools\ToolPluginBatch\ExampleScripts</span></p>

<p>This script is the same as the MeshProcess script (<span class="NDLSystemFont">MeshProcess.script</span>) in the same directory, but it also includes the PhysXMeshConverter tool plug-in to perform PhysX asset conversion. Use the <span class="NDLSystemFont">renderer</span> argument if the asset is targeted at a console, although this is not essential.</p>

<p><span class="NDLSystemFont">ToolPluginBatch -p PhysXMeshProcess.script -e SimpleExport.script -r dx9 PrePhysX27.NIF PhysX27.NIF</span></p>

<h2>Conversion Batch Scripts</h2>

<p>For convenience, the process for converting PhysX assets is encapsulated in the following batch scripts:</p>

<p><span class="NDLSystemFont"><em>%EMERGENT_PATH%</em>\Source\Tools\DeveloperTools\ToolPluginBatch\NifConvertScripts\PhysXNifConvert.bat</span></p>

<p><span class="NDLSystemFont"><em>%EMERGENT_PATH%</em>\Source\Tools\DeveloperTools\ToolPluginBatch\NifConvertScripts\PhysXNifConvertRecursive.bat</span></p>

<p>Both of these scripts assume that the Tool Plug-in Batch Tool and all of its dependencies has been built in at least one configuration.</p>


<p><span class="NDLSystemFont">PhysXNifConvert.bat</span> takes two command-line 
 parameters: the input file to convert and the output file to save the 
 converted file in.</p>

<p><span class="NDLSystemFont">PhysXNifConvertRecursive.bat</span> takes one command-line parameter: the directory that you want to process. It finds every NIF file recursively in that directory and runs PhysXNifConvert.bat on it, saving files with a "_converted" suffix. It does not convert already converted files.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
<li><a href="Tool_Plug_in_Batch_Tool_How_Works.htm">Understanding How the Tool Plug-in Batch Tool Works</a></li>
<li><a href="Tool_Plug_in_Batch_Tool_Gen_Scripts.htm">Generating Tool Plug-in Scripts</a></li>
<li><a href="Tool_Plug_in_Batch_Tool_Usage.htm">Tool Plug-in Batch Tool Command-line Usage</a></li>
<li><a href="Tool_Plug_in_Batch_Tool_Example_Convert_23_Assets.htm">Example: Using the Tool Plug-in Batch Tool to Convert Gamebryo 2.3 Assets to NiMesh</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

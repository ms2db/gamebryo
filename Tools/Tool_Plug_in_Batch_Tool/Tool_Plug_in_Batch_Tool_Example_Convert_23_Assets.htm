<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Example: Using the Tool Plug-in Batch Tool to Convert Gamebryo 2.3 Assets to NiMesh</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Pre-Expedition-RH" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>


<a name="Converting_Gamebryo_2_3_Assets_to_NiMesh"></a><h1>Example: Using the Tool Plug-in Batch Tool to Convert Gamebryo 2.3 Assets to NiMesh</h1>

<p>NIF assets that were generated in Gamebryo 2.3 or earlier have the deprecated NiGeometry classes in the scene. For performance reasons, these assets should be updated to use NiMesh instead of NiGeometry. The following example shows how to perform such a conversion using the Tool Plug-in Batch Tool, a process script, and an export script. You can find these scripts in the following location:</p>

<p><span class="NDLSystemFont"><em>%EMERGENT_PATH%</em>\Source\Tools\DeveloperTools\ToolPluginBatch\ExampleScripts</span></p>

<h2>Export Script: NIF Export</h2>

<p>The export script for this example is very simple. It contains one plugin to write out a NIF.</p>

<pre>
Script ("Simple Export","Export")
{
	Plugin ("NifExportPlugin","NIF Exporter","1.0","EXPORT")
	{
	}
}
</pre>

<h2>Process Script: Mesh Finalize</h2>

<p>For proper offline conversion of NiGeometry to NiMesh objects, the Mesh Finalize plugin is needed. This plugin formats the mesh data and then interleaves it into the final format using the default mesh profile. Our process plugin looks like this:</p>

<pre>
Script ("Mesh Process","Process")
{
	Plugin ("MeshFinalizePlugin","Mesh Finalize","1.0","PROCESS")
	{
	}
}
</pre>

<h2>Running the Tool Plug-in Batch Tool</h2>

<p>All we need to do now is run the tool using our scripts. Note that we do not specify a NIF import script. The default NIF import plugin will be selected based on extension. When a 2.3 NIF is loaded, NiGeometryConverter will convert the data into an NiMesh. The two process plugins will format and interleave the data.</p>

<p><span class="NDLSystemFont">ToolPluginBatch -p MeshProcess.script -e SimpleExport.script GamebryoOld.NIF GamebryoNew.NIF</span></p>

<h2>Conversion Batch Scripts</h2>

<p>For convenience, the process for converting a 2.3 NIF to an updated NIF is encapsulated in the following batch scripts:</p>

<p><span class="NDLSystemFont"><em>%EMERGENT_PATH%</em>\Source\Tools\DeveloperTools\ToolPluginBatch\NifConvertScripts\NifConvert.bat</span></p>

<p><span class="NDLSystemFont"><em>%EMERGENT_PATH%</em>\Source\Tools\DeveloperTools\ToolPluginBatch\NifConvertScripts\NifConvertRecursive.bat</span></p>

<p>Both of these scripts assume that the Tool Plug-in Batch Tool and all of its dependencies has been built in at least one configuration.</p>

  <table class="NDLNoteContainer" width="100%">
      <tr align="left">
          <td class="NDLNoteContainerTD"><p class="NDLHeadingNoteContainer">Note</p>
              <div class="NDLNote">These scripts should <em>not</em> be run multiple times on the same asset or on finalized assets exported from later versions of Gamebryo. They contain the MeshFinalize tool plug-in which cannot be run twice on the same mesh.
              </div>
          </td>
      </tr>
  </table>

<p><span class="NDLSystemFont">NifConvert.bat</span> takes two command-line parameters: the input file to convert and the output file to save the converted file in.</p>

<p><span class="NDLSystemFont">NifConvertRecursive.bat</span> takes one command-line parameter: the directory that you want to process. It finds every NIF file recursively in that directory and runs <span class="NDLSystemFont">NifConvert.bat</span> on it, saving files with a "_converted" suffix. It does not convert already converted files.</p>

<p class="NDLHeadingRelatedTopic">Related topics</p>

<ul>
<li><a href="Tool_Plug_in_Batch_Tool_How_Works.htm">Understanding How the Tool Plug-in Batch Tool Works</a></li>
<li><a href="Tool_Plug_in_Batch_Tool_Gen_Scripts.htm">Generating Tool Plug-in Scripts</a></li>
<li><a href="Tool_Plug_in_Batch_Tool_Usage.htm">Tool Plug-in Batch Tool Command-line Usage</a></li>
<li><a href="Tool_Plug_in_Batch_Tool_Example_Convert_Pre_PhysX_27_Assets.htm">Example: Using the Tool Plug-in Batch Tool to Convert Pre-PhysX 2.7 Assets</a></li>
<li><a href="../../Reference/Tool_Plug_ins/Mesh_Finalize.htm">Mesh Finalize</a></li>
</ul>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>

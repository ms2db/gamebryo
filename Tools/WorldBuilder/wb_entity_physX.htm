<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Working with PhysX-Enabled Entities</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>
<h1>Working with PhysX-Enabled Entities</h1>

    <p>
        In order to enable simulation at runtime, you will need to add a <a href="../../Reference/QuickRef_Models/PhysXModelLibrary__PhysXScene.htm">PhysXScene</a> entity
        to your world. This metadata entity will set parameters and cause the SceneService
        and PropService to allocate an NiPhysXScene.</p>
    <p>
        3dsMax and Maya are used to create PhysX art assets, which are stored as "props"
        in nif files. Getting these PhysX objects into the world has two steps:</p>
    <ol>
        <li>Mix a <a href="../../Reference/QuickRef_Models/PhysXModelLibrary__PhysXProp.htm">
            PhysXProp</a> into their models in EMT. This allows you to specify some Gamebryo
            parameters for the prop that are not set in the art tool and lets the PropService
            know that you want to pay attention to the PhysX data in this nif file. You can
            usefully mix PhysXProp into either a Mesh or an Actor.</li>
        <li>Place the objects in World Builder. The transform specified in World Builder will be
            scaled by the ScaleFactor on the PhysXScene and passed through to the PhysX SDK at runtime.</li>
    </ol>
    <p>
        There are a number of other models in the PhysX Model Library:</p>
    <ul>
        <li><a href="../../Reference/QuickRef_Models/PhysXModelLibrary__PhysXRagdoll.htm">PhysXRagdoll</a> lists animations on an Actor to be handled by PhysX.</li>
        <li><a href="../../Reference/QuickRef_Models/PhysXModelLibrary__PhysXTerrain.htm">PhysXTerrain</a> allows the loading of PhysX data from the terrain's .dof file.</li>
        <li><a href="../../Reference/QuickRef_Models/PhysXModelLibrary__PhysXShape.htm">PhysXShape</a> and its derived models specify collision shapes.</li>
        <li><a href="../../Reference/QuickRef_Models/PhysXModelLibrary__PhysXTrigger.htm">PhysXTrigger</a> and its derived models combine with PhysXShape to set up a data-driven
            trigger system.</li>
    </ul>
    
    <p class="NDLHeadingRelatedTopic">Related topics</p>
    <ul>
        <li><a href="../PhysX_Nif_Viewer/Introduction_to_the_PhysX_NIF_Viewer.htm">Introduction to the PhysX Nif Viewer</a></li>
        <li><a href="../../Art/Max/PhysX_Artist_Samples_with_Max.htm">PhysX Artist Samples with Max</a></li>
        <li><a href="../../Art/Maya/PhysX_Artist_Samples_with_Maya.htm">PhysX Artist Samples with Maya</a></li>
    </ul>


    <!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>
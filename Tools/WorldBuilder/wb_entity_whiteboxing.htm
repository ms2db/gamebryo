<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>Working with Whiteboxes</title>
<!--(Begin Meta)===================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="Palimpsest by Emergent Game Technologies - http://emergent.net" />
<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)====================================================-->
    
<!--(Begin Links)===================================================-->
    
<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=====================================================-->

</head>

<!--(Begin Body)===================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script> <script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<h1>Working with Whiteboxes</h1>

    <p>
        The Whitebox tools are intended to give a designer a quick and easy way of creating an interactive 
        game environment without having to iterate with an artist or a DCC tool. A whitebox is an 
        entity that has a rectangular prism mesh generated for it by the Whitebox Service.</p>

    <table class="NDLNoteContainer" width="100%">
      <tr align="left">
          <td class="NDLNoteContainerTD"><p class="NDLHeadingNoteContainer">Note</p>
              <div class="NDLNote">In order for the whiteboxes to be used in game, the game must 
              register either the WhiteboxService, or the PhysXWhiteboxService (but not both).
              </div>
          </td>
      </tr>
    </table>

    <p class="NDLHeadingProcedure">
        Creating a whitebox</p>
    <p>
        To create a whitebox use the Create Whitebox gizmo.
    </p>
    <ol>
    <li>Click the Create Whitebox gizmo button on the Whitebox toolbar (<img src="images/WhiteboxCreateModeLarge.png" />)</li>
    <li>Click and drag in a viewport to set the opposite corners of the base of the box</li>
    <li>After releasing the mouse button, move the mouse to determine the box height, then click again to complete the box</li>
    </ol>

    <p class="NDLHeadingProcedure">
        Editing whiteboxes</p>
    <p>
        The dimensions of whiteboxes can easily be edited after they are created using the Edit
        Whitebox gizmo.</p>
    <ol>
        <li>Click the Edit Whitebox gizmo button on the Whitebox toolbar (<img src="images/WhiteboxEditModeLarge.png" />)</li>

        <li>Click and drag on a face of a whitebox to push or pull it along that face's normal</li>
    </ol>

    <p class="NDLHeadingProcedure">
        Using snap and alignment tools
    </p>
    
    <p>While creating and editing whiteboxes, the shapes can be created easier and with more 
    precision using the snap and alignment options. The following options apply to Whitebox creation
    and/or editing.</p>

    <ul>
        <li>Creation and edit support translation snap</li>
        <li>Creation supports 'snap to surface' and 'align to surface' to determine base location 
        and orientation</li>
        <li>Whiteboxes have snap points generated at each vertex that any entity with snap points 
        can snap to; see <a href="wb_entity_snapping.htm">Snapping Entities to the World</a> for 
        more information</li>
        <li>Creation and edit supports using snap points to determine shape dimensions. To use this,
        simply mouse over an existing snap point while setting a dimension. That dimension of the 
        whitebox will extend so that the snap point is within the face's plane</li>
    </ul>
    
    <p class="NDLHeadingProcedure">
        Using PhysX Whiteboxes
    </p>

    <p>Whiteboxes can also create static or dynamic rigid body boxes in the PhysX simulation or 
    act as PhysX triggers. To use PhysX whiteboxes instead of standard whiteboxes, select
    the PhysXWhitebox model from the Default Whitebox Model dropdown on the Whitebox toolbar. In 
    order to use PhysX whiteboxes as part of the PhysX simulation, the game application must
    register the PhysXWhiteboxService instead of the WhiteboxService.</p>
    
    <p>Once a PhysX whitebox has been created, the entity properties can be used to determine the
    physical parameters, including whether the box should be a static or dynamic rigid body.</p>

<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>